/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 114);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if ("function" === 'function' && _typeof(__webpack_require__(76)) === 'object' && __webpack_require__(76)) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
})();

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = React;

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return banner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return dualHeading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return pricingTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return maps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return testimonial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return countUp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return icon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return button; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return container; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return accordion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return iconBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return videoBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return scroll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return person; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return iconList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return contentSwitcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FontAwesomeEnabled; });
/*import premiumLogo from "./logo";
wp.blocks.updateCategory("premium-blocks", { icon: premiumLogo });*/

//Blocks Keys
var _PremiumBlocksSetting = PremiumBlocksSettings.activeBlocks,
    banner = _PremiumBlocksSetting.banner,
    dualHeading = _PremiumBlocksSetting.dualHeading,
    pricingTable = _PremiumBlocksSetting.pricingTable,
    maps = _PremiumBlocksSetting.maps,
    testimonial = _PremiumBlocksSetting.testimonial,
    countUp = _PremiumBlocksSetting.countUp,
    icon = _PremiumBlocksSetting.icon,
    button = _PremiumBlocksSetting.button,
    container = _PremiumBlocksSetting.container,
    accordion = _PremiumBlocksSetting.accordion,
    iconBox = _PremiumBlocksSetting.iconBox,
    videoBox = _PremiumBlocksSetting.videoBox,
    scroll = _PremiumBlocksSetting.scroll,
    person = _PremiumBlocksSetting.person,
    iconList = _PremiumBlocksSetting.iconList,
    contentSwitcher = _PremiumBlocksSetting.contentSwitcher;

//Plugin Config Keys


var _FontAwesomeConfig = FontAwesomeConfig,
    FontAwesomeEnabled = _FontAwesomeConfig.FontAwesomeEnabled;


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PbgIcon = function (_wp$element$Component) {
  _inherits(PbgIcon, _wp$element$Component);

  function PbgIcon() {
    _classCallCheck(this, PbgIcon);

    return _possibleConstructorReturn(this, (PbgIcon.__proto__ || Object.getPrototypeOf(PbgIcon)).apply(this, arguments));
  }

  _createClass(PbgIcon, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return this.props.icon !== nextProps.icon;
    }
  }, {
    key: "render",
    value: function render() {
      var icon = this.props.icon;


      return wp.element.createElement("i", { className: "pbg-" + icon + "-block", "aria-hidden": "true" });
    }
  }]);

  return PbgIcon;
}(wp.element.Component);

/* harmony default export */ __webpack_exports__["a"] = (PbgIcon);

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = PremiumBorder;
var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var _wp$components = wp.components,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button,
    ColorPicker = _wp$components.ColorPicker;


function PremiumBorder(props) {
  var borderType = props.borderType,
      borderWidth = props.borderWidth,
      borderColor = props.borderColor,
      borderRadius = props.borderRadius,
      _props$onChangeType = props.onChangeType,
      onChangeType = _props$onChangeType === undefined ? function () {} : _props$onChangeType,
      _props$onChangeWidth = props.onChangeWidth,
      onChangeWidth = _props$onChangeWidth === undefined ? function () {} : _props$onChangeWidth,
      _props$onChangeColor = props.onChangeColor,
      onChangeColor = _props$onChangeColor === undefined ? function () {} : _props$onChangeColor,
      _props$onChangeRadius = props.onChangeRadius,
      onChangeRadius = _props$onChangeRadius === undefined ? function () {} : _props$onChangeRadius;

  var BORDER = [{
    value: "none",
    label: "None"
  }, {
    value: "solid",
    label: "Solid"
  }, {
    value: "double",
    label: "Double"
  }, {
    value: "dotted",
    label: "Dotted"
  }, {
    value: "dashed",
    label: "Dashed"
  }, {
    value: "groove",
    label: "Groove"
  }];
  return wp.element.createElement(
    "div",
    { className: "premium-control-toggle" },
    wp.element.createElement(
      "strong",
      null,
      __("Border")
    ),
    wp.element.createElement(Dropdown, {
      className: "premium-control-toggle-btn",
      contentClassName: "premium-control-toggle-content",
      position: "bottom right",
      renderToggle: function renderToggle(_ref) {
        var isOpen = _ref.isOpen,
            onToggle = _ref.onToggle;
        return wp.element.createElement(
          Button,
          { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
          wp.element.createElement("i", { className: "dashicons dashicons-edit" })
        );
      },
      renderContent: function renderContent() {
        return wp.element.createElement(
          Fragment,
          null,
          wp.element.createElement(SelectControl, {
            label: __("Border Type"),
            options: BORDER,
            value: borderType,
            onChange: onChangeType
          }),
          "none" != borderType && wp.element.createElement(RangeControl, {
            label: __("Border Width"),
            value: borderWidth,
            min: "0",
            max: "50",
            onChange: onChangeWidth
          }),
          "none" != borderType && wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(
              "p",
              null,
              __("Border Color")
            ),
            wp.element.createElement(ColorPicker, {
              color: borderColor,
              onChangeComplete: onChangeColor,
              disableAlpha: true
            })
          ),
          wp.element.createElement(RangeControl, {
            label: __("Border Radius"),
            value: borderRadius,
            min: "0",
            max: "150",
            onChange: onChangeRadius
          })
        );
      }
    })
  );
}

/***/ }),
/* 5 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while (len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
    return [];
};

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () {
    return '/';
};
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function () {
    return 0;
};

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__premium_responsive__ = __webpack_require__(30);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;

var PremiumTypo = function (_Component) {
  _inherits(PremiumTypo, _Component);

  function PremiumTypo() {
    _classCallCheck(this, PremiumTypo);

    var _this = _possibleConstructorReturn(this, (PremiumTypo.__proto__ || Object.getPrototypeOf(PremiumTypo)).apply(this, arguments));

    _this.onAdvancedControlReset = _this.onAdvancedControlReset.bind(_this);
    return _this;
  }

  _createClass(PremiumTypo, [{
    key: "onAdvancedControlReset",
    value: function onAdvancedControlReset() {
      var setAttributes = this.props.setAttributes;
      // Reset Font Size to default.

      setAttributes(_defineProperty({}, this.props.fontSize.label, ""));
      setAttributes(_defineProperty({}, this.props.fontSizeType.label, "px"));
      setAttributes(_defineProperty({}, this.props.fontSizeMobile.label, ""));
      setAttributes(_defineProperty({}, this.props.fontSizeTablet.label, ""));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          components = _props.components,
          size = _props.size,
          weight = _props.weight,
          style = _props.style,
          spacing = _props.spacing,
          line = _props.line,
          upper = _props.upper,
          _props$onChangeSize = _props.onChangeSize,
          onChangeSize = _props$onChangeSize === undefined ? function () {} : _props$onChangeSize,
          _props$onChangeWeight = _props.onChangeWeight,
          onChangeWeight = _props$onChangeWeight === undefined ? function () {} : _props$onChangeWeight,
          _props$onChangeStyle = _props.onChangeStyle,
          onChangeStyle = _props$onChangeStyle === undefined ? function () {} : _props$onChangeStyle,
          _props$onChangeSpacin = _props.onChangeSpacing,
          onChangeSpacing = _props$onChangeSpacin === undefined ? function () {} : _props$onChangeSpacin,
          _props$onChangeLine = _props.onChangeLine,
          onChangeLine = _props$onChangeLine === undefined ? function () {} : _props$onChangeLine,
          _props$onChangeUpper = _props.onChangeUpper,
          onChangeUpper = _props$onChangeUpper === undefined ? function () {} : _props$onChangeUpper;


      var STYLE = [{
        value: "normal",
        label: "Normal"
      }, {
        value: "italic",
        label: "Italic"
      }];

      return wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Typography")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref) {
            var isOpen = _ref.isOpen,
                onToggle = _ref.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              components.includes("size") && wp.element.createElement(RangeControl, {
                label: __("Font Size (PX)"),
                value: size,
                min: "10",
                max: "80",
                onChange: onChangeSize
              }),
              components.includes("responsiveSize") && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__premium_responsive__["a" /* default */], _extends({
                type: _this2.props.fontSizeType,
                typeLabel: _this2.props.fontSizeType.label,
                sizeMobile: _this2.props.fontSizeMobile,
                sizeMobileLabel: _this2.props.fontSizeMobile.label,
                sizeTablet: _this2.props.fontSizeTablet,
                sizeTabletLabel: _this2.props.fontSizeTablet.label,
                size: _this2.props.fontSize,
                sizeLabel: _this2.props.fontSize.label,
                sizeMobileText: !_this2.props.fontSizeLabel ? __("Font Size") : _this2.props.fontSizeLabel,
                sizeTabletText: !_this2.props.fontSizeLabel ? __("Font Size") : _this2.props.fontSizeLabel,
                sizeText: !_this2.props.fontSizeLabel ? __("Font Size") : _this2.props.fontSizeLabel,
                steps: 0.1
              }, _this2.props)),
              components.includes("weight") && wp.element.createElement(RangeControl, {
                label: __("Font Weight"),
                min: "100",
                max: "900",
                step: "100",
                value: weight,
                onChange: onChangeWeight
              }),
              components.includes("style") && wp.element.createElement(SelectControl, {
                label: __("Style"),
                options: STYLE,
                value: style,
                onChange: onChangeStyle
              }),
              components.includes("upper") && wp.element.createElement(ToggleControl, {
                label: __("Uppercase"),
                checked: upper,
                onChange: onChangeUpper
              }),
              components.includes("spacing") && wp.element.createElement(RangeControl, {
                label: __("Letter Spacing (PX)"),
                value: spacing,
                onChange: onChangeSpacing
              }),
              components.includes("line") && wp.element.createElement(RangeControl, {
                label: __("Line Height (PX)"),
                value: line,
                onChange: onChangeLine
              })
            );
          }
        })
      );
    }
  }]);

  return PremiumTypo;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumTypo);

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = PremiumSizeUnits;
var _wp$components = wp.components,
    ButtonGroup = _wp$components.ButtonGroup,
    Button = _wp$components.Button;


function PremiumSizeUnits(props) {
  var activeUnit = props.activeUnit,
      units = props.units,
      _props$onChangeSizeUn = props.onChangeSizeUnit,
      onChangeSizeUnit = _props$onChangeSizeUn === undefined ? function (unit) {} : _props$onChangeSizeUn;


  var sizeUnits = ["px", "em", "%"];

  if (undefined !== units) {
    sizeUnits = units;
  }

  return wp.element.createElement(
    ButtonGroup,
    { className: "premium-unit-control" },
    sizeUnits.map(function (unit, index) {
      return wp.element.createElement(
        Button,
        {
          isSmall: true,
          isDefault: true,
          className: "premium-unit-control-btn " + (unit === activeUnit && "premium-unit-control-active-btn"),
          onClick: function onClick() {
            return onChangeSizeUnit(unit);
          }
        },
        unit
      );
    })
  );
}

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var freeGlobal = __webpack_require__(78);

/** Detect free variable `self`. */
var freeSelf = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = PremiumBoxShadow;
var __ = wp.i18n.__;
var _wp$components = wp.components,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button,
    ColorPicker = _wp$components.ColorPicker;
var Fragment = wp.element.Fragment;


function PremiumBoxShadow(props) {
  var inner = props.inner,
      label = props.label,
      color = props.color,
      blur = props.blur,
      horizontal = props.horizontal,
      vertical = props.vertical,
      position = props.position,
      _props$onChangeColor = props.onChangeColor,
      onChangeColor = _props$onChangeColor === undefined ? function () {} : _props$onChangeColor,
      _props$onChangeBlur = props.onChangeBlur,
      onChangeBlur = _props$onChangeBlur === undefined ? function () {} : _props$onChangeBlur,
      _props$onChangehHoriz = props.onChangehHorizontal,
      onChangehHorizontal = _props$onChangehHoriz === undefined ? function () {} : _props$onChangehHoriz,
      _props$onChangeVertic = props.onChangeVertical,
      onChangeVertical = _props$onChangeVertic === undefined ? function () {} : _props$onChangeVertic,
      _props$onChangePositi = props.onChangePosition,
      onChangePosition = _props$onChangePositi === undefined ? function () {} : _props$onChangePositi;


  var POSITION = [{
    value: "inset",
    label: __("Inset")
  }, {
    value: "",
    label: __("Outline")
  }];

  return wp.element.createElement(
    "div",
    { className: "premium-control-toggle" },
    wp.element.createElement(
      "strong",
      null,
      __(label || "Box Shadow")
    ),
    wp.element.createElement(Dropdown, {
      className: "premium-control-toggle-btn",
      contentClassName: "premium-control-toggle-content",
      position: "bottom right",
      renderToggle: function renderToggle(_ref) {
        var isOpen = _ref.isOpen,
            onToggle = _ref.onToggle;
        return wp.element.createElement(
          Button,
          { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
          wp.element.createElement("i", { className: "dashicons dashicons-edit" })
        );
      },
      renderContent: function renderContent() {
        return wp.element.createElement(
          Fragment,
          null,
          wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(
              "p",
              null,
              __("Shadow Color")
            ),
            wp.element.createElement(ColorPicker, {
              color: color,
              onChangeComplete: onChangeColor,
              disableAlpha: true
            })
          ),
          wp.element.createElement(RangeControl, {
            label: __("Horizontal"),
            value: horizontal,
            onChange: onChangehHorizontal
          }),
          wp.element.createElement(RangeControl, {
            label: __("Vertical"),
            value: vertical,
            onChange: onChangeVertical
          }),
          wp.element.createElement(RangeControl, {
            label: __("Blur"),
            value: blur,
            onChange: onChangeBlur
          }),
          wp.element.createElement(SelectControl, {
            label: __("Position"),
            options: POSITION,
            value: position,
            onChange: onChangePosition
          })
        );
      }
    })
  );
}

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = PremiumTextShadow;
var __ = wp.i18n.__;
var _wp$components = wp.components,
    RangeControl = _wp$components.RangeControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button,
    ColorPicker = _wp$components.ColorPicker;
var Fragment = wp.element.Fragment;

function PremiumTextShadow(props) {
    var label = props.label,
        color = props.color,
        blur = props.blur,
        horizontal = props.horizontal,
        vertical = props.vertical,
        _props$onChangeColor = props.onChangeColor,
        onChangeColor = _props$onChangeColor === undefined ? function () {} : _props$onChangeColor,
        _props$onChangeBlur = props.onChangeBlur,
        onChangeBlur = _props$onChangeBlur === undefined ? function () {} : _props$onChangeBlur,
        _props$onChangehHoriz = props.onChangehHorizontal,
        onChangehHorizontal = _props$onChangehHoriz === undefined ? function () {} : _props$onChangehHoriz,
        _props$onChangeVertic = props.onChangeVertical,
        onChangeVertical = _props$onChangeVertic === undefined ? function () {} : _props$onChangeVertic;


    return wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
            "strong",
            null,
            __(label || "Text Shadow")
        ),
        wp.element.createElement(Dropdown, {
            className: "premium-control-toggle-btn",
            contentClassName: "premium-control-toggle-content",
            position: "bottom right",
            renderToggle: function renderToggle(_ref) {
                var isOpen = _ref.isOpen,
                    onToggle = _ref.onToggle;
                return wp.element.createElement(
                    Button,
                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
            },
            renderContent: function renderContent() {
                return wp.element.createElement(
                    Fragment,
                    null,
                    wp.element.createElement(
                        Fragment,
                        null,
                        wp.element.createElement(
                            "p",
                            null,
                            __("Shadow Color")
                        ),
                        wp.element.createElement(ColorPicker, {
                            color: color,
                            onChangeComplete: onChangeColor,
                            disableAlpha: true
                        })
                    ),
                    wp.element.createElement(RangeControl, {
                        label: __("Blur"),
                        value: blur,
                        onChange: onChangeBlur
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Horizontal"),
                        value: horizontal,
                        onChange: onChangehHorizontal
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Vertical"),
                        value: vertical,
                        onChange: onChangeVertical
                    })
                );
            }
        })
    );
}

/***/ }),
/* 12 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = __webpack_require__(92);

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(211)(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(213)();
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 14 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';
}

module.exports = isObjectLike;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(131),
    getValue = __webpack_require__(136);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = PremiumPadding;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__premium_size_units__ = __webpack_require__(7);


var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var _wp$components = wp.components,
    RangeControl = _wp$components.RangeControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;


function PremiumPadding(props) {
    var showUnits = props.showUnits,
        paddingTop = props.paddingTop,
        paddingRight = props.paddingRight,
        paddingBottom = props.paddingBottom,
        paddingLeft = props.paddingLeft,
        selectedUnit = props.selectedUnit,
        _props$onChangePadTop = props.onChangePadTop,
        onChangePadTop = _props$onChangePadTop === undefined ? function () {} : _props$onChangePadTop,
        _props$onChangePadRig = props.onChangePadRight,
        onChangePadRight = _props$onChangePadRig === undefined ? function () {} : _props$onChangePadRig,
        _props$onChangePadBot = props.onChangePadBottom,
        onChangePadBottom = _props$onChangePadBot === undefined ? function () {} : _props$onChangePadBot,
        _props$onChangePadLef = props.onChangePadLeft,
        onChangePadLeft = _props$onChangePadLef === undefined ? function () {} : _props$onChangePadLef,
        _props$onChangePadSiz = props.onChangePadSizeUnit,
        onChangePadSizeUnit = _props$onChangePadSiz === undefined ? function () {} : _props$onChangePadSiz;

    return wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
            "strong",
            null,
            __("Padding")
        ),
        wp.element.createElement(Dropdown, {
            className: "premium-control-toggle-btn",
            contentClassName: "premium-control-toggle-content",
            position: "bottom right",
            renderToggle: function renderToggle(_ref) {
                var isOpen = _ref.isOpen,
                    onToggle = _ref.onToggle;
                return wp.element.createElement(
                    Button,
                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
            },
            renderContent: function renderContent() {
                return wp.element.createElement(
                    Fragment,
                    null,
                    showUnits && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__premium_size_units__["a" /* default */], {
                        activeUnit: selectedUnit,
                        onChangeSizeUnit: onChangePadSizeUnit
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Padding Top"),
                        value: paddingTop,
                        min: "0",
                        max: "150",
                        onChange: onChangePadTop
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Padding Right"),
                        value: paddingRight,
                        min: "0",
                        max: "150",
                        onChange: onChangePadRight
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Padding Bottom"),
                        value: paddingBottom,
                        min: "0",
                        max: "150",
                        onChange: onChangePadBottom
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Padding Left"),
                        value: paddingLeft,
                        min: "0",
                        max: "150",
                        onChange: onChangePadLeft
                    })
                );
            }
        })
    );
}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(18),
    getRawTag = __webpack_require__(132),
    objectToString = __webpack_require__(133);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
    if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

module.exports = baseGetTag;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(8);

/** Built-in value references. */
var _Symbol = root.Symbol;

module.exports = _Symbol;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(86),
    baseKeys = __webpack_require__(163),
    isArrayLike = __webpack_require__(20);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(77),
    isLength = __webpack_require__(54);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;

/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var FONTS = [{
  value: "Opens Sans",
  label: "Opens Sans"
}, {
  value: "Bangers",
  label: "Bangers"
}, { value: "Arial", label: "Arial" }, { value: "Tahoma", label: "Tahoma" }, { value: "Verdana", label: "Verdana" }, { value: "Helvetica", label: "Helvetica" }, { value: "Times New Roman", label: "Times New Roman" }, { value: "Trebuchet MS", label: "Trebuchet MS" }, { value: "Georgia", label: "Georgia" }, { value: "ABeeZee", label: "ABeeZee" }, { value: "Abel", label: "Abel" }, { value: "Abhaya Libre", label: "Abhaya Libre" }, { value: "Abril Fatface", label: "Abril Fatface" }, { value: "Aclonica", label: "Aclonica" }, { value: "Acme", label: "Acme" }, { value: "Actor", label: "Actor" }, { value: "Adamina", label: "Adamina" }, { value: "Advent Pro", label: "Advent Pro" }, { value: "Aguafina Script", label: "Aguafina Script" }, { value: "Akronim", label: "Akronim" }, { value: "Aladin", label: "Aladin" }, { value: "Aldrich", label: "Aldrich" }, { value: "Alef", label: "Alef" }, { value: "Alef Hebrew", label: "Alef Hebrew" }, { value: "Alegreya", label: "Alegreya" }, { value: "Alegreya SC", label: "Alegreya SC" }, { value: "Alegreya Sans", label: "Alegreya Sans" }, { value: "Alegreya Sans SC", label: "Alegreya Sans SC" }, { value: "Alex Brush", label: "Alex Brush" }, { value: "Alfa Slab One", label: "Alfa Slab One" }, { value: "Alice", label: "Alice" }, { value: "Alike", label: "Alike" }, { value: "Alike Angular", label: "Alike Angular" }, { value: "Allan", label: "Allan" }, { value: "Allerta", label: "Allerta" }, { value: "Allerta Stencil", label: "Allerta Stencil" }, { value: "Allura", label: "Allura" }, { value: "Almendra", label: "Almendra" }, { value: "Almendra Display", label: "Almendra Display" }, { value: "Almendra SC", label: "Almendra SC" }, { value: "Amarante", label: "Amarante" }, { value: "Amaranth", label: "Amaranth" }, { value: "Amatic SC", label: "Amatic SC" }, { value: "Amethysta", label: "Amethysta" }, { value: "Amiko", label: "Amiko" }, { value: "Amiri", label: "Amiri" }, { value: "Amita", label: "Amita" }, { value: "Anaheim", label: "Anaheim" }, { value: "Andada", label: "Andada" }, { value: "Andika", label: "Andika" }, { value: "Angkor", label: "Angkor" }, { value: "Annie Use Your Telescope", label: "Annie Use Your Telescope" }, { value: "Anonymous Pro", label: "Anonymous Pro" }, { value: "Antic", label: "Antic" }, { value: "Antic Didone", label: "Antic Didone" }, { value: "Antic Slab", label: "Antic Slab" }, { value: "Anton", label: "Anton" }, { value: "Arapey", label: "Arapey" }, { value: "Arbutus", label: "Arbutus" }, { value: "Arbutus Slab", label: "Arbutus Slab" }, { value: "Architects Daughter", label: "Architects Daughter" }, { value: "Archivo", label: "Archivo" }, { value: "Archivo Black", label: "Archivo Black" }, { value: "Archivo Narrow", label: "Archivo Narrow" }, { value: "Aref Ruqaa", label: "Aref Ruqaa" }, { value: "Arima Madurai", label: "Arima Madurai" }, { value: "Arimo", label: "Arimo" }, { value: "Arizonia", label: "Arizonia" }, { value: "Armata", label: "Armata" }, { value: "Arsenal", label: "Arsenal" }, { value: "Artifika", label: "Artifika" }, { value: "Arvo", label: "Arvo" }, { value: "Arya", label: "Arya" }, { value: "Asap", label: "Asap" }, { value: "Asap Condensed", label: "Asap Condensed" }, { value: "Asar", label: "Asar" }, { value: "Asset", label: "Asset" }, { value: "Assistant", label: "Assistant" }, { value: "Astloch", label: "Astloch" }, { value: "Asul", label: "Asul" }, { value: "Athiti", label: "Athiti" }, { value: "Atma", label: "Atma" }, { value: "Atomic Age", label: "Atomic Age" }, { value: "Aubrey", label: "Aubrey" }, { value: "Audiowide", label: "Audiowide" }, { value: "Autour One", label: "Autour One" }, { value: "Average", label: "Average" }, { value: "Average Sans", label: "Average Sans" }, { value: "Averia Gruesa Libre", label: "Averia Gruesa Libre" }, { value: "Averia Libre", label: "Averia Libre" }, { value: "Averia Sans Libre", label: "Averia Sans Libre" }, { value: "Averia Serif Libre", label: "Averia Serif Libre" }, { value: "Bad Script", label: "Bad Script" }, { value: "Bahiana", label: "Bahiana" }, { value: "Bai Jamjuree", label: "Bai Jamjuree" }, { value: "Baloo", label: "Baloo" }, { value: "Baloo Bhai", label: "Baloo Bhai" }, { value: "Baloo Bhaijaan", label: "Baloo Bhaijaan" }, { value: "Baloo Bhaina", label: "Baloo Bhaina" }, { value: "Baloo Chettan", label: "Baloo Chettan" }, { value: "Baloo Da", label: "Baloo Da" }, { value: "Baloo Paaji", label: "Baloo Paaji" }, { value: "Baloo Tamma", label: "Baloo Tamma" }, { value: "Baloo Tammudu", label: "Baloo Tammudu" }, { value: "Baloo Thambi", label: "Baloo Thambi" }, { value: "Balthazar", label: "Balthazar" }, { value: "Bangers", label: "Bangers" }, { value: "Barlow", label: "Barlow" }, { value: "Barlow Condensed", label: "Barlow Condensed" }, { value: "Barlow Semi Condensed", label: "Barlow Semi Condensed" }, { value: "Barrio", label: "Barrio" }, { value: "Basic", label: "Basic" }, { value: "Battambang", label: "Battambang" }, { value: "Baumans", label: "Baumans" }, { value: "Bayon", label: "Bayon" }, { value: "Belgrano", label: "Belgrano" }, { value: "Bellefair", label: "Bellefair" }, { value: "Belleza", label: "Belleza" }, { value: "BenchNine", label: "BenchNine" }, { value: "Bentham", label: "Bentham" }, { value: "Berkshire Swash", label: "Berkshire Swash" }, { value: "Bevan", label: "Bevan" }, { value: "Bigelow Rules", label: "Bigelow Rules" }, { value: "Bigshot One", label: "Bigshot One" }, { value: "Bilbo", label: "Bilbo" }, { value: "Bilbo Swash Caps", label: "Bilbo Swash Caps" }, { value: "BioRhyme", label: "BioRhyme" }, { value: "BioRhyme Expanded", label: "BioRhyme Expanded" }, { value: "Biryani", label: "Biryani" }, { value: "Bitter", label: "Bitter" }, { value: "Black And White Picture", label: "Black And White Picture" }, { value: "Black Han Sans", label: "Black Han Sans" }, { value: "Black Ops One", label: "Black Ops One" }, { value: "Bokor", label: "Bokor" }, { value: "Bonbon", label: "Bonbon" }, { value: "Boogaloo", label: "Boogaloo" }, { value: "Bowlby One", label: "Bowlby One" }, { value: "Bowlby One SC", label: "Bowlby One SC" }, { value: "Brawler", label: "Brawler" }, { value: "Bree Serif", label: "Bree Serif" }, { value: "Bubblegum Sans", label: "Bubblegum Sans" }, { value: "Bubbler One", label: "Bubbler One" }, { value: "Buda", label: "Buda" }, { value: "Buenard", label: "Buenard" }, { value: "Bungee", label: "Bungee" }, { value: "Bungee Hairline", label: "Bungee Hairline" }, { value: "Bungee Inline", label: "Bungee Inline" }, { value: "Bungee Outline", label: "Bungee Outline" }, { value: "Bungee Shade", label: "Bungee Shade" }, { value: "Butcherman", label: "Butcherman" }, { value: "Butterfly Kids", label: "Butterfly Kids" }, { value: "Cabin", label: "Cabin" }, { value: "Cabin Condensed", label: "Cabin Condensed" }, { value: "Cabin Sketch", label: "Cabin Sketch" }, { value: "Caesar Dressing", label: "Caesar Dressing" }, { value: "Cagliostro", label: "Cagliostro" }, { value: "Cairo", label: "Cairo" }, { value: "Calligraffitti", label: "Calligraffitti" }, { value: "Cambay", label: "Cambay" }, { value: "Cambo", label: "Cambo" }, { value: "Candal", label: "Candal" }, { value: "Cantarell", label: "Cantarell" }, { value: "Cantata One", label: "Cantata One" }, { value: "Cantora One", label: "Cantora One" }, { value: "Capriola", label: "Capriola" }, { value: "Cardo", label: "Cardo" }, { value: "Carme", label: "Carme" }, { value: "Carrois Gothic", label: "Carrois Gothic" }, { value: "Carrois Gothic SC", label: "Carrois Gothic SC" }, { value: "Carter One", label: "Carter One" }, { value: "Catamaran", label: "Catamaran" }, { value: "Caudex", label: "Caudex" }, { value: "Caveat", label: "Caveat" }, { value: "Caveat Brush", label: "Caveat Brush" }, { value: "Cedarville Cursive", label: "Cedarville Cursive" }, { value: "Ceviche One", label: "Ceviche One" }, { value: "Chakra Petch", label: "Chakra Petch" }, { value: "Changa", label: "Changa" }, { value: "Changa One", label: "Changa One" }, { value: "Chango", label: "Chango" }, { value: "Charmonman", label: "Charmonman" }, { value: "Chathura", label: "Chathura" }, { value: "Chau Philomene One", label: "Chau Philomene One" }, { value: "Chela One", label: "Chela One" }, { value: "Chelsea Market", label: "Chelsea Market" }, { value: "Chenla", label: "Chenla" }, { value: "Cherry Cream Soda", label: "Cherry Cream Soda" }, { value: "Cherry Swash", label: "Cherry Swash" }, { value: "Chewy", label: "Chewy" }, { value: "Chicle", label: "Chicle" }, { value: "Chivo", label: "Chivo" }, { value: "Chonburi", label: "Chonburi" }, { value: "Cinzel", label: "Cinzel" }, { value: "Cinzel Decorative", label: "Cinzel Decorative" }, { value: "Clicker Script", label: "Clicker Script" }, { value: "Coda", label: "Coda" }, { value: "Coda Caption", label: "Coda Caption" }, { value: "Codystar", label: "Codystar" }, { value: "Coiny", label: "Coiny" }, { value: "Combo", label: "Combo" }, { value: "Comfortaa", label: "Comfortaa" }, { value: "Coming Soon", label: "Coming Soon" }, { value: "Concert One", label: "Concert One" }, { value: "Condiment", label: "Condiment" }, { value: "Content", label: "Content" }, { value: "Contrail One", label: "Contrail One" }, { value: "Convergence", label: "Convergence" }, { value: "Cookie", label: "Cookie" }, { value: "Copse", label: "Copse" }, { value: "Corben", label: "Corben" }, { value: "Cormorant", label: "Cormorant" }, { value: "Cormorant Garamond", label: "Cormorant Garamond" }, { value: "Cormorant Infant", label: "Cormorant Infant" }, { value: "Cormorant SC", label: "Cormorant SC" }, { value: "Cormorant Unicase", label: "Cormorant Unicase" }, { value: "Cormorant Upright", label: "Cormorant Upright" }, { value: "Courgette", label: "Courgette" }, { value: "Cousine", label: "Cousine" }, { value: "Coustard", label: "Coustard" }, { value: "Covered By Your Grace", label: "Covered By Your Grace" }, { value: "Crafty Girls", label: "Crafty Girls" }, { value: "Creepster", label: "Creepster" }, { value: "Crete Round", label: "Crete Round" }, { value: "Crimson Text", label: "Crimson Text" }, { value: "Croissant One", label: "Croissant One" }, { value: "Crushed", label: "Crushed" }, { value: "Cuprum", label: "Cuprum" }, { value: "Cute Font", label: "Cute Font" }, { value: "Cutive", label: "Cutive" }, { value: "Cutive Mono", label: "Cutive Mono" }, { value: "Damion", label: "Damion" }, { value: "Dancing Script", label: "Dancing Script" }, { value: "Dangrek", label: "Dangrek" }, { value: "David Libre", label: "David Libre" }, { value: "Dawning of a New Day", label: "Dawning of a New Day" }, { value: "Days One", label: "Days One" }, { value: "Dekko", label: "Dekko" }, { value: "Delius", label: "Delius" }, { value: "Delius Swash Caps", label: "Delius Swash Caps" }, { value: "Delius Unicase", label: "Delius Unicase" }, { value: "Della Respira", label: "Della Respira" }, { value: "Denk One", label: "Denk One" }, { value: "Devonshire", label: "Devonshire" }, { value: "Dhurjati", label: "Dhurjati" }, { value: "Didact Gothic", label: "Didact Gothic" }, { value: "Diplomata", label: "Diplomata" }, { value: "Diplomata SC", label: "Diplomata SC" }, { value: "Do Hyeon", label: "Do Hyeon" }, { value: "Dokdo", label: "Dokdo" }, { value: "Domine", label: "Domine" }, { value: "Donegal One", label: "Donegal One" }, { value: "Doppio One", label: "Doppio One" }, { value: "Dorsa", label: "Dorsa" }, { value: "Dosis", label: "Dosis" }, { value: "Dr Sugiyama", label: "Dr Sugiyama" }, { value: "Droid Arabic Kufi", label: "Droid Arabic Kufi" }, { value: "Droid Arabic Naskh", label: "Droid Arabic Naskh" }, { value: "Duru Sans", label: "Duru Sans" }, { value: "Dynalight", label: "Dynalight" }, { value: "EB Garamond", label: "EB Garamond" }, { value: "Eagle Lake", label: "Eagle Lake" }, { value: "East Sea Dokdo", label: "East Sea Dokdo" }, { value: "Eater", label: "Eater" }, { value: "Economica", label: "Economica" }, { value: "Eczar", label: "Eczar" }, { value: "El Messiri", label: "El Messiri" }, { value: "Electrolize", label: "Electrolize" }, { value: "Elsie", label: "Elsie" }, { value: "Elsie Swash Caps", label: "Elsie Swash Caps" }, { value: "Emblema One", label: "Emblema One" }, { value: "Emilys Candy", label: "Emilys Candy" }, { value: "Encode Sans", label: "Encode Sans" }, { value: "Encode Sans Condensed", label: "Encode Sans Condensed" }, { value: "Encode Sans Expanded", label: "Encode Sans Expanded" }, { value: "Encode Sans Semi Condensed", label: "Encode Sans Semi Condensed" }, { value: "Encode Sans Semi Expanded", label: "Encode Sans Semi Expanded" }, { value: "Engagement", label: "Engagement" }, { value: "Englebert", label: "Englebert" }, { value: "Enriqueta", label: "Enriqueta" }, { value: "Erica One", label: "Erica One" }, { value: "Esteban", label: "Esteban" }, { value: "Euphoria Script", label: "Euphoria Script" }, { value: "Ewert", label: "Ewert" }, { value: "Exo", label: "Exo" }, { value: "Exo 2", label: "Exo 2" }, { value: "Expletus Sans", label: "Expletus Sans" }, { value: "Fahkwang", label: "Fahkwang" }, { value: "Fanwood Text", label: "Fanwood Text" }, { value: "Farsan", label: "Farsan" }, { value: "Fascinate", label: "Fascinate" }, { value: "Fascinate Inline", label: "Fascinate Inline" }, { value: "Faster One", label: "Faster One" }, { value: "Fasthand", label: "Fasthand" }, { value: "Fauna One", label: "Fauna One" }, { value: "Faustina", label: "Faustina" }, { value: "Federant", label: "Federant" }, { value: "Federo", label: "Federo" }, { value: "Felipa", label: "Felipa" }, { value: "Fenix", label: "Fenix" }, { value: "Finger Paint", label: "Finger Paint" }, { value: "Fira Mono", label: "Fira Mono" }, { value: "Fira Sans", label: "Fira Sans" }, { value: "Fira Sans Condensed", label: "Fira Sans Condensed" }, { value: "Fira Sans Extra Condensed", label: "Fira Sans Extra Condensed" }, { value: "Fjalla One", label: "Fjalla One" }, { value: "Fjord One", label: "Fjord One" }, { value: "Flamenco", label: "Flamenco" }, { value: "Flavors", label: "Flavors" }, { value: "Fondamento", label: "Fondamento" }, { value: "Fontdiner Swanky", label: "Fontdiner Swanky" }, { value: "Forum", label: "Forum" }, { value: "Francois One", label: "Francois One" }, { value: "Frank Ruhl Libre", label: "Frank Ruhl Libre" }, { value: "Freckle Face", label: "Freckle Face" }, { value: "Fredericka the Great", label: "Fredericka the Great" }, { value: "Fredoka One", label: "Fredoka One" }, { value: "Freehand", label: "Freehand" }, { value: "Fresca", label: "Fresca" }, { value: "Frijole", label: "Frijole" }, { value: "Fruktur", label: "Fruktur" }, { value: "Fugaz One", label: "Fugaz One" }, { value: "GFS Didot", label: "GFS Didot" }, { value: "GFS Neohellenic", label: "GFS Neohellenic" }, { value: "Gabriela", label: "Gabriela" }, { value: "Gaegu", label: "Gaegu" }, { value: "Gafata", label: "Gafata" }, { value: "Galada", label: "Galada" }, { value: "Galdeano", label: "Galdeano" }, { value: "Galindo", label: "Galindo" }, { value: "Gamja Flower", label: "Gamja Flower" }, { value: "Gentium Basic", label: "Gentium Basic" }, { value: "Gentium Book Basic", label: "Gentium Book Basic" }, { value: "Geo", label: "Geo" }, { value: "Geostar", label: "Geostar" }, { value: "Geostar Fill", label: "Geostar Fill" }, { value: "Germania One", label: "Germania One" }, { value: "Gidugu", label: "Gidugu" }, { value: "Gilda Display", label: "Gilda Display" }, { value: "Give You Glory", label: "Give You Glory" }, { value: "Glass Antiqua", label: "Glass Antiqua" }, { value: "Glegoo", label: "Glegoo" }, { value: "Gloria Hallelujah", label: "Gloria Hallelujah" }, { value: "Goblin One", label: "Goblin One" }, { value: "Gochi Hand", label: "Gochi Hand" }, { value: "Gorditas", label: "Gorditas" }, { value: "Gothic A1", label: "Gothic A1" }, { value: "Goudy Bookletter 1911", label: "Goudy Bookletter 1911" }, { value: "Graduate", label: "Graduate" }, { value: "Grand Hotel", label: "Grand Hotel" }, { value: "Gravitas One", label: "Gravitas One" }, { value: "Great Vibes", label: "Great Vibes" }, { value: "Griffy", label: "Griffy" }, { value: "Gruppo", label: "Gruppo" }, { value: "Gudea", label: "Gudea" }, { value: "Gugi", label: "Gugi" }, { value: "Gurajada", label: "Gurajada" }, { value: "Habibi", label: "Habibi" }, { value: "Halant", label: "Halant" }, { value: "Hammersmith One", label: "Hammersmith One" }, { value: "Hanalei", label: "Hanalei" }, { value: "Hanalei Fill", label: "Hanalei Fill" }, { value: "Handlee", label: "Handlee" }, { value: "Hanuman", label: "Hanuman" }, { value: "Happy Monkey", label: "Happy Monkey" }, { value: "Harmattan", label: "Harmattan" }, { value: "Headland One", label: "Headland One" }, { value: "Heebo", label: "Heebo" }, { value: "Henny Penny", label: "Henny Penny" }, { value: "Herr Von Muellerhoff", label: "Herr Von Muellerhoff" }, { value: "Hi Melody", label: "Hi Melody" }, { value: "Hind", label: "Hind" }, { value: "Hind Guntur", label: "Hind Guntur" }, { value: "Hind Madurai", label: "Hind Madurai" }, { value: "Hind Siliguri", label: "Hind Siliguri" }, { value: "Hind Vadodara", label: "Hind Vadodara" }, { value: "Holtwood One SC", label: "Holtwood One SC" }, { value: "Homemade Apple", label: "Homemade Apple" }, { value: "Homenaje", label: "Homenaje" }, { value: "IBM Plex Mono", label: "IBM Plex Mono" }, { value: "IBM Plex Sans", label: "IBM Plex Sans" }, { value: "IBM Plex Sans Condensed", label: "IBM Plex Sans Condensed" }, { value: "IBM Plex Serif", label: "IBM Plex Serif" }, { value: "IM Fell DW Pica", label: "IM Fell DW Pica" }, { value: "IM Fell DW Pica SC", label: "IM Fell DW Pica SC" }, { value: "IM Fell Double Pica", label: "IM Fell Double Pica" }, { value: "IM Fell Double Pica SC", label: "IM Fell Double Pica SC" }, { value: "IM Fell English", label: "IM Fell English" }, { value: "IM Fell English SC", label: "IM Fell English SC" }, { value: "IM Fell French Canon", label: "IM Fell French Canon" }, { value: "IM Fell French Canon SC", label: "IM Fell French Canon SC" }, { value: "IM Fell Great Primer", label: "IM Fell Great Primer" }, { value: "IM Fell Great Primer SC", label: "IM Fell Great Primer SC" }, { value: "Iceberg", label: "Iceberg" }, { value: "Iceland", label: "Iceland" }, { value: "Imprima", label: "Imprima" }, { value: "Inconsolata", label: "Inconsolata" }, { value: "Inder", label: "Inder" }, { value: "Indie Flower", label: "Indie Flower" }, { value: "Inika", label: "Inika" }, { value: "Inknut Antiqua", label: "Inknut Antiqua" }, { value: "Irish Grover", label: "Irish Grover" }, { value: "Istok Web", label: "Istok Web" }, { value: "Italiana", label: "Italiana" }, { value: "Italianno", label: "Italianno" }, { value: "Itim", label: "Itim" }, { value: "Jacques Francois", label: "Jacques Francois" }, { value: "Jacques Francois Shadow", label: "Jacques Francois Shadow" }, { value: "Jaldi", label: "Jaldi" }, { value: "Jim Nightshade", label: "Jim Nightshade" }, { value: "Jockey One", label: "Jockey One" }, { value: "Jolly Lodger", label: "Jolly Lodger" }, { value: "Jomhuria", label: "Jomhuria" }, { value: "Josefin Sans", label: "Josefin Sans" }, { value: "Josefin Slab", label: "Josefin Slab" }, { value: "Joti One", label: "Joti One" }, { value: "Jua", label: "Jua" }, { value: "Judson", label: "Judson" }, { value: "Julee", label: "Julee" }, { value: "Julius Sans One", label: "Julius Sans One" }, { value: "Junge", label: "Junge" }, { value: "Jura", label: "Jura" }, { value: "Just Another Hand", label: "Just Another Hand" }, { value: "Just Me Again Down Here", label: "Just Me Again Down Here" }, { value: "K2D", label: "K2D" }, { value: "Kadwa", label: "Kadwa" }, { value: "Kalam", label: "Kalam" }, { value: "Kameron", label: "Kameron" }, { value: "Kanit", label: "Kanit" }, { value: "Kantumruy", label: "Kantumruy" }, { value: "Karla", label: "Karla" }, { value: "Karma", label: "Karma" }, { value: "Katibeh", label: "Katibeh" }, { value: "Kaushan Script", label: "Kaushan Script" }, { value: "Kavivanar", label: "Kavivanar" }, { value: "Kavoon", label: "Kavoon" }, { value: "Kdam Thmor", label: "Kdam Thmor" }, { value: "Keania One", label: "Keania One" }, { value: "Kelly Slab", label: "Kelly Slab" }, { value: "Kenia", label: "Kenia" }, { value: "Khand", label: "Khand" }, { value: "Khmer", label: "Khmer" }, { value: "Khula", label: "Khula" }, { value: "Kirang Haerang", label: "Kirang Haerang" }, { value: "Kite One", label: "Kite One" }, { value: "Knewave", label: "Knewave" }, { value: "KoHo", label: "KoHo" }, { value: "Kodchasan", label: "Kodchasan" }, { value: "Kosugi", label: "Kosugi" }, { value: "Kosugi Maru", label: "Kosugi Maru" }, { value: "Kotta One", label: "Kotta One" }, { value: "Koulen", label: "Koulen" }, { value: "Kranky", label: "Kranky" }, { value: "Kreon", label: "Kreon" }, { value: "Kristi", label: "Kristi" }, { value: "Krona One", label: "Krona One" }, { value: "Krub", label: "Krub" }, { value: "Kumar One", label: "Kumar One" }, { value: "Kumar One Outline", label: "Kumar One Outline" }, { value: "Kurale", label: "Kurale" }, { value: "La Belle Aurore", label: "La Belle Aurore" }, { value: "Laila", label: "Laila" }, { value: "Lakki Reddy", label: "Lakki Reddy" }, { value: "Lalezar", label: "Lalezar" }, { value: "Lancelot", label: "Lancelot" }, { value: "Lateef", label: "Lateef" }, { value: "Lato", label: "Lato" }, { value: "League Script", label: "League Script" }, { value: "Leckerli One", label: "Leckerli One" }, { value: "Ledger", label: "Ledger" }, { value: "Lekton", label: "Lekton" }, { value: "Lemon", label: "Lemon" }, { value: "Lemonada", label: "Lemonada" }, { value: "Libre Barcode 128", label: "Libre Barcode 128" }, { value: "Libre Barcode 128 Text", label: "Libre Barcode 128 Text" }, { value: "Libre Barcode 39", label: "Libre Barcode 39" }, { value: "Libre Barcode 39 Extended", label: "Libre Barcode 39 Extended" }, {
  value: "Libre Barcode 39 Extended Text",
  label: "Libre Barcode 39 Extended Text"
}, { value: "Libre Barcode 39 Text", label: "Libre Barcode 39 Text" }, { value: "Libre Baskerville", label: "Libre Baskerville" }, { value: "Libre Franklin", label: "Libre Franklin" }, { value: "Life Savers", label: "Life Savers" }, { value: "Lilita One", label: "Lilita One" }, { value: "Lily Script One", label: "Lily Script One" }, { value: "Limelight", label: "Limelight" }, { value: "Linden Hill", label: "Linden Hill" }, { value: "Lobster", label: "Lobster" }, { value: "Lobster Two", label: "Lobster Two" }, { value: "Londrina Outline", label: "Londrina Outline" }, { value: "Londrina Shadow", label: "Londrina Shadow" }, { value: "Londrina Sketch", label: "Londrina Sketch" }, { value: "Londrina Solid", label: "Londrina Solid" }, { value: "Lora", label: "Lora" }, { value: "Love Ya Like A Sister", label: "Love Ya Like A Sister" }, { value: "Loved by the King", label: "Loved by the King" }, { value: "Lovers Quarrel", label: "Lovers Quarrel" }, { value: "Luckiest Guy", label: "Luckiest Guy" }, { value: "Lusitana", label: "Lusitana" }, { value: "Lustria", label: "Lustria" }, { value: "M PLUS 1p", label: "M PLUS 1p" }, { value: "M PLUS Rounded 1c", label: "M PLUS Rounded 1c" }, { value: "Macondo", label: "Macondo" }, { value: "Macondo Swash Caps", label: "Macondo Swash Caps" }, { value: "Mada", label: "Mada" }, { value: "Magra", label: "Magra" }, { value: "Maiden Orange", label: "Maiden Orange" }, { value: "Maitree", label: "Maitree" }, { value: "Mako", label: "Mako" }, { value: "Mali", label: "Mali" }, { value: "Mallanna", label: "Mallanna" }, { value: "Mandali", label: "Mandali" }, { value: "Manuale", label: "Manuale" }, { value: "Marcellus", label: "Marcellus" }, { value: "Marcellus SC", label: "Marcellus SC" }, { value: "Marck Script", label: "Marck Script" }, { value: "Margarine", label: "Margarine" }, { value: "Markazi Text", label: "Markazi Text" }, { value: "Marko One", label: "Marko One" }, { value: "Marmelad", label: "Marmelad" }, { value: "Martel", label: "Martel" }, { value: "Martel Sans", label: "Martel Sans" }, { value: "Marvel", label: "Marvel" }, { value: "Mate", label: "Mate" }, { value: "Mate SC", label: "Mate SC" }, { value: "Maven Pro", label: "Maven Pro" }, { value: "McLaren", label: "McLaren" }, { value: "Meddon", label: "Meddon" }, { value: "MedievalSharp", label: "MedievalSharp" }, { value: "Medula One", label: "Medula One" }, { value: "Meera Inimai", label: "Meera Inimai" }, { value: "Megrim", label: "Megrim" }, { value: "Meie Script", label: "Meie Script" }, { value: "Merienda", label: "Merienda" }, { value: "Merienda One", label: "Merienda One" }, { value: "Merriweather", label: "Merriweather" }, { value: "Merriweather Sans", label: "Merriweather Sans" }, { value: "Metal", label: "Metal" }, { value: "Metal Mania", label: "Metal Mania" }, { value: "Metamorphous", label: "Metamorphous" }, { value: "Metrophobic", label: "Metrophobic" }, { value: "Michroma", label: "Michroma" }, { value: "Milonga", label: "Milonga" }, { value: "Miltonian", label: "Miltonian" }, { value: "Miltonian Tattoo", label: "Miltonian Tattoo" }, { value: "Mina", label: "Mina" }, { value: "Miniver", label: "Miniver" }, { value: "Miriam Libre", label: "Miriam Libre" }, { value: "Mirza", label: "Mirza" }, { value: "Miss Fajardose", label: "Miss Fajardose" }, { value: "Mitr", label: "Mitr" }, { value: "Modak", label: "Modak" }, { value: "Modern Antiqua", label: "Modern Antiqua" }, { value: "Mogra", label: "Mogra" }, { value: "Molengo", label: "Molengo" }, { value: "Molle", label: "Molle" }, { value: "Monda", label: "Monda" }, { value: "Monofett", label: "Monofett" }, { value: "Monoton", label: "Monoton" }, { value: "Monsieur La Doulaise", label: "Monsieur La Doulaise" }, { value: "Montaga", label: "Montaga" }, { value: "Montez", label: "Montez" }, { value: "Montserrat", label: "Montserrat" }, { value: "Montserrat Alternates", label: "Montserrat Alternates" }, { value: "Montserrat Subrayada", label: "Montserrat Subrayada" }, { value: "Moul", label: "Moul" }, { value: "Moulpali", label: "Moulpali" }, { value: "Mountains of Christmas", label: "Mountains of Christmas" }, { value: "Mouse Memoirs", label: "Mouse Memoirs" }, { value: "Mr Bedfort", label: "Mr Bedfort" }, { value: "Mr Dafoe", label: "Mr Dafoe" }, { value: "Mr De Haviland", label: "Mr De Haviland" }, { value: "Mrs Saint Delafield", label: "Mrs Saint Delafield" }, { value: "Mrs Sheppards", label: "Mrs Sheppards" }, { value: "Mukta", label: "Mukta" }, { value: "Mukta Mahee", label: "Mukta Mahee" }, { value: "Mukta Malar", label: "Mukta Malar" }, { value: "Mukta Vaani", label: "Mukta Vaani" }, { value: "Muli", label: "Muli" }, { value: "Mystery Quest", label: "Mystery Quest" }, { value: "NTR", label: "NTR" }, { value: "Nanum Brush Script", label: "Nanum Brush Script" }, { value: "Nanum Gothic", label: "Nanum Gothic" }, { value: "Nanum Gothic Coding", label: "Nanum Gothic Coding" }, { value: "Nanum Myeongjo", label: "Nanum Myeongjo" }, { value: "Nanum Pen Script", label: "Nanum Pen Script" }, { value: "Neucha", label: "Neucha" }, { value: "Neuton", label: "Neuton" }, { value: "New Rocker", label: "New Rocker" }, { value: "News Cycle", label: "News Cycle" }, { value: "Niconne", label: "Niconne" }, { value: "Niramit", label: "Niramit" }, { value: "Nixie One", label: "Nixie One" }, { value: "Nobile", label: "Nobile" }, { value: "Nokora", label: "Nokora" }, { value: "Norican", label: "Norican" }, { value: "Nosifer", label: "Nosifer" }, { value: "Notable", label: "Notable" }, { value: "Nothing You Could Do", label: "Nothing You Could Do" }, { value: "Noticia Text", label: "Noticia Text" }, { value: "Noto Kufi Arabic", label: "Noto Kufi Arabic" }, { value: "Noto Naskh Arabic", label: "Noto Naskh Arabic" }, { value: "Noto Sans", label: "Noto Sans" }, { value: "Noto Sans Hebrew", label: "Noto Sans Hebrew" }, { value: "Noto Sans JP", label: "Noto Sans JP" }, { value: "Noto Sans KR", label: "Noto Sans KR" }, { value: "Noto Serif", label: "Noto Serif" }, { value: "Noto Serif JP", label: "Noto Serif JP" }, { value: "Noto Serif KR", label: "Noto Serif KR" }, { value: "Nova Cut", label: "Nova Cut" }, { value: "Nova Flat", label: "Nova Flat" }, { value: "Nova Mono", label: "Nova Mono" }, { value: "Nova Oval", label: "Nova Oval" }, { value: "Nova Round", label: "Nova Round" }, { value: "Nova Script", label: "Nova Script" }, { value: "Nova Slim", label: "Nova Slim" }, { value: "Nova Square", label: "Nova Square" }, { value: "Numans", label: "Numans" }, { value: "Nunito", label: "Nunito" }, { value: "Nunito Sans", label: "Nunito Sans" }, { value: "Odor Mean Chey", label: "Odor Mean Chey" }, { value: "Offside", label: "Offside" }, { value: "Old Standard TT", label: "Old Standard TT" }, { value: "Oldenburg", label: "Oldenburg" }, { value: "Oleo Script", label: "Oleo Script" }, { value: "Oleo Script Swash Caps", label: "Oleo Script Swash Caps" }, { value: "Open Sans", label: "Open Sans" }, { value: "Open Sans Condensed", label: "Open Sans Condensed" }, { value: "Open Sans Hebrew", label: "Open Sans Hebrew" }, { value: "Open Sans Hebrew Condensed", label: "Open Sans Hebrew Condensed" }, { value: "Oranienbaum", label: "Oranienbaum" }, { value: "Orbitron", label: "Orbitron" }, { value: "Oregano", label: "Oregano" }, { value: "Orienta", label: "Orienta" }, { value: "Original Surfer", label: "Original Surfer" }, { value: "Oswald", label: "Oswald" }, { value: "Over the Rainbow", label: "Over the Rainbow" }, { value: "Overlock", label: "Overlock" }, { value: "Overlock SC", label: "Overlock SC" }, { value: "Overpass", label: "Overpass" }, { value: "Overpass Mono", label: "Overpass Mono" }, { value: "Ovo", label: "Ovo" }, { value: "Oxygen", label: "Oxygen" }, { value: "Oxygen Mono", label: "Oxygen Mono" }, { value: "PT Mono", label: "PT Mono" }, { value: "PT Sans", label: "PT Sans" }, { value: "PT Sans Caption", label: "PT Sans Caption" }, { value: "PT Sans Narrow", label: "PT Sans Narrow" }, { value: "PT Serif", label: "PT Serif" }, { value: "PT Serif Caption", label: "PT Serif Caption" }, { value: "Pacifico", label: "Pacifico" }, { value: "Padauk", label: "Padauk" }, { value: "Palanquin", label: "Palanquin" }, { value: "Palanquin Dark", label: "Palanquin Dark" }, { value: "Pangolin", label: "Pangolin" }, { value: "Paprika", label: "Paprika" }, { value: "Parisienne", label: "Parisienne" }, { value: "Passero One", label: "Passero One" }, { value: "Passion One", label: "Passion One" }, { value: "Pathway Gothic One", label: "Pathway Gothic One" }, { value: "Patrick Hand", label: "Patrick Hand" }, { value: "Patrick Hand SC", label: "Patrick Hand SC" }, { value: "Pattaya", label: "Pattaya" }, { value: "Patua One", label: "Patua One" }, { value: "Pavanam", label: "Pavanam" }, { value: "Paytone One", label: "Paytone One" }, { value: "Peddana", label: "Peddana" }, { value: "Peralta", label: "Peralta" }, { value: "Permanent Marker", label: "Permanent Marker" }, { value: "Petit Formal Script", label: "Petit Formal Script" }, { value: "Petrona", label: "Petrona" }, { value: "Philosopher", label: "Philosopher" }, { value: "Piedra", label: "Piedra" }, { value: "Pinyon Script", label: "Pinyon Script" }, { value: "Pirata One", label: "Pirata One" }, { value: "Plaster", label: "Plaster" }, { value: "Play", label: "Play" }, { value: "Playball", label: "Playball" }, { value: "Playfair Display", label: "Playfair Display" }, { value: "Playfair Display SC", label: "Playfair Display SC" }, { value: "Podkova", label: "Podkova" }, { value: "Poiret One", label: "Poiret One" }, { value: "Poller One", label: "Poller One" }, { value: "Poly", label: "Poly" }, { value: "Pompiere", label: "Pompiere" }, { value: "Pontano Sans", label: "Pontano Sans" }, { value: "Poor Story", label: "Poor Story" }, { value: "Poppins", label: "Poppins" }, { value: "Port Lligat Sans", label: "Port Lligat Sans" }, { value: "Port Lligat Slab", label: "Port Lligat Slab" }, { value: "Pragati Narrow", label: "Pragati Narrow" }, { value: "Prata", label: "Prata" }, { value: "Preahvihear", label: "Preahvihear" }, { value: "Press Start 2P", label: "Press Start 2P" }, { value: "Pridi", label: "Pridi" }, { value: "Princess Sofia", label: "Princess Sofia" }, { value: "Prociono", label: "Prociono" }, { value: "Prompt", label: "Prompt" }, { value: "Prosto One", label: "Prosto One" }, { value: "Proza Libre", label: "Proza Libre" }, { value: "Puritan", label: "Puritan" }, { value: "Purple Purse", label: "Purple Purse" }, { value: "Quando", label: "Quando" }, { value: "Quantico", label: "Quantico" }, { value: "Quattrocento", label: "Quattrocento" }, { value: "Quattrocento Sans", label: "Quattrocento Sans" }, { value: "Questrial", label: "Questrial" }, { value: "Quicksand", label: "Quicksand" }, { value: "Quintessential", label: "Quintessential" }, { value: "Qwigley", label: "Qwigley" }, { value: "Racing Sans One", label: "Racing Sans One" }, { value: "Radley", label: "Radley" }, { value: "Rajdhani", label: "Rajdhani" }, { value: "Rakkas", label: "Rakkas" }, { value: "Raleway", label: "Raleway" }, { value: "Raleway Dots", label: "Raleway Dots" }, { value: "Ramabhadra", label: "Ramabhadra" }, { value: "Ramaraja", label: "Ramaraja" }, { value: "Rambla", label: "Rambla" }, { value: "Rammetto One", label: "Rammetto One" }, { value: "Ranchers", label: "Ranchers" }, { value: "Rancho", label: "Rancho" }, { value: "Ranga", label: "Ranga" }, { value: "Rasa", label: "Rasa" }, { value: "Rationale", label: "Rationale" }, { value: "Ravi Prakash", label: "Ravi Prakash" }, { value: "Redressed", label: "Redressed" }, { value: "Reem Kufi", label: "Reem Kufi" }, { value: "Reenie Beanie", label: "Reenie Beanie" }, { value: "Revalia", label: "Revalia" }, { value: "Rhodium Libre", label: "Rhodium Libre" }, { value: "Ribeye", label: "Ribeye" }, { value: "Ribeye Marrow", label: "Ribeye Marrow" }, { value: "Righteous", label: "Righteous" }, { value: "Risque", label: "Risque" }, { value: "Roboto", label: "Roboto" }, { value: "Roboto Condensed", label: "Roboto Condensed" }, { value: "Roboto Mono", label: "Roboto Mono" }, { value: "Roboto Slab", label: "Roboto Slab" }, { value: "Rochester", label: "Rochester" }, { value: "Rock Salt", label: "Rock Salt" }, { value: "Rokkitt", label: "Rokkitt" }, { value: "Romanesco", label: "Romanesco" }, { value: "Ropa Sans", label: "Ropa Sans" }, { value: "Rosario", label: "Rosario" }, { value: "Rosarivo", label: "Rosarivo" }, { value: "Rouge Script", label: "Rouge Script" }, { value: "Rozha One", label: "Rozha One" }, { value: "Rubik", label: "Rubik" }, { value: "Rubik Mono One", label: "Rubik Mono One" }, { value: "Ruda", label: "Ruda" }, { value: "Rufina", label: "Rufina" }, { value: "Ruge Boogie", label: "Ruge Boogie" }, { value: "Ruluko", label: "Ruluko" }, { value: "Rum Raisin", label: "Rum Raisin" }, { value: "Ruslan Display", label: "Ruslan Display" }, { value: "Russo One", label: "Russo One" }, { value: "Ruthie", label: "Ruthie" }, { value: "Rye", label: "Rye" }, { value: "Sacramento", label: "Sacramento" }, { value: "Sahitya", label: "Sahitya" }, { value: "Sail", label: "Sail" }, { value: "Saira", label: "Saira" }, { value: "Saira Condensed", label: "Saira Condensed" }, { value: "Saira Extra Condensed", label: "Saira Extra Condensed" }, { value: "Saira Semi Condensed", label: "Saira Semi Condensed" }, { value: "Salsa", label: "Salsa" }, { value: "Sanchez", label: "Sanchez" }, { value: "Sancreek", label: "Sancreek" }, { value: "Sansita", label: "Sansita" }, { value: "Sarala", label: "Sarala" }, { value: "Sarina", label: "Sarina" }, { value: "Sarpanch", label: "Sarpanch" }, { value: "Satisfy", label: "Satisfy" }, { value: "Sawarabi Gothic", label: "Sawarabi Gothic" }, { value: "Sawarabi Mincho", label: "Sawarabi Mincho" }, { value: "Scada", label: "Scada" }, { value: "Scheherazade", label: "Scheherazade" }, { value: "Schoolbell", label: "Schoolbell" }, { value: "Scope One", label: "Scope One" }, { value: "Seaweed Script", label: "Seaweed Script" }, { value: "Secular One", label: "Secular One" }, { value: "Sedgwick Ave", label: "Sedgwick Ave" }, { value: "Sedgwick Ave Display", label: "Sedgwick Ave Display" }, { value: "Sevillana", label: "Sevillana" }, { value: "Seymour One", label: "Seymour One" }, { value: "Shadows Into Light", label: "Shadows Into Light" }, { value: "Shadows Into Light Two", label: "Shadows Into Light Two" }, { value: "Shanti", label: "Shanti" }, { value: "Share", label: "Share" }, { value: "Share Tech", label: "Share Tech" }, { value: "Share Tech Mono", label: "Share Tech Mono" }, { value: "Shojumaru", label: "Shojumaru" }, { value: "Short Stack", label: "Short Stack" }, { value: "Shrikhand", label: "Shrikhand" }, { value: "Siemreap", label: "Siemreap" }, { value: "Sigmar One", label: "Sigmar One" }, { value: "Signika", label: "Signika" }, { value: "Signika Negative", label: "Signika Negative" }, { value: "Simonetta", label: "Simonetta" }, { value: "Sintony", label: "Sintony" }, { value: "Sirin Stencil", label: "Sirin Stencil" }, { value: "Six Caps", label: "Six Caps" }, { value: "Skranji", label: "Skranji" }, { value: "Slabo 13px", label: "Slabo 13px" }, { value: "Slabo 27px", label: "Slabo 27px" }, { value: "Slackey", label: "Slackey" }, { value: "Smokum", label: "Smokum" }, { value: "Smythe", label: "Smythe" }, { value: "Sniglet", label: "Sniglet" }, { value: "Snippet", label: "Snippet" }, { value: "Snowburst One", label: "Snowburst One" }, { value: "Sofadi One", label: "Sofadi One" }, { value: "Sofia", label: "Sofia" }, { value: "Song Myung", label: "Song Myung" }, { value: "Sonsie One", label: "Sonsie One" }, { value: "Sorts Mill Goudy", label: "Sorts Mill Goudy" }, { value: "Source Code Pro", label: "Source Code Pro" }, { value: "Source Sans Pro", label: "Source Sans Pro" }, { value: "Source Serif Pro", label: "Source Serif Pro" }, { value: "Space Mono", label: "Space Mono" }, { value: "Special Elite", label: "Special Elite" }, { value: "Spectral", label: "Spectral" }, { value: "Spectral SC", label: "Spectral SC" }, { value: "Spicy Rice", label: "Spicy Rice" }, { value: "Spinnaker", label: "Spinnaker" }, { value: "Spirax", label: "Spirax" }, { value: "Squada One", label: "Squada One" }, { value: "Sree Krushnadevaraya", label: "Sree Krushnadevaraya" }, { value: "Sriracha", label: "Sriracha" }, { value: "Srisakdi", label: "Srisakdi" }, { value: "Stalemate", label: "Stalemate" }, { value: "Stalinist One", label: "Stalinist One" }, { value: "Stardos Stencil", label: "Stardos Stencil" }, { value: "Stint Ultra Condensed", label: "Stint Ultra Condensed" }, { value: "Stint Ultra Expanded", label: "Stint Ultra Expanded" }, { value: "Stoke", label: "Stoke" }, { value: "Strait", label: "Strait" }, { value: "Stylish", label: "Stylish" }, { value: "Sue Ellen Francisco", label: "Sue Ellen Francisco" }, { value: "Suez One", label: "Suez One" }, { value: "Sumana", label: "Sumana" }, { value: "Sunflower", label: "Sunflower" }, { value: "Sunshiney", label: "Sunshiney" }, { value: "Supermercado One", label: "Supermercado One" }, { value: "Sura", label: "Sura" }, { value: "Suranna", label: "Suranna" }, { value: "Suravaram", label: "Suravaram" }, { value: "Suwannaphum", label: "Suwannaphum" }, { value: "Swanky and Moo Moo", label: "Swanky and Moo Moo" }, { value: "Syncopate", label: "Syncopate" }, { value: "Tajawal", label: "Tajawal" }, { value: "Tangerine", label: "Tangerine" }, { value: "Taprom", label: "Taprom" }, { value: "Tauri", label: "Tauri" }, { value: "Taviraj", label: "Taviraj" }, { value: "Teko", label: "Teko" }, { value: "Telex", label: "Telex" }, { value: "Tenali Ramakrishna", label: "Tenali Ramakrishna" }, { value: "Tenor Sans", label: "Tenor Sans" }, { value: "Text Me One", label: "Text Me One" }, { value: "The Girl Next Door", label: "The Girl Next Door" }, { value: "Tienne", label: "Tienne" }, { value: "Tillana", label: "Tillana" }, { value: "Timmana", label: "Timmana" }, { value: "Tinos", label: "Tinos" }, { value: "Titan One", label: "Titan One" }, { value: "Titillium Web", label: "Titillium Web" }, { value: "Trade Winds", label: "Trade Winds" }, { value: "Trirong", label: "Trirong" }, { value: "Trocchi", label: "Trocchi" }, { value: "Trochut", label: "Trochut" }, { value: "Trykker", label: "Trykker" }, { value: "Tulpen One", label: "Tulpen One" }, { value: "Ubuntu", label: "Ubuntu" }, { value: "Ubuntu Condensed", label: "Ubuntu Condensed" }, { value: "Ubuntu Mono", label: "Ubuntu Mono" }, { value: "Ultra", label: "Ultra" }, { value: "Uncial Antiqua", label: "Uncial Antiqua" }, { value: "Underdog", label: "Underdog" }, { value: "Unica One", label: "Unica One" }, { value: "UnifrakturCook", label: "UnifrakturCook" }, { value: "UnifrakturMaguntia", label: "UnifrakturMaguntia" }, { value: "Unkempt", label: "Unkempt" }, { value: "Unlock", label: "Unlock" }, { value: "Unna", label: "Unna" }, { value: "VT323", label: "VT323" }, { value: "Vampiro One", label: "Vampiro One" }, { value: "Varela", label: "Varela" }, { value: "Varela Round", label: "Varela Round" }, { value: "Vast Shadow", label: "Vast Shadow" }, { value: "Vesper Libre", label: "Vesper Libre" }, { value: "Vibur", label: "Vibur" }, { value: "Vidaloka", label: "Vidaloka" }, { value: "Viga", label: "Viga" }, { value: "Voces", label: "Voces" }, { value: "Volkhov", label: "Volkhov" }, { value: "Vollkorn", label: "Vollkorn" }, { value: "Vollkorn SC", label: "Vollkorn SC" }, { value: "Voltaire", label: "Voltaire" }, { value: "Waiting for the Sunrise", label: "Waiting for the Sunrise" }, { value: "Wallpoet", label: "Wallpoet" }, { value: "Walter Turncoat", label: "Walter Turncoat" }, { value: "Warnes", label: "Warnes" }, { value: "Wellfleet", label: "Wellfleet" }, { value: "Wendy One", label: "Wendy One" }, { value: "Wire One", label: "Wire One" }, { value: "Work Sans", label: "Work Sans" }, { value: "Yanone Kaffeesatz", label: "Yanone Kaffeesatz" }, { value: "Yantramanav", label: "Yantramanav" }, { value: "Yatra One", label: "Yatra One" }, { value: "Yellowtail", label: "Yellowtail" }, { value: "Yeon Sung", label: "Yeon Sung" }, { value: "Yeseva One", label: "Yeseva One" }, { value: "Yesteryear", label: "Yesteryear" }, { value: "Yrsa", label: "Yrsa" }, { value: "Zeyada", label: "Zeyada" }, { value: "Zilla Slab", label: "Zilla Slab" }, { value: "Zilla Slab Highlight", label: "Zilla Slab Highlight" }];

/* harmony default export */ __webpack_exports__["a"] = (FONTS);

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = PremiumBackground;
var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var _wp$components = wp.components,
    SelectControl = _wp$components.SelectControl,
    IconButton = _wp$components.IconButton,
    ToggleControl = _wp$components.ToggleControl;
var MediaUpload = wp.editor.MediaUpload;


function PremiumBackground(props) {
    var imageID = props.imageID,
        imageURL = props.imageURL,
        backgroundPosition = props.backgroundPosition,
        backgroundRepeat = props.backgroundRepeat,
        backgroundSize = props.backgroundSize,
        fixed = props.fixed,
        _props$onSelectMedia = props.onSelectMedia,
        onSelectMedia = _props$onSelectMedia === undefined ? function () {} : _props$onSelectMedia,
        _props$onRemoveImage = props.onRemoveImage,
        onRemoveImage = _props$onRemoveImage === undefined ? function () {} : _props$onRemoveImage,
        _props$onChangeBackPo = props.onChangeBackPos,
        onChangeBackPos = _props$onChangeBackPo === undefined ? function () {} : _props$onChangeBackPo,
        _props$onchangeBackRe = props.onchangeBackRepeat,
        onchangeBackRepeat = _props$onchangeBackRe === undefined ? function () {} : _props$onchangeBackRe,
        _props$onChangeBackSi = props.onChangeBackSize,
        onChangeBackSize = _props$onChangeBackSi === undefined ? function () {} : _props$onChangeBackSi,
        _props$onChangeFixed = props.onChangeFixed,
        onChangeFixed = _props$onChangeFixed === undefined ? function () {} : _props$onChangeFixed;


    var POSITION = [{
        value: "top left",
        label: __("Top Left")
    }, {
        value: "top center",
        label: __("Top Center")
    }, {
        value: "top right",
        label: __("Top Right")
    }, {
        value: "center left",
        label: __("Center Left")
    }, {
        value: "center center",
        label: __("Center Center")
    }, {
        value: "center right",
        label: __("Center Right")
    }, {
        value: "bottom left",
        label: __("Bottom Left")
    }, {
        value: "bottom center",
        label: __("Bottom Center")
    }, {
        value: "bottom right",
        label: __("Bottom Right")
    }];
    var REPEAT = [{
        value: "no-repeat",
        label: __("No Repeat")
    }, {
        value: "repeat",
        label: __("Repeat")
    }, {
        value: "repeat-x",
        label: __("Repeat Horizontally")
    }, {
        value: "repeat-y",
        label: __("Repeat Vertically")
    }];
    var SIZE = [{
        value: "auto",
        label: __("Auto")
    }, {
        value: "cover",
        label: __("Cover")
    }, {
        value: "contain",
        label: __("Contain")
    }];
    return wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(MediaUpload, {
            allowedTypes: ["image"],
            onSelect: onSelectMedia,
            type: "image",
            value: imageID,
            render: function render(_ref) {
                var open = _ref.open;
                return wp.element.createElement(
                    Fragment,
                    null,
                    !imageURL && wp.element.createElement(
                        IconButton,
                        {
                            className: "premium-media-uplpad-btn",
                            label: __("Change Image"),
                            icon: "edit",
                            onClick: open
                        },
                        __("Change Image")
                    ),
                    imageURL && wp.element.createElement(
                        IconButton,
                        {
                            className: "premium-media-uplpad-btn",
                            label: __("Remove Image"),
                            icon: "no",
                            onClick: onRemoveImage
                        },
                        __("Remove Image")
                    )
                );
            }
        }),
        imageURL && wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(SelectControl, {
                label: __("Position"),
                options: POSITION,
                value: backgroundPosition,
                onChange: onChangeBackPos
            }),
            wp.element.createElement(SelectControl, {
                label: __("Repeat"),
                options: REPEAT,
                value: backgroundRepeat,
                onChange: onchangeBackRepeat
            }),
            wp.element.createElement(SelectControl, {
                label: __("Size"),
                options: SIZE,
                value: backgroundSize,
                onChange: onChangeBackSize
            }),
            wp.element.createElement(ToggleControl, {
                label: __("Fixed Background"),
                checked: fixed,
                onChange: onChangeFixed
            })
        )
    );
}

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(72),
    baseAssignValue = __webpack_require__(106);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;

/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = function (module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function () {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function get() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function get() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(40);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = toKey;

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = PremiumFilters;
var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var _wp$components = wp.components,
    RangeControl = _wp$components.RangeControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;


function PremiumFilters(props) {
  var blur = props.blur,
      bright = props.bright,
      contrast = props.contrast,
      saturation = props.saturation,
      hue = props.hue,
      _props$onChangeBlur = props.onChangeBlur,
      onChangeBlur = _props$onChangeBlur === undefined ? function () {} : _props$onChangeBlur,
      _props$onChangeBright = props.onChangeBright,
      onChangeBright = _props$onChangeBright === undefined ? function () {} : _props$onChangeBright,
      _props$onChangeContra = props.onChangeContrast,
      onChangeContrast = _props$onChangeContra === undefined ? function () {} : _props$onChangeContra,
      _props$onChangeSat = props.onChangeSat,
      onChangeSat = _props$onChangeSat === undefined ? function () {} : _props$onChangeSat,
      _props$onChangeHue = props.onChangeHue,
      onChangeHue = _props$onChangeHue === undefined ? function () {} : _props$onChangeHue;


  return wp.element.createElement(
    "div",
    { className: "premium-control-toggle" },
    wp.element.createElement(
      "strong",
      null,
      __("CSS Filters")
    ),
    wp.element.createElement(Dropdown, {
      className: "premium-control-toggle-btn",
      contentClassName: "premium-control-toggle-content",
      position: "bottom right",
      renderToggle: function renderToggle(_ref) {
        var isOpen = _ref.isOpen,
            onToggle = _ref.onToggle;
        return wp.element.createElement(
          Button,
          { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
          wp.element.createElement("i", { className: "dashicons dashicons-edit" })
        );
      },
      renderContent: function renderContent() {
        return wp.element.createElement(
          Fragment,
          null,
          wp.element.createElement(RangeControl, {
            label: __("Blur"),
            min: "0",
            max: "10",
            step: "0.1",
            initialPosition: "0",
            value: blur,
            onChange: onChangeBlur,
            allowReset: true
          }),
          wp.element.createElement(RangeControl, {
            label: __("Brightness"),
            min: "0",
            max: "200",
            initialPosition: 100,
            value: bright,
            onChange: onChangeBright,
            allowReset: true
          }),
          wp.element.createElement(RangeControl, {
            label: __("Contrast"),
            min: "0",
            max: "200",
            initialPosition: 100,
            value: contrast,
            onChange: onChangeContrast,
            allowReset: true
          }),
          wp.element.createElement(RangeControl, {
            label: __("Saturation"),
            min: "0",
            max: "200",
            initialPosition: 100,
            value: saturation,
            onChange: onChangeSat,
            allowReset: true
          }),
          wp.element.createElement(RangeControl, {
            label: __("Hue"),
            min: "0",
            max: "360",
            initialPosition: "0",
            value: hue,
            onChange: onChangeHue,
            allowReset: true
          })
        );
      }
    })
  );
}

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = ReactDOM;

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var placeHolder = PremiumBlocksSettings.defaultAuthImg;

var Component = wp.element.Component;

var DefaultImage = function (_Component) {
  _inherits(DefaultImage, _Component);

  function DefaultImage() {
    _classCallCheck(this, DefaultImage);

    return _possibleConstructorReturn(this, (DefaultImage.__proto__ || Object.getPrototypeOf(DefaultImage)).apply(this, arguments));
  }

  _createClass(DefaultImage, [{
    key: "render",
    value: function render() {
      return wp.element.createElement("img", { src: placeHolder });
    }
  }]);

  return DefaultImage;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (DefaultImage);

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clamp = clamp;
exports.canUseDOM = exports.slidesOnLeft = exports.slidesOnRight = exports.siblingDirection = exports.getTotalSlides = exports.getPostClones = exports.getPreClones = exports.getTrackLeft = exports.getTrackAnimateCSS = exports.getTrackCSS = exports.checkSpecKeys = exports.getSlideCount = exports.checkNavigable = exports.getNavigableIndexes = exports.swipeEnd = exports.swipeMove = exports.swipeStart = exports.keyHandler = exports.changeSlide = exports.slideHandler = exports.initializedState = exports.extractObject = exports.canGoNext = exports.getSwipeDirection = exports.getHeight = exports.getWidth = exports.lazySlidesOnRight = exports.lazySlidesOnLeft = exports.lazyEndIndex = exports.lazyStartIndex = exports.getRequiredLazySlides = exports.getOnDemandLazySlides = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });keys.push.apply(keys, symbols);
  }return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

function clamp(number, lowerBound, upperBound) {
  return Math.max(lowerBound, Math.min(number, upperBound));
}

var getOnDemandLazySlides = function getOnDemandLazySlides(spec) {
  var onDemandSlides = [];
  var startIndex = lazyStartIndex(spec);
  var endIndex = lazyEndIndex(spec);

  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
    if (spec.lazyLoadedList.indexOf(slideIndex) < 0) {
      onDemandSlides.push(slideIndex);
    }
  }

  return onDemandSlides;
}; // return list of slides that need to be present


exports.getOnDemandLazySlides = getOnDemandLazySlides;

var getRequiredLazySlides = function getRequiredLazySlides(spec) {
  var requiredSlides = [];
  var startIndex = lazyStartIndex(spec);
  var endIndex = lazyEndIndex(spec);

  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
    requiredSlides.push(slideIndex);
  }

  return requiredSlides;
}; // startIndex that needs to be present


exports.getRequiredLazySlides = getRequiredLazySlides;

var lazyStartIndex = function lazyStartIndex(spec) {
  return spec.currentSlide - lazySlidesOnLeft(spec);
};

exports.lazyStartIndex = lazyStartIndex;

var lazyEndIndex = function lazyEndIndex(spec) {
  return spec.currentSlide + lazySlidesOnRight(spec);
};

exports.lazyEndIndex = lazyEndIndex;

var lazySlidesOnLeft = function lazySlidesOnLeft(spec) {
  return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;
};

exports.lazySlidesOnLeft = lazySlidesOnLeft;

var lazySlidesOnRight = function lazySlidesOnRight(spec) {
  return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;
}; // get width of an element


exports.lazySlidesOnRight = lazySlidesOnRight;

var getWidth = function getWidth(elem) {
  return elem && elem.offsetWidth || 0;
};

exports.getWidth = getWidth;

var getHeight = function getHeight(elem) {
  return elem && elem.offsetHeight || 0;
};

exports.getHeight = getHeight;

var getSwipeDirection = function getSwipeDirection(touchObject) {
  var verticalSwiping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var xDist, yDist, r, swipeAngle;
  xDist = touchObject.startX - touchObject.curX;
  yDist = touchObject.startY - touchObject.curY;
  r = Math.atan2(yDist, xDist);
  swipeAngle = Math.round(r * 180 / Math.PI);

  if (swipeAngle < 0) {
    swipeAngle = 360 - Math.abs(swipeAngle);
  }

  if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
    return "left";
  }

  if (swipeAngle >= 135 && swipeAngle <= 225) {
    return "right";
  }

  if (verticalSwiping === true) {
    if (swipeAngle >= 35 && swipeAngle <= 135) {
      return "up";
    } else {
      return "down";
    }
  }

  return "vertical";
}; // whether or not we can go next


exports.getSwipeDirection = getSwipeDirection;

var canGoNext = function canGoNext(spec) {
  var canGo = true;

  if (!spec.infinite) {
    if (spec.centerMode && spec.currentSlide >= spec.slideCount - 1) {
      canGo = false;
    } else if (spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) {
      canGo = false;
    }
  }

  return canGo;
}; // given an object and a list of keys, return new object with given keys


exports.canGoNext = canGoNext;

var extractObject = function extractObject(spec, keys) {
  var newObject = {};
  keys.forEach(function (key) {
    return newObject[key] = spec[key];
  });
  return newObject;
}; // get initialized state


exports.extractObject = extractObject;

var initializedState = function initializedState(spec) {
  // spec also contains listRef, trackRef
  var slideCount = _react["default"].Children.count(spec.children);

  var listNode = spec.listRef;
  var listWidth = Math.ceil(getWidth(listNode));
  var trackNode = spec.trackRef && spec.trackRef.node;
  var trackWidth = Math.ceil(getWidth(trackNode));
  var slideWidth;

  if (!spec.vertical) {
    var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;

    if (typeof spec.centerPadding === "string" && spec.centerPadding.slice(-1) === "%") {
      centerPaddingAdj *= listWidth / 100;
    }

    slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);
  } else {
    slideWidth = listWidth;
  }

  var slideHeight = listNode && getHeight(listNode.querySelector('[data-index="0"]'));
  var listHeight = slideHeight * spec.slidesToShow;
  var currentSlide = spec.currentSlide === undefined ? spec.initialSlide : spec.currentSlide;

  if (spec.rtl && spec.currentSlide === undefined) {
    currentSlide = slideCount - 1 - spec.initialSlide;
  }

  var lazyLoadedList = spec.lazyLoadedList || [];
  var slidesToLoad = getOnDemandLazySlides(_objectSpread(_objectSpread({}, spec), {}, {
    currentSlide: currentSlide,
    lazyLoadedList: lazyLoadedList
  }));
  lazyLoadedList.concat(slidesToLoad);
  var state = {
    slideCount: slideCount,
    slideWidth: slideWidth,
    listWidth: listWidth,
    trackWidth: trackWidth,
    currentSlide: currentSlide,
    slideHeight: slideHeight,
    listHeight: listHeight,
    lazyLoadedList: lazyLoadedList
  };

  if (spec.autoplaying === null && spec.autoplay) {
    state["autoplaying"] = "playing";
  }

  return state;
};

exports.initializedState = initializedState;

var slideHandler = function slideHandler(spec) {
  var waitForAnimate = spec.waitForAnimate,
      animating = spec.animating,
      fade = spec.fade,
      infinite = spec.infinite,
      index = spec.index,
      slideCount = spec.slideCount,
      lazyLoadedList = spec.lazyLoadedList,
      lazyLoad = spec.lazyLoad,
      currentSlide = spec.currentSlide,
      centerMode = spec.centerMode,
      slidesToScroll = spec.slidesToScroll,
      slidesToShow = spec.slidesToShow,
      useCSS = spec.useCSS;
  if (waitForAnimate && animating) return {};
  var animationSlide = index,
      finalSlide,
      animationLeft,
      finalLeft;
  var state = {},
      nextState = {};
  var targetSlide = infinite ? index : clamp(index, 0, slideCount - 1);

  if (fade) {
    if (!infinite && (index < 0 || index >= slideCount)) return {};

    if (index < 0) {
      animationSlide = index + slideCount;
    } else if (index >= slideCount) {
      animationSlide = index - slideCount;
    }

    if (lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0) {
      lazyLoadedList.push(animationSlide);
    }

    state = {
      animating: true,
      currentSlide: animationSlide,
      lazyLoadedList: lazyLoadedList,
      targetSlide: animationSlide
    };
    nextState = {
      animating: false,
      targetSlide: animationSlide
    };
  } else {
    finalSlide = animationSlide;

    if (animationSlide < 0) {
      finalSlide = animationSlide + slideCount;
      if (!infinite) finalSlide = 0;else if (slideCount % slidesToScroll !== 0) finalSlide = slideCount - slideCount % slidesToScroll;
    } else if (!canGoNext(spec) && animationSlide > currentSlide) {
      animationSlide = finalSlide = currentSlide;
    } else if (centerMode && animationSlide >= slideCount) {
      animationSlide = infinite ? slideCount : slideCount - 1;
      finalSlide = infinite ? 0 : slideCount - 1;
    } else if (animationSlide >= slideCount) {
      finalSlide = animationSlide - slideCount;
      if (!infinite) finalSlide = slideCount - slidesToShow;else if (slideCount % slidesToScroll !== 0) finalSlide = 0;
    }

    if (!infinite && animationSlide + slidesToShow >= slideCount) {
      finalSlide = slideCount - slidesToShow;
    }

    animationLeft = getTrackLeft(_objectSpread(_objectSpread({}, spec), {}, {
      slideIndex: animationSlide
    }));
    finalLeft = getTrackLeft(_objectSpread(_objectSpread({}, spec), {}, {
      slideIndex: finalSlide
    }));

    if (!infinite) {
      if (animationLeft === finalLeft) animationSlide = finalSlide;
      animationLeft = finalLeft;
    }

    lazyLoad && lazyLoadedList.concat(getOnDemandLazySlides(_objectSpread(_objectSpread({}, spec), {}, {
      currentSlide: animationSlide
    })));

    if (!useCSS) {
      state = {
        currentSlide: finalSlide,
        trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
          left: finalLeft
        })),
        lazyLoadedList: lazyLoadedList,
        targetSlide: targetSlide
      };
    } else {
      state = {
        animating: true,
        currentSlide: finalSlide,
        trackStyle: getTrackAnimateCSS(_objectSpread(_objectSpread({}, spec), {}, {
          left: animationLeft
        })),
        lazyLoadedList: lazyLoadedList,
        targetSlide: targetSlide
      };
      nextState = {
        animating: false,
        currentSlide: finalSlide,
        trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
          left: finalLeft
        })),
        swipeLeft: null,
        targetSlide: targetSlide
      };
    }
  }

  return {
    state: state,
    nextState: nextState
  };
};

exports.slideHandler = slideHandler;

var changeSlide = function changeSlide(spec, options) {
  var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;
  var slidesToScroll = spec.slidesToScroll,
      slidesToShow = spec.slidesToShow,
      slideCount = spec.slideCount,
      currentSlide = spec.currentSlide,
      previousTargetSlide = spec.targetSlide,
      lazyLoad = spec.lazyLoad,
      infinite = spec.infinite;
  unevenOffset = slideCount % slidesToScroll !== 0;
  indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;

  if (options.message === "previous") {
    slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;
    targetSlide = currentSlide - slideOffset;

    if (lazyLoad && !infinite) {
      previousInt = currentSlide - slideOffset;
      targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;
    }

    if (!infinite) {
      targetSlide = previousTargetSlide - slidesToScroll;
    }
  } else if (options.message === "next") {
    slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;
    targetSlide = currentSlide + slideOffset;

    if (lazyLoad && !infinite) {
      targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;
    }

    if (!infinite) {
      targetSlide = previousTargetSlide + slidesToScroll;
    }
  } else if (options.message === "dots") {
    // Click on dots
    targetSlide = options.index * options.slidesToScroll;
  } else if (options.message === "children") {
    // Click on the slides
    targetSlide = options.index;

    if (infinite) {
      var direction = siblingDirection(_objectSpread(_objectSpread({}, spec), {}, {
        targetSlide: targetSlide
      }));

      if (targetSlide > options.currentSlide && direction === "left") {
        targetSlide = targetSlide - slideCount;
      } else if (targetSlide < options.currentSlide && direction === "right") {
        targetSlide = targetSlide + slideCount;
      }
    }
  } else if (options.message === "index") {
    targetSlide = Number(options.index);
  }

  return targetSlide;
};

exports.changeSlide = changeSlide;

var keyHandler = function keyHandler(e, accessibility, rtl) {
  if (e.target.tagName.match("TEXTAREA|INPUT|SELECT") || !accessibility) return "";
  if (e.keyCode === 37) return rtl ? "next" : "previous";
  if (e.keyCode === 39) return rtl ? "previous" : "next";
  return "";
};

exports.keyHandler = keyHandler;

var swipeStart = function swipeStart(e, swipe, draggable) {
  e.target.tagName === "IMG" && e.preventDefault();
  if (!swipe || !draggable && e.type.indexOf("mouse") !== -1) return "";
  return {
    dragging: true,
    touchObject: {
      startX: e.touches ? e.touches[0].pageX : e.clientX,
      startY: e.touches ? e.touches[0].pageY : e.clientY,
      curX: e.touches ? e.touches[0].pageX : e.clientX,
      curY: e.touches ? e.touches[0].pageY : e.clientY
    }
  };
};

exports.swipeStart = swipeStart;

var swipeMove = function swipeMove(e, spec) {
  // spec also contains, trackRef and slideIndex
  var scrolling = spec.scrolling,
      animating = spec.animating,
      vertical = spec.vertical,
      swipeToSlide = spec.swipeToSlide,
      verticalSwiping = spec.verticalSwiping,
      rtl = spec.rtl,
      currentSlide = spec.currentSlide,
      edgeFriction = spec.edgeFriction,
      edgeDragged = spec.edgeDragged,
      onEdge = spec.onEdge,
      swiped = spec.swiped,
      swiping = spec.swiping,
      slideCount = spec.slideCount,
      slidesToScroll = spec.slidesToScroll,
      infinite = spec.infinite,
      touchObject = spec.touchObject,
      swipeEvent = spec.swipeEvent,
      listHeight = spec.listHeight,
      listWidth = spec.listWidth;
  if (scrolling) return;
  if (animating) return e.preventDefault();
  if (vertical && swipeToSlide && verticalSwiping) e.preventDefault();
  var swipeLeft,
      state = {};
  var curLeft = getTrackLeft(spec);
  touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;
  touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;
  touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));
  var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));

  if (!verticalSwiping && !swiping && verticalSwipeLength > 10) {
    return {
      scrolling: true
    };
  }

  if (verticalSwiping) touchObject.swipeLength = verticalSwipeLength;
  var positionOffset = (!rtl ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);
  if (verticalSwiping) positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;
  var dotCount = Math.ceil(slideCount / slidesToScroll);
  var swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping);
  var touchSwipeLength = touchObject.swipeLength;

  if (!infinite) {
    if (currentSlide === 0 && swipeDirection === "right" || currentSlide + 1 >= dotCount && swipeDirection === "left" || !canGoNext(spec) && swipeDirection === "left") {
      touchSwipeLength = touchObject.swipeLength * edgeFriction;

      if (edgeDragged === false && onEdge) {
        onEdge(swipeDirection);
        state["edgeDragged"] = true;
      }
    }
  }

  if (!swiped && swipeEvent) {
    swipeEvent(swipeDirection);
    state["swiped"] = true;
  }

  if (!vertical) {
    if (!rtl) {
      swipeLeft = curLeft + touchSwipeLength * positionOffset;
    } else {
      swipeLeft = curLeft - touchSwipeLength * positionOffset;
    }
  } else {
    swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset;
  }

  if (verticalSwiping) {
    swipeLeft = curLeft + touchSwipeLength * positionOffset;
  }

  state = _objectSpread(_objectSpread({}, state), {}, {
    touchObject: touchObject,
    swipeLeft: swipeLeft,
    trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
      left: swipeLeft
    }))
  });

  if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
    return state;
  }

  if (touchObject.swipeLength > 10) {
    state["swiping"] = true;
    e.preventDefault();
  }

  return state;
};

exports.swipeMove = swipeMove;

var swipeEnd = function swipeEnd(e, spec) {
  var dragging = spec.dragging,
      swipe = spec.swipe,
      touchObject = spec.touchObject,
      listWidth = spec.listWidth,
      touchThreshold = spec.touchThreshold,
      verticalSwiping = spec.verticalSwiping,
      listHeight = spec.listHeight,
      swipeToSlide = spec.swipeToSlide,
      scrolling = spec.scrolling,
      onSwipe = spec.onSwipe,
      targetSlide = spec.targetSlide,
      currentSlide = spec.currentSlide,
      infinite = spec.infinite;

  if (!dragging) {
    if (swipe) e.preventDefault();
    return {};
  }

  var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold;
  var swipeDirection = getSwipeDirection(touchObject, verticalSwiping); // reset the state of touch related state variables.

  var state = {
    dragging: false,
    edgeDragged: false,
    scrolling: false,
    swiping: false,
    swiped: false,
    swipeLeft: null,
    touchObject: {}
  };

  if (scrolling) {
    return state;
  }

  if (!touchObject.swipeLength) {
    return state;
  }

  if (touchObject.swipeLength > minSwipe) {
    e.preventDefault();

    if (onSwipe) {
      onSwipe(swipeDirection);
    }

    var slideCount, newSlide;
    var activeSlide = infinite ? currentSlide : targetSlide;

    switch (swipeDirection) {
      case "left":
      case "up":
        newSlide = activeSlide + getSlideCount(spec);
        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
        state["currentDirection"] = 0;
        break;

      case "right":
      case "down":
        newSlide = activeSlide - getSlideCount(spec);
        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
        state["currentDirection"] = 1;
        break;

      default:
        slideCount = activeSlide;
    }

    state["triggerSlideHandler"] = slideCount;
  } else {
    // Adjust the track back to it's original position.
    var currentLeft = getTrackLeft(spec);
    state["trackStyle"] = getTrackAnimateCSS(_objectSpread(_objectSpread({}, spec), {}, {
      left: currentLeft
    }));
  }

  return state;
};

exports.swipeEnd = swipeEnd;

var getNavigableIndexes = function getNavigableIndexes(spec) {
  var max = spec.infinite ? spec.slideCount * 2 : spec.slideCount;
  var breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0;
  var counter = spec.infinite ? spec.slidesToShow * -1 : 0;
  var indexes = [];

  while (breakpoint < max) {
    indexes.push(breakpoint);
    breakpoint = counter + spec.slidesToScroll;
    counter += Math.min(spec.slidesToScroll, spec.slidesToShow);
  }

  return indexes;
};

exports.getNavigableIndexes = getNavigableIndexes;

var checkNavigable = function checkNavigable(spec, index) {
  var navigables = getNavigableIndexes(spec);
  var prevNavigable = 0;

  if (index > navigables[navigables.length - 1]) {
    index = navigables[navigables.length - 1];
  } else {
    for (var n in navigables) {
      if (index < navigables[n]) {
        index = prevNavigable;
        break;
      }

      prevNavigable = navigables[n];
    }
  }

  return index;
};

exports.checkNavigable = checkNavigable;

var getSlideCount = function getSlideCount(spec) {
  var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;

  if (spec.swipeToSlide) {
    var swipedSlide;
    var slickList = spec.listRef;
    var slides = slickList.querySelectorAll && slickList.querySelectorAll(".slick-slide") || [];
    Array.from(slides).every(function (slide) {
      if (!spec.vertical) {
        if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      } else {
        if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      }

      return true;
    });

    if (!swipedSlide) {
      return 0;
    }

    var currentIndex = spec.rtl === true ? spec.slideCount - spec.currentSlide : spec.currentSlide;
    var slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;
    return slidesTraversed;
  } else {
    return spec.slidesToScroll;
  }
};

exports.getSlideCount = getSlideCount;

var checkSpecKeys = function checkSpecKeys(spec, keysArray) {
  return keysArray.reduce(function (value, key) {
    return value && spec.hasOwnProperty(key);
  }, true) ? null : console.error("Keys Missing:", spec);
};

exports.checkSpecKeys = checkSpecKeys;

var getTrackCSS = function getTrackCSS(spec) {
  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);
  var trackWidth, trackHeight;
  var trackChildren = spec.slideCount + 2 * spec.slidesToShow;

  if (!spec.vertical) {
    trackWidth = getTotalSlides(spec) * spec.slideWidth;
  } else {
    trackHeight = trackChildren * spec.slideHeight;
  }

  var style = {
    opacity: 1,
    transition: "",
    WebkitTransition: ""
  };

  if (spec.useTransform) {
    var WebkitTransform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
    var transform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
    var msTransform = !spec.vertical ? "translateX(" + spec.left + "px)" : "translateY(" + spec.left + "px)";
    style = _objectSpread(_objectSpread({}, style), {}, {
      WebkitTransform: WebkitTransform,
      transform: transform,
      msTransform: msTransform
    });
  } else {
    if (spec.vertical) {
      style["top"] = spec.left;
    } else {
      style["left"] = spec.left;
    }
  }

  if (spec.fade) style = {
    opacity: 1
  };
  if (trackWidth) style.width = trackWidth;
  if (trackHeight) style.height = trackHeight; // Fallback for IE8

  if (window && !window.addEventListener && window.attachEvent) {
    if (!spec.vertical) {
      style.marginLeft = spec.left + "px";
    } else {
      style.marginTop = spec.left + "px";
    }
  }

  return style;
};

exports.getTrackCSS = getTrackCSS;

var getTrackAnimateCSS = function getTrackAnimateCSS(spec) {
  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth", "speed", "cssEase"]);
  var style = getTrackCSS(spec); // useCSS is true by default so it can be undefined

  if (spec.useTransform) {
    style.WebkitTransition = "-webkit-transform " + spec.speed + "ms " + spec.cssEase;
    style.transition = "transform " + spec.speed + "ms " + spec.cssEase;
  } else {
    if (spec.vertical) {
      style.transition = "top " + spec.speed + "ms " + spec.cssEase;
    } else {
      style.transition = "left " + spec.speed + "ms " + spec.cssEase;
    }
  }

  return style;
};

exports.getTrackAnimateCSS = getTrackAnimateCSS;

var getTrackLeft = function getTrackLeft(spec) {
  if (spec.unslick) {
    return 0;
  }

  checkSpecKeys(spec, ["slideIndex", "trackRef", "infinite", "centerMode", "slideCount", "slidesToShow", "slidesToScroll", "slideWidth", "listWidth", "variableWidth", "slideHeight"]);
  var slideIndex = spec.slideIndex,
      trackRef = spec.trackRef,
      infinite = spec.infinite,
      centerMode = spec.centerMode,
      slideCount = spec.slideCount,
      slidesToShow = spec.slidesToShow,
      slidesToScroll = spec.slidesToScroll,
      slideWidth = spec.slideWidth,
      listWidth = spec.listWidth,
      variableWidth = spec.variableWidth,
      slideHeight = spec.slideHeight,
      fade = spec.fade,
      vertical = spec.vertical;
  var slideOffset = 0;
  var targetLeft;
  var targetSlide;
  var verticalOffset = 0;

  if (fade || spec.slideCount === 1) {
    return 0;
  }

  var slidesToOffset = 0;

  if (infinite) {
    slidesToOffset = -getPreClones(spec); // bring active slide to the beginning of visual area
    // if next scroll doesn't have enough children, just reach till the end of original slides instead of shifting slidesToScroll children

    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
      slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll);
    } // shift current slide to center of the frame


    if (centerMode) {
      slidesToOffset += parseInt(slidesToShow / 2);
    }
  } else {
    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
      slidesToOffset = slidesToShow - slideCount % slidesToScroll;
    }

    if (centerMode) {
      slidesToOffset = parseInt(slidesToShow / 2);
    }
  }

  slideOffset = slidesToOffset * slideWidth;
  verticalOffset = slidesToOffset * slideHeight;

  if (!vertical) {
    targetLeft = slideIndex * slideWidth * -1 + slideOffset;
  } else {
    targetLeft = slideIndex * slideHeight * -1 + verticalOffset;
  }

  if (variableWidth === true) {
    var targetSlideIndex;
    var trackElem = trackRef && trackRef.node;
    targetSlideIndex = slideIndex + getPreClones(spec);
    targetSlide = trackElem && trackElem.childNodes[targetSlideIndex];
    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;

    if (centerMode === true) {
      targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex;
      targetSlide = trackElem && trackElem.children[targetSlideIndex];
      targetLeft = 0;

      for (var slide = 0; slide < targetSlideIndex; slide++) {
        targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;
      }

      targetLeft -= parseInt(spec.centerPadding);
      targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;
    }
  }

  return targetLeft;
};

exports.getTrackLeft = getTrackLeft;

var getPreClones = function getPreClones(spec) {
  if (spec.unslick || !spec.infinite) {
    return 0;
  }

  if (spec.variableWidth) {
    return spec.slideCount;
  }

  return spec.slidesToShow + (spec.centerMode ? 1 : 0);
};

exports.getPreClones = getPreClones;

var getPostClones = function getPostClones(spec) {
  if (spec.unslick || !spec.infinite) {
    return 0;
  }

  return spec.slideCount;
};

exports.getPostClones = getPostClones;

var getTotalSlides = function getTotalSlides(spec) {
  return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);
};

exports.getTotalSlides = getTotalSlides;

var siblingDirection = function siblingDirection(spec) {
  if (spec.targetSlide > spec.currentSlide) {
    if (spec.targetSlide > spec.currentSlide + slidesOnRight(spec)) {
      return "left";
    }

    return "right";
  } else {
    if (spec.targetSlide < spec.currentSlide - slidesOnLeft(spec)) {
      return "right";
    }

    return "left";
  }
};

exports.siblingDirection = siblingDirection;

var slidesOnRight = function slidesOnRight(_ref) {
  var slidesToShow = _ref.slidesToShow,
      centerMode = _ref.centerMode,
      rtl = _ref.rtl,
      centerPadding = _ref.centerPadding;

  // returns no of slides on the right of active slide
  if (centerMode) {
    var right = (slidesToShow - 1) / 2 + 1;
    if (parseInt(centerPadding) > 0) right += 1;
    if (rtl && slidesToShow % 2 === 0) right += 1;
    return right;
  }

  if (rtl) {
    return 0;
  }

  return slidesToShow - 1;
};

exports.slidesOnRight = slidesOnRight;

var slidesOnLeft = function slidesOnLeft(_ref2) {
  var slidesToShow = _ref2.slidesToShow,
      centerMode = _ref2.centerMode,
      rtl = _ref2.rtl,
      centerPadding = _ref2.centerPadding;

  // returns no of slides on the left of active slide
  if (centerMode) {
    var left = (slidesToShow - 1) / 2 + 1;
    if (parseInt(centerPadding) > 0) left += 1;
    if (!rtl && slidesToShow % 2 === 0) left += 1;
    return left;
  }

  if (rtl) {
    return slidesToShow - 1;
  }

  return 0;
};

exports.slidesOnLeft = slidesOnLeft;

var canUseDOM = function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
};

exports.canUseDOM = canUseDOM;

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_map__ = __webpack_require__(117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_map__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var __ = wp.i18n.__;
var _wp$components = wp.components,
    RangeControl = _wp$components.RangeControl,
    ButtonGroup = _wp$components.ButtonGroup,
    Button = _wp$components.Button,
    TabPanel = _wp$components.TabPanel,
    Dashicon = _wp$components.Dashicon;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

/**
 * Internal dependencies
 */



function PremiumResponsive(props) {

	var sizeTypes = void 0;

	if ("sizeTypes" in props) {
		sizeTypes = props.sizeTypes;
	} else {
		sizeTypes = [{ key: "px", name: __("px") }, { key: "em", name: __("em") }];
	}

	var sizeTypesControls = wp.element.createElement(
		ButtonGroup,
		{ className: "premium-size-type-field", "aria-label": __("Size Type") },
		__WEBPACK_IMPORTED_MODULE_0_lodash_map___default()(sizeTypes, function (_ref) {
			var name = _ref.name,
			    key = _ref.key;
			return wp.element.createElement(
				Button,
				{
					key: key,
					className: "premium-size-btn",
					isSmall: true,
					isPrimary: props.type.value === key,
					"aria-pressed": props.type.value === key,
					onClick: function onClick() {
						return props.setAttributes(_defineProperty({}, props.typeLabel, key));
					}
				},
				name
			);
		})
	);

	return wp.element.createElement(
		TabPanel,
		{ className: "premium-size-type-field-tabs", activeClass: "active-tab",
			tabs: [{
				name: "desktop",
				title: wp.element.createElement(Dashicon, { icon: "desktop" }),
				className: "premium-desktop-tab premium-responsive-tabs"
			}, {
				name: "tablet",
				title: wp.element.createElement(Dashicon, { icon: "tablet" }),
				className: "premium-tablet-tab premium-responsive-tabs"
			}, {
				name: "mobile",
				title: wp.element.createElement(Dashicon, { icon: "smartphone" }),
				className: "premium-mobile-tab premium-responsive-tabs"
			}] },
		function (tab) {
			var tabout = void 0;

			if ("mobile" === tab.name) {
				tabout = wp.element.createElement(
					Fragment,
					null,
					sizeTypesControls,
					wp.element.createElement(RangeControl, {
						label: __(props.sizeMobileText),
						value: props.sizeMobile.value,
						onChange: function onChange(value) {
							return props.setAttributes(_defineProperty({}, props.sizeMobileLabel, value));
						},
						min: 0,
						max: 200,
						step: props.steps,
						beforeIcon: "editor-textcolor",
						allowReset: true,
						initialPosition: 30
					})
				);
			} else if ("tablet" === tab.name) {
				tabout = wp.element.createElement(
					Fragment,
					null,
					sizeTypesControls,
					wp.element.createElement(RangeControl, {
						label: __(props.sizeTabletText),
						value: props.sizeTablet.value,
						onChange: function onChange(value) {
							return props.setAttributes(_defineProperty({}, props.sizeTabletLabel, value));
						},
						min: 0,
						max: 200,
						step: props.steps,
						beforeIcon: "editor-textcolor",
						allowReset: true,
						initialPosition: 30
					})
				);
			} else {
				tabout = wp.element.createElement(
					Fragment,
					null,
					sizeTypesControls,
					wp.element.createElement(RangeControl, {
						label: __(props.sizeText),
						value: props.size.value,
						onChange: function onChange(value) {
							return props.setAttributes(_defineProperty({}, props.sizeLabel, value));
						},
						min: 0,
						max: 200,
						step: props.steps,
						beforeIcon: "editor-textcolor",
						allowReset: true,
						initialPosition: 30
					})
				);
			}

			return wp.element.createElement(
				"div",
				null,
				tabout
			);
		}
	);
}

/* harmony default export */ __webpack_exports__["a"] = (PremiumResponsive);

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(121),
    listCacheDelete = __webpack_require__(122),
    listCacheGet = __webpack_require__(123),
    listCacheHas = __webpack_require__(124),
    listCacheSet = __webpack_require__(125);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(33);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;

/***/ }),
/* 33 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || value !== value && other !== other;
}

module.exports = eq;

/***/ }),
/* 34 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var g;

// This works in non-strict mode
g = function () {
	return this;
}();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(15);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(145);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}

module.exports = getMapData;

/***/ }),
/* 37 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

  return value === proto;
}

module.exports = isPrototype;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(165),
    Map = __webpack_require__(47),
    Promise = __webpack_require__(166),
    Set = __webpack_require__(167),
    WeakMap = __webpack_require__(168),
    baseGetTag = __webpack_require__(17),
    toSource = __webpack_require__(79);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
    getTag = function getTag(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
            switch (ctorString) {
                case dataViewCtorString:
                    return dataViewTag;
                case mapCtorString:
                    return mapTag;
                case promiseCtorString:
                    return promiseTag;
                case setCtorString:
                    return setTag;
                case weakMapCtorString:
                    return weakMapTag;
            }
        }
        return result;
    };
}

module.exports = getTag;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(9),
    isKey = __webpack_require__(58),
    stringToPath = __webpack_require__(172),
    toString = __webpack_require__(175);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var baseGetTag = __webpack_require__(17),
    isObjectLike = __webpack_require__(14);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}

module.exports = isSymbol;

/***/ }),
/* 41 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * 
 * React FontIconPicker
 * 
 * React Component to show a picker element to pick font-icons & svg
 * 
 * @author Swashata Ghosh <swashata@wpquark.com>
 * @version 1.2.0
 * @link https://github.com/fontIconPicker/react-fonticonpicker
 * @license MIT
 * 
 * Copyright (c) 2018 Swashata Ghosh <swashata@wpquark.com>
 * 
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 * 
 */
!function (e, t) {
  "object" == ( false ? "undefined" : _typeof(exports)) && "object" == ( false ? "undefined" : _typeof(module)) ? module.exports = t(__webpack_require__(13), __webpack_require__(1), __webpack_require__(0), __webpack_require__(27), __webpack_require__(94)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(13), __webpack_require__(1), __webpack_require__(0), __webpack_require__(27), __webpack_require__(94)], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.FontIconPicker = t(require("prop-types"), require("react"), require("classnames"), require("react-dom"), require("react-transition-group")) : e.FontIconPicker = t(e.PropTypes, e.React, e.classNames, e.ReactDOM, e.ReactTransitionGroup);
}(window, function (e, t, r, n, a) {
  return function (e) {
    var t = {};function r(n) {
      if (t[n]) return t[n].exports;var a = t[n] = { i: n, l: !1, exports: {} };return e[n].call(a.exports, a, a.exports, r), a.l = !0, a.exports;
    }return r.m = e, r.c = t, r.d = function (e, t, n) {
      r.o(e, t) || Object.defineProperty(e, t, { configurable: !1, enumerable: !0, get: n });
    }, r.r = function (e) {
      Object.defineProperty(e, "__esModule", { value: !0 });
    }, r.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };return r.d(t, "a", t), t;
    }, r.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, r.p = "", r(r.s = 15);
  }([function (t, r) {
    t.exports = e;
  }, function (e, r) {
    e.exports = t;
  }, function (e, t, r) {
    "use strict";
    function n(e) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
      })(e);
    }function a(e, t, r) {
      return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = r, e;
    }function o(e) {
      return function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, r = new Array(e.length); t < e.length; t++) {
            r[t] = e[t];
          }return r;
        }
      }(e) || function (e) {
        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }Object.defineProperty(t, "__esModule", { value: !0 }), t.flattenPossiblyCategorizedSource = function (e) {
      var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;if (Array.isArray(e)) return o(e);if (null !== t) return void 0 !== e[t] ? o(e[t]) : [];var r = [],
          n = function (e) {
        for (var t = 1; t < arguments.length; t++) {
          var r = null != arguments[t] ? arguments[t] : {},
              n = Object.keys(r);"function" == typeof Object.getOwnPropertySymbols && (n = n.concat(Object.getOwnPropertySymbols(r).filter(function (e) {
            return Object.getOwnPropertyDescriptor(r, e).enumerable;
          }))), n.forEach(function (t) {
            a(e, t, r[t]);
          });
        }return e;
      }({}, e);return Object.keys(n).forEach(function (e) {
        r = o(r).concat(o(n[e]));
      }), r;
    }, t.getPossibleCategories = function (e) {
      return Array.isArray(e) ? null : Object.keys(e);
    }, t.convertToHex = function (e) {
      return String.fromCodePoint(parseInt(e, 10));
    }, t.isArrayEqual = function (e, t) {
      if (!Array.isArray(e) || !Array.isArray(t)) return !1;var r = o(e);r.sort();var n = o(t);return n.sort(), JSON.stringify(r) === JSON.stringify(n);
    }, t.getOffset = function (e) {
      var t = e.getBoundingClientRect(),
          r = window.pageXOffset || document.documentElement.scrollLeft,
          n = window.pageYOffset || document.documentElement.scrollTop;return { top: t.top + n, left: t.left + r };
    }, t.getSourceType = function (e) {
      return null === e ? "null" : "object" !== n(e) || Array.isArray(e) ? Array.isArray(e) ? "array" : n(e) : "object";
    }, t.InvalidSourceException = function (e, t) {
      this.givenType = e, this.requiredType = t, this.message = "Expected of type: ".concat(this.requiredType, ", found: ").concat(this.givenType), this.toString = function () {
        return "Invalid Source Exception: ".concat(this.message);
      };
    }, t.fuzzySearch = function (e, t) {
      e = e.toLowerCase();var r = (t = t.toLowerCase()).length,
          n = e.length;if (n > r) return !1;if (n === r) return e === t;e: for (var a = 0, o = 0; a < n; a++) {
        for (var l = e.codePointAt(a); o < r;) {
          if (t.codePointAt(o++) === l) continue e;
        }return !1;
      }return !0;
    }, t.debounce = void 0, t.debounce = function (e, t) {
      var r;return function () {
        var n = this,
            a = arguments;clearTimeout(r), r = setTimeout(function () {
          return e.apply(n, a);
        }, t);
      };
    };
  }, function (e, t) {
    e.exports = r;
  },,, function (e, t) {
    e.exports = n;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), t.default = void 0;var n = u(r(1)),
        a = r(6),
        o = u(r(0)),
        l = u(r(3)),
        i = r(2);function u(e) {
      return e && e.__esModule ? e : { default: e };
    }function c(e) {
      return (c = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
      })(e);
    }function s(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
      }
    }function f(e, t, r) {
      return t && s(e.prototype, t), r && s(e, r), e;
    }function d(e) {
      if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;
    }var p = function (e) {
      function t(e) {
        var r, n;return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), this, n = (t.__proto__ || Object.getPrototypeOf(t)).call(this, e), r = !n || "object" !== c(n) && "function" != typeof n ? d(this) : n, Object.defineProperty(d(r), "syncPortalPosition", { configurable: !0, enumerable: !0, writable: !0, value: function value() {
            r.resetPortalPosition(), r.fixWindowOverflow();
          } }), Object.defineProperty(d(r), "fixWindowOverflow", { configurable: !0, enumerable: !0, writable: !0, value: function value() {
            var e = r.props.domRef.current.offsetWidth,
                t = r.props.domRef.current.offsetHeight,
                n = window,
                a = n.innerWidth,
                o = n.pageYOffset,
                l = document.documentElement.clientHeight,
                u = (0, i.getOffset)(r.props.domRef.current),
                c = u.left,
                s = u.top,
                f = "self" === r.state.appendRoot ? r.props.domRef.current : r.state.appendRoot,
                d = (0, i.getOffset)(f),
                p = r.props.btnRef.current,
                h = r.props.domRef.current,
                y = (0, i.getOffset)(p),
                b = getComputedStyle(p),
                g = (parseInt(b.borderTop, 10) || 0) + (parseInt(b.borderBottom, 10) || 0);if (c + e > a - 20) {
              var m = y.left + r.props.btnRef.current.offsetWidth - (e + d.left);m + d.left < 0 && (m = 10 - d.left), h.style.left = "".concat(m, "px");
            }t + s - o > l && y.top - t > 0 && ("self" === r.state.appendRoot ? h.style.top = "-".concat(t - g, "px") : h.style.top = "".concat(y.top + g - t, "px"));
          } }), r.state = {}, r.debouncedSyncPortalPosition = (0, i.debounce)(r.syncPortalPosition, 250), r;
      }return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
      }(t, n.default.PureComponent), f(t, null, [{ key: "getDerivedStateFromProps", value: function value(e) {
          var r = t.calculateAppendAndClass(e.appendRoot);return { appendRoot: r.appendRoot, portalClasses: r.portalClasses };
        } }, { key: "calculateAppendAndClass", value: function value(e) {
          var t = "self",
              r = (0, l.default)({ "rfipdropdown--portal": !1 !== e });return !1 !== e && (t = document.querySelector(e)), { portalClasses: r, appendRoot: t };
        } }]), f(t, [{ key: "componentDidMount", value: function value() {
          window.addEventListener("resize", this.debouncedSyncPortalPosition), window.addEventListener("scroll", this.debouncedSyncPortalPosition), this.syncPortalPosition();
        } }, { key: "componentDidUpdate", value: function value() {
          this.syncPortalPosition();
        } }, { key: "componentWillUnmount", value: function value() {
          window.removeEventListener("resize", this.debouncedSyncPortalPosition), window.removeEventListener("scroll", this.debouncedSyncPortalPosition);
        } }, { key: "positionPortal", value: function value() {
          var e = this.props.domRef.current.style.display;this.props.domRef.current.style.display = "none";var t = this.props.btnRef.current,
              r = (0, i.getOffset)(t),
              n = (0, i.getOffset)(this.state.appendRoot),
              a = t.offsetHeight;this.props.domRef.current.style.left = "".concat(r.left - n.left, "px"), this.props.domRef.current.style.top = "".concat(r.top + a, "px"), this.props.domRef.current.style.display = e;
        } }, { key: "resetPortalPosition", value: function value() {
          var e = this.props.domRef.current;"self" === this.state.appendRoot ? e.style.top = "" : this.positionPortal();
        } }, { key: "render", value: function value() {
          var e = (0, l.default)(this.props.className, this.state.portalClasses),
              t = n.default.createElement("div", { className: e, ref: this.props.domRef }, this.props.children);return "self" === this.state.appendRoot ? t : (0, a.createPortal)(t, this.state.appendRoot);
        } }]), t;
    }();Object.defineProperty(p, "propTypes", { configurable: !0, enumerable: !0, writable: !0, value: { appendRoot: o.default.oneOfType([o.default.bool, o.default.string]), children: o.default.node.isRequired, domRef: o.default.object.isRequired, btnRef: o.default.object.isRequired, className: o.default.string.isRequired } }), Object.defineProperty(p, "defaultProps", { configurable: !0, enumerable: !0, writable: !0, value: { appendRoot: !1 } });var h = p;t.default = h;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), t.default = void 0;var n = i(r(1)),
        a = i(r(0)),
        o = i(r(3)),
        l = r(2);function i(e) {
      return e && e.__esModule ? e : { default: e };
    }function u(e) {
      return (u = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
      })(e);
    }function c(e) {
      return function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, r = new Array(e.length); t < e.length; t++) {
            r[t] = e[t];
          }return r;
        }
      }(e) || function (e) {
        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }function s(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
      }
    }function f(e, t, r) {
      return t && s(e.prototype, t), r && s(e, r), e;
    }function d(e) {
      if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;
    }var p = function (e) {
      function t(e) {
        var r, n;return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), this, n = (t.__proto__ || Object.getPrototypeOf(t)).call(this, e), r = !n || "object" !== u(n) && "function" != typeof n ? d(this) : n, Object.defineProperty(d(r), "handleChangePage", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t,
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                a = r.props.currentPage,
                o = r.state.totalPage;null !== n ? "next" === n ? a += 1 : a -= 1 : a = parseInt(e.target.value, 10) - 1, a < 0 && (a = 0), a > o - 1 && (a = o - 1), t = a + 1, null === n && Number.isNaN(a) && (a = 0, t = ""), r.setState({ viewPage: t }), r.props.handleChangePage(a);
          } }), Object.defineProperty(d(r), "handlePageKeyBoard", { configurable: !0, enumerable: !0, writable: !0, value: function value(e, t) {
            13 !== e.keyCode && 32 !== e.keyCode || r.handleChangePage({}, t);
          } }), Object.defineProperty(d(r), "handleChangeValue", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            r.props.handleChangeValue(e);
          } }), Object.defineProperty(d(r), "handleValueKeyboard", { configurable: !0, enumerable: !0, writable: !0, value: function value(e, t) {
            13 !== e.keyCode && 32 !== e.keyCode || r.handleChangeValue(t);
          } }), r.state = { viewPage: r.props.currentPage + 1 }, r;
      }return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
      }(t, n.default.PureComponent), f(t, null, [{ key: "getDerivedStateFromProps", value: function value(e, r) {
          var n = t.getCategoryFilteredState(e.currentCategory, e.categories, e.icons),
              a = t.getCategoryFilteredState(e.currentCategory, e.categories, null === e.search ? e.icons : e.search),
              o = t.getActiveIcons(n, a, e.currentSearch),
              l = o.activeIcons,
              i = o.activeTitles,
              u = e.currentPage,
              c = e.iconsPerPage,
              s = { iconView: t.getCurrentViewIcons(l, c, u), titleView: t.getCurrentViewIcons(i, c, u), totalPage: Math.ceil(l.length / c) };return "" !== r.viewPage && (s.viewPage = e.currentPage + 1), s;
        } }, { key: "getActiveIcons", value: function value(e, t, r) {
          var n = c(e),
              a = c(t);if ("" === r || null === r) return { activeIcons: n, activeTitles: a };var o = [],
              i = [];return n.forEach(function (e, n) {
            (0, l.fuzzySearch)(r, t[n]) && (o.push(e), i.push(t[n]));
          }), { activeIcons: o, activeTitles: i };
        } }, { key: "getCategoryFilteredState", value: function value(e, t, r) {
          var n = null,
              a = (0, l.getSourceType)(r);if (Array.isArray(t)) {
            if ("object" !== a) throw new l.InvalidSourceException(a, "object");
          } else if ("array" !== a) throw new l.InvalidSourceException(a, "array");return 0 !== e && Array.isArray(t) && (n = t[e] || null), (0, l.flattenPossiblyCategorizedSource)(r, n);
        } }, { key: "getCurrentViewIcons", value: function value(e, t, r) {
          var n = r * t,
              a = (r + 1) * t;return e.slice(n, a);
        } }]), f(t, [{ key: "renderPager", value: function value() {
          var e = this;if (this.state.totalPage < 1) return null;var t = this.props.currentPage > 0 ? n.default.createElement("span", { className: "rfipicons__left", role: "button", tabIndex: 0, onKeyDown: function onKeyDown(t) {
              return e.handlePageKeyBoard(t, "prev");
            }, onClick: function onClick(t) {
              return e.handleChangePage(t, "prev");
            } }, n.default.createElement("span", { role: "presentation", className: "rfipicons__label", "aria-label": "Left" }, n.default.createElement("i", { className: "fipicon-angle-left" }))) : null,
              r = this.props.currentPage < this.state.totalPage - 1 ? n.default.createElement("span", { className: "rfipicons__right", role: "button", tabIndex: 0, onKeyDown: function onKeyDown(t) {
              return e.handlePageKeyBoard(t, "next");
            }, onClick: function onClick(t) {
              return e.handleChangePage(t, "next");
            } }, n.default.createElement("span", { role: "presentation", className: "rfipicons__label", "aria-label": "Right" }, n.default.createElement("i", { className: "fipicon-angle-right" }))) : null;return n.default.createElement("div", { className: "rfipicons__pager" }, n.default.createElement("div", { className: "rfipicons__num" }, n.default.createElement("input", { value: this.state.viewPage, onChange: this.handleChangePage, className: "rfipicons__cp", type: "tel", min: 1 }), n.default.createElement("span", { className: "rfipicons__sp" }, "/"), n.default.createElement("span", { className: "rfipicons__tp" }, this.state.totalPage)), n.default.createElement("div", { className: "rfipicons__arrow" }, t, r));
        } }, { key: "renderIconView", value: function value() {
          var e = this;return this.state.totalPage > 0 ? this.state.iconView.map(function (t, r) {
            var a = (0, o.default)("rfipicons__icon", { "rfipicons__icon--selected": e.props.value === t || Array.isArray(e.props.value) && e.props.value.includes(t) });return n.default.createElement("span", { className: a, key: t, title: e.state.titleView[r] }, n.default.createElement("span", { className: "rfipicons__ibox", tabIndex: 0, role: "button", onClick: function onClick() {
                return e.handleChangeValue(t);
              }, onKeyDown: function onKeyDown(r) {
                return e.handleValueKeyboard(r, t);
              } }, e.props.renderIcon(t)));
          }) : n.default.createElement("span", { className: "rfipicons__icon--error" }, n.default.createElement("span", { className: "rfipicons__ibox--error" }, this.props.noIconPlaceholder));
        } }, { key: "render", value: function value() {
          return n.default.createElement("div", { className: "rfipicons" }, this.renderPager(), n.default.createElement("div", { className: "rfipicons__selector" }, this.renderIconView()));
        } }]), t;
    }();Object.defineProperty(p, "propTypes", { configurable: !0, enumerable: !0, writable: !0, value: { categories: a.default.arrayOf(a.default.string), currentCategory: a.default.number, isMulti: a.default.bool.isRequired, icons: a.default.oneOfType([a.default.arrayOf(a.default.string), a.default.arrayOf(a.default.number), a.default.objectOf(a.default.oneOfType([a.default.arrayOf(a.default.number), a.default.arrayOf(a.default.string)]))]).isRequired, search: a.default.oneOfType([a.default.objectOf(a.default.arrayOf(a.default.string)), a.default.arrayOf(a.default.string)]), value: a.default.oneOfType([a.default.number, a.default.string, a.default.arrayOf(a.default.oneOfType([a.default.number, a.default.string]))]).isRequired, currentSearch: a.default.string.isRequired, handleChangeValue: a.default.func.isRequired, currentPage: a.default.number.isRequired, iconsPerPage: a.default.number.isRequired, handleChangePage: a.default.func.isRequired, renderIcon: a.default.func.isRequired, noIconPlaceholder: a.default.string.isRequired } }), Object.defineProperty(p, "defaultProps", { configurable: !0, enumerable: !0, writable: !0, value: { categories: null, currentCategory: null, search: null } });var h = p;t.default = h;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), t.default = void 0;var n = o(r(1)),
        a = o(r(0));function o(e) {
      return e && e.__esModule ? e : { default: e };
    }var l = function l(e) {
      return n.default.createElement("div", { className: "rfipsearch" }, n.default.createElement("input", { type: "text", className: "rfipsearch__input", value: e.value, onChange: e.handleSearch, placeholder: e.placeholder }));
    };l.propTypes = { handleSearch: a.default.func.isRequired, value: a.default.string.isRequired, placeholder: a.default.string.isRequired };var i = l;t.default = i;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), t.default = void 0;var n = o(r(1)),
        a = o(r(0));function o(e) {
      return e && e.__esModule ? e : { default: e };
    }function l(e) {
      return (l = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
      })(e);
    }function i(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
      }
    }var u = function (e) {
      function t() {
        return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), function (e, t) {
          return !t || "object" !== l(t) && "function" != typeof t ? function (e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;
          }(e) : t;
        }(this, (t.__proto__ || Object.getPrototypeOf(t)).apply(this, arguments));
      }var r, a;return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
      }(t, n.default.PureComponent), r = t, (a = [{ key: "render", value: function value() {
          return n.default.createElement("div", { className: "rfipcategory" }, n.default.createElement("select", { className: "rfipcategory__select", onChange: this.props.handleCategory, value: this.props.value }, this.props.categories.map(function (e, t) {
            return n.default.createElement("option", { className: "rfipcategory__select__option", key: e, value: t }, e);
          })), n.default.createElement("i", { className: "fipicon-angle-down", role: "presentation", "aria-label": "Open" }));
        } }]) && i(r.prototype, a), t;
    }();Object.defineProperty(u, "propTypes", { configurable: !0, enumerable: !0, writable: !0, value: { handleCategory: a.default.func.isRequired, value: a.default.number.isRequired, categories: a.default.arrayOf(a.default.string).isRequired } });var c = u;t.default = c;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), t.default = void 0;var n = c(r(1)),
        a = c(r(0)),
        o = c(r(10)),
        l = c(r(9)),
        i = c(r(8)),
        u = r(2);function c(e) {
      return e && e.__esModule ? e : { default: e };
    }function s(e) {
      return (s = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
      })(e);
    }function f(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
      }
    }function d(e, t, r) {
      return t && f(e.prototype, t), r && f(e, r), e;
    }function p(e) {
      if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;
    }var h = function (e) {
      function t(e) {
        var r, n;return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), this, n = (t.__proto__ || Object.getPrototypeOf(t)).call(this, e), r = !n || "object" !== s(n) && "function" != typeof n ? p(this) : n, Object.defineProperty(p(r), "handleCategory", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t = parseInt(e.target.value, 10);Number.isNaN(t) && (t = 0), r.props.handleChangeCategory(t), r.props.handleChangePage(0);
          } }), Object.defineProperty(p(r), "handleSearch", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t = e.target.value;r.props.handleChangeSearch(t);
          } }), r.state = {}, r;
      }return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
      }(t, n.default.PureComponent), d(t, null, [{ key: "getDerivedStateFromProps", value: function value(e) {
          var t = (0, u.getPossibleCategories)(e.icons);return null !== t && (t = [e.allCatPlaceholder].concat(function (e) {
            return function (e) {
              if (Array.isArray(e)) {
                for (var t = 0, r = new Array(e.length); t < e.length; t++) {
                  r[t] = e[t];
                }return r;
              }
            }(e) || function (e) {
              if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
            }(e) || function () {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }(t))), { categories: t, searchString: e.currentSearch };
        } }]), d(t, [{ key: "render", value: function value() {
          return n.default.createElement("div", { className: "rfipdropdown__selector" }, this.props.showSearch ? n.default.createElement(l.default, { handleSearch: this.handleSearch, value: this.state.searchString, placeholder: this.props.searchPlaceholder }) : null, this.props.showCategory && this.state.categories && this.state.categories.length ? n.default.createElement(o.default, { handleCategory: this.handleCategory, value: this.props.currentCategory, categories: this.state.categories }) : null, n.default.createElement(i.default, { categories: this.state.categories, currentCategory: this.props.currentCategory, isMulti: this.props.isMulti, icons: this.props.icons, search: this.props.search, value: this.props.value, currentSearch: this.props.currentSearch, handleChangeValue: this.props.handleChangeValue, currentPage: this.props.currentPage, iconsPerPage: this.props.iconsPerPage, handleChangePage: this.props.handleChangePage, renderIcon: this.props.renderIcon, noIconPlaceholder: this.props.noIconPlaceholder }));
        } }]), t;
    }();Object.defineProperty(h, "propTypes", { configurable: !0, enumerable: !0, writable: !0, value: { isMulti: a.default.bool.isRequired, value: a.default.oneOfType([a.default.number, a.default.string, a.default.arrayOf(a.default.any)]).isRequired, currentCategory: a.default.number.isRequired, currentPage: a.default.number.isRequired, currentSearch: a.default.string.isRequired, icons: a.default.oneOfType([a.default.arrayOf(a.default.number), a.default.arrayOf(a.default.string), a.default.objectOf(a.default.oneOfType([a.default.arrayOf(a.default.number), a.default.arrayOf(a.default.string)]))]).isRequired, search: a.default.oneOfType([a.default.object, a.default.arrayOf(a.default.string)]), showCategory: a.default.bool.isRequired, showSearch: a.default.bool.isRequired, iconsPerPage: a.default.number.isRequired, allCatPlaceholder: a.default.string.isRequired, searchPlaceholder: a.default.string.isRequired, noIconPlaceholder: a.default.string.isRequired, renderIcon: a.default.func.isRequired, handleChangeValue: a.default.func.isRequired, handleChangeCategory: a.default.func.isRequired, handleChangePage: a.default.func.isRequired, handleChangeSearch: a.default.func.isRequired } }), Object.defineProperty(h, "defaultProps", { configurable: !0, enumerable: !0, writable: !0, value: { search: null } });var y = h;t.default = y;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), t.default = void 0;var n = l(r(1)),
        a = l(r(0)),
        o = l(r(3));function l(e) {
      return e && e.__esModule ? e : { default: e };
    }function i(e) {
      return (i = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
      })(e);
    }function u() {
      return (u = Object.assign || function (e) {
        for (var t = 1; t < arguments.length; t++) {
          var r = arguments[t];for (var n in r) {
            Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
          }
        }return e;
      }).apply(this, arguments);
    }function c(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
      }
    }function s(e, t) {
      return !t || "object" !== i(t) && "function" != typeof t ? f(e) : t;
    }function f(e) {
      if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;
    }var d = function (e) {
      function t() {
        var e, r, a;!function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t);for (var o = arguments.length, l = new Array(o), i = 0; i < o; i++) {
          l[i] = arguments[i];
        }return s(a, (r = a = s(this, (e = t.__proto__ || Object.getPrototypeOf(t)).call.apply(e, [this].concat(l))), Object.defineProperty(f(a), "handleClick", { configurable: !0, enumerable: !0, writable: !0, value: function value() {
            a.props.onClick();
          } }), Object.defineProperty(f(a), "handleKeyDown", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            32 !== e.keyCode && 13 !== e.keyCode || a.props.onClick();
          } }), Object.defineProperty(f(a), "handleDelete", { configurable: !0, enumerable: !0, writable: !0, value: function value(e, t) {
            e.stopPropagation(), a.props.handleDeleteValue(t);
          } }), Object.defineProperty(f(a), "handleDeleteKeyboard", { configurable: !0, enumerable: !0, writable: !0, value: function value(e, t) {
            32 !== e.keyCode && 13 !== e.keyCode || a.props.handleDeleteValue(t);
          } }), Object.defineProperty(f(a), "renderEmptyIcon", { configurable: !0, enumerable: !0, writable: !0, value: function value() {
            return n.default.createElement("span", { className: "rfipbtn__icon--empty" }, a.props.noSelectedPlaceholder);
          } }), r));
      }var r, a;return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
      }(t, n.default.PureComponent), r = t, (a = [{ key: "renderIcon", value: function value(e) {
          var t = this;return "" === e || null === e || void 0 === e ? this.renderEmptyIcon() : n.default.createElement("span", { className: "rfipbtn__icon", key: e }, n.default.createElement("span", { className: "rfipbtn__elm" }, this.props.renderIcon(e)), n.default.createElement("span", { className: "rfipbtn__del", onClick: function onClick(r) {
              return t.handleDelete(r, e);
            }, onKeyDown: function onKeyDown(r) {
              return t.handleDeleteKeyboard(r, e);
            }, tabIndex: 0, role: "button" }, "×"));
        } }, { key: "renderCurrentIcons", value: function value() {
          var e = this;return this.props.isMulti ? this.props.value.length ? this.props.value.map(function (t) {
            return e.renderIcon(t);
          }) : this.renderEmptyIcon() : this.renderIcon(this.props.value);
        } }, { key: "render", value: function value() {
          var e = { onClick: this.handleClick, onKeyDown: this.handleKeyDown, onFocus: this.handleFocus, onBlur: this.handleBlur, tabIndex: 0 },
              t = (0, o.default)("rfipbtn__button", "rfipbtn__button--".concat(this.props.isOpen ? "open" : "close")),
              r = (0, o.default)(this.props.className);return n.default.createElement("div", u({ className: r, ref: this.props.domRef }, e), n.default.createElement("div", { className: "rfipbtn__current" }, this.renderCurrentIcons()), n.default.createElement("div", { className: t }, n.default.createElement("i", { className: "fipicon-angle-down", role: "presentation", "aria-label": "Open" })));
        } }]) && c(r.prototype, a), t;
    }();Object.defineProperty(d, "propTypes", { configurable: !0, enumerable: !0, writable: !0, value: { className: a.default.string.isRequired, isOpen: a.default.bool.isRequired, onClick: a.default.func.isRequired, domRef: a.default.object.isRequired, isMulti: a.default.bool.isRequired, value: a.default.oneOfType([a.default.number, a.default.string, a.default.arrayOf(a.default.oneOfType([a.default.number, a.default.string]))]).isRequired, renderIcon: a.default.func.isRequired, handleDeleteValue: a.default.func.isRequired, noSelectedPlaceholder: a.default.string.isRequired } });var p = d;t.default = p;
  }, function (e, t) {
    e.exports = a;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), t.default = void 0;var n = f(r(1)),
        a = f(r(0)),
        o = f(r(3)),
        l = r(13),
        i = f(r(12)),
        u = f(r(11)),
        c = f(r(7)),
        s = r(2);function f(e) {
      return e && e.__esModule ? e : { default: e };
    }function d(e) {
      return (d = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
      })(e);
    }function p(e) {
      return function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, r = new Array(e.length); t < e.length; t++) {
            r[t] = e[t];
          }return r;
        }
      }(e) || function (e) {
        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }function h(e, t, r) {
      return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = r, e;
    }function y(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
      }
    }function b(e, t, r) {
      return t && y(e.prototype, t), r && y(e, r), e;
    }function g(e) {
      if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;
    }var m = [],
        v = "",
        P = function (e) {
      function t(e) {
        var r, a;return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), this, a = (t.__proto__ || Object.getPrototypeOf(t)).call(this, e), r = !a || "object" !== d(a) && "function" != typeof a ? g(this) : a, Object.defineProperty(g(r), "handleOuterClick", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t = e.target;r.isClickWithin(t) || r.closeDropdown();
          } }), Object.defineProperty(g(r), "handleEscapeKeyboard", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            27 === e.keyCode && r.closeDropdown();
          } }), Object.defineProperty(g(r), "isClickWithin", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            return r.fipButtonRef.current.contains(e) || r.fipDropDownRef.current && r.fipDropDownRef.current.contains(e);
          } }), Object.defineProperty(g(r), "handleToggle", { configurable: !0, enumerable: !0, writable: !0, value: function value() {
            r.setState(function (e) {
              return r.handleDropDown(!e.isOpen, !1);
            });
          } }), Object.defineProperty(g(r), "closeDropdown", { configurable: !0, enumerable: !0, writable: !0, value: function value() {
            r.handleDropDown(!1);
          } }), Object.defineProperty(g(r), "handleDropDown", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                a = { isOpen: e };return a.elemClass = t.getDerivedClassName("rfip", r.props.theme, r.props.isMulti, e), a.btnClass = t.getDerivedClassName("rfipbtn", r.props.theme, r.props.isMulti, e), a.ddClass = t.getDerivedClassName("rfipdropdown", r.props.theme, r.props.isMulti, e), n && r.setState(a), a;
          } }), Object.defineProperty(g(r), "handleChangeValue", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t;r.props.isMulti ? (t = p(r.state.value)).includes(e) ? (t = t.filter(function (t) {
              return t !== e;
            })).length || (t = m) : t.push(e) : t = e === r.state.value ? v : e, r.setState({ value: t, isOpen: !r.props.closeOnSelect }), r.props.onChange(t);
          } }), Object.defineProperty(g(r), "handleDeleteValue", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var n;n = r.props.isMulti ? r.state.value.filter(function (t) {
              return t !== e;
            }) : t.getDerivedValue(n, r.props.isMulti), r.setState({ value: n }), r.props.onChange(n);
          } }), Object.defineProperty(g(r), "handleChangePage", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            r.setState({ currentPage: e });
          } }), Object.defineProperty(g(r), "handleChangeCategory", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            r.setState({ currentCategory: e, currentPage: 0 });
          } }), Object.defineProperty(g(r), "handleChangeSearch", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            r.setState({ currentSearch: e, currentPage: 0 });
          } }), Object.defineProperty(g(r), "resetPortalStyle", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            ["maxHeight", "paddingTop", "paddingBottom"].forEach(function (t) {
              e.style[t] = null;
            });
          } }), Object.defineProperty(g(r), "handlePortalEnter", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t = e.childNodes[0];r.resetPortalStyle(t);var n = getComputedStyle(t);r.fipPortalComputedStyle = { height: n.height, paddingTop: n.paddingTop, paddingBottom: n.paddingBottom }, ["maxHeight", "paddingTop", "paddingBottom"].forEach(function (e) {
              t.style[e] = "0px";
            });
          } }), Object.defineProperty(g(r), "handlePortalEntering", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t = e.childNodes[0];t.style.maxHeight = r.fipPortalComputedStyle.height, t.style.paddingTop = r.fipPortalComputedStyle.paddingTop, t.style.paddingBottom = r.fipPortalComputedStyle.paddingBottom;
          } }), Object.defineProperty(g(r), "handlePortalEntered", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t = e.childNodes[0];r.resetPortalStyle(t), r.props.showSearch && void 0 === window.orientation && -1 === navigator.userAgent.indexOf("IEMobile") && t.querySelector(".rfipsearch__input").focus();
          } }), Object.defineProperty(g(r), "handlePortalExit", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t = e.childNodes[0];r.resetPortalStyle(t);var n = getComputedStyle(t).height;t.style.maxHeight = n;
          } }), Object.defineProperty(g(r), "handlePortalExiting", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            var t = e.childNodes[0];t.style.maxHeight = "0px", t.style.paddingTop = "0px", t.style.paddingBottom = "0px";
          } }), Object.defineProperty(g(r), "renderIcon", { configurable: !0, enumerable: !0, writable: !0, value: function value(e) {
            if ("function" == typeof r.props.renderFunc) return r.props.renderFunc(e);if ("class" === r.props.renderUsing) return n.default.createElement("i", { className: e });var t = h({}, r.props.renderUsing, r.props.convertHex ? (0, s.convertToHex)(e) : e);return n.default.createElement("i", t);
          } }), r.fipButtonRef = n.default.createRef(), r.fipDropDownRef = n.default.createRef(), r.state = { currentCategory: 0, currentPage: 0, isOpen: !1, currentSearch: "" }, r.fipPortalComputedStyle = null, r;
      }return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
      }(t, n.default.PureComponent), b(t, null, [{ key: "getDerivedStateFromProps", value: function value(e, r) {
          var n = {};return n.elemClass = t.getDerivedClassName("rfip", e.theme, e.isMulti, r.isOpen), n.btnClass = t.getDerivedClassName("rfipbtn", e.theme, e.isMulti, r.isOpen), n.ddClass = t.getDerivedClassName("rfipdropdown", e.theme, e.isMulti, r.isOpen), n.value = t.getDerivedValue(e.value, e.isMulti), e.showCategory || (n.currentCategory = 0, n.currentPage = 0), e.showSearch || (n.currentSearch = "", n.currentPage = 0), n;
        } }, { key: "getDerivedClassName", value: function value(e, t, r, n) {
          return (0, o.default)(e, "".concat(e, "--").concat(t), h({}, "".concat(e, "--multi"), r), "".concat(e, "--").concat(n ? "open" : "close"));
        } }, { key: "getDerivedValue", value: function value(e, t) {
          var r = e;return t ? r = Array.isArray(e) ? p(e) : m : "number" != typeof e && "string" != typeof e && (r = v), r;
        } }]), b(t, [{ key: "componentDidMount", value: function value() {
          var e = this;["click"].forEach(function (t) {
            document.addEventListener(t, e.handleOuterClick, !1);
          }), document.addEventListener("keydown", this.handleEscapeKeyboard, !1), this.props.onChange(this.state.value);
        } }, { key: "componentWillUnmount", value: function value() {
          var e = this;["click"].forEach(function (t) {
            document.removeEventListener(t, e.handleOuterClick, !1);
          }), document.removeEventListener("keydown", this.handleEscapeKeyboard, !1);
        } }, { key: "render", value: function value() {
          var e = { currentCategory: this.state.currentCategory, currentPage: this.state.currentPage, currentSearch: this.state.currentSearch, value: this.state.value, isMulti: this.props.isMulti, icons: this.props.icons, search: this.props.search, showCategory: this.props.showCategory, showSearch: this.props.showSearch, iconsPerPage: this.props.iconsPerPage, allCatPlaceholder: this.props.allCatPlaceholder, searchPlaceholder: this.props.searchPlaceholder, noIconPlaceholder: this.props.noIconPlaceholder, renderIcon: this.renderIcon, handleChangeValue: this.handleChangeValue, handleChangeCategory: this.handleChangeCategory, handleChangePage: this.handleChangePage, handleChangeSearch: this.handleChangeSearch };return n.default.createElement("div", { className: this.state.elemClass, ref: this.fipRef }, n.default.createElement(i.default, { className: this.state.btnClass, isOpen: this.state.isOpen, onClick: this.handleToggle, domRef: this.fipButtonRef, isMulti: this.props.isMulti, value: this.state.value, renderIcon: this.renderIcon, handleDeleteValue: this.handleDeleteValue, noSelectedPlaceholder: this.props.noSelectedPlaceholder }), n.default.createElement(l.CSSTransition, { classNames: "fipappear", timeout: 300, in: this.state.isOpen, unmountOnExit: !0, onEnter: this.handlePortalEnter, onEntering: this.handlePortalEntering, onEntered: this.handlePortalEntered, onExit: this.handlePortalExit, onExiting: this.handlePortalExiting }, n.default.createElement(c.default, { appendRoot: this.props.appendTo, domRef: this.fipDropDownRef, btnRef: this.fipButtonRef, className: this.state.ddClass }, n.default.createElement(u.default, e))));
        } }]), t;
    }();Object.defineProperty(P, "propTypes", { configurable: !0, enumerable: !0, writable: !0, value: { icons: a.default.oneOfType([a.default.arrayOf(a.default.string), a.default.arrayOf(a.default.number), a.default.objectOf(a.default.oneOfType([a.default.arrayOf(a.default.number), a.default.arrayOf(a.default.string)]))]).isRequired, search: a.default.oneOfType([a.default.objectOf(a.default.arrayOf(a.default.string)), a.default.arrayOf(a.default.string)]), iconsPerPage: a.default.number, theme: a.default.string, onChange: a.default.func.isRequired, showCategory: a.default.bool, showSearch: a.default.bool, value: a.default.oneOfType([a.default.arrayOf(a.default.string), a.default.arrayOf(a.default.number), a.default.number, a.default.string]), isMulti: a.default.bool, renderUsing: a.default.string, convertHex: a.default.bool, renderFunc: a.default.func, appendTo: a.default.oneOfType([a.default.bool, a.default.string]), allCatPlaceholder: a.default.string, searchPlaceholder: a.default.string, noIconPlaceholder: a.default.string, noSelectedPlaceholder: a.default.string, closeOnSelect: a.default.bool } }), Object.defineProperty(P, "defaultProps", { configurable: !0, enumerable: !0, writable: !0, value: { search: null, iconsPerPage: 20, theme: "default", showCategory: !0, showSearch: !0, value: null, isMulti: !1, renderUsing: "class", convertHex: !0, renderFunc: null, appendTo: !1, allCatPlaceholder: "Show from all", searchPlaceholder: "Search Icons", noIconPlaceholder: "No icons found", noSelectedPlaceholder: "Select icon", closeOnSelect: !1 } }), Object.defineProperty(P, "displayName", { configurable: !0, enumerable: !0, writable: !0, value: "FontIconPicker" });var O = P;t.default = O;
  }, function (e, t, r) {
    "use strict";
    var n;Object.defineProperty(t, "__esModule", { value: !0 }), t.default = void 0;var a = ((n = r(14)) && n.__esModule ? n : { default: n }).default;t.default = a;
  }]).default;
});
//# sourceMappingURL=fonticonpicker.react.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = PremiumMargin;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__premium_size_units__ = __webpack_require__(7);


var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var _wp$components = wp.components,
    RangeControl = _wp$components.RangeControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;


function PremiumMargin(props) {
  var directions = props.directions,
      showUnits = props.showUnits,
      marginTop = props.marginTop,
      marginRight = props.marginRight,
      marginBottom = props.marginBottom,
      marginLeft = props.marginLeft,
      _props$onChangeMarTop = props.onChangeMarTop,
      onChangeMarTop = _props$onChangeMarTop === undefined ? function () {} : _props$onChangeMarTop,
      _props$onChangeMarRig = props.onChangeMarRight,
      onChangeMarRight = _props$onChangeMarRig === undefined ? function () {} : _props$onChangeMarRig,
      _props$onChangeMarBot = props.onChangeMarBottom,
      onChangeMarBottom = _props$onChangeMarBot === undefined ? function () {} : _props$onChangeMarBot,
      _props$onChangeMarLef = props.onChangeMarLeft,
      onChangeMarLeft = _props$onChangeMarLef === undefined ? function () {} : _props$onChangeMarLef,
      _props$onChangeMarSiz = props.onChangeMarSizeUnit,
      onChangeMarSizeUnit = _props$onChangeMarSiz === undefined ? function () {} : _props$onChangeMarSiz;

  return wp.element.createElement(
    "div",
    { className: "premium-control-toggle" },
    wp.element.createElement(
      "strong",
      null,
      __("Margin")
    ),
    wp.element.createElement(Dropdown, {
      className: "premium-control-toggle-btn",
      contentClassName: "premium-control-toggle-content",
      position: "bottom right",
      renderToggle: function renderToggle(_ref) {
        var isOpen = _ref.isOpen,
            onToggle = _ref.onToggle;
        return wp.element.createElement(
          Button,
          { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
          wp.element.createElement("i", { className: "dashicons dashicons-edit" })
        );
      },
      renderContent: function renderContent() {
        return wp.element.createElement(
          Fragment,
          null,
          showUnits && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__premium_size_units__["a" /* default */], { onChangeSizeUnit: onChangeMarSizeUnit }),
          (directions.includes("all") || directions.includes("top")) && wp.element.createElement(RangeControl, {
            label: __("Margin Top (PX)"),
            value: marginTop,
            min: "0",
            max: "150",
            onChange: onChangeMarTop
          }),
          (directions.includes("all") || directions.includes("right")) && wp.element.createElement(RangeControl, {
            label: __("Margin Right (PX)"),
            value: marginRight,
            min: "0",
            max: "150",
            onChange: onChangeMarRight
          }),
          (directions.includes("all") || directions.includes("bottom")) && wp.element.createElement(RangeControl, {
            label: __("Margin Bottom (PX)"),
            value: marginBottom,
            min: "0",
            max: "150",
            onChange: onChangeMarBottom
          }),
          (directions.includes("all") || directions.includes("left")) && wp.element.createElement(RangeControl, {
            label: __("Margin Left (PX)"),
            value: marginLeft,
            min: "0",
            max: "150",
            onChange: onChangeMarLeft
          })
        );
      }
    })
  );
}

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(240);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__save__ = __webpack_require__(241);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__deprecated__ = __webpack_require__(242);






var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var videoBoxAttrs = {
  videoBoxId: {
    type: "string"
  },
  videoType: {
    type: "string",
    default: "youtube"
  },
  videoURL: {
    type: "string",
    default: "07d2dXHYb94"
  },
  videoID: {
    type: "string"
  },
  autoPlay: {
    type: "boolean",
    default: false
  },
  loop: {
    type: "boolean",
    default: false
  },
  controls: {
    type: "boolean",
    default: true
  },
  relatedVideos: {
    type: "boolean",
    default: false
  },
  mute: {
    type: "boolean",
    default: false
  },
  overlay: {
    type: "boolean",
    default: false
  },
  overlayImgID: {
    type: "string"
  },
  overlayImgURL: {
    type: "string"
  },
  blur: {
    type: "number",
    default: 0
  },
  bright: {
    type: "number",
    default: 100
  },
  contrast: {
    type: "number",
    default: 100
  },
  saturation: {
    type: "number",
    default: 100
  },
  hue: {
    type: "number",
    default: 0
  },
  playTop: {
    type: "number"
  },
  playIcon: {
    type: "boolean",
    default: true
  },
  playSize: {
    type: "number"
  },
  playColor: {
    type: "string"
  },
  playBack: {
    type: "string"
  },
  playHoverColor: {
    type: "string"
  },
  playHoverBackColor: {
    type: "string"
  },
  playPadding: {
    type: "number"
  },
  playBorderType: {
    type: "string",
    default: "none"
  },
  playBorderWidth: {
    type: "number",
    default: "1"
  },
  playBorderRadius: {
    type: "number"
  },
  playBorderColor: {
    type: "string"
  },
  videoDescText: {
    type: "string"
  },
  videoDesc: {
    type: "boolean"
  },
  descLeft: {
    type: "number"
  },
  descTop: {
    type: "number"
  },
  videoDescSize: {
    type: "number"
  },
  videoDescFamily: {
    type: "string"
  },
  videoDescWeight: {
    type: "number"
  },
  videoDescLetter: {
    type: "number"
  },
  videoDescStyle: {
    type: "string"
  },
  videoDescUpper: {
    type: "boolean"
  },
  videoDescColor: {
    type: "string"
  },
  videoDescBack: {
    type: "string"
  },
  videoDescPadding: {
    type: "number"
  },
  videoDescBorderRadius: {
    type: "number"
  },
  descShadowColor: {
    type: "string"
  },
  descShadowBlur: {
    type: "number",
    default: "0"
  },
  descShadowHorizontal: {
    type: "number",
    default: "0"
  },
  descShadowVertical: {
    type: "number",
    default: "0"
  },
  boxBorderType: {
    type: "string",
    default: "none"
  },
  boxBorderWidth: {
    type: "number",
    default: "1"
  },
  boxBorderRadius: {
    type: "number"
  },
  boxBorderColor: {
    type: "string"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  shadowPosition: {
    type: "string",
    default: ""
  },

  // Old props
  playLeft: {
    type: "number"
  }
};

var onChangeVideoURL = function onChangeVideoURL(type, URL) {
  var videoUrl = void 0;
  switch (type) {
    case "youtube":
      if (URL.startsWith("http")) {
        videoUrl = URL;
      } else {
        videoUrl = "https://www.youtube.com/embed/" + URL;
      }
      break;
    case "vimeo":
      if (URL.startsWith("http")) {
        videoUrl = URL;
      } else {
        videoUrl = "https://player.vimeo.com/video/" + URL;
      }
      break;
    case "daily":
      if (URL.startsWith("http")) {
        videoUrl = URL;
      } else {
        videoUrl = "https://dailymotion.com/embed/video/" + URL;
      }
      break;
  }
  return videoUrl;
};

/* harmony default export */ __webpack_exports__["a"] = (onChangeVideoURL);

registerBlockType("premium/video-box", {
  title: __("Video Box"),
  icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "video" }),
  category: "premium-blocks",
  attributes: videoBoxAttrs,
  supports: {
    inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["q" /* videoBox */]
  },
  example: {},
  edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
  save: __WEBPACK_IMPORTED_MODULE_3__save__["a" /* default */],
  deprecated: __WEBPACK_IMPORTED_MODULE_4__deprecated__["a" /* default */]
});

/***/ }),
/* 45 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(31),
    stackClear = __webpack_require__(126),
    stackDelete = __webpack_require__(127),
    stackGet = __webpack_require__(128),
    stackHas = __webpack_require__(129),
    stackSet = __webpack_require__(130);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(15),
    root = __webpack_require__(8);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(137),
    mapCacheDelete = __webpack_require__(144),
    mapCacheGet = __webpack_require__(146),
    mapCacheHas = __webpack_require__(147),
    mapCacheSet = __webpack_require__(148);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;

/***/ }),
/* 49 */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(159),
    stubArray = __webpack_require__(85);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(160),
    isObjectLike = __webpack_require__(14);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function () {
    return arguments;
}()) ? baseIsArguments : function (value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var root = __webpack_require__(8),
    stubFalse = __webpack_require__(161);

/** Detect free variable `exports`. */
var freeExports = ( false ? 'undefined' : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && ( false ? 'undefined' : _typeof(module)) == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))

/***/ }),
/* 53 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}

module.exports = isIndex;

/***/ }),
/* 54 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

/***/ }),
/* 55 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function (value) {
    return func(value);
  };
}

module.exports = baseUnary;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var freeGlobal = __webpack_require__(78);

/** Detect free variable `exports`. */
var freeExports = ( false ? 'undefined' : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && ( false ? 'undefined' : _typeof(module)) == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = function () {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}();

module.exports = nodeUtil;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(39),
    toKey = __webpack_require__(25);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return index && index == length ? object : undefined;
}

module.exports = baseGet;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var isArray = __webpack_require__(9),
    isSymbol = __webpack_require__(40);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}

module.exports = isKey;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(13));

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _reactLifecyclesCompat = __webpack_require__(95);

var _PropTypes = __webpack_require__(96);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }newObj.default = obj;return newObj;
  }
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
  }return target;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);subClass.prototype.constructor = subClass;subClass.__proto__ = superClass;
}

var UNMOUNTED = 'unmounted';
exports.UNMOUNTED = UNMOUNTED;
var EXITED = 'exited';
exports.EXITED = EXITED;
var ENTERING = 'entering';
exports.ENTERING = ENTERING;
var ENTERED = 'entered';
exports.ENTERED = ENTERED;
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

exports.EXITING = EXITING;

var Transition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  var _proto = Transition.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: null // allows for nested Transitions

    };
  };

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  }; // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }


  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      var node = _reactDom.default.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(node, appearing);

      _this2.onTransitionEnd(node, enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  _proto.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

    if (!exit) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(node);
      });
      return;
    }

    this.props.onExit(node);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      this.props.addEndListener(node, this.nextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]); // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      return children(status, childProps);
    }

    var child = _react.default.Children.only(children);

    return _react.default.cloneElement(child, childProps);
  };

  return Transition;
}(_react.default.Component);

Transition.contextTypes = {
  transitionGroup: PropTypes.object
};
Transition.childContextTypes = {
  transitionGroup: function transitionGroup() {}
};
Transition.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes.bool,

  /**
   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
   * If you want to transition on the first mount set `appear` to `true`, and the
   * component will transition in as soon as the `<Transition>` mounts.
   *
   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
   */
  appear: PropTypes.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = _PropTypes.timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes.func // Name the function so it is clearer in the documentation

} : {};

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;

var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);

exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var iconsList = {
  Dashicons: ["", "dashicons dashicons-menu", "dashicons dashicons-admin-site", "dashicons dashicons-dashboard", "dashicons dashicons-admin-post", "dashicons dashicons-admin-media", "dashicons dashicons-admin-links", "dashicons dashicons-admin-page", "dashicons dashicons-admin-comments", "dashicons dashicons-admin-appearance", "dashicons dashicons-admin-plugins", "dashicons dashicons-admin-users", "dashicons dashicons-admin-tools", "dashicons dashicons-admin-settings", "dashicons dashicons-admin-network", "dashicons dashicons-admin-home", "dashicons dashicons-admin-generic", "dashicons dashicons-admin-collapse", "dashicons dashicons-filter", "dashicons dashicons-admin-customizer", "dashicons dashicons-admin-multisite", "dashicons dashicons-welcome-write-blog", "dashicons dashicons-welcome-add-page", "dashicons dashicons-welcome-view-site", "dashicons dashicons-welcome-widgets-menus", "dashicons dashicons-welcome-comments", "dashicons dashicons-welcome-learn-more", "dashicons dashicons-format-aside", "dashicons dashicons-format-image", "dashicons dashicons-format-gallery", "dashicons dashicons-format-video", "dashicons dashicons-format-status", "dashicons dashicons-format-quote", "dashicons dashicons-format-chat", "dashicons dashicons-format-audio", "dashicons dashicons-camera", "dashicons dashicons-images-alt", "dashicons dashicons-images-alt2", "dashicons dashicons-video-alt", "dashicons dashicons-video-alt2", "dashicons dashicons-video-alt3", "dashicons dashicons-media-archive", "dashicons dashicons-media-audio", "dashicons dashicons-media-code", "dashicons dashicons-media-default", "dashicons dashicons-media-document", "dashicons dashicons-media-interactive", "dashicons dashicons-media-spreadsheet", "dashicons dashicons-media-text", "dashicons dashicons-media-video", "dashicons dashicons-playlist-audio", "dashicons dashicons-playlist-video", "dashicons dashicons-controls-play", "dashicons dashicons-controls-pause", "dashicons dashicons-controls-forward", "dashicons dashicons-controls-skipforward", "dashicons dashicons-controls-back", "dashicons dashicons-controls-skipback", "dashicons dashicons-controls-repeat", "dashicons dashicons-controls-volumeon", "dashicons dashicons-controls-volumeoff", "dashicons dashicons-image-crop", "dashicons dashicons-image-rotate", "dashicons dashicons-image-rotate-left", "dashicons dashicons-image-rotate-right", "dashicons dashicons-image-flip-vertical", "dashicons dashicons-image-flip-horizontal", "dashicons dashicons-image-filter", "dashicons dashicons-undo", "dashicons dashicons-redo", "dashicons dashicons-editor-bold", "dashicons dashicons-editor-italic", "dashicons dashicons-editor-ul", "dashicons dashicons-editor-ol", "dashicons dashicons-editor-quote", "dashicons dashicons-editor-alignleft", "dashicons dashicons-editor-aligncenter", "dashicons dashicons-editor-alignright", "dashicons dashicons-editor-insertmore", "dashicons dashicons-editor-spellcheck", "dashicons dashicons-editor-expand", "dashicons dashicons-editor-contract", "dashicons dashicons-editor-kitchensink", "dashicons dashicons-editor-underline", "dashicons dashicons-editor-justify", "dashicons dashicons-editor-textcolor", "dashicons dashicons-editor-paste-word", "dashicons dashicons-editor-paste-text", "dashicons dashicons-editor-removeformatting", "dashicons dashicons-editor-video", "dashicons dashicons-editor-customchar", "dashicons dashicons-editor-outdent", "dashicons dashicons-editor-indent", "dashicons dashicons-editor-help", "dashicons dashicons-editor-strikethrough", "dashicons dashicons-editor-unlink", "dashicons dashicons-editor-rtl", "dashicons dashicons-editor-break", "dashicons dashicons-editor-code", "dashicons dashicons-editor-paragraph", "dashicons dashicons-editor-table", "dashicons dashicons-align-left", "dashicons dashicons-align-right", "dashicons dashicons-align-center", "dashicons dashicons-align-none", "dashicons dashicons-lock", "dashicons dashicons-unlock", "dashicons dashicons-calendar", "dashicons dashicons-calendar-alt", "dashicons dashicons-visibility", "dashicons dashicons-hidden", "dashicons dashicons-post-status", "dashicons dashicons-edit", "dashicons dashicons-trash", "dashicons dashicons-sticky", "dashicons dashicons-external", "dashicons dashicons-arrow-up", "dashicons dashicons-arrow-down", "dashicons dashicons-arrow-right", "dashicons dashicons-arrow-left", "dashicons dashicons-arrow-up-alt", "dashicons dashicons-arrow-down-alt", "dashicons dashicons-arrow-right-alt", "dashicons dashicons-arrow-left-alt", "dashicons dashicons-arrow-up-alt2", "dashicons dashicons-arrow-down-alt2", "dashicons dashicons-arrow-right-alt2", "dashicons dashicons-arrow-left-alt2", "dashicons dashicons-sort", "dashicons dashicons-leftright", "dashicons dashicons-randomize", "dashicons dashicons-list-view", "dashicons dashicons-exerpt-view", "dashicons dashicons-grid-view", "dashicons dashicons-move", "dashicons dashicons-share", "dashicons dashicons-share-alt", "dashicons dashicons-share-alt2", "dashicons dashicons-twitter", "dashicons dashicons-rss", "dashicons dashicons-email", "dashicons dashicons-email-alt", "dashicons dashicons-facebook", "dashicons dashicons-facebook-alt", "dashicons dashicons-googleplus", "dashicons dashicons-networking", "dashicons dashicons-hammer", "dashicons dashicons-art", "dashicons dashicons-migrate", "dashicons dashicons-performance", "dashicons dashicons-universal-access", "dashicons dashicons-universal-access-alt", "dashicons dashicons-tickets", "dashicons dashicons-nametag", "dashicons dashicons-clipboard", "dashicons dashicons-heart", "dashicons dashicons-megaphone", "dashicons dashicons-schedule", "dashicons dashicons-wordpress", "dashicons dashicons-wordpress-alt", "dashicons dashicons-pressthis", "dashicons dashicons-update", "dashicons dashicons-screenoptions", "dashicons dashicons-info", "dashicons dashicons-cart", "dashicons dashicons-feedback", "dashicons dashicons-cloud", "dashicons dashicons-translation", "dashicons dashicons-tag", "dashicons dashicons-category", "dashicons dashicons-archive", "dashicons dashicons-tagcloud", "dashicons dashicons-text", "dashicons dashicons-yes", "dashicons dashicons-no", "dashicons dashicons-no-alt", "dashicons dashicons-plus", "dashicons dashicons-plus-alt", "dashicons dashicons-minus", "dashicons dashicons-dismiss", "dashicons dashicons-marker", "dashicons dashicons-star-filled", "dashicons dashicons-star-half", "dashicons dashicons-star-empty", "dashicons dashicons-flag", "dashicons dashicons-warning", "dashicons dashicons-location", "dashicons dashicons-location-alt", "dashicons dashicons-vault", "dashicons dashicons-shield", "dashicons dashicons-shield-alt", "dashicons dashicons-sos", "dashicons dashicons-search", "dashicons dashicons-slides", "dashicons dashicons-analytics", "dashicons dashicons-chart-pie", "dashicons dashicons-chart-bar", "dashicons dashicons-chart-line", "dashicons dashicons-chart-area", "dashicons dashicons-groups", "dashicons dashicons-businessman", "dashicons dashicons-id", "dashicons dashicons-id-alt", "dashicons dashicons-products", "dashicons dashicons-awards", "dashicons dashicons-forms", "dashicons dashicons-testimonial", "dashicons dashicons-portfolio", "dashicons dashicons-book", "dashicons dashicons-book-alt", "dashicons dashicons-download", "dashicons dashicons-upload", "dashicons dashicons-backup", "dashicons dashicons-clock", "dashicons dashicons-lightbulb", "dashicons dashicons-microphone", "dashicons dashicons-desktop", "dashicons dashicons-laptop", "dashicons dashicons-tablet", "dashicons dashicons-smartphone", "dashicons dashicons-phone", "dashicons dashicons-index-card", "dashicons dashicons-carrot", "dashicons dashicons-building", "dashicons dashicons-store", "dashicons dashicons-album", "dashicons dashicons-palmtree", "dashicons dashicons-tickets-alt", "dashicons dashicons-money", "dashicons dashicons-smiley", "dashicons dashicons-thumbs-up", "dashicons dashicons-thumbs-down", "dashicons dashicons-layout", "dashicons dashicons-paperclip"],
  "Font Awesome Icons": ["fa fa-glass", "fa fa-music", "fa fa-search", "fa fa-envelope-o", "fa fa-heart", "fa fa-star", "fa fa-star-o", "fa fa-user", "fa fa-film", "fa fa-th-large", "fa fa-th", "fa fa-th-list", "fa fa-check", "fa fa-times", "fa fa-search-plus", "fa fa-search-minus", "fa fa-power-off", "fa fa-signal", "fa fa-cog", "fa fa-trash-o", "fa fa-home", "fa fa-file-o", "fa fa-clock-o", "fa fa-road", "fa fa-download", "fa fa-arrow-circle-o-down", "fa fa-arrow-circle-o-up", "fa fa-inbox", "fa fa-play-circle-o", "fa fa-repeat", "fa fa-refresh", "fa fa-list-alt", "fa fa-lock", "fa fa-flag", "fa fa-headphones", "fa fa-volume-off", "fa fa-volume-down", "fa fa-volume-up", "fa fa-qrcode", "fa fa-barcode", "fa fa-tag", "fa fa-tags", "fa fa-book", "fa fa-bookmark", "fa fa-print", "fa fa-camera", "fa fa-font", "fa fa-bold", "fa fa-italic", "fa fa-text-height", "fa fa-text-width", "fa fa-align-left", "fa fa-align-center", "fa fa-align-right", "fa fa-align-justify", "fa fa-list", "fa fa-outdent", "fa fa-indent", "fa fa-video-camera", "fa fa-picture-o", "fa fa-pencil", "fa fa-map-marker", "fa fa-adjust", "fa fa-tint", "fa fa-pencil-square-o", "fa fa-share-square-o", "fa fa-check-square-o", "fa fa-arrows", "fa fa-step-backward", "fa fa-fast-backward", "fa fa-backward", "fa fa-play", "fa fa-pause", "fa fa-stop", "fa fa-forward", "fa fa-fast-forward", "fa fa-step-forward", "fa fa-eject", "fa fa-chevron-left", "fa fa-chevron-right", "fa fa-plus-circle", "fa fa-minus-circle", "fa fa-times-circle", "fa fa-check-circle", "fa fa-question-circle", "fa fa-info-circle", "fa fa-crosshairs", "fa fa-times-circle-o", "fa fa-check-circle-o", "fa fa-ban", "fa fa-arrow-left", "fa fa-arrow-right", "fa fa-arrow-up", "fa fa-arrow-down", "fa fa-share", "fa fa-expand", "fa fa-compress", "fa fa-plus", "fa fa-minus", "fa fa-asterisk", "fa fa-exclamation-circle", "fa fa-gift", "fa fa-leaf", "fa fa-fire", "fa fa-eye", "fa fa-eye-slash", "fa fa-exclamation-triangle", "fa fa-plane", "fa fa-calendar", "fa fa-random", "fa fa-comment", "fa fa-magnet", "fa fa-chevron-up", "fa fa-chevron-down", "fa fa-retweet", "fa fa-shopping-cart", "fa fa-folder", "fa fa-folder-open", "fa fa-arrows-v", "fa fa-arrows-h", "fa fa-bar-chart", "fa fa-twitter-square", "fa fa-facebook-square", "fa fa-camera-retro", "fa fa-key", "fa fa-cogs", "fa fa-comments", "fa fa-thumbs-o-up", "fa fa-thumbs-o-down", "fa fa-star-half", "fa fa-heart-o", "fa fa-sign-out", "fa fa-linkedin-square", "fa fa-thumb-tack", "fa fa-external-link", "fa fa-sign-in", "fa fa-trophy", "fa fa-github-square", "fa fa-upload", "fa fa-lemon-o", "fa fa-phone", "fa fa-square-o", "fa fa-bookmark-o", "fa fa-phone-square", "fa fa-twitter", "fa fa-facebook", "fa fa-github", "fa fa-unlock", "fa fa-credit-card", "fa fa-rss", "fa fa-hdd-o", "fa fa-bullhorn", "fa fa-bell", "fa fa-certificate", "fa fa-hand-o-right", "fa fa-hand-o-left", "fa fa-hand-o-up", "fa fa-hand-o-down", "fa fa-arrow-circle-left", "fa fa-arrow-circle-right", "fa fa-arrow-circle-up", "fa fa-arrow-circle-down", "fa fa-globe", "fa fa-wrench", "fa fa-tasks", "fa fa-filter", "fa fa-briefcase", "fa fa-arrows-alt", "fa fa-users", "fa fa-link", "fa fa-cloud", "fa fa-flask", "fa fa-scissors", "fa fa-files-o", "fa fa-paperclip", "fa fa-floppy-o", "fa fa-square", "fa fa-bars", "fa fa-list-ul", "fa fa-list-ol", "fa fa-strikethrough", "fa fa-underline", "fa fa-table", "fa fa-magic", "fa fa-truck", "fa fa-pinterest", "fa fa-pinterest-square", "fa fa-google-plus-square", "fa fa-google-plus", "fa fa-money", "fa fa-caret-down", "fa fa-caret-up", "fa fa-caret-left", "fa fa-caret-right", "fa fa-columns", "fa fa-sort", "fa fa-sort-desc", "fa fa-sort-asc", "fa fa-envelope", "fa fa-linkedin", "fa fa-undo", "fa fa-gavel", "fa fa-tachometer", "fa fa-comment-o", "fa fa-comments-o", "fa fa-bolt", "fa fa-sitemap", "fa fa-umbrella", "fa fa-clipboard", "fa fa-lightbulb-o", "fa fa-exchange", "fa fa-cloud-download", "fa fa-cloud-upload", "fa fa-user-md", "fa fa-stethoscope", "fa fa-suitcase", "fa fa-bell-o", "fa fa-coffee", "fa fa-cutlery", "fa fa-file-text-o", "fa fa-building-o", "fa fa-hospital-o", "fa fa-ambulance", "fa fa-medkit", "fa fa-fighter-jet", "fa fa-beer", "fa fa-h-square", "fa fa-plus-square", "fa fa-angle-double-left", "fa fa-angle-double-right", "fa fa-angle-double-up", "fa fa-angle-double-down", "fa fa-angle-left", "fa fa-angle-right", "fa fa-angle-up", "fa fa-angle-down", "fa fa-desktop", "fa fa-laptop", "fa fa-tablet", "fa fa-mobile", "fa fa-circle-o", "fa fa-quote-left", "fa fa-quote-right", "fa fa-spinner", "fa fa-circle", "fa fa-reply", "fa fa-github-alt", "fa fa-folder-o", "fa fa-folder-open-o", "fa fa-smile-o", "fa fa-frown-o", "fa fa-meh-o", "fa fa-gamepad", "fa fa-keyboard-o", "fa fa-flag-o", "fa fa-flag-checkered", "fa fa-terminal", "fa fa-code", "fa fa-reply-all", "fa fa-star-half-o", "fa fa-location-arrow", "fa fa-crop", "fa fa-code-fork", "fa fa-chain-broken", "fa fa-question", "fa fa-info", "fa fa-exclamation", "fa fa-superscript", "fa fa-subscript", "fa fa-eraser", "fa fa-puzzle-piece", "fa fa-microphone", "fa fa-microphone-slash", "fa fa-shield", "fa fa-calendar-o", "fa fa-fire-extinguisher", "fa fa-rocket", "fa fa-maxcdn", "fa fa-chevron-circle-left", "fa fa-chevron-circle-right", "fa fa-chevron-circle-up", "fa fa-chevron-circle-down", "fa fa-html5", "fa fa-css3", "fa fa-anchor", "fa fa-unlock-alt", "fa fa-bullseye", "fa fa-ellipsis-h", "fa fa-ellipsis-v", "fa fa-rss-square", "fa fa-play-circle", "fa fa-ticket", "fa fa-minus-square", "fa fa-minus-square-o", "fa fa-level-up", "fa fa-level-down", "fa fa-check-square", "fa fa-pencil-square", "fa fa-external-link-square", "fa fa-share-square", "fa fa-compass", "fa fa-caret-square-o-down", "fa fa-caret-square-o-up", "fa fa-caret-square-o-right", "fa fa-eur", "fa fa-gbp", "fa fa-usd", "fa fa-inr", "fa fa-jpy", "fa fa-rub", "fa fa-krw", "fa fa-btc", "fa fa-file", "fa fa-file-text", "fa fa-sort-alpha-asc", "fa fa-sort-alpha-desc", "fa fa-sort-amount-asc", "fa fa-sort-amount-desc", "fa fa-sort-numeric-asc", "fa fa-sort-numeric-desc", "fa fa-thumbs-up", "fa fa-thumbs-down", "fa fa-youtube-square", "fa fa-youtube", "fa fa-xing", "fa fa-xing-square", "fa fa-youtube-play", "fa fa-dropbox", "fa fa-stack-overflow", "fa fa-instagram", "fa fa-flickr", "fa fa-adn", "fa fa-bitbucket", "fa fa-bitbucket-square", "fa fa-tumblr", "fa fa-tumblr-square", "fa fa-long-arrow-down", "fa fa-long-arrow-up", "fa fa-long-arrow-left", "fa fa-long-arrow-right", "fa fa-apple", "fa fa-windows", "fa fa-android", "fa fa-linux", "fa fa-dribbble", "fa fa-skype", "fa fa-foursquare", "fa fa-trello", "fa fa-female", "fa fa-male", "fa fa-gratipay", "fa fa-sun-o", "fa fa-moon-o", "fa fa-archive", "fa fa-bug", "fa fa-vk", "fa fa-weibo", "fa fa-renren", "fa fa-pagelines", "fa fa-stack-exchange", "fa fa-arrow-circle-o-right", "fa fa-arrow-circle-o-left", "fa fa-caret-square-o-left", "fa fa-dot-circle-o", "fa fa-wheelchair", "fa fa-vimeo-square", "fa fa-try", "fa fa-plus-square-o", "fa fa-space-shuttle", "fa fa-slack", "fa fa-envelope-square", "fa fa-wordpress", "fa fa-openid", "fa fa-university", "fa fa-graduation-cap", "fa fa-yahoo", "fa fa-google", "fa fa-reddit", "fa fa-reddit-square", "fa fa-stumbleupon-circle", "fa fa-stumbleupon", "fa fa-delicious", "fa fa-digg", "fa fa-pied-piper-pp", "fa fa-pied-piper-alt", "fa fa-drupal", "fa fa-joomla", "fa fa-language", "fa fa-fax", "fa fa-building", "fa fa-child", "fa fa-paw", "fa fa-spoon", "fa fa-cube", "fa fa-cubes", "fa fa-behance", "fa fa-behance-square", "fa fa-steam", "fa fa-steam-square", "fa fa-recycle", "fa fa-car", "fa fa-taxi", "fa fa-tree", "fa fa-spotify", "fa fa-deviantart", "fa fa-soundcloud", "fa fa-database", "fa fa-file-pdf-o", "fa fa-file-word-o", "fa fa-file-excel-o", "fa fa-file-powerpoint-o", "fa fa-file-image-o", "fa fa-file-archive-o", "fa fa-file-audio-o", "fa fa-file-video-o", "fa fa-file-code-o", "fa fa-vine", "fa fa-codepen", "fa fa-jsfiddle", "fa fa-life-ring", "fa fa-circle-o-notch", "fa fa-rebel", "fa fa-empire", "fa fa-git-square", "fa fa-git", "fa fa-hacker-news", "fa fa-tencent-weibo", "fa fa-qq", "fa fa-weixin", "fa fa-paper-plane", "fa fa-paper-plane-o", "fa fa-history", "fa fa-circle-thin", "fa fa-header", "fa fa-paragraph", "fa fa-sliders", "fa fa-share-alt", "fa fa-share-alt-square", "fa fa-bomb", "fa fa-futbol-o", "fa fa-tty", "fa fa-binoculars", "fa fa-plug", "fa fa-slideshare", "fa fa-twitch", "fa fa-yelp", "fa fa-newspaper-o", "fa fa-wifi", "fa fa-calculator", "fa fa-paypal", "fa fa-google-wallet", "fa fa-cc-visa", "fa fa-cc-mastercard", "fa fa-cc-discover", "fa fa-cc-amex", "fa fa-cc-paypal", "fa fa-cc-stripe", "fa fa-bell-slash", "fa fa-bell-slash-o", "fa fa-trash", "fa fa-copyright", "fa fa-at", "fa fa-eyedropper", "fa fa-paint-brush", "fa fa-birthday-cake", "fa fa-area-chart", "fa fa-pie-chart", "fa fa-line-chart", "fa fa-lastfm", "fa fa-lastfm-square", "fa fa-toggle-off", "fa fa-toggle-on", "fa fa-bicycle", "fa fa-bus", "fa fa-ioxhost", "fa fa-angellist", "fa fa-cc", "fa fa-ils", "fa fa-meanpath", "fa fa-buysellads", "fa fa-connectdevelop", "fa fa-dashcube", "fa fa-forumbee", "fa fa-leanpub", "fa fa-sellsy", "fa fa-shirtsinbulk", "fa fa-simplybuilt", "fa fa-skyatlas", "fa fa-cart-plus", "fa fa-cart-arrow-down", "fa fa-diamond", "fa fa-ship", "fa fa-user-secret", "fa fa-motorcycle", "fa fa-street-view", "fa fa-heartbeat", "fa fa-venus", "fa fa-mars", "fa fa-mercury", "fa fa-transgender", "fa fa-transgender-alt", "fa fa-venus-double", "fa fa-mars-double", "fa fa-venus-mars", "fa fa-mars-stroke", "fa fa-mars-stroke-v", "fa fa-mars-stroke-h", "fa fa-neuter", "fa fa-genderless", "fa fa-facebook-official", "fa fa-pinterest-p", "fa fa-whatsapp", "fa fa-server", "fa fa-user-plus", "fa fa-user-times", "fa fa-bed", "fa fa-viacoin", "fa fa-train", "fa fa-subway", "fa fa-medium", "fa fa-y-combinator", "fa fa-optin-monster", "fa fa-opencart", "fa fa-expeditedssl", "fa fa-battery-full", "fa fa-battery-three-quarters", "fa fa-battery-half", "fa fa-battery-quarter", "fa fa-battery-empty", "fa fa-mouse-pointer", "fa fa-i-cursor", "fa fa-object-group", "fa fa-object-ungroup", "fa fa-sticky-note", "fa fa-sticky-note-o", "fa fa-cc-jcb", "fa fa-cc-diners-club", "fa fa-clone", "fa fa-balance-scale", "fa fa-hourglass-o", "fa fa-hourglass-start", "fa fa-hourglass-half", "fa fa-hourglass-end", "fa fa-hourglass", "fa fa-hand-rock-o", "fa fa-hand-paper-o", "fa fa-hand-scissors-o", "fa fa-hand-lizard-o", "fa fa-hand-spock-o", "fa fa-hand-pointer-o", "fa fa-hand-peace-o", "fa fa-trademark", "fa fa-registered", "fa fa-creative-commons", "fa fa-gg", "fa fa-gg-circle", "fa fa-tripadvisor", "fa fa-odnoklassniki", "fa fa-odnoklassniki-square", "fa fa-get-pocket", "fa fa-wikipedia-w", "fa fa-safari", "fa fa-chrome", "fa fa-firefox", "fa fa-opera", "fa fa-internet-explorer", "fa fa-television", "fa fa-contao", "fa fa-500px", "fa fa-amazon", "fa fa-calendar-plus-o", "fa fa-calendar-minus-o", "fa fa-calendar-times-o", "fa fa-calendar-check-o", "fa fa-industry", "fa fa-map-pin", "fa fa-map-signs", "fa fa-map-o", "fa fa-map", "fa fa-commenting", "fa fa-commenting-o", "fa fa-houzz", "fa fa-vimeo", "fa fa-black-tie", "fa fa-fonticons", "fa fa-reddit-alien", "fa fa-edge", "fa fa-credit-card-alt", "fa fa-codiepie", "fa fa-modx", "fa fa-fort-awesome", "fa fa-usb", "fa fa-product-hunt", "fa fa-mixcloud", "fa fa-scribd", "fa fa-pause-circle", "fa fa-pause-circle-o", "fa fa-stop-circle", "fa fa-stop-circle-o", "fa fa-shopping-bag", "fa fa-shopping-basket", "fa fa-hashtag", "fa fa-bluetooth", "fa fa-bluetooth-b", "fa fa-percent", "fa fa-gitlab", "fa fa-wpbeginner", "fa fa-wpforms", "fa fa-envira", "fa fa-universal-access", "fa fa-wheelchair-alt", "fa fa-question-circle-o", "fa fa-blind", "fa fa-audio-description", "fa fa-volume-control-phone", "fa fa-braille", "fa fa-assistive-listening-systems", "fa fa-american-sign-language-interpreting", "fa fa-deaf", "fa fa-glide", "fa fa-glide-g", "fa fa-sign-language", "fa fa-low-vision", "fa fa-viadeo", "fa fa-viadeo-square", "fa fa-snapchat", "fa fa-snapchat-ghost", "fa fa-snapchat-square", "fa fa-pied-piper", "fa fa-first-order", "fa fa-yoast", "fa fa-themeisle", "fa fa-google-plus-official", "fa fa-font-awesome"]
};

/* harmony default export */ __webpack_exports__["a"] = (iconsList);

/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var PremiumLowerQuote = function (_Component) {
  _inherits(PremiumLowerQuote, _Component);

  function PremiumLowerQuote() {
    _classCallCheck(this, PremiumLowerQuote);

    return _possibleConstructorReturn(this, (PremiumLowerQuote.__proto__ || Object.getPrototypeOf(PremiumLowerQuote)).apply(this, arguments));
  }

  _createClass(PremiumLowerQuote, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return this.props.size !== nextProps.size || this.props.color !== nextProps.color || this.props.opacity !== nextProps.opacity;
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          size = _props.size,
          color = _props.color,
          opacity = _props.opacity;

      return wp.element.createElement(
        "svg",
        {
          style: { width: size + "em", opacity: opacity / 100 },
          "aria-hidden": "true",
          "data-prefix": "fas",
          "data-icon": "quote-left",
          "class": "svg-inline--fa fa-quote-left fa-w-16",
          role: "img",
          xmlns: "http://www.w3.org/2000/svg",
          viewBox: "0 0 512 512"
        },
        wp.element.createElement("path", {
          fill: "" + color,
          d: "M464 256h-80v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8c-88.4 0-160 71.6-160 160v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zm-288 0H96v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8C71.6 32 0 103.6 0 192v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z"
        })
      );
    }
  }]);

  return PremiumLowerQuote;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumLowerQuote);

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var PremiumUpperQuote = function (_Component) {
  _inherits(PremiumUpperQuote, _Component);

  function PremiumUpperQuote() {
    _classCallCheck(this, PremiumUpperQuote);

    return _possibleConstructorReturn(this, (PremiumUpperQuote.__proto__ || Object.getPrototypeOf(PremiumUpperQuote)).apply(this, arguments));
  }

  _createClass(PremiumUpperQuote, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return this.props.size !== nextProps.size || this.props.color !== nextProps.color || this.props.opacity !== nextProps.opacity;
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          size = _props.size,
          color = _props.color,
          opacity = _props.opacity;


      return wp.element.createElement(
        "svg",
        {
          style: { width: size + "em", opacity: opacity / 100 },
          "aria-hidden": "true",
          "data-prefix": "fas",
          "data-icon": "quote-right",
          "class": "svg-inline--fa fa-quote-right fa-w-16",
          role: "img",
          xmlns: "http://www.w3.org/2000/svg",
          viewBox: "0 0 512 512"
        },
        wp.element.createElement("path", {
          fill: "" + color,
          d: "M464 32H336c-26.5 0-48 21.5-48 48v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48zm-288 0H48C21.5 32 0 53.5 0 80v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48z"
        })
      );
    }
  }]);

  return PremiumUpperQuote;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumUpperQuote);

/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__premium_responsive__ = __webpack_require__(30);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var __ = wp.i18n.__;
var Component = wp.element.Component;

var PremiumRange = function (_Component) {
    _inherits(PremiumRange, _Component);

    function PremiumRange() {
        _classCallCheck(this, PremiumRange);

        var _this = _possibleConstructorReturn(this, (PremiumRange.__proto__ || Object.getPrototypeOf(PremiumRange)).apply(this, arguments));

        _this.onAdvancedControlReset = _this.onAdvancedControlReset.bind(_this);
        return _this;
    }

    _createClass(PremiumRange, [{
        key: "onAdvancedControlReset",
        value: function onAdvancedControlReset() {
            var setAttributes = this.props.setAttributes;


            setAttributes(_defineProperty({}, this.props.range.label, ""));
            setAttributes(_defineProperty({}, this.props.rangeType.label, "px"));
            setAttributes(_defineProperty({}, this.props.rangeMobile.label, ""));
            setAttributes(_defineProperty({}, this.props.rangeTablet.label, ""));
        }
    }, {
        key: "render",
        value: function render() {
            return wp.element.createElement(
                "div",
                { className: "premium-control-toggle" },
                wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__premium_responsive__["a" /* default */], _extends({
                    type: this.props.rangeType,
                    typeLabel: this.props.rangeType.label,
                    sizeMobile: this.props.rangeMobile,
                    sizeMobileLabel: this.props.rangeMobile.label,
                    sizeTablet: this.props.rangeTablet,
                    sizeTabletLabel: this.props.rangeTablet.label,
                    size: this.props.range,
                    sizeLabel: this.props.range.label,
                    sizeMobileText: !this.props.rangeLabel ? __("Range") : this.props.rangeLabel,
                    sizeTabletText: !this.props.rangeLabel ? __("Range") : this.props.rangeLabel,
                    sizeText: !this.props.rangeLabel ? __("Range") : this.props.rangeLabel,
                    steps: 0.1
                }, this.props))
            );
        }
    }]);

    return PremiumRange;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumRange);

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    format = _wp$date.format,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;

var Meta = function (_React$Component) {
  _inherits(Meta, _React$Component);

  function Meta() {
    _classCallCheck(this, Meta);

    return _possibleConstructorReturn(this, (Meta.__proto__ || Object.getPrototypeOf(Meta)).apply(this, arguments));
  }

  _createClass(Meta, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          post = _props.post,
          attributes = _props.attributes,
          categoriesList = _props.categoriesList;

      var dateFormat = __experimentalGetSettings().formats.date;
      var categoryObject = { id: " ", name: "Uncategorized" };
      if (categoriesList) {
        categoriesList.map(function (item, thisIndex) {
          if (post.categories && item.id == post.categories[thisIndex]) {
            categoryObject = item;
          }
        });
      }
      console.log(categoryObject);
      return wp.element.createElement(
        __WEBPACK_IMPORTED_MODULE_0_react__["Fragment"],
        null,
        attributes.displayPostAuthor && undefined !== post.pbg_author_info && wp.element.createElement(
          "span",
          { className: "premium-blog-post-author premium-blog-meta-data" },
          wp.element.createElement("span", { className: "fa fa-user fa-fw" }),
          wp.element.createElement(
            "a",
            {
              target: "_blank",
              href: post.pbg_author_info.author_link,
              rel: "noopener noreferrer"
            },
            post.pbg_author_info.display_name
          ),
          wp.element.createElement(
            "span",
            { className: "premium-blog-meta-separtor" },
            "\u2022"
          )
        ),
        attributes.displayPostDate && post.date_gmt && wp.element.createElement(
          "div",
          { className: "premium-blog-post-time premium-blog-meta-data" },
          wp.element.createElement(
            "time",
            {
              dateTime: format("c", post.date_gmt),
              className: "uagb-post__date"
            },
            wp.element.createElement("span", { className: "fa fa-clock-o" }),
            dateI18n(dateFormat, post.date_gmt)
          ),
          wp.element.createElement(
            "span",
            { className: "premium-blog-meta-separtor" },
            "\u2022"
          )
        ),
        attributes.displayPostComment && undefined !== post.pbg_comment_info && wp.element.createElement(
          "div",
          { className: "premium-blog-post-comments premium-blog-meta-data" },
          wp.element.createElement(
            "span",
            { className: "premium-post__comment" },
            wp.element.createElement("span", { className: "dashicons-admin-comments dashicons" }),
            post.pbg_comment_info
          ),
          wp.element.createElement(
            "span",
            { className: "premium-blog-meta-separtor" },
            "\u2022"
          )
        ),
        attributes.displayPostCategories && "" !== categoryObject && wp.element.createElement(
          "div",
          {
            className: "premium-blog-post-categories premium-blog-meta-data"
          },
          wp.element.createElement(
            "span",
            { className: "premium-post__taxonomy" },
            wp.element.createElement("span", { className: "fa fa-align-left fa-fw" }),
            categoryObject.name
          )
        )
      );
    }
  }]);

  return Meta;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Meta);

/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Excerpt = function (_React$Component) {
  _inherits(Excerpt, _React$Component);

  function Excerpt() {
    _classCallCheck(this, Excerpt);

    return _possibleConstructorReturn(this, (Excerpt.__proto__ || Object.getPrototypeOf(Excerpt)).apply(this, arguments));
  }

  _createClass(Excerpt, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          post = _props.post,
          attributes = _props.attributes;

      if (post.pbg_excerpt == undefined) {
        return null;
      }
      var words = post.pbg_excerpt.split(" ");
      var excerpt = post.pbg_excerpt;
      var exLength = attributes.excerptLength ? attributes.excerptLength : 25;
      if (exLength >= words.length) {
        excerpt = post.pbg_excerpt;
      } else {
        var truncated = words.slice(0, exLength);
        excerpt = truncated.join(" ");
        excerpt += " ...";
      }
      if (attributes.displayPostContent && attributes.displayPostExcerpt === "Post Excerpt") {
        return wp.element.createElement("p", { dangerouslySetInnerHTML: { __html: excerpt } });
      } else if (attributes.displayPostExcerpt && attributes.displayPostExcerpt === "Post Full Content") {
        return wp.element.createElement("p", { dangerouslySetInnerHTML: { __html: post.content.raw.trim() } });
      } else {
        return null;
      }
    }
  }]);

  return Excerpt;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Excerpt);

/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;

var Button = function (_React$Component) {
  _inherits(Button, _React$Component);

  function Button() {
    _classCallCheck(this, Button);

    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  _createClass(Button, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          post = _props.post,
          attributes = _props.attributes;

      if (attributes.displayPostExcerpt === "Post Full Content") {
        return null;
      }
      if (attributes.displayPostContent && attributes.excerptType === "Link") {
        var readMoreText = attributes.readMoreText ? attributes.readMoreText : __("Read More");
        return wp.element.createElement(
          "div",
          { className: "premium-blog-excerpt-link-wrap" },
          wp.element.createElement(
            "a",
            {
              className: "premium-blog-excerpt-link elementor-button",
              href: post.link,
              target: "_blank",
              rel: "noopener noreferrer"
            },
            readMoreText
          )
        );
      } else {
        return null;
      }
    }
  }]);

  return Button;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Button);

/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var decodeEntities = wp.htmlEntities.decodeEntities;
var __ = wp.i18n.__;

var Image = function (_React$Component) {
  _inherits(Image, _React$Component);

  function Image() {
    _classCallCheck(this, Image);

    return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));
  }

  _createClass(Image, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          post = _props.post,
          attributes = _props.attributes;

      var target = attributes.newTab ? "_blank" : "_self";
      if (attributes.featuredImage && undefined !== post.pbg_featured_image_src && attributes.imageSize && post.pbg_featured_image_src[attributes.imageSize]) {
        var src = post.pbg_featured_image_src[attributes.imageSize];
        return wp.element.createElement(
          "div",
          { className: "premium-blog-thumb-effect-wrapper" },
          wp.element.createElement(
            "div",
            {
              className: "premium-blog-thumbnail-container premium-blog-" + attributes.hoverEffect + "-effect"
            },
            wp.element.createElement("img", {
              src: src[0],
              alt: decodeEntities(post.title.rendered.trim()) || __("(Untitled)")
            })
          ),
          wp.element.createElement(
            "div",
            { className: "premium-blog-thumbnail-overlay" },
            wp.element.createElement("a", { href: post.link, target: target, rel: "noopener noreferrer" })
          ),
          wp.element.createElement("style", {
            dangerouslySetInnerHTML: {
              __html: [".premium-blog-thumb-effect-wrapper "].join("\n")
            }
          })
        );
      } else {
        return null;
      }
    }
  }]);

  return Image;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Image);

/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;

var Tags = function (_React$Component) {
  _inherits(Tags, _React$Component);

  function Tags() {
    _classCallCheck(this, Tags);

    return _possibleConstructorReturn(this, (Tags.__proto__ || Object.getPrototypeOf(Tags)).apply(this, arguments));
  }

  _createClass(Tags, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          post = _props.post,
          attributes = _props.attributes,
          tagList = _props.tagList;

      var tagObject = [];
      if (tagList) {
        tagList.map(function (tag, thisIndex) {
          if (tag.id == post.tags[thisIndex]) {
            tagObject.push(tag);
            //alert(item);
          }
        });
        console.log(tagObject);
      }
      if (tagObject.length > 0 && attributes.displayPostTags) {
        return wp.element.createElement(
          "div",
          { className: "premium-blog-post-tags-container" },
          wp.element.createElement("i", { className: "fa fa-tags fa-fw" }),
          tagObject.map(function (tag) {
            return wp.element.createElement(
              "span",
              null,
              tag.name + "   " + " , "
            );
          })
        );
      } else {
        return null;
      }
    }
  }]);

  return Tags;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Tags);

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * EvEmitter v1.1.0
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */

(function (global, factory) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, window */
  if (true) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }
})(typeof window != 'undefined' ? window : this, function () {

  "use strict";

  function EvEmitter() {}

  var proto = EvEmitter.prototype;

  proto.on = function (eventName, listener) {
    if (!eventName || !listener) {
      return;
    }
    // set events hash
    var events = this._events = this._events || {};
    // set listeners array
    var listeners = events[eventName] = events[eventName] || [];
    // only add once
    if (listeners.indexOf(listener) == -1) {
      listeners.push(listener);
    }

    return this;
  };

  proto.once = function (eventName, listener) {
    if (!eventName || !listener) {
      return;
    }
    // add event
    this.on(eventName, listener);
    // set once flag
    // set onceEvents hash
    var onceEvents = this._onceEvents = this._onceEvents || {};
    // set onceListeners object
    var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};
    // set flag
    onceListeners[listener] = true;

    return this;
  };

  proto.off = function (eventName, listener) {
    var listeners = this._events && this._events[eventName];
    if (!listeners || !listeners.length) {
      return;
    }
    var index = listeners.indexOf(listener);
    if (index != -1) {
      listeners.splice(index, 1);
    }

    return this;
  };

  proto.emitEvent = function (eventName, args) {
    var listeners = this._events && this._events[eventName];
    if (!listeners || !listeners.length) {
      return;
    }
    // copy over to avoid interference if .off() in listener
    listeners = listeners.slice(0);
    args = args || [];
    // once stuff
    var onceListeners = this._onceEvents && this._onceEvents[eventName];

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      var isOnce = onceListeners && onceListeners[listener];
      if (isOnce) {
        // remove listener
        // remove before trigger to prevent recursion
        this.off(eventName, listener);
        // unset once flag
        delete onceListeners[listener];
      }
      // trigger listener
      listener.apply(this, args);
    }

    return this;
  };

  proto.allOff = function () {
    delete this._events;
    delete this._onceEvents;
  };

  return EvEmitter;
});

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * getSize v2.0.3
 * measure size of elements
 * MIT license
 */

/* jshint browser: true, strict: true, undef: true, unused: true */
/* globals console: false */

(function (window, factory) {
  /* jshint strict: false */ /* globals define, module */
  if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.getSize = factory();
  }
})(window, function factory() {
  'use strict';

  // -------------------------- helpers -------------------------- //

  // get a number from a string, not a percentage

  function getStyleSize(value) {
    var num = parseFloat(value);
    // not a percent like '100%', and a number
    var isValid = value.indexOf('%') == -1 && !isNaN(num);
    return isValid && num;
  }

  function noop() {}

  var logError = typeof console == 'undefined' ? noop : function (message) {
    console.error(message);
  };

  // -------------------------- measurements -------------------------- //

  var measurements = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth'];

  var measurementsLength = measurements.length;

  function getZeroSize() {
    var size = {
      width: 0,
      height: 0,
      innerWidth: 0,
      innerHeight: 0,
      outerWidth: 0,
      outerHeight: 0
    };
    for (var i = 0; i < measurementsLength; i++) {
      var measurement = measurements[i];
      size[measurement] = 0;
    }
    return size;
  }

  // -------------------------- getStyle -------------------------- //

  /**
   * getStyle, get style of element, check for Firefox bug
   * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
   */
  function getStyle(elem) {
    var style = getComputedStyle(elem);
    if (!style) {
      logError('Style returned ' + style + '. Are you running this code in a hidden iframe on Firefox? ' + 'See https://bit.ly/getsizebug1');
    }
    return style;
  }

  // -------------------------- setup -------------------------- //

  var isSetup = false;

  var isBoxSizeOuter;

  /**
   * setup
   * check isBoxSizerOuter
   * do on first getSize() rather than on page load for Firefox bug
   */
  function setup() {
    // setup once
    if (isSetup) {
      return;
    }
    isSetup = true;

    // -------------------------- box sizing -------------------------- //

    /**
     * Chrome & Safari measure the outer-width on style.width on border-box elems
     * IE11 & Firefox<29 measures the inner-width
     */
    var div = document.createElement('div');
    div.style.width = '200px';
    div.style.padding = '1px 2px 3px 4px';
    div.style.borderStyle = 'solid';
    div.style.borderWidth = '1px 2px 3px 4px';
    div.style.boxSizing = 'border-box';

    var body = document.body || document.documentElement;
    body.appendChild(div);
    var style = getStyle(div);
    // round value for browser zoom. desandro/masonry#928
    isBoxSizeOuter = Math.round(getStyleSize(style.width)) == 200;
    getSize.isBoxSizeOuter = isBoxSizeOuter;

    body.removeChild(div);
  }

  // -------------------------- getSize -------------------------- //

  function getSize(elem) {
    setup();

    // use querySeletor if elem is string
    if (typeof elem == 'string') {
      elem = document.querySelector(elem);
    }

    // do not proceed on non-objects
    if (!elem || (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) != 'object' || !elem.nodeType) {
      return;
    }

    var style = getStyle(elem);

    // if hidden, everything is 0
    if (style.display == 'none') {
      return getZeroSize();
    }

    var size = {};
    size.width = elem.offsetWidth;
    size.height = elem.offsetHeight;

    var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

    // get all measurements
    for (var i = 0; i < measurementsLength; i++) {
      var measurement = measurements[i];
      var value = style[measurement];
      var num = parseFloat(value);
      // any 'auto', 'medium' value will be 0
      size[measurement] = !isNaN(num) ? num : 0;
    }

    var paddingWidth = size.paddingLeft + size.paddingRight;
    var paddingHeight = size.paddingTop + size.paddingBottom;
    var marginWidth = size.marginLeft + size.marginRight;
    var marginHeight = size.marginTop + size.marginBottom;
    var borderWidth = size.borderLeftWidth + size.borderRightWidth;
    var borderHeight = size.borderTopWidth + size.borderBottomWidth;

    var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

    // overwrite width and height if we can get it from style
    var styleWidth = getStyleSize(style.width);
    if (styleWidth !== false) {
      size.width = styleWidth + (
      // add padding and border unless it's already including it
      isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);
    }

    var styleHeight = getStyleSize(style.height);
    if (styleHeight !== false) {
      size.height = styleHeight + (
      // add padding and border unless it's already including it
      isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);
    }

    size.innerWidth = size.width - (paddingWidth + borderWidth);
    size.innerHeight = size.height - (paddingHeight + borderHeight);

    size.outerWidth = size.width + marginWidth;
    size.outerHeight = size.height + marginHeight;

    return size;
  }

  return getSize;
});

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(106),
    eq = __webpack_require__(33);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(86),
    baseKeysIn = __webpack_require__(338),
    isArrayLike = __webpack_require__(20);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(89);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(82);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;

/***/ }),
/* 76 */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(17),
    isObject = __webpack_require__(12);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
    if (!isObject(value)) {
        return false;
    }
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/** Detect free variable `global` from Node.js. */
var freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(34)))

/***/ }),
/* 79 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return func + '';
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(149),
    isObjectLike = __webpack_require__(14);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(150),
    arraySome = __webpack_require__(153),
    cacheHas = __webpack_require__(154);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function (othValue, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(8);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(84),
    getSymbols = __webpack_require__(50),
    keys = __webpack_require__(19);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(49),
    isArray = __webpack_require__(9);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;

/***/ }),
/* 85 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(87),
    isArguments = __webpack_require__(51),
    isArray = __webpack_require__(9),
    isBuffer = __webpack_require__(52),
    isIndex = __webpack_require__(53),
    isTypedArray = __webpack_require__(88);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (
    // Safari 9 has enumerable `arguments.length` in strict mode.
    key == 'length' ||
    // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == 'offset' || key == 'parent') ||
    // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||
    // Skip index properties.
    isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;

/***/ }),
/* 87 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(162),
    baseUnary = __webpack_require__(55),
    nodeUtil = __webpack_require__(56);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;

/***/ }),
/* 89 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(12);

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;

/***/ }),
/* 91 */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function (object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
  };
}

module.exports = matchesStrictComparable;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(209);
} else {
  module.exports = __webpack_require__(210);
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _CSSTransition = _interopRequireDefault(__webpack_require__(214));

var _ReplaceTransition = _interopRequireDefault(__webpack_require__(219));

var _TransitionGroup = _interopRequireDefault(__webpack_require__(97));

var _Transition = _interopRequireDefault(__webpack_require__(60));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

module.exports = {
  Transition: _Transition.default,
  TransitionGroup: _TransitionGroup.default,
  ReplaceTransition: _ReplaceTransition.default,
  CSSTransition: _CSSTransition.default
};

/***/ }),
/* 95 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyfill", function() { return polyfill; });
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component.displayName || Component.name;
    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') + '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks');
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}



/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.classNamesShape = exports.timeoutsShape = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(13));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var timeoutsShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
  enter: _propTypes.default.number,
  exit: _propTypes.default.number,
  appear: _propTypes.default.number
}).isRequired]) : null;
exports.timeoutsShape = timeoutsShape;
var classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
  enter: _propTypes.default.string,
  exit: _propTypes.default.string,
  active: _propTypes.default.string
}), _propTypes.default.shape({
  enter: _propTypes.default.string,
  enterDone: _propTypes.default.string,
  enterActive: _propTypes.default.string,
  exit: _propTypes.default.string,
  exitDone: _propTypes.default.string,
  exitActive: _propTypes.default.string
})]) : null;
exports.classNamesShape = classNamesShape;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(13));

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactLifecyclesCompat = __webpack_require__(95);

var _ChildMapping = __webpack_require__(220);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
  }return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };return _extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);subClass.prototype.constructor = subClass;subClass.__proto__ = superClass;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return self;
}

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

};

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear


    _this.state = {
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: {
        isMounting: !this.appeared
      }
    };
  };

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
    this.mounted = true;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = _extends({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return children;
    }

    return _react.default.createElement(Component, props, children);
  };

  return TransitionGroup;
}(_react.default.Component);

TransitionGroup.childContextTypes = {
  transitionGroup: _propTypes.default.object.isRequired
};
TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: _propTypes.default.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: _propTypes.default.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: _propTypes.default.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: _propTypes.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;

var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);

exports.default = _default;
module.exports = exports["default"];
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _defineProperty;
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _assertThisInitialized;
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(12),
    isSymbol = __webpack_require__(40);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? other + '' : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

module.exports = toNumber;

/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function generateCSS(selectors, id) {
	var isResponsive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	var responsiveType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";


	var styling_css = "";
	var breakpoint = "";
	var gen_styling_css = "";
	var res_styling_css = "";

	if (responsiveType == "tablet") {
		breakpoint = PremiumBlocksSettings.tablet_breakpoint;
	} else if (responsiveType == "mobile") {
		breakpoint = PremiumBlocksSettings.mobile_breakpoint;
	}

	for (var i in selectors) {

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			var checkString = true;

			if (typeof sel[j] === "string" && sel[j].length === 0) {
				checkString = false;
			}

			if ('font-family' === j && typeof sel[j] != "undefined" && 'Default' === sel[j]) {
				continue;
			}

			if (typeof sel[j] != "undefined" && checkString) {
				css += j + ": " + sel[j] + ";";
			}
		}

		if (css.length !== 0) {
			gen_styling_css += id;
			gen_styling_css += i + "{";
			gen_styling_css += css;
			gen_styling_css += "}";
		}
	}

	if (isResponsive && typeof gen_styling_css !== "undefined" && gen_styling_css.length !== 0) {
		res_styling_css += "@media only screen and (max-width: " + breakpoint + "px) {";
		res_styling_css += gen_styling_css;
		res_styling_css += "}";
	}

	if (isResponsive) {
		return res_styling_css;
	} else {
		return gen_styling_css;
	}
}

/* harmony default export */ __webpack_exports__["a"] = (generateCSS);

/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function generateCSSUnit(value, unit) {

	var css = "";

	if (typeof value != "undefined") {
		css += value + unit;
	}

	return css;
}

/* harmony default export */ __webpack_exports__["a"] = (generateCSSUnit);

/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__premium_size_units__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__premium_responsive__ = __webpack_require__(30);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    RangeControl = _wp$components.RangeControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;

var PremiumMarginR = function (_Component) {
  _inherits(PremiumMarginR, _Component);

  function PremiumMarginR() {
    _classCallCheck(this, PremiumMarginR);

    var _this = _possibleConstructorReturn(this, (PremiumMarginR.__proto__ || Object.getPrototypeOf(PremiumMarginR)).apply(this, arguments));

    _this.onAdvancedControlReset = _this.onAdvancedControlReset.bind(_this);
    return _this;
  }

  _createClass(PremiumMarginR, [{
    key: "onAdvancedControlReset",
    value: function onAdvancedControlReset() {
      var setAttributes = this.props.setAttributes;
      // Reset Margin to default.

      setAttributes(_defineProperty({}, this.props.marginTop.label, ""));
      setAttributes(_defineProperty({}, this.props.marginTopType.label, "px"));
      setAttributes(_defineProperty({}, this.props.marginTopMobile.label, ""));
      setAttributes(_defineProperty({}, this.props.marginTopTablet.label, ""));

      setAttributes(_defineProperty({}, this.props.marginRight.label, ""));
      setAttributes(_defineProperty({}, this.props.marginRightType.label, "px"));
      setAttributes(_defineProperty({}, this.props.marginRightMobile.label, ""));
      setAttributes(_defineProperty({}, this.props.marginRightTablet.label, ""));

      setAttributes(_defineProperty({}, this.props.marginBottom.label, ""));
      setAttributes(_defineProperty({}, this.props.marginBottomType.label, "px"));
      setAttributes(_defineProperty({}, this.props.marginBottomMobile.label, ""));
      setAttributes(_defineProperty({}, this.props.marginBottomTablet.label, ""));

      setAttributes(_defineProperty({}, this.props.marginLeft.label, ""));
      setAttributes(_defineProperty({}, this.props.marginLeftType.label, "px"));
      setAttributes(_defineProperty({}, this.props.marginLeftMobile.label, ""));
      setAttributes(_defineProperty({}, this.props.marginLeftTablet.label, ""));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          directions = _props.directions,
          showUnits = _props.showUnits,
          _props$onChangeMarSiz = _props.onChangeMarSizeUnit,
          onChangeMarSizeUnit = _props$onChangeMarSiz === undefined ? function () {} : _props$onChangeMarSiz;

      return wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Margin")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref) {
            var isOpen = _ref.isOpen,
                onToggle = _ref.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              showUnits && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__premium_size_units__["a" /* default */], { onChangeSizeUnit: onChangeMarSizeUnit }),
              (directions.includes("all") || directions.includes("top")) && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__premium_responsive__["a" /* default */], _extends({
                type: _this2.props.marginTopType,
                typeLabel: _this2.props.marginTopType.label,
                sizeMobile: _this2.props.marginTopMobile,
                sizeMobileLabel: _this2.props.marginTopMobile.label,
                sizeTablet: _this2.props.marginTopTablet,
                sizeTabletLabel: _this2.props.marginTopTablet.label,
                size: _this2.props.marginTop,
                sizeLabel: _this2.props.marginTop.label,
                sizeMobileText: !_this2.props.marginTopLabel ? __("Margin Top") : _this2.props.marginTopLabel,
                sizeTabletText: !_this2.props.marginTopLabel ? __("Margin Top") : _this2.props.marginTopLabel,
                sizeText: !_this2.props.marginTopLabel ? __("Margin Top") : _this2.props.marginTopLabel,
                steps: 0.1
              }, _this2.props)),
              (directions.includes("all") || directions.includes("right")) && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__premium_responsive__["a" /* default */], _extends({
                type: _this2.props.marginRightType,
                typeLabel: _this2.props.marginRightType.label,
                sizeMobile: _this2.props.marginRightMobile,
                sizeMobileLabel: _this2.props.marginRightMobile.label,
                sizeTablet: _this2.props.marginRightTablet,
                sizeTabletLabel: _this2.props.marginRightTablet.label,
                size: _this2.props.marginRight,
                sizeLabel: _this2.props.marginRight.label,
                sizeMobileText: !_this2.props.marginRightLabel ? __("Margin Right") : _this2.props.marginTRightLabel,
                sizeTabletText: !_this2.props.marginRightLabel ? __("Margin Right") : _this2.props.marginRightLabel,
                sizeText: !_this2.props.marginRightLabel ? __("Margin Right") : _this2.props.marginRightLabel,
                steps: 0.1
              }, _this2.props)),
              (directions.includes("all") || directions.includes("bottom")) && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__premium_responsive__["a" /* default */], _extends({
                type: _this2.props.marginBottomType,
                typeLabel: _this2.props.marginBottomType.label,
                sizeMobile: _this2.props.marginBottomMobile,
                sizeMobileLabel: _this2.props.marginBottomMobile.label,
                sizeTablet: _this2.props.marginBottomTablet,
                sizeTabletLabel: _this2.props.marginBottomTablet.label,
                size: _this2.props.marginBottom,
                sizeLabel: _this2.props.marginBottom.label,
                sizeMobileText: !_this2.props.marginBottomLabel ? __("Margin Bottom") : _this2.props.marginBottomLabel,
                sizeTabletText: !_this2.props.marginBottomLabel ? __("Margin Bottom") : _this2.props.marginBottomLabel,
                sizeText: !_this2.props.marginBottomLabel ? __("Margin Bottom") : _this2.props.marginBottomLabel,
                steps: 0.1
              }, _this2.props)),
              (directions.includes("all") || directions.includes("left")) && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__premium_responsive__["a" /* default */], _extends({
                type: _this2.props.marginLeftType,
                typeLabel: _this2.props.marginLeftType.label,
                sizeMobile: _this2.props.marginLeftMobile,
                sizeMobileLabel: _this2.props.marginLeftMobile.label,
                sizeTablet: _this2.props.marginLeftTablet,
                sizeTabletLabel: _this2.props.marginLeftTablet.label,
                size: _this2.props.marginLeft,
                sizeLabel: _this2.props.marginLeft.label,
                sizeMobileText: !_this2.props.marginLeftLabel ? __("Margin Left") : _this2.props.marginLeftLabel,
                sizeTabletText: !_this2.props.marginLeftLabel ? __("Margin Left") : _this2.props.marginLeftLabel,
                sizeText: !_this2.props.marginLeftLabel ? __("Margin Left") : _this2.props.marginLeftLabel,
                steps: 0.1
              }, _this2.props))
            );
          }
        })
      );
    }
  }]);

  return PremiumMarginR;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumMarginR);

/***/ }),
/* 104 */
/***/ (function(module, exports) {

/**
 * Helper function for iterating over a collection
 *
 * @param collection
 * @param fn
 */
function each(collection, fn) {
    var i = 0,
        length = collection.length,
        cont;

    for (i; i < length; i++) {
        cont = fn(collection[i], i);
        if (cont === false) {
            break; //allow early exit
        }
    }
}

/**
 * Helper function for determining whether target object is an array
 *
 * @param target the object under test
 * @return {Boolean} true if array, false otherwise
 */
function isArray(target) {
    return Object.prototype.toString.apply(target) === '[object Array]';
}

/**
 * Helper function for determining whether target object is a function
 *
 * @param target the object under test
 * @return {Boolean} true if function, false otherwise
 */
function isFunction(target) {
    return typeof target === 'function';
}

module.exports = {
    isFunction: isFunction,
    isArray: isArray,
    each: each
};

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (e, a) {
  "object" == ( false ? "undefined" : _typeof(exports)) && "object" == ( false ? "undefined" : _typeof(module)) ? module.exports = a(__webpack_require__(1)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (a),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.ReactPaginate = a(require("react")) : e.ReactPaginate = a(e.React);
}(global, function (e) {
  return function (e) {
    var a = {};function t(r) {
      if (a[r]) return a[r].exports;var n = a[r] = { i: r, l: !1, exports: {} };return e[r].call(n.exports, n, n.exports, t), n.l = !0, n.exports;
    }return t.m = e, t.c = a, t.d = function (e, a, r) {
      t.o(e, a) || Object.defineProperty(e, a, { enumerable: !0, get: r });
    }, t.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 });
    }, t.t = function (e, a) {
      if (1 & a && (e = t(e)), 8 & a) return e;if (4 & a && "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && e && e.__esModule) return e;var r = Object.create(null);if (t.r(r), Object.defineProperty(r, "default", { enumerable: !0, value: e }), 2 & a && "string" != typeof e) for (var n in e) {
        t.d(r, n, function (a) {
          return e[a];
        }.bind(null, n));
      }return r;
    }, t.n = function (e) {
      var a = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };return t.d(a, "a", a), a;
    }, t.o = function (e, a) {
      return Object.prototype.hasOwnProperty.call(e, a);
    }, t.p = "", t(t.s = 4);
  }([function (e, a, t) {
    e.exports = t(2)();
  }, function (a, t) {
    a.exports = e;
  }, function (e, a, t) {
    "use strict";
    var r = t(3);function n() {}function i() {}i.resetWarningCache = n, e.exports = function () {
      function e(e, a, t, n, i, o) {
        if (o !== r) {
          var s = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name = "Invariant Violation", s;
        }
      }function a() {
        return e;
      }e.isRequired = e;var t = { array: e, bool: e, func: e, number: e, object: e, string: e, symbol: e, any: e, arrayOf: a, element: e, elementType: e, instanceOf: a, node: e, objectOf: a, oneOf: a, oneOfType: a, shape: a, exact: a, checkPropTypes: i, resetWarningCache: n };return t.PropTypes = t, t;
    };
  }, function (e, a, t) {
    "use strict";
    e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  }, function (e, a, t) {
    "use strict";
    t.r(a);var r = t(1),
        n = t.n(r),
        i = t(0),
        o = t.n(i);function s() {
      return (s = Object.assign || function (e) {
        for (var a = 1; a < arguments.length; a++) {
          var t = arguments[a];for (var r in t) {
            Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
          }
        }return e;
      }).apply(this, arguments);
    }var l = function l(e) {
      var a = e.pageClassName,
          t = e.pageLinkClassName,
          r = e.page,
          i = e.selected,
          o = e.activeClassName,
          l = e.activeLinkClassName,
          c = e.getEventListener,
          u = e.pageSelectedHandler,
          p = e.href,
          f = e.extraAriaContext,
          d = e.ariaLabel || "Page " + r + (f ? " " + f : ""),
          g = null;return i && (g = "page", d = e.ariaLabel || "Page " + r + " is your current page", a = void 0 !== a ? a + " " + o : o, void 0 !== t ? void 0 !== l && (t = t + " " + l) : t = l), n.a.createElement("li", { className: a }, n.a.createElement("a", s({ role: "button", className: t, href: p, tabIndex: "0", "aria-label": d, "aria-current": g, onKeyPress: u }, c(u)), r));
    };l.propTypes = { pageSelectedHandler: o.a.func.isRequired, selected: o.a.bool.isRequired, pageClassName: o.a.string, pageLinkClassName: o.a.string, activeClassName: o.a.string, activeLinkClassName: o.a.string, extraAriaContext: o.a.string, href: o.a.string, ariaLabel: o.a.string, page: o.a.number.isRequired, getEventListener: o.a.func.isRequired };var c = l;function u() {
      return (u = Object.assign || function (e) {
        for (var a = 1; a < arguments.length; a++) {
          var t = arguments[a];for (var r in t) {
            Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
          }
        }return e;
      }).apply(this, arguments);
    }!function () {
      var e = "undefined" != typeof reactHotLoaderGlobal ? reactHotLoaderGlobal.default : void 0;if (e) {
        var t = void 0 !== a ? a : exports;if (t) if ("function" != typeof t) {
          for (var r in t) {
            if (Object.prototype.hasOwnProperty.call(t, r)) {
              var n = void 0;try {
                n = t[r];
              } catch (e) {
                continue;
              }e.register(n, r, "/home/adele/workspace/react-paginate/react_components/PageView.js");
            }
          }
        } else e.register(t, "module.exports", "/home/adele/workspace/react-paginate/react_components/PageView.js");
      }
    }();var p = function p(e) {
      var a = e.breakLabel,
          t = e.breakClassName,
          r = e.breakLinkClassName,
          i = e.breakHandler,
          o = e.getEventListener,
          s = t || "break";return n.a.createElement("li", { className: s }, n.a.createElement("a", u({ className: r, role: "button", tabIndex: "0", onKeyPress: i }, o(i)), a));
    };p.propTypes = { breakLabel: o.a.oneOfType([o.a.string, o.a.node]), breakClassName: o.a.string, breakLinkClassName: o.a.string, breakHandler: o.a.func.isRequired, getEventListener: o.a.func.isRequired };var f = p;function d(e) {
      return (d = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
      })(e);
    }function g() {
      return (g = Object.assign || function (e) {
        for (var a = 1; a < arguments.length; a++) {
          var t = arguments[a];for (var r in t) {
            Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
          }
        }return e;
      }).apply(this, arguments);
    }function b(e, a) {
      for (var t = 0; t < a.length; t++) {
        var r = a[t];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
      }
    }function v(e, a) {
      return (v = Object.setPrototypeOf || function (e, a) {
        return e.__proto__ = a, e;
      })(e, a);
    }function m(e) {
      var a = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;if (Reflect.construct.sham) return !1;if ("function" == typeof Proxy) return !0;try {
          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
        } catch (e) {
          return !1;
        }
      }();return function () {
        var t,
            r = C(e);if (a) {
          var n = C(this).constructor;t = Reflect.construct(r, arguments, n);
        } else t = r.apply(this, arguments);return h(this, t);
      };
    }function h(e, a) {
      return !a || "object" !== d(a) && "function" != typeof a ? y(e) : a;
    }function y(e) {
      if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;
    }function C(e) {
      return (C = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
        return e.__proto__ || Object.getPrototypeOf(e);
      })(e);
    }function k(e, a, t) {
      return a in e ? Object.defineProperty(e, a, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[a] = t, e;
    }!function () {
      var e = "undefined" != typeof reactHotLoaderGlobal ? reactHotLoaderGlobal.default : void 0;if (e) {
        var t = void 0 !== a ? a : exports;if (t) if ("function" != typeof t) {
          for (var r in t) {
            if (Object.prototype.hasOwnProperty.call(t, r)) {
              var n = void 0;try {
                n = t[r];
              } catch (e) {
                continue;
              }e.register(n, r, "/home/adele/workspace/react-paginate/react_components/BreakView.js");
            }
          }
        } else e.register(t, "module.exports", "/home/adele/workspace/react-paginate/react_components/BreakView.js");
      }
    }();var P = function (e) {
      !function (e, a) {
        if ("function" != typeof a && null !== a) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(a && a.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), a && v(e, a);
      }(o, e);var a,
          t,
          r,
          i = m(o);function o(e) {
        var a, t;return function (e, a) {
          if (!(e instanceof a)) throw new TypeError("Cannot call a class as a function");
        }(this, o), k(y(a = i.call(this, e)), "handlePreviousPage", function (e) {
          var t = a.state.selected;e.preventDefault ? e.preventDefault() : e.returnValue = !1, t > 0 && a.handlePageSelected(t - 1, e);
        }), k(y(a), "handleNextPage", function (e) {
          var t = a.state.selected,
              r = a.props.pageCount;e.preventDefault ? e.preventDefault() : e.returnValue = !1, t < r - 1 && a.handlePageSelected(t + 1, e);
        }), k(y(a), "handlePageSelected", function (e, t) {
          t.preventDefault ? t.preventDefault() : t.returnValue = !1, a.state.selected !== e && (a.setState({ selected: e }), a.callCallback(e));
        }), k(y(a), "getEventListener", function (e) {
          return k({}, a.props.eventListener, e);
        }), k(y(a), "handleBreakClick", function (e, t) {
          t.preventDefault ? t.preventDefault() : t.returnValue = !1;var r = a.state.selected;a.handlePageSelected(r < e ? a.getForwardJump() : a.getBackwardJump(), t);
        }), k(y(a), "callCallback", function (e) {
          void 0 !== a.props.onPageChange && "function" == typeof a.props.onPageChange && a.props.onPageChange({ selected: e });
        }), k(y(a), "pagination", function () {
          var e = [],
              t = a.props,
              r = t.pageRangeDisplayed,
              i = t.pageCount,
              o = t.marginPagesDisplayed,
              s = t.breakLabel,
              l = t.breakClassName,
              c = t.breakLinkClassName,
              u = a.state.selected;if (i <= r) for (var p = 0; p < i; p++) {
            e.push(a.getPageElement(p));
          } else {
            var d,
                g,
                b,
                v = r / 2,
                m = r - v;u > i - r / 2 ? v = r - (m = i - u) : u < r / 2 && (m = r - (v = u));var h = function h(e) {
              return a.getPageElement(e);
            };for (d = 0; d < i; d++) {
              (g = d + 1) <= o || g > i - o || d >= u - v && d <= u + m ? e.push(h(d)) : s && e[e.length - 1] !== b && (b = n.a.createElement(f, { key: d, breakLabel: s, breakClassName: l, breakLinkClassName: c, breakHandler: a.handleBreakClick.bind(null, d), getEventListener: a.getEventListener }), e.push(b));
            }
          }return e;
        }), t = e.initialPage ? e.initialPage : e.forcePage ? e.forcePage : 0, a.state = { selected: t }, a;
      }return a = o, (t = [{ key: "componentDidMount", value: function value() {
          var e = this.props,
              a = e.initialPage,
              t = e.disableInitialCallback,
              r = e.extraAriaContext;void 0 === a || t || this.callCallback(a), r && console.warn("DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.");
        } }, { key: "componentDidUpdate", value: function value(e) {
          void 0 !== this.props.forcePage && this.props.forcePage !== e.forcePage && this.setState({ selected: this.props.forcePage });
        } }, { key: "getForwardJump", value: function value() {
          var e = this.state.selected,
              a = this.props,
              t = a.pageCount,
              r = e + a.pageRangeDisplayed;return r >= t ? t - 1 : r;
        } }, { key: "getBackwardJump", value: function value() {
          var e = this.state.selected - this.props.pageRangeDisplayed;return e < 0 ? 0 : e;
        } }, { key: "hrefBuilder", value: function value(e) {
          var a = this.props,
              t = a.hrefBuilder,
              r = a.pageCount;if (t && e !== this.state.selected && e >= 0 && e < r) return t(e + 1);
        } }, { key: "ariaLabelBuilder", value: function value(e) {
          var a = e === this.state.selected;if (this.props.ariaLabelBuilder && e >= 0 && e < this.props.pageCount) {
            var t = this.props.ariaLabelBuilder(e + 1, a);return this.props.extraAriaContext && !a && (t = t + " " + this.props.extraAriaContext), t;
          }
        } }, { key: "getPageElement", value: function value(e) {
          var a = this.state.selected,
              t = this.props,
              r = t.pageClassName,
              i = t.pageLinkClassName,
              o = t.activeClassName,
              s = t.activeLinkClassName,
              l = t.extraAriaContext;return n.a.createElement(c, { key: e, pageSelectedHandler: this.handlePageSelected.bind(null, e), selected: a === e, pageClassName: r, pageLinkClassName: i, activeClassName: o, activeLinkClassName: s, extraAriaContext: l, href: this.hrefBuilder(e), ariaLabel: this.ariaLabelBuilder(e), page: e + 1, getEventListener: this.getEventListener });
        } }, { key: "render", value: function value() {
          var e = this.props,
              a = e.disabledClassName,
              t = e.pageCount,
              r = e.containerClassName,
              i = e.previousLabel,
              o = e.previousClassName,
              s = e.previousLinkClassName,
              l = e.previousAriaLabel,
              c = e.prevRel,
              u = e.nextLabel,
              p = e.nextClassName,
              f = e.nextLinkClassName,
              d = e.nextAriaLabel,
              b = e.nextRel,
              v = this.state.selected,
              m = o + (0 === v ? " ".concat(a) : ""),
              h = p + (v === t - 1 ? " ".concat(a) : ""),
              y = 0 === v ? "true" : "false",
              C = v === t - 1 ? "true" : "false";return n.a.createElement("ul", { className: r }, n.a.createElement("li", { className: m }, n.a.createElement("a", g({ className: s, href: this.hrefBuilder(v - 1), tabIndex: "0", role: "button", onKeyPress: this.handlePreviousPage, "aria-disabled": y, "aria-label": l, rel: c }, this.getEventListener(this.handlePreviousPage)), i)), this.pagination(), n.a.createElement("li", { className: h }, n.a.createElement("a", g({ className: f, href: this.hrefBuilder(v + 1), tabIndex: "0", role: "button", onKeyPress: this.handleNextPage, "aria-disabled": C, "aria-label": d, rel: b }, this.getEventListener(this.handleNextPage)), u)));
        } }]) && b(a.prototype, t), r && b(a, r), o;
    }(r.Component);k(P, "propTypes", { pageCount: o.a.number.isRequired, pageRangeDisplayed: o.a.number.isRequired, marginPagesDisplayed: o.a.number.isRequired, previousLabel: o.a.node, previousAriaLabel: o.a.string, prevRel: o.a.string, nextLabel: o.a.node, nextAriaLabel: o.a.string, nextRel: o.a.string, breakLabel: o.a.oneOfType([o.a.string, o.a.node]), hrefBuilder: o.a.func, onPageChange: o.a.func, initialPage: o.a.number, forcePage: o.a.number, disableInitialCallback: o.a.bool, containerClassName: o.a.string, pageClassName: o.a.string, pageLinkClassName: o.a.string, activeClassName: o.a.string, activeLinkClassName: o.a.string, previousClassName: o.a.string, nextClassName: o.a.string, previousLinkClassName: o.a.string, nextLinkClassName: o.a.string, disabledClassName: o.a.string, breakClassName: o.a.string, breakLinkClassName: o.a.string, extraAriaContext: o.a.string, ariaLabelBuilder: o.a.func, eventListener: o.a.string }), k(P, "defaultProps", { pageCount: 10, pageRangeDisplayed: 2, marginPagesDisplayed: 3, activeClassName: "selected", previousLabel: "Previous", previousClassName: "previous", previousAriaLabel: "Previous page", prevRel: "prev", nextLabel: "Next", nextClassName: "next", nextAriaLabel: "Next page", nextRel: "next", breakLabel: "...", disabledClassName: "disabled", disableInitialCallback: !1, eventListener: "onClick" }), function () {
      var e = "undefined" != typeof reactHotLoaderGlobal ? reactHotLoaderGlobal.default : void 0;if (e) {
        var t = void 0 !== a ? a : exports;if (t) if ("function" != typeof t) {
          for (var r in t) {
            if (Object.prototype.hasOwnProperty.call(t, r)) {
              var n = void 0;try {
                n = t[r];
              } catch (e) {
                continue;
              }e.register(n, r, "/home/adele/workspace/react-paginate/react_components/PaginationBoxView.js");
            }
          }
        } else e.register(t, "module.exports", "/home/adele/workspace/react-paginate/react_components/PaginationBoxView.js");
      }
    }();a.default = P;!function () {
      var e = "undefined" != typeof reactHotLoaderGlobal ? reactHotLoaderGlobal.default : void 0;if (e) {
        var t = void 0 !== a ? a : exports;if (t) if ("function" != typeof t) {
          for (var r in t) {
            if (Object.prototype.hasOwnProperty.call(t, r)) {
              var n = void 0;try {
                n = t[r];
              } catch (e) {
                continue;
              }e.register(n, r, "/home/adele/workspace/react-paginate/react_components/index.js");
            }
          }
        } else e.register(t, "module.exports", "/home/adele/workspace/react-paginate/react_components/index.js");
      }
    }();
  }]);
});
//# sourceMappingURL=react-paginate.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(34), __webpack_require__(24)(module)))

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(107);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(15);

var defineProperty = function () {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}();

module.exports = defineProperty;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(315);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? func.length - 1 : start, 0);
  return function () {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(316),
    shortOut = __webpack_require__(318);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

/**
 * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.
 * @public
 * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.
 * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.
 * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.
 */
utils.forEach = function (collection, callback) {
    for (var i = 0; i < collection.length; i++) {
        var result = callback(collection[i]);
        if (result) {
            return result;
        }
    }
};

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var detector = module.exports = {};

detector.isIE = function (version) {
    function isAnyIeVersion() {
        var agent = navigator.userAgent.toLowerCase();
        return agent.indexOf("msie") !== -1 || agent.indexOf("trident") !== -1 || agent.indexOf(" edge/") !== -1;
    }

    if (!isAnyIeVersion()) {
        return false;
    }

    if (!version) {
        return true;
    }

    //Shamelessly stolen from https://gist.github.com/padolsey/527683
    var ieVersion = function () {
        var undef,
            v = 3,
            div = document.createElement("div"),
            all = div.getElementsByTagName("i");

        do {
            div.innerHTML = "<!--[if gt IE " + ++v + "]><i></i><![endif]-->";
        } while (all[0]);

        return v > 4 ? v : undef;
    }();

    return version === ieVersion;
};

detector.isLegacyOpera = function () {
    return !!window.opera;
};

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(49),
    getPrototype = __webpack_require__(74),
    getSymbols = __webpack_require__(50),
    stubArray = __webpack_require__(85);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(84),
    getSymbolsIn = __webpack_require__(112),
    keysIn = __webpack_require__(73);

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;

/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__blocks_accordion__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__blocks_banner__ = __webpack_require__(191);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__blocks_button__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__blocks_count_up__ = __webpack_require__(199);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__blocks_dual_heading__ = __webpack_require__(203);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__blocks_icon__ = __webpack_require__(207);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__blocks_icon_box__ = __webpack_require__(223);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__blocks_maps__ = __webpack_require__(227);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__blocks_pricing_table__ = __webpack_require__(228);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__blocks_section__ = __webpack_require__(232);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__blocks_testimonials__ = __webpack_require__(236);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__blocks_video_box__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__blocks_person__ = __webpack_require__(243);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__blocks_icon_list__ = __webpack_require__(265);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__blocks_content_switcher__ = __webpack_require__(273);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__blocks_image_scroll__ = __webpack_require__(278);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__blocks_blog__ = __webpack_require__(281);


















//import "./blocks/test";

/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__save__ = __webpack_require__(189);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__deprecated__ = __webpack_require__(190);







var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var accordionAttrs = {
    accordionId: {
        type: "string"
    },
    repeaterItems: {
        type: "array",
        default: [{
            titleText: __("Awesome Title"),
            descText: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
        }]
    },
    direction: {
        type: "string",
        default: "ltr"
    },
    titleTag: {
        type: "string",
        default: "H4"
    },
    titleColor: {
        type: "string"
    },
    titleSize: {
        type: "number"
    },
    titleLine: {
        type: "number"
    },
    titleLetter: {
        type: "number"
    },
    titleStyle: {
        type: "string"
    },
    titleUpper: {
        type: "boolean"
    },
    titleWeight: {
        type: "number",
        default: 500
    },
    titleBorder: {
        type: "string",
        default: "none"
    },
    titleBorderWidth: {
        type: "number",
        default: "1"
    },
    titleBorderRadius: {
        type: "number",
        default: "0"
    },
    titleBorderColor: {
        type: "string"
    },
    titleBack: {
        type: "string"
    },
    titleShadowColor: {
        type: "string"
    },
    titleShadowBlur: {
        type: "number",
        default: "0"
    },
    titleShadowHorizontal: {
        type: "number",
        default: "0"
    },
    titleShadowVertical: {
        type: "number",
        default: "0"
    },
    titlePaddingT: {
        type: "number"
    },
    titlePaddingR: {
        type: "number"
    },
    titlePaddingB: {
        type: "number"
    },
    titlePaddingL: {
        type: "number"
    },
    arrowColor: {
        type: "string"
    },
    arrowBack: {
        type: "string"
    },
    arrowPos: {
        type: "string",
        default: "out"
    },
    arrowPadding: {
        type: "number"
    },
    arrowRadius: {
        type: "number"
    },
    arrowSize: {
        type: "number",
        default: 20
    },
    contentType: {
        type: "string",
        default: "text"
    },
    descAlign: {
        type: "string",
        default: "left"
    },
    descColor: {
        type: "string"
    },
    descBack: {
        type: "string"
    },
    descBorder: {
        type: "string",
        default: "none"
    },
    descBorderWidth: {
        type: "number",
        default: "1"
    },
    descBorderRadius: {
        type: "number",
        default: "0"
    },
    descBorderColor: {
        type: "string"
    },
    descSize: {
        type: "number"
    },
    descLine: {
        type: "number"
    },
    descLetter: {
        type: "number"
    },
    descStyle: {
        type: "string"
    },
    descUpper: {
        type: "boolean"
    },
    descWeight: {
        type: "number",
        default: 500
    },
    textShadowColor: {
        type: "string"
    },
    textShadowBlur: {
        type: "number",
        default: "0"
    },
    textShadowHorizontal: {
        type: "number",
        default: "0"
    },
    textShadowVertical: {
        type: "number",
        default: "0"
    },
    descPaddingT: {
        type: "number"
    },
    descPaddingR: {
        type: "number"
    },
    descPaddingB: {
        type: "number"
    },
    descPaddingL: {
        type: "number",
        default: 10
    }
};

registerBlockType("premium/accordion", {
    title: __("Accordion"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "accordion" }),
    category: "premium-blocks",
    attributes: accordionAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["b" /* accordion */]
    },
    example: {},
    edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_3__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_4__deprecated__["a" /* default */]
});

/***/ }),
/* 116 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_padding__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_text_shadow__ = __webpack_require__(11);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var __ = wp.i18n.__;
var _wp$components = wp.components,
    Toolbar = _wp$components.Toolbar,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    RichText = _wp$editor.RichText,
    InnerBlocks = _wp$editor.InnerBlocks,
    ColorPalette = _wp$editor.ColorPalette;


var CONTENT = [["core/paragraph", { content: __("Insert Your Content Here") }]];

var isAccUpdated = null;

var PremiumAccordion = function (_Component) {
  _inherits(PremiumAccordion, _Component);

  function PremiumAccordion() {
    _classCallCheck(this, PremiumAccordion);

    var _this = _possibleConstructorReturn(this, (PremiumAccordion.__proto__ || Object.getPrototypeOf(PremiumAccordion)).apply(this, arguments));

    _this.initAccordion = _this.initAccordion.bind(_this);
    return _this;
  }

  _createClass(PremiumAccordion, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _props = this.props,
          attributes = _props.attributes,
          setAttributes = _props.setAttributes,
          clientId = _props.clientId;

      if (!attributes.accordionId) {
        setAttributes({ accordionId: "premium-accordion-" + clientId });
      }
      this.initAccordion();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      clearTimeout(isAccUpdated);
      isAccUpdated = setTimeout(this.initAccordion, 500);
    }
  }, {
    key: "initAccordion",
    value: function initAccordion() {
      var accordionId = this.props.attributes.accordionId;

      if (!this.props.attributes.accordionId) return null;
      var title = document.getElementById(accordionId).getElementsByClassName("premium-accordion__title_wrap")[0];
      title.addEventListener("click", function () {
        title.getElementsByClassName("premium-accordion__icon")[0].classList.toggle("premium-accordion__closed");
        title.nextSibling.classList.toggle("premium-accordion__desc_close");
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          isSelected = _props2.isSelected,
          setAttributes = _props2.setAttributes,
          clientId = _props2.clientId,
          className = _props2.className;
      var _props$attributes = this.props.attributes,
          accordionId = _props$attributes.accordionId,
          repeaterItems = _props$attributes.repeaterItems,
          direction = _props$attributes.direction,
          titleTag = _props$attributes.titleTag,
          titleColor = _props$attributes.titleColor,
          titleSize = _props$attributes.titleSize,
          titleLine = _props$attributes.titleLine,
          titleLetter = _props$attributes.titleLetter,
          titleStyle = _props$attributes.titleStyle,
          titleUpper = _props$attributes.titleUpper,
          titleWeight = _props$attributes.titleWeight,
          titleBorder = _props$attributes.titleBorder,
          titleBorderWidth = _props$attributes.titleBorderWidth,
          titleBorderColor = _props$attributes.titleBorderColor,
          titleBorderRadius = _props$attributes.titleBorderRadius,
          titleBack = _props$attributes.titleBack,
          titleShadowBlur = _props$attributes.titleShadowBlur,
          titleShadowColor = _props$attributes.titleShadowColor,
          titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
          titleShadowVertical = _props$attributes.titleShadowVertical,
          titlePaddingT = _props$attributes.titlePaddingT,
          titlePaddingR = _props$attributes.titlePaddingR,
          titlePaddingB = _props$attributes.titlePaddingB,
          titlePaddingL = _props$attributes.titlePaddingL,
          arrowColor = _props$attributes.arrowColor,
          arrowBack = _props$attributes.arrowBack,
          arrowPos = _props$attributes.arrowPos,
          arrowPadding = _props$attributes.arrowPadding,
          arrowRadius = _props$attributes.arrowRadius,
          arrowSize = _props$attributes.arrowSize,
          contentType = _props$attributes.contentType,
          descAlign = _props$attributes.descAlign,
          descColor = _props$attributes.descColor,
          descBack = _props$attributes.descBack,
          descBorder = _props$attributes.descBorder,
          descBorderColor = _props$attributes.descBorderColor,
          descBorderRadius = _props$attributes.descBorderRadius,
          descBorderWidth = _props$attributes.descBorderWidth,
          descSize = _props$attributes.descSize,
          descLine = _props$attributes.descLine,
          descLetter = _props$attributes.descLetter,
          descStyle = _props$attributes.descStyle,
          descUpper = _props$attributes.descUpper,
          descWeight = _props$attributes.descWeight,
          textShadowBlur = _props$attributes.textShadowBlur,
          textShadowColor = _props$attributes.textShadowColor,
          textShadowHorizontal = _props$attributes.textShadowHorizontal,
          textShadowVertical = _props$attributes.textShadowVertical,
          descPaddingT = _props$attributes.descPaddingT,
          descPaddingR = _props$attributes.descPaddingR,
          descPaddingB = _props$attributes.descPaddingB,
          descPaddingL = _props$attributes.descPaddingL;


      var DIRECTION = [{
        value: "ltr",
        label: "LTR"
      }, {
        value: "rtl",
        label: "RTL"
      }];

      var ARROW = [{
        value: "in",
        label: __("In")
      }, {
        value: "out",
        label: __("Out")
      }];

      var TYPE = [{
        value: "text",
        label: __("Text")
      }, {
        value: "block",
        label: __("Gutenberg Block")
      }];

      var ALIGNS = ["left", "center", "right"];

      var onAccordionChange = function onAccordionChange(attr, value, index) {
        var items = repeaterItems;

        return items.map(function (item, currIndex) {
          if (index == currIndex) {
            item[attr] = value;
          }

          return item;
        });
      };

      var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-accordion");

      var accordionItems = repeaterItems.map(function (item, index) {
        return wp.element.createElement(
          "div",
          {
            id: "premium-accordion__layer" + index,
            className: "premium-accordion__content_wrap"
          },
          wp.element.createElement(
            "div",
            {
              className: "premium-accordion__title_wrap premium-accordion__" + direction + " premium-accordion__" + arrowPos,
              style: {
                backgroundColor: titleBack,
                border: titleBorder,
                borderWidth: titleBorderWidth + "px",
                borderRadius: titleBorderRadius + "px",
                borderColor: titleBorderColor,
                paddingTop: titlePaddingT,
                paddingRight: titlePaddingR,
                paddingBottom: titlePaddingB,
                paddingLeft: titlePaddingL
              }
            },
            wp.element.createElement(
              "div",
              { className: "premium-accordion__title" },
              wp.element.createElement(RichText, {
                tagName: titleTag.toLowerCase(),
                className: "premium-accordion__title_text",
                onChange: function onChange(newText) {
                  return setAttributes({
                    repeaterItems: onAccordionChange("titleText", newText, index)
                  });
                },
                placeholder: __("Awesome Title"),
                value: item.titleText,
                style: {
                  color: titleColor,
                  fontSize: titleSize + "px",
                  letterSpacing: titleLetter + "px",
                  textTransform: titleUpper ? "uppercase" : "none",
                  fontStyle: titleStyle,
                  fontWeight: titleWeight,
                  textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
                  lineHeight: titleLine + "px"
                }
              })
            ),
            wp.element.createElement(
              "div",
              { className: "premium-accordion__icon_wrap" },
              wp.element.createElement(
                "svg",
                {
                  className: "premium-accordion__icon",
                  role: "img",
                  focusable: "false",
                  xmlns: "http://www.w3.org/2000/svg",
                  width: arrowSize,
                  height: arrowSize,
                  viewBox: "0 0 20 20",
                  style: {
                    fill: arrowColor,
                    backgroundColor: arrowBack,
                    padding: arrowPadding + "px",
                    borderRadius: arrowRadius + "px"
                  }
                },
                wp.element.createElement("polygon", { points: "16.7,3.3 10,10 3.3,3.4 0,6.7 10,16.7 10,16.6 20,6.7 " })
              )
            )
          ),
          wp.element.createElement(
            "div",
            {
              className: "premium-accordion__desc_wrap",
              style: {
                textAlign: descAlign,
                backgroundColor: descBack,
                border: descBorder,
                borderWidth: descBorderWidth + "px",
                borderRadius: descBorderRadius + "px",
                borderColor: descBorderColor,
                paddingTop: descPaddingT,
                paddingRight: descPaddingR,
                paddingBottom: descPaddingB,
                paddingLeft: descPaddingL
              }
            },
            "text" === contentType && wp.element.createElement(RichText, {
              tagName: "p",
              className: "premium-accordion__desc",
              onChange: function onChange(newText) {
                return setAttributes({
                  repeaterItems: onAccordionChange("descText", newText, index)
                });
              },
              value: item.descText,
              style: {
                color: descColor,
                fontSize: descSize + "px",
                letterSpacing: descLetter + "px",
                textTransform: descUpper ? "uppercase" : "none",
                textShadow: textShadowHorizontal + "px " + textShadowVertical + "px " + textShadowBlur + "px " + textShadowColor,
                fontStyle: descStyle,
                fontWeight: descWeight,
                lineHeight: descLine + "px"
              }
            }),
            "block" === contentType && wp.element.createElement(InnerBlocks, { template: CONTENT })
          )
        );
      });
      return [isSelected && wp.element.createElement(
        InspectorControls,
        { key: "inspector" },
        wp.element.createElement(
          PanelBody,
          {
            title: __("Title"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(
            "p",
            null,
            __("Title Tag")
          ),
          wp.element.createElement(Toolbar, {
            controls: "123456".split("").map(function (tag) {
              return {
                icon: "heading",
                isActive: "H" + tag === titleTag,
                onClick: function onClick() {
                  return setAttributes({ titleTag: "H" + tag });
                },
                subscript: tag
              };
            })
          }),
          wp.element.createElement(SelectControl, {
            label: __("Direction"),
            options: DIRECTION,
            value: direction,
            onChange: function onChange(newEffect) {
              return setAttributes({ direction: newEffect });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_typo__["a" /* default */], {
            components: ["size", "weight", "style", "upper", "spacing", "line"],
            size: titleSize,
            weight: titleWeight,
            style: titleStyle,
            spacing: titleLetter,
            line: titleLine,
            upper: titleUpper,
            onChangeSize: function onChangeSize(newSize) {
              return setAttributes({ titleSize: newSize });
            },
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ titleWeight: newWeight });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ titleStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ titleLetter: newValue });
            },
            onChangeLine: function onChangeLine(newValue) {
              return setAttributes({ titleLine: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ titleUpper: check });
            }
          }),
          wp.element.createElement(
            "div",
            { className: "premium-control-toggle" },
            wp.element.createElement(
              "strong",
              null,
              __("Colors")
            ),
            wp.element.createElement(Dropdown, {
              className: "premium-control-toggle-btn",
              contentClassName: "premium-control-toggle-content",
              position: "bottom right",
              renderToggle: function renderToggle(_ref) {
                var isOpen = _ref.isOpen,
                    onToggle = _ref.onToggle;
                return wp.element.createElement(
                  Button,
                  { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                  wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
              },
              renderContent: function renderContent() {
                return wp.element.createElement(
                  Fragment,
                  null,
                  wp.element.createElement(
                    "p",
                    null,
                    __("Text Color")
                  ),
                  wp.element.createElement(ColorPalette, {
                    value: titleColor,
                    onChange: function onChange(newValue) {
                      return setAttributes({
                        titleColor: newValue
                      });
                    },
                    allowReset: true
                  }),
                  wp.element.createElement(
                    "p",
                    null,
                    __("Background Color")
                  ),
                  wp.element.createElement(ColorPalette, {
                    value: titleBack,
                    onChange: function onChange(newValue) {
                      return setAttributes({
                        titleBack: newValue
                      });
                    },
                    allowReset: true
                  })
                );
              }
            })
          ),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
            borderType: titleBorder,
            borderWidth: titleBorderWidth,
            borderColor: titleBorderColor,
            borderRadius: titleBorderRadius,
            onChangeType: function onChangeType(newType) {
              return setAttributes({ titleBorder: newType });
            },
            onChangeWidth: function onChangeWidth(newWidth) {
              return setAttributes({ titleBorderWidth: newWidth });
            },
            onChangeColor: function onChangeColor(colorValue) {
              return setAttributes({ titleBorderColor: colorValue.hex });
            },
            onChangeRadius: function onChangeRadius(newrRadius) {
              return setAttributes({ titleBorderRadius: newrRadius });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_text_shadow__["a" /* default */], {
            color: titleShadowColor,
            blur: titleShadowBlur,
            horizontal: titleShadowHorizontal,
            vertical: titleShadowVertical,
            onChangeColor: function onChangeColor(newColor) {
              return setAttributes({ titleShadowColor: newColor.hex });
            },
            onChangeBlur: function onChangeBlur(newBlur) {
              return setAttributes({ titleShadowBlur: newBlur });
            },
            onChangehHorizontal: function onChangehHorizontal(newValue) {
              return setAttributes({ titleShadowHorizontal: newValue });
            },
            onChangeVertical: function onChangeVertical(newValue) {
              return setAttributes({ titleShadowVertical: newValue });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_padding__["a" /* default */], {
            paddingTop: titlePaddingT,
            paddingRight: titlePaddingR,
            paddingBottom: titlePaddingB,
            paddingLeft: titlePaddingL,
            onChangePadTop: function onChangePadTop(value) {
              return setAttributes({
                titlePaddingT: value === undefined ? 0 : value
              });
            },
            onChangePadRight: function onChangePadRight(value) {
              return setAttributes({
                titlePaddingR: value === undefined ? 0 : value
              });
            },
            onChangePadBottom: function onChangePadBottom(value) {
              return setAttributes({
                titlePaddingB: value === undefined ? 0 : value
              });
            },
            onChangePadLeft: function onChangePadLeft(value) {
              return setAttributes({
                titlePaddingL: value === undefined ? 0 : value
              });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Arrow"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(SelectControl, {
            label: __("Position"),
            options: ARROW,
            value: arrowPos,
            onChange: function onChange(newEffect) {
              return setAttributes({ arrowPos: newEffect });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Size "),
            value: arrowSize,
            onChange: function onChange(newValue) {
              return setAttributes({ arrowSize: newValue });
            }
          }),
          wp.element.createElement(
            "div",
            { className: "premium-control-toggle" },
            wp.element.createElement(
              "strong",
              null,
              __("Colors")
            ),
            wp.element.createElement(Dropdown, {
              className: "premium-control-toggle-btn",
              contentClassName: "premium-control-toggle-content",
              position: "bottom right",
              renderToggle: function renderToggle(_ref2) {
                var isOpen = _ref2.isOpen,
                    onToggle = _ref2.onToggle;
                return wp.element.createElement(
                  Button,
                  { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                  wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
              },
              renderContent: function renderContent() {
                return wp.element.createElement(
                  Fragment,
                  null,
                  wp.element.createElement(
                    "p",
                    null,
                    __("Arrow Color")
                  ),
                  wp.element.createElement(ColorPalette, {
                    value: arrowColor,
                    onChange: function onChange(newValue) {
                      return setAttributes({
                        arrowColor: newValue
                      });
                    },
                    allowReset: true
                  }),
                  wp.element.createElement(
                    "p",
                    null,
                    __("Background Color")
                  ),
                  wp.element.createElement(ColorPalette, {
                    value: arrowBack,
                    onChange: function onChange(newValue) {
                      return setAttributes({
                        arrowBack: newValue
                      });
                    },
                    allowReset: true
                  })
                );
              }
            })
          ),
          wp.element.createElement(RangeControl, {
            label: __("Border Radius (PX)"),
            value: arrowRadius,
            onChange: function onChange(newValue) {
              return setAttributes({
                arrowRadius: newValue === undefined ? 0 : newValue
              });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Padding (PX)"),
            value: arrowPadding,
            onChange: function onChange(newValue) {
              return setAttributes({
                arrowPadding: newValue === undefined ? 0 : newValue
              });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Content"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(SelectControl, {
            label: __("Type"),
            options: TYPE,
            value: contentType,
            onChange: function onChange(newType) {
              return setAttributes({ contentType: newType });
            },
            help: __("Gutenberg Block works only with single accordion item")
          }),
          wp.element.createElement(Toolbar, {
            controls: ALIGNS.map(function (align) {
              return {
                icon: "editor-align" + align,
                isActive: align === descAlign,
                onClick: function onClick() {
                  return setAttributes({ descAlign: align });
                }
              };
            })
          }),
          "text" === contentType && wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_typo__["a" /* default */], {
              components: ["size", "weight", "style", "upper", "spacing", "line"],
              size: descSize,
              weight: descWeight,
              style: descStyle,
              spacing: descLetter,
              line: descLine,
              upper: descUpper,
              onChangeSize: function onChangeSize(newSize) {
                return setAttributes({ descSize: newSize });
              },
              onChangeWeight: function onChangeWeight(newWeight) {
                return setAttributes({ descWeight: newWeight });
              },
              onChangeStyle: function onChangeStyle(newStyle) {
                return setAttributes({ descStyle: newStyle });
              },
              onChangeSpacing: function onChangeSpacing(newValue) {
                return setAttributes({ descLetter: newValue });
              },
              onChangeLine: function onChangeLine(newValue) {
                return setAttributes({ descLine: newValue });
              },
              onChangeUpper: function onChangeUpper(check) {
                return setAttributes({ descUpper: check });
              }
            }),
            wp.element.createElement(
              "div",
              { className: "premium-control-toggle" },
              wp.element.createElement(
                "strong",
                null,
                __("Colors")
              ),
              wp.element.createElement(Dropdown, {
                className: "premium-control-toggle-btn",
                contentClassName: "premium-control-toggle-content",
                position: "bottom right",
                renderToggle: function renderToggle(_ref3) {
                  var isOpen = _ref3.isOpen,
                      onToggle = _ref3.onToggle;
                  return wp.element.createElement(
                    Button,
                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                  );
                },
                renderContent: function renderContent() {
                  return wp.element.createElement(
                    Fragment,
                    null,
                    wp.element.createElement(
                      "p",
                      null,
                      __("Text Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                      value: descColor,
                      onChange: function onChange(newValue) {
                        return setAttributes({
                          descColor: newValue
                        });
                      },
                      allowReset: true
                    }),
                    wp.element.createElement(
                      "p",
                      null,
                      __("Background Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                      value: descBack,
                      onChange: function onChange(newValue) {
                        return setAttributes({
                          descBack: newValue
                        });
                      },
                      allowReset: true
                    })
                  );
                }
              })
            )
          ),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
            borderType: descBorder,
            borderWidth: descBorderWidth,
            borderColor: descBorderColor,
            borderRadius: descBorderRadius,
            onChangeType: function onChangeType(newType) {
              return setAttributes({ descBorder: newType });
            },
            onChangeWidth: function onChangeWidth(newWidth) {
              return setAttributes({ descBorderWidth: newWidth });
            },
            onChangeColor: function onChangeColor(colorValue) {
              return setAttributes({ descBorderColor: colorValue.hex });
            },
            onChangeRadius: function onChangeRadius(newrRadius) {
              return setAttributes({ descBorderRadius: newrRadius });
            }
          }),
          "text" === contentType && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_text_shadow__["a" /* default */], {
            color: textShadowColor,
            blur: textShadowBlur,
            horizontal: textShadowHorizontal,
            vertical: textShadowVertical,
            onChangeColor: function onChangeColor(newColor) {
              return setAttributes({
                textShadowColor: newColor === undefined ? "transparent" : newColor.hex
              });
            },
            onChangeBlur: function onChangeBlur(newBlur) {
              return setAttributes({
                textShadowBlur: newBlur === undefined ? 0 : newBlur
              });
            },
            onChangehHorizontal: function onChangehHorizontal(newValue) {
              return setAttributes({
                textShadowHorizontal: newValue === undefined ? 0 : newValue
              });
            },
            onChangeVertical: function onChangeVertical(newValue) {
              return setAttributes({
                textShadowVertical: newValue === undefined ? 0 : newValue
              });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_padding__["a" /* default */], {
            paddingTop: descPaddingT,
            paddingRight: descPaddingR,
            paddingBottom: descPaddingB,
            paddingLeft: descPaddingL,
            onChangePadTop: function onChangePadTop(value) {
              return setAttributes({
                descPaddingT: value === undefined ? 0 : value
              });
            },
            onChangePadRight: function onChangePadRight(value) {
              return setAttributes({
                descPaddingR: value === undefined ? 0 : value
              });
            },
            onChangePadBottom: function onChangePadBottom(value) {
              return setAttributes({
                descPaddingB: value === undefined ? 0 : value
              });
            },
            onChangePadLeft: function onChangePadLeft(value) {
              return setAttributes({
                descPaddingL: value === undefined ? 0 : value
              });
            }
          })
        )
      ), wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "div",
          { id: accordionId, className: "" + mainClasses },
          accordionItems
        ),
        wp.element.createElement(
          "div",
          { className: "premium-repeater" },
          wp.element.createElement(
            "button",
            {
              className: "premium-repeater-btn",
              onClick: function onClick() {
                return setAttributes({
                  repeaterItems: repeaterItems.concat([{
                    titleText: __("Awesome Title"),
                    descText: __("Cool Description")
                  }])
                });
              }
            },
            wp.element.createElement("i", { className: "dashicons dashicons-plus premium-repeater-icon" }),
            __("Add New Item")
          ),
          wp.element.createElement(
            "p",
            null,
            __("Add the items you need then reload the page")
          )
        )
      )];
    }
  }]);

  return PremiumAccordion;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumAccordion);

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(45),
    baseIteratee = __webpack_require__(118),
    baseMap = __webpack_require__(183),
    isArray = __webpack_require__(9);

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var baseMatches = __webpack_require__(119),
    baseMatchesProperty = __webpack_require__(170),
    identity = __webpack_require__(41),
    isArray = __webpack_require__(9),
    property = __webpack_require__(180);

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object') {
    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(120),
    getMatchData = __webpack_require__(169),
    matchesStrictComparable = __webpack_require__(91);

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function (object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(46),
    baseIsEqual = __webpack_require__(80);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack();
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;

/***/ }),
/* 121 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(32);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(32);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(32);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(32);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(31);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache();
  this.size = 0;
}

module.exports = stackClear;

/***/ }),
/* 127 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;

/***/ }),
/* 128 */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;

/***/ }),
/* 129 */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(31),
    Map = __webpack_require__(47),
    MapCache = __webpack_require__(48);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(77),
    isMasked = __webpack_require__(134),
    isObject = __webpack_require__(12),
    toSource = __webpack_require__(79);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(18);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;

/***/ }),
/* 133 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(135);

/** Used to detect methods masquerading as native. */
var maskSrcKey = function () {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? 'Symbol(src)_1.' + uid : '';
}();

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}

module.exports = isMasked;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(8);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;

/***/ }),
/* 136 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(138),
    ListCache = __webpack_require__(31),
    Map = __webpack_require__(47);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash(),
    'map': new (Map || ListCache)(),
    'string': new Hash()
  };
}

module.exports = mapCacheClear;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(139),
    hashDelete = __webpack_require__(140),
    hashGet = __webpack_require__(141),
    hashHas = __webpack_require__(142),
    hashSet = __webpack_require__(143);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(35);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

/***/ }),
/* 140 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(35);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(35);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(35);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(36);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

/***/ }),
/* 145 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}

module.exports = isKeyable;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(36);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(36);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(36);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(46),
    equalArrays = __webpack_require__(81),
    equalByTag = __webpack_require__(155),
    equalObjects = __webpack_require__(158),
    getTag = __webpack_require__(38),
    isArray = __webpack_require__(9),
    isBuffer = __webpack_require__(52),
    isTypedArray = __webpack_require__(88);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(48),
    setCacheAdd = __webpack_require__(151),
    setCacheHas = __webpack_require__(152);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new MapCache();
    while (++index < length) {
        this.add(values[index]);
    }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;

/***/ }),
/* 151 */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;

/***/ }),
/* 152 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;

/***/ }),
/* 153 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;

/***/ }),
/* 154 */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(18),
    Uint8Array = __webpack_require__(82),
    eq = __webpack_require__(33),
    equalArrays = __webpack_require__(81),
    mapToArray = __webpack_require__(156),
    setToArray = __webpack_require__(157);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == other + '';

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;

/***/ }),
/* 156 */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;

/***/ }),
/* 157 */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(83);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;

/***/ }),
/* 159 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(17),
    isObjectLike = __webpack_require__(14);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;

/***/ }),
/* 161 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(17),
    isLength = __webpack_require__(54),
    isObjectLike = __webpack_require__(14);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(37),
    nativeKeys = __webpack_require__(164);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(89);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(15),
    root = __webpack_require__(8);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(15),
    root = __webpack_require__(8);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(15),
    root = __webpack_require__(8);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(15),
    root = __webpack_require__(8);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(90),
    keys = __webpack_require__(19);

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
    var result = keys(object),
        length = result.length;

    while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
    }
    return result;
}

module.exports = getMatchData;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(80),
    get = __webpack_require__(171),
    hasIn = __webpack_require__(177),
    isKey = __webpack_require__(58),
    isStrictComparable = __webpack_require__(90),
    matchesStrictComparable = __webpack_require__(91),
    toKey = __webpack_require__(25);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function (object) {
    var objValue = get(object, path);
    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(57);

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(173);

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function (string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
      result.push('');
    }
  string.replace(rePropName, function (match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
  });
  return result;
});

module.exports = stringToPath;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(174);

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function (key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(48);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function memoized() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache)();
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(176);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(18),
    arrayMap = __webpack_require__(45),
    isArray = __webpack_require__(9),
    isSymbol = __webpack_require__(40);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = baseToString;

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(178),
    hasPath = __webpack_require__(179);

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;

/***/ }),
/* 178 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(39),
    isArguments = __webpack_require__(51),
    isArray = __webpack_require__(9),
    isIndex = __webpack_require__(53),
    isLength = __webpack_require__(54),
    toKey = __webpack_require__(25);

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
}

module.exports = hasPath;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(181),
    basePropertyDeep = __webpack_require__(182),
    isKey = __webpack_require__(58),
    toKey = __webpack_require__(25);

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;

/***/ }),
/* 181 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function (object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(57);

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function (object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(184),
    isArrayLike = __webpack_require__(20);

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function (value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(185),
    createBaseEach = __webpack_require__(188);

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(186),
    keys = __webpack_require__(19);

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(187);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;

/***/ }),
/* 187 */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function (object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(20);

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function (collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while (fromRight ? index-- : ++index < length) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;

/***/ }),
/* 189 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var _wp$editor = wp.editor,
    RichText = _wp$editor.RichText,
    InnerBlocks = _wp$editor.InnerBlocks;


var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      accordionId = _props$attributes.accordionId,
      repeaterItems = _props$attributes.repeaterItems,
      direction = _props$attributes.direction,
      titleTag = _props$attributes.titleTag,
      titleSize = _props$attributes.titleSize,
      titleLine = _props$attributes.titleLine,
      titleLetter = _props$attributes.titleLetter,
      titleStyle = _props$attributes.titleStyle,
      titleUpper = _props$attributes.titleUpper,
      titleWeight = _props$attributes.titleWeight,
      titleColor = _props$attributes.titleColor,
      titleBorder = _props$attributes.titleBorder,
      titleBorderColor = _props$attributes.titleBorderColor,
      titleBorderWidth = _props$attributes.titleBorderWidth,
      titleBorderRadius = _props$attributes.titleBorderRadius,
      titleBack = _props$attributes.titleBack,
      titleShadowBlur = _props$attributes.titleShadowBlur,
      titleShadowColor = _props$attributes.titleShadowColor,
      titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
      titleShadowVertical = _props$attributes.titleShadowVertical,
      titlePaddingT = _props$attributes.titlePaddingT,
      titlePaddingR = _props$attributes.titlePaddingR,
      titlePaddingB = _props$attributes.titlePaddingB,
      titlePaddingL = _props$attributes.titlePaddingL,
      arrowColor = _props$attributes.arrowColor,
      arrowBack = _props$attributes.arrowBack,
      arrowPos = _props$attributes.arrowPos,
      arrowPadding = _props$attributes.arrowPadding,
      arrowSize = _props$attributes.arrowSize,
      arrowRadius = _props$attributes.arrowRadius,
      contentType = _props$attributes.contentType,
      descAlign = _props$attributes.descAlign,
      descSize = _props$attributes.descSize,
      descLine = _props$attributes.descLine,
      descLetter = _props$attributes.descLetter,
      descStyle = _props$attributes.descStyle,
      descUpper = _props$attributes.descUpper,
      descWeight = _props$attributes.descWeight,
      descColor = _props$attributes.descColor,
      descBack = _props$attributes.descBack,
      descBorder = _props$attributes.descBorder,
      descBorderColor = _props$attributes.descBorderColor,
      descBorderRadius = _props$attributes.descBorderRadius,
      descBorderWidth = _props$attributes.descBorderWidth,
      textShadowBlur = _props$attributes.textShadowBlur,
      textShadowColor = _props$attributes.textShadowColor,
      textShadowHorizontal = _props$attributes.textShadowHorizontal,
      textShadowVertical = _props$attributes.textShadowVertical,
      descPaddingT = _props$attributes.descPaddingT,
      descPaddingR = _props$attributes.descPaddingR,
      descPaddingB = _props$attributes.descPaddingB,
      descPaddingL = _props$attributes.descPaddingL;


  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-accordion');

  var accordionItems = repeaterItems.map(function (item, index) {
    return wp.element.createElement(
      'div',
      {
        id: 'premium-accordion__layer' + index,
        className: 'premium-accordion__content_wrap'
      },
      wp.element.createElement(
        'div',
        {
          className: 'premium-accordion__title_wrap premium-accordion__' + direction + ' premium-accordion__' + arrowPos,
          style: {
            backgroundColor: titleBack,
            border: titleBorder,
            borderWidth: titleBorderWidth + "px",
            borderRadius: titleBorderRadius + "px",
            borderColor: titleBorderColor,
            paddingTop: titlePaddingT,
            paddingRight: titlePaddingR,
            paddingBottom: titlePaddingB,
            paddingLeft: titlePaddingL
          }
        },
        wp.element.createElement(
          'div',
          { className: 'premium-accordion__title' },
          wp.element.createElement(RichText.Content, {
            tagName: titleTag.toLowerCase(),
            className: 'premium-accordion__title_text',
            value: item.titleText,
            style: {
              color: titleColor,
              fontSize: titleSize + "px",
              letterSpacing: titleLetter + "px",
              textTransform: titleUpper ? "uppercase" : "none",
              fontStyle: titleStyle,
              fontWeight: titleWeight,
              textShadow: titleShadowHorizontal + 'px ' + titleShadowVertical + 'px ' + titleShadowBlur + 'px ' + titleShadowColor,
              lineHeight: titleLine + "px"
            }
          })
        ),
        wp.element.createElement(
          'div',
          { className: 'premium-accordion__icon_wrap' },
          wp.element.createElement(
            'svg',
            {
              className: 'premium-accordion__icon premium-accordion__closed',
              role: 'img',
              focusable: 'false',
              xmlns: 'http://www.w3.org/2000/svg',
              width: arrowSize,
              height: arrowSize,
              viewBox: '0 0 20 20',
              style: {
                fill: arrowColor,
                backgroundColor: arrowBack,
                padding: arrowPadding + "px",
                borderRadius: arrowRadius + "px"
              }
            },
            wp.element.createElement('polygon', { points: '16.7,3.3 10,10 3.3,3.4 0,6.7 10,16.7 10,16.6 20,6.7 ' })
          )
        )
      ),
      wp.element.createElement(
        'div',
        {
          className: 'premium-accordion__desc_wrap premium-accordion__desc_close',
          style: {
            textAlign: descAlign,
            backgroundColor: descBack,
            border: descBorder,
            borderWidth: descBorderWidth + "px",
            borderRadius: descBorderRadius + "px",
            borderColor: descBorderColor,
            paddingTop: descPaddingT,
            paddingRight: descPaddingR,
            paddingBottom: descPaddingB,
            paddingLeft: descPaddingL
          }
        },
        "text" === contentType && wp.element.createElement(RichText.Content, {
          tagName: 'p',
          className: 'premium-accordion__desc',
          value: item.descText,
          style: {
            color: descColor,
            fontSize: descSize + "px",
            letterSpacing: descLetter + "px",
            textTransform: descUpper ? "uppercase" : "none",
            textShadow: textShadowHorizontal + 'px ' + textShadowVertical + 'px ' + textShadowBlur + 'px ' + textShadowColor,
            fontStyle: descStyle,
            fontWeight: descWeight,
            lineHeight: descLine + "px"
          }
        }),
        "block" === contentType && wp.element.createElement(InnerBlocks.Content, null)
      )
    );
  });
  return wp.element.createElement(
    'div',
    { id: accordionId, className: '' + mainClasses },
    accordionItems
  );
};
/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 190 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var className = "premium-accordion";

var __ = wp.i18n.__;
var _wp$editor = wp.editor,
    RichText = _wp$editor.RichText,
    InnerBlocks = _wp$editor.InnerBlocks;


var deprecated_attributes = {
  accordionId: {
    type: "string"
  },
  repeaterItems: {
    type: "array",
    default: [{
      titleText: __("Awesome Title"),
      descText: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
    }]
  },
  direction: {
    type: "string",
    default: "ltr"
  },
  titleTag: {
    type: "string",
    default: "H4"
  },
  titleColor: {
    type: "string"
  },
  titleSize: {
    type: "number"
  },
  titleLine: {
    type: "number"
  },
  titleLetter: {
    type: "number"
  },
  titleStyle: {
    type: "string"
  },
  titleUpper: {
    type: "boolean"
  },
  titleWeight: {
    type: "number",
    default: 500
  },
  titleBorder: {
    type: "string",
    default: "none"
  },
  titleBorderWidth: {
    type: "number",
    default: "1"
  },
  titleBorderRadius: {
    type: "number",
    default: "0"
  },
  titleBorderColor: {
    type: "string"
  },
  titleBack: {
    type: "string"
  },
  titleShadowColor: {
    type: "string"
  },
  titleShadowBlur: {
    type: "number",
    default: "0"
  },
  titleShadowHorizontal: {
    type: "number",
    default: "0"
  },
  titleShadowVertical: {
    type: "number",
    default: "0"
  },
  titlePaddingT: {
    type: "number"
  },
  titlePaddingR: {
    type: "number"
  },
  titlePaddingB: {
    type: "number"
  },
  titlePaddingL: {
    type: "number"
  },
  arrowColor: {
    type: "string"
  },
  arrowBack: {
    type: "string"
  },
  arrowPos: {
    type: "string",
    default: "out"
  },
  arrowPadding: {
    type: "number"
  },
  arrowRadius: {
    type: "number"
  },
  arrowSize: {
    type: "number",
    default: 20
  },
  contentType: {
    type: "string",
    default: "text"
  },
  descAlign: {
    type: "string",
    default: "left"
  },
  descColor: {
    type: "string"
  },
  descBack: {
    type: "string"
  },
  descBorder: {
    type: "string",
    default: "none"
  },
  descBorderWidth: {
    type: "number",
    default: "1"
  },
  descBorderRadius: {
    type: "number",
    default: "0"
  },
  descBorderColor: {
    type: "string"
  },
  descSize: {
    type: "number"
  },
  descLine: {
    type: "number"
  },
  descLetter: {
    type: "number"
  },
  descStyle: {
    type: "string"
  },
  descUpper: {
    type: "boolean"
  },
  descWeight: {
    type: "number",
    default: 500
  },
  textShadowColor: {
    type: "string"
  },
  textShadowBlur: {
    type: "number",
    default: "0"
  },
  textShadowHorizontal: {
    type: "number",
    default: "0"
  },
  textShadowVertical: {
    type: "number",
    default: "0"
  },
  descPaddingT: {
    type: "number"
  },
  descPaddingR: {
    type: "number"
  },
  descPaddingB: {
    type: "number"
  },
  descPaddingL: {
    type: "number",
    default: 10
  }
};

var deprecated = [{
  attributes: deprecated_attributes,
  save: function save(props) {
    var _props$attributes = props.attributes,
        accordionId = _props$attributes.accordionId,
        repeaterItems = _props$attributes.repeaterItems,
        direction = _props$attributes.direction,
        titleTag = _props$attributes.titleTag,
        titleSize = _props$attributes.titleSize,
        titleLine = _props$attributes.titleLine,
        titleLetter = _props$attributes.titleLetter,
        titleStyle = _props$attributes.titleStyle,
        titleUpper = _props$attributes.titleUpper,
        titleWeight = _props$attributes.titleWeight,
        titleColor = _props$attributes.titleColor,
        titleBorder = _props$attributes.titleBorder,
        titleBorderColor = _props$attributes.titleBorderColor,
        titleBorderWidth = _props$attributes.titleBorderWidth,
        titleBorderRadius = _props$attributes.titleBorderRadius,
        titleBack = _props$attributes.titleBack,
        titleShadowBlur = _props$attributes.titleShadowBlur,
        titleShadowColor = _props$attributes.titleShadowColor,
        titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
        titleShadowVertical = _props$attributes.titleShadowVertical,
        titlePaddingT = _props$attributes.titlePaddingT,
        titlePaddingR = _props$attributes.titlePaddingR,
        titlePaddingB = _props$attributes.titlePaddingB,
        titlePaddingL = _props$attributes.titlePaddingL,
        arrowColor = _props$attributes.arrowColor,
        arrowBack = _props$attributes.arrowBack,
        arrowPos = _props$attributes.arrowPos,
        arrowPadding = _props$attributes.arrowPadding,
        arrowSize = _props$attributes.arrowSize,
        arrowRadius = _props$attributes.arrowRadius,
        contentType = _props$attributes.contentType,
        descAlign = _props$attributes.descAlign,
        descSize = _props$attributes.descSize,
        descLine = _props$attributes.descLine,
        descLetter = _props$attributes.descLetter,
        descStyle = _props$attributes.descStyle,
        descUpper = _props$attributes.descUpper,
        descWeight = _props$attributes.descWeight,
        descColor = _props$attributes.descColor,
        descBack = _props$attributes.descBack,
        descBorder = _props$attributes.descBorder,
        descBorderColor = _props$attributes.descBorderColor,
        descBorderRadius = _props$attributes.descBorderRadius,
        descBorderWidth = _props$attributes.descBorderWidth,
        descPaddingT = _props$attributes.descPaddingT,
        descPaddingR = _props$attributes.descPaddingR,
        descPaddingB = _props$attributes.descPaddingB,
        descPaddingL = _props$attributes.descPaddingL;


    var accordionItems = repeaterItems.map(function (item, index) {
      return wp.element.createElement(
        "div",
        {
          id: className + "__layer" + index,
          className: className + "__content_wrap"
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__title_wrap " + className + "__" + direction + " " + className + "__" + arrowPos,
            style: {
              backgroundColor: titleBack,
              border: titleBorder,
              borderWidth: titleBorderWidth + "px",
              borderRadius: titleBorderRadius + "px",
              borderColor: titleBorderColor,
              paddingTop: titlePaddingT,
              paddingRight: titlePaddingR,
              paddingBottom: titlePaddingB,
              paddingLeft: titlePaddingL
            }
          },
          wp.element.createElement(
            "div",
            { className: className + "__title" },
            wp.element.createElement(RichText.Content, {
              tagName: titleTag.toLowerCase(),
              className: className + "__title_text",
              value: item.titleText,
              style: {
                color: titleColor,
                fontSize: titleSize + "px",
                letterSpacing: titleLetter + "px",
                textTransform: titleUpper ? "uppercase" : "none",
                fontStyle: titleStyle,
                fontWeight: titleWeight,
                textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
                lineHeight: titleLine + "px"
              }
            })
          ),
          wp.element.createElement(
            "div",
            { className: className + "__icon_wrap" },
            wp.element.createElement(
              "svg",
              {
                className: className + "__icon premium-accordion__closed",
                role: "img",
                focusable: "false",
                xmlns: "http://www.w3.org/2000/svg",
                width: arrowSize,
                height: arrowSize,
                viewBox: "0 0 20 20",
                style: {
                  fill: arrowColor,
                  backgroundColor: arrowBack,
                  padding: arrowPadding + "px",
                  borderRadius: arrowRadius + "px"
                }
              },
              wp.element.createElement("polygon", { points: "16.7,3.3 10,10 3.3,3.4 0,6.7 10,16.7 10,16.6 20,6.7 " })
            )
          )
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__desc_wrap premium-accordion__desc_close",
            style: {
              textAlign: descAlign,
              backgroundColor: descBack,
              border: descBorder,
              borderWidth: descBorderWidth + "px",
              borderRadius: descBorderRadius + "px",
              borderColor: descBorderColor,
              paddingTop: descPaddingT,
              paddingRight: descPaddingR,
              paddingBottom: descPaddingB,
              paddingLeft: descPaddingL
            }
          },
          "text" === contentType && wp.element.createElement(RichText.Content, {
            tagName: "p",
            className: className + "__desc",
            value: item.descText,
            style: {
              color: descColor,
              fontSize: descSize + "px",
              letterSpacing: descLetter + "px",
              textTransform: descUpper ? "uppercase" : "none",
              fontStyle: descStyle,
              fontWeight: descWeight,
              lineHeight: descLine + "px"
            }
          }),
          "block" === contentType && wp.element.createElement(InnerBlocks.Content, null)
        )
      );
    });
    return wp.element.createElement(
      "div",
      { id: accordionId, className: "" + className },
      accordionItems
    );
  }
}];
/* harmony default export */ __webpack_exports__["a"] = (deprecated);

/***/ }),
/* 191 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(192);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__save__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__deprecated__ = __webpack_require__(194);







var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var bannerAttrs = {
  imageID: {
    type: "number"
  },
  imageURL: {
    type: "string",
    source: "attribute",
    attribute: "src",
    selector: ".premium-banner__img"
  },
  title: {
    type: "array",
    source: "children",
    selector: ".premium-banner__title",
    default: __("Awesome Title")
  },
  titleTag: {
    type: "string",
    default: "H3"
  },
  desc: {
    type: "array",
    source: "children",
    selector: ".premium-banner__desc",
    default: __("Cool Description!!")
  },
  contentAlign: {
    type: "string",
    default: "left"
  },
  effect: {
    type: "string",
    default: "effect1"
  },
  hoverEffect: {
    type: "string",
    default: "none"
  },
  height: {
    type: "string",
    default: "default"
  },
  minHeight: {
    type: "number"
  },
  verAlign: {
    type: "string",
    default: "top"
  },
  hovered: {
    type: "boolean",
    default: false
  },
  responsive: {
    type: "boolean",
    default: false
  },
  background: {
    type: "string"
  },
  opacity: {
    type: "number",
    default: 50
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number",
    default: "0"
  },
  borderColor: {
    type: "string"
  },
  titleColor: {
    type: "string"
  },
  titleSize: {
    type: "number",
    default: "20"
  },
  titleLine: {
    type: "number"
  },
  titleWeight: {
    type: "number"
  },
  titleBack: {
    type: "string"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  descColor: {
    type: "string",
    default: "#000"
  },
  descSize: {
    type: "number",
    default: "20"
  },
  descLine: {
    type: "number"
  },
  descWeight: {
    type: "number"
  },
  descShadowColor: {
    type: "string"
  },
  descShadowBlur: {
    type: "number",
    default: "0"
  },
  descShadowHorizontal: {
    type: "number",
    default: "0"
  },
  descShadowVertical: {
    type: "number",
    default: "0"
  },
  urlCheck: {
    type: "boolean",
    default: false
  },
  target: {
    type: "boolean",
    default: false
  },
  url: {
    type: "string",
    source: "attribute",
    attribute: "href",
    selector: ".premium-banner__link"
  },
  sepColor: {
    type: "string"
  },
  id: {
    type: "string"
  },
  blur: {
    type: "number",
    default: "0"
  },
  bright: {
    type: "number",
    default: "100"
  },
  contrast: {
    type: "number",
    default: "100"
  },
  saturation: {
    type: "number",
    default: "100"
  },
  hue: {
    type: "number",
    default: "0"
  },
  containerShadowColor: {
    type: "string"
  },
  containerShadowBlur: {
    type: "number",
    default: "0"
  },
  containerShadowHorizontal: {
    type: "number",
    default: "0"
  },
  containerShadowVertical: {
    type: "number",
    default: "0"
  },
  containerShadowPosition: {
    type: "string",
    default: ""
  },
  paddingT: {
    type: "number"
  },
  paddingR: {
    type: "number"
  },
  paddingB: {
    type: "number"
  },
  paddingL: {
    type: "number"
  },
  paddingU: {
    type: "string"
  }
};
registerBlockType("premium/banner", {
  title: __("Banner"),
  icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "banner" }),
  category: "premium-blocks",
  attributes: bannerAttrs,
  supports: {
    inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["c" /* banner */]
  },
  example: {},
  edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
  save: __WEBPACK_IMPORTED_MODULE_3__save__["a" /* default */],
  deprecated: __WEBPACK_IMPORTED_MODULE_4__deprecated__["a" /* default */]
});

/***/ }),
/* 192 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_filters__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_padding__ = __webpack_require__(16);








var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var _wp$components = wp.components,
    IconButton = _wp$components.IconButton,
    Toolbar = _wp$components.Toolbar,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    InspectorControls = _wp$editor.InspectorControls,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    ColorPalette = _wp$editor.ColorPalette,
    RichText = _wp$editor.RichText,
    MediaUpload = _wp$editor.MediaUpload;


var edit = function edit(props) {
  var isSelected = props.isSelected,
      setAttributes = props.setAttributes,
      className = props.className,
      blockID = props.clientId;
  var _props$attributes = props.attributes,
      id = _props$attributes.id,
      imageID = _props$attributes.imageID,
      imageURL = _props$attributes.imageURL,
      title = _props$attributes.title,
      titleTag = _props$attributes.titleTag,
      desc = _props$attributes.desc,
      contentAlign = _props$attributes.contentAlign,
      effect = _props$attributes.effect,
      hoverEffect = _props$attributes.hoverEffect,
      height = _props$attributes.height,
      minHeight = _props$attributes.minHeight,
      verAlign = _props$attributes.verAlign,
      hovered = _props$attributes.hovered,
      responsive = _props$attributes.responsive,
      background = _props$attributes.background,
      opacity = _props$attributes.opacity,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      titleColor = _props$attributes.titleColor,
      titleSize = _props$attributes.titleSize,
      titleLine = _props$attributes.titleLine,
      titleWeight = _props$attributes.titleWeight,
      titleBack = _props$attributes.titleBack,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      descColor = _props$attributes.descColor,
      descSize = _props$attributes.descSize,
      descLine = _props$attributes.descLine,
      descWeight = _props$attributes.descWeight,
      descShadowBlur = _props$attributes.descShadowBlur,
      descShadowColor = _props$attributes.descShadowColor,
      descShadowHorizontal = _props$attributes.descShadowHorizontal,
      descShadowVertical = _props$attributes.descShadowVertical,
      urlCheck = _props$attributes.urlCheck,
      url = _props$attributes.url,
      target = _props$attributes.target,
      sepColor = _props$attributes.sepColor,
      blur = _props$attributes.blur,
      bright = _props$attributes.bright,
      contrast = _props$attributes.contrast,
      saturation = _props$attributes.saturation,
      hue = _props$attributes.hue,
      containerShadowBlur = _props$attributes.containerShadowBlur,
      containerShadowColor = _props$attributes.containerShadowColor,
      containerShadowHorizontal = _props$attributes.containerShadowHorizontal,
      containerShadowVertical = _props$attributes.containerShadowVertical,
      containerShadowPosition = _props$attributes.containerShadowPosition,
      paddingB = _props$attributes.paddingB,
      paddingT = _props$attributes.paddingT,
      paddingR = _props$attributes.paddingR,
      paddingL = _props$attributes.paddingL,
      paddingU = _props$attributes.paddingU;

  var ALIGNS = [{
    value: "flex-start",
    label: __("Top")
  }, {
    value: "center",
    label: __("Middle")
  }, {
    value: "flex-end",
    label: __("Bottom")
  }, {
    value: "inherit",
    label: __("Full")
  }];
  var EFFECTS = [{
    value: "effect1",
    label: __("Style 1")
  }, {
    value: "effect2",
    label: __("Style 2")
  }, {
    value: "effect3",
    label: __("Style 3")
  }, {
    value: "effect4",
    label: __("Style 4")
  }, {
    value: "effect5",
    label: __("Style 5")
  }, {
    value: "effect6",
    label: __("Style 6")
  }];
  var HOVER = [{
    value: "none",
    label: __("None")
  }, {
    value: "zoomin",
    label: __("Zoom In")
  }, {
    value: "zoomout",
    label: "Zoom Out"
  }, {
    value: "scale",
    label: __("Scale")
  }, {
    value: "gray",
    label: __("Gray Scale")
  }, {
    value: "blur",
    label: __("Blur")
  }, {
    value: "bright",
    label: __("Bright")
  }, {
    value: "sepia",
    label: __("Sepia")
  }];
  var HEIGHT = [{
    value: "default",
    label: __("Default")
  }, {
    value: "custom",
    label: __("Custom")
  }];
  setAttributes({ id: blockID });

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-banner");

  return [isSelected && wp.element.createElement(
    BlockControls,
    { key: "controls" },
    wp.element.createElement(
      Toolbar,
      null,
      wp.element.createElement(IconButton, {
        label: __("Refresh this button when it conflict with other buttons styles"),
        icon: "update",
        className: "components-toolbar__control",
        onClick: function onClick() {
          return setAttributes({ id: blockID });
        }
      })
    ),
    wp.element.createElement(AlignmentToolbar, {
      value: contentAlign,
      onChange: function onChange(newAlign) {
        return setAttributes({ contentAlign: newAlign });
      }
    })
  ), isSelected && wp.element.createElement(
    InspectorControls,
    { key: "inspector" },
    wp.element.createElement(
      PanelBody,
      {
        title: __("General Settings"),
        className: "premium-panel-body",
        initialOpen: true
      },
      imageURL && wp.element.createElement("img", { src: imageURL, width: "100%", height: "auto" }),
      wp.element.createElement(MediaUpload, {
        allowedTypes: ["image"],
        onSelect: function onSelect(media) {
          setAttributes({ imageURL: media.url, imageID: media.id });
        },
        type: "image",
        value: imageID,
        render: function render(_ref) {
          var open = _ref.open;
          return wp.element.createElement(
            IconButton,
            {
              className: "premium-media-uplpad-btn",
              label: __("Change Image"),
              icon: "edit",
              onClick: open
            },
            __("Change Image")
          );
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_filters__["a" /* default */], {
        blur: blur,
        bright: bright,
        contrast: contrast,
        saturation: saturation,
        hue: hue,
        onChangeBlur: function onChangeBlur(value) {
          return setAttributes({ blur: value });
        },
        onChangeBright: function onChangeBright(value) {
          return setAttributes({ bright: value });
        },
        onChangeContrast: function onChangeContrast(value) {
          return setAttributes({ contrast: value });
        },
        onChangeSat: function onChangeSat(value) {
          return setAttributes({ saturation: value });
        },
        onChangeHue: function onChangeHue(value) {
          return setAttributes({ hue: value });
        }
      }),
      wp.element.createElement(SelectControl, {
        label: __("Banner Style"),
        value: effect,
        onChange: function onChange(newEffect) {
          return setAttributes({ effect: newEffect });
        },
        options: EFFECTS
      }),
      wp.element.createElement(SelectControl, {
        label: __("Image Hover Effect"),
        options: HOVER,
        value: hoverEffect,
        onChange: function onChange(newEffect) {
          return setAttributes({ hoverEffect: newEffect });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Always Hovered"),
        checked: hovered,
        onChange: function onChange(check) {
          return setAttributes({ hovered: check });
        }
      }),
      wp.element.createElement(SelectControl, {
        label: __("Height"),
        options: HEIGHT,
        value: height,
        onChange: function onChange(newHeight) {
          return setAttributes({ height: newHeight });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        "custom" === height && __("Min Height (PX)")
      ),
      "custom" === height && wp.element.createElement(RangeControl, {
        value: minHeight,
        min: "10",
        max: "800",
        onChange: function onChange(newSize) {
          return setAttributes({ minHeight: newSize });
        }
      }),
      "custom" === height && wp.element.createElement(SelectControl, {
        label: __("Vertical Align"),
        options: ALIGNS,
        value: verAlign,
        onChange: function onChange(newValue) {
          return setAttributes({ verAlign: newValue });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Overlay")
        ),
        wp.element.createElement(ColorPalette, {
          value: background,
          onChange: function onChange(newValue) {
            return setAttributes({
              background: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(RangeControl, {
        label: __("Overlay Opacity"),
        value: opacity,
        min: "1",
        max: "100",
        onChange: function onChange(newOpacity) {
          return setAttributes({
            opacity: newOpacity === undefined ? 50 : newOpacity
          });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Link"),
        checked: urlCheck,
        onChange: function onChange(newCheck) {
          return setAttributes({ urlCheck: newCheck });
        }
      }),
      urlCheck && wp.element.createElement(TextControl, {
        value: url,
        onChange: function onChange(newURL) {
          return setAttributes({ url: newURL });
        }
      }),
      urlCheck && wp.element.createElement(ToggleControl, {
        label: __("Open link in new tab"),
        checked: target,
        onChange: function onChange(newValue) {
          return setAttributes({ target: newValue });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Hide Description on Mobiles"),
        checked: responsive,
        onChange: function onChange(newValue) {
          return setAttributes({ responsive: newValue });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Title Settings"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        "p",
        null,
        __("HTML Tag")
      ),
      wp.element.createElement(Toolbar, {
        controls: "123456".split("").map(function (tag) {
          return {
            icon: "heading",
            isActive: "H" + tag === titleTag,
            onClick: function onClick() {
              return setAttributes({ titleTag: "H" + tag });
            },
            subscript: tag
          };
        })
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "line"],
        size: titleSize,
        weight: titleWeight,
        line: titleLine,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ titleSize: newSize });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({
            titleWeight: newWeight === undefined ? 500 : newWeight
          });
        },
        onChangeLine: function onChangeLine(newValue) {
          return setAttributes({
            titleLine: newValue === undefined ? 10 : newValue
          });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Text Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: titleColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              titleColor: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      "effect3" === effect && wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Separator Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: sepColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              sepColor: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      "effect2" === effect && wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Background Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: titleBack,
          onChange: function onChange(newValue) {
            return setAttributes({
              titleBack: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
        color: shadowColor,
        blur: shadowBlur,
        horizontal: shadowHorizontal,
        vertical: shadowVertical,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            shadowColor: newColor === undefined ? "transparent" : newColor.hex
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            shadowBlur: newBlur === undefined ? 0 : newBlur
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            shadowHorizontal: newValue === undefined ? 0 : newValue
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            shadowVertical: newValue === undefined ? 0 : newValue
          });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Description Settings"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "line"],
        size: descSize,
        weight: descWeight,
        line: descLine,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ descSize: newSize });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({
            descWeight: newWeight === undefined ? 500 : newWeight
          });
        },
        onChangeLine: function onChangeLine(newValue) {
          return setAttributes({
            descLine: newValue === undefined ? 10 : newValue
          });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Text Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: descColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              descColor: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
        color: descShadowColor,
        blur: descShadowBlur,
        horizontal: descShadowHorizontal,
        vertical: descShadowVertical,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            descShadowColor: newColor === undefined ? "transparent" : newColor.hex
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            descShadowBlur: newBlur === undefined ? 0 : newBlur
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            descShadowHorizontal: newValue === undefined ? 0 : newValue
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            descShadowVertical: newValue === undefined ? 0 : newValue
          });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Container Style"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
        borderType: borderType,
        borderWidth: borderWidth,
        borderColor: borderColor,
        borderRadius: borderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ borderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({
            borderWidth: newWidth === undefined ? 0 : newWidth
          });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({
            borderColor: colorValue === undefined ? "transparent" : colorValue.hex
          });
        },
        onChangeRadius: function onChangeRadius(newRadius) {
          return setAttributes({
            borderRadius: newRadius === undefined ? 0 : newRadius
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_box_shadow__["a" /* default */], {
        inner: true,
        color: containerShadowColor,
        blur: containerShadowBlur,
        horizontal: containerShadowHorizontal,
        vertical: containerShadowVertical,
        position: containerShadowPosition,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            containerShadowColor: newColor.hex
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            containerShadowBlur: newBlur
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            containerShadowHorizontal: newValue
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            containerShadowVertical: newValue
          });
        },
        onChangePosition: function onChangePosition(newValue) {
          return setAttributes({
            containerShadowPosition: newValue
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_padding__["a" /* default */], {
        paddingTop: paddingT,
        paddingRight: paddingR,
        paddingBottom: paddingB,
        paddingLeft: paddingL,
        showUnits: true,
        onChangePadTop: function onChangePadTop(value) {
          return setAttributes({
            paddingT: value
          });
        },
        onChangePadRight: function onChangePadRight(value) {
          return setAttributes({
            paddingR: value
          });
        },
        onChangePadBottom: function onChangePadBottom(value) {
          return setAttributes({
            paddingB: value
          });
        },
        onChangePadLeft: function onChangePadLeft(value) {
          return setAttributes({
            paddingL: value
          });
        },
        selectedUnit: paddingU,
        onChangePadSizeUnit: function onChangePadSizeUnit(newvalue) {
          return setAttributes({ paddingU: newvalue });
        }
      })
    )
  ), wp.element.createElement(
    "div",
    {
      id: "premium-banner-" + id,
      className: mainClasses + " premium-banner__responsive_" + responsive,
      style: {
        boxShadow: containerShadowHorizontal + "px " + containerShadowVertical + "px " + containerShadowBlur + "px " + containerShadowColor + " " + containerShadowPosition,
        paddingTop: paddingT + paddingU,
        paddingRight: paddingR + paddingU,
        paddingBottom: paddingB + paddingU,
        paddingLeft: paddingL + paddingU
      }
    },
    wp.element.createElement("style", {
      dangerouslySetInnerHTML: {
        __html: ["#premium-banner-" + id + " .premium-banner__effect3 .premium-banner__title_wrap::after{", "background: " + sepColor, "}", "#premium-banner-" + id + " .premium-banner__inner {", "background: " + background, "}", "#premium-banner-" + id + " .premium-banner__img.premium-banner__active {", "opacity: " + (background ? 1 - opacity / 100 : 1) + " ", "}"].join("\n")
      }
    }),
    imageURL && wp.element.createElement(
      "div",
      {
        className: "premium-banner__inner premium-banner__min premium-banner__" + effect + " premium-banner__" + hoverEffect + " hover_" + hovered,
        style: {
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor
        }
      },
      wp.element.createElement(
        "div",
        {
          className: "premium-banner__img_wrap premium-banner__" + height,
          style: {
            minHeight: minHeight,
            alignItems: verAlign
          }
        },
        wp.element.createElement("img", {
          className: "premium-banner__img",
          alt: "Banner Image",
          src: imageURL,
          style: {
            filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
          }
        })
      ),
      wp.element.createElement(
        "div",
        {
          className: "premium-banner__content",
          style: {
            background: "effect2" === effect ? titleBack : "transparent"
          }
        },
        wp.element.createElement(
          "div",
          {
            className: "premium-banner__title_wrap",
            style: {
              textAlign: contentAlign
            }
          },
          wp.element.createElement(RichText, {
            tagName: titleTag.toLowerCase(),
            className: "premium-banner__title",
            value: title,
            isSelected: false,
            onChange: function onChange(newText) {
              return setAttributes({ title: newText });
            },
            style: {
              color: titleColor,
              fontSize: titleSize + "px",
              fontWeight: titleWeight,
              lineHeight: titleLine + "px",
              textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
            }
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: "premium-banner__desc_wrap",
            style: {
              textAlign: contentAlign
            }
          },
          wp.element.createElement(RichText, {
            tagName: "p",
            className: "premium-banner__desc",
            value: desc,
            isSelected: false,
            onChange: function onChange(newText) {
              return setAttributes({ desc: newText });
            },
            style: {
              color: descColor,
              fontSize: descSize + "px",
              fontWeight: descWeight,
              lineHeight: descLine + "px",
              textShadow: descShadowHorizontal + "px " + descShadowVertical + "px " + descShadowBlur + "px " + descShadowColor
            }
          })
        )
      )
    )
  )];
};
/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 193 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var RichText = wp.editor.RichText;


var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      id = _props$attributes.id,
      imageURL = _props$attributes.imageURL,
      title = _props$attributes.title,
      titleTag = _props$attributes.titleTag,
      desc = _props$attributes.desc,
      contentAlign = _props$attributes.contentAlign,
      effect = _props$attributes.effect,
      hoverEffect = _props$attributes.hoverEffect,
      height = _props$attributes.height,
      minHeight = _props$attributes.minHeight,
      verAlign = _props$attributes.verAlign,
      hovered = _props$attributes.hovered,
      responsive = _props$attributes.responsive,
      background = _props$attributes.background,
      opacity = _props$attributes.opacity,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      titleColor = _props$attributes.titleColor,
      titleBack = _props$attributes.titleBack,
      titleSize = _props$attributes.titleSize,
      titleWeight = _props$attributes.titleWeight,
      titleLine = _props$attributes.titleLine,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      descColor = _props$attributes.descColor,
      descSize = _props$attributes.descSize,
      descLine = _props$attributes.descLine,
      descWeight = _props$attributes.descWeight,
      descShadowBlur = _props$attributes.descShadowBlur,
      descShadowColor = _props$attributes.descShadowColor,
      descShadowHorizontal = _props$attributes.descShadowHorizontal,
      descShadowVertical = _props$attributes.descShadowVertical,
      urlCheck = _props$attributes.urlCheck,
      url = _props$attributes.url,
      target = _props$attributes.target,
      sepColor = _props$attributes.sepColor,
      blur = _props$attributes.blur,
      bright = _props$attributes.bright,
      contrast = _props$attributes.contrast,
      saturation = _props$attributes.saturation,
      hue = _props$attributes.hue,
      containerShadowBlur = _props$attributes.containerShadowBlur,
      containerShadowColor = _props$attributes.containerShadowColor,
      containerShadowHorizontal = _props$attributes.containerShadowHorizontal,
      containerShadowVertical = _props$attributes.containerShadowVertical,
      containerShadowPosition = _props$attributes.containerShadowPosition,
      paddingB = _props$attributes.paddingB,
      paddingT = _props$attributes.paddingT,
      paddingR = _props$attributes.paddingR,
      paddingL = _props$attributes.paddingL,
      paddingU = _props$attributes.paddingU;


  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-banner');

  return wp.element.createElement(
    'div',
    {
      id: 'premium-banner-' + id,
      className: mainClasses + ' premium-banner__responsive_' + responsive,
      style: {
        boxShadow: containerShadowHorizontal + 'px ' + containerShadowVertical + 'px ' + containerShadowBlur + 'px ' + containerShadowColor + ' ' + containerShadowPosition,
        paddingTop: paddingT + paddingU,
        paddingRight: paddingR + paddingU,
        paddingBottom: paddingB + paddingU,
        paddingLeft: paddingL + paddingU
      }
    },
    wp.element.createElement('style', {
      dangerouslySetInnerHTML: {
        __html: ['#premium-banner-' + id + ' .premium-banner__effect3 .premium-banner__title_wrap::after{', 'background: ' + sepColor, "}", '#premium-banner-' + id + ' .premium-banner__inner {', 'background: ' + background, "}", '#premium-banner-' + id + ' .premium-banner__img.premium-banner__active {', 'opacity: ' + (background ? 1 - opacity / 100 : 1) + ' ', "}"].join("\n")
      }
    }),
    wp.element.createElement(
      'div',
      {
        className: 'premium-banner__inner premium-banner__min premium-banner__' + effect + ' premium-banner__' + hoverEffect + ' hover_' + hovered,
        style: {
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor
        }
      },
      wp.element.createElement(
        'div',
        {
          className: 'premium-banner__img_wrap premium-banner__' + height,
          style: {
            minHeight: minHeight,
            alignItems: verAlign
          }
        },
        wp.element.createElement('img', {
          className: 'premium-banner__img',
          alt: 'Banner Image',
          src: imageURL,
          style: {
            filter: 'brightness( ' + bright + '% ) contrast( ' + contrast + '% ) saturate( ' + saturation + '% ) blur( ' + blur + 'px ) hue-rotate( ' + hue + 'deg )'
          }
        })
      ),
      wp.element.createElement(
        'div',
        {
          className: 'premium-banner__content',
          style: {
            background: "effect2" === effect ? titleBack : "transparent"
          }
        },
        wp.element.createElement(
          'div',
          {
            className: 'premium-banner__title_wrap',
            style: {
              textAlign: contentAlign
            }
          },
          wp.element.createElement(RichText.Content, {
            tagName: titleTag.toLowerCase(),
            className: 'premium-banner__title',
            value: title,
            style: {
              color: titleColor,
              fontSize: titleSize + "px",
              fontWeight: titleWeight,
              lineHeight: titleLine + "px",
              textShadow: shadowHorizontal + 'px ' + shadowVertical + 'px ' + shadowBlur + 'px ' + shadowColor
            }
          })
        ),
        wp.element.createElement(
          'div',
          {
            className: 'premium-banner__desc_wrap',
            style: {
              textAlign: contentAlign
            }
          },
          wp.element.createElement(RichText.Content, {
            tagName: 'p',
            className: 'premium-banner__desc',
            value: desc,
            style: {
              color: descColor,
              fontSize: descSize + "px",
              fontWeight: descWeight,
              lineHeight: descLine + "px",
              textShadow: descShadowHorizontal + 'px ' + descShadowVertical + 'px ' + descShadowBlur + 'px ' + descShadowColor
            }
          })
        )
      ),
      urlCheck && "" !== url && wp.element.createElement('a', {
        className: 'premium-banner__link',
        href: url,
        target: target && "_blank"
      })
    )
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 194 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var __ = wp.i18n.__;


var className = "premium-banner";

var RichText = wp.editor.RichText;


var deprecated_attributes_1_0_1 = {
  imageID: {
    type: "number"
  },
  imageURL: {
    type: "string",
    source: "attribute",
    attribute: "src",
    selector: ".premium-banner__img"
  },
  title: {
    type: "array",
    source: "children",
    selector: ".premium-banner__title",
    default: __("Awesome Title")
  },
  titleTag: {
    type: "string",
    default: "H3"
  },
  desc: {
    type: "array",
    source: "children",
    selector: ".premium-banner__desc",
    default: __("Cool Description!!")
  },
  contentAlign: {
    type: "string",
    default: "left"
  },
  effect: {
    type: "string",
    default: "effect1"
  },
  hoverEffect: {
    type: "string",
    default: "none"
  },
  height: {
    type: "string",
    default: "default"
  },
  minHeight: {
    type: "number"
  },
  verAlign: {
    type: "string",
    default: "top"
  },
  hovered: {
    type: "boolean",
    default: false
  },
  responsive: {
    type: "boolean",
    default: false
  },
  background: {
    type: "string"
  },
  opacity: {
    type: "number",
    default: 50
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number",
    default: "0"
  },
  borderColor: {
    type: "string"
  },
  titleColor: {
    type: "string"
  },
  titleSize: {
    type: "number",
    default: "20"
  },
  titleLine: {
    type: "number"
  },
  titleWeight: {
    type: "number"
  },
  titleBack: {
    type: "string"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  descColor: {
    type: "string",
    default: "#000"
  },
  descSize: {
    type: "number",
    default: "20"
  },
  descLine: {
    type: "number"
  },
  descWeight: {
    type: "number"
  },
  urlCheck: {
    type: "boolean",
    default: false
  },
  target: {
    type: "boolean",
    default: false
  },
  url: {
    type: "string",
    source: "attribute",
    attribute: "href",
    selector: ".premium-banner__link"
  },
  sepColor: {
    type: "string"
  },
  id: {
    type: "string"
  }
};

var newAttributes_1_4_4 = {
  blur: {
    type: "number",
    default: "0"
  },
  bright: {
    type: "number",
    default: "100"
  },
  contrast: {
    type: "number",
    default: "100"
  },
  saturation: {
    type: "number",
    default: "100"
  },
  hue: {
    type: "number",
    default: "0"
  }
};

var deprecated_attributes_1_3_8 = Object.assign(deprecated_attributes_1_0_1, newAttributes_1_4_4);

var newAttributes_1_5_3 = {
  descShadowColor: {
    type: "string"
  },
  descShadowBlur: {
    type: "number",
    default: "0"
  },
  descShadowHorizontal: {
    type: "number",
    default: "0"
  },
  descShadowVertical: {
    type: "number",
    default: "0"
  }
};

var deprecated_attributes_1_5_3 = Object.assign(deprecated_attributes_1_3_8, newAttributes_1_5_3);

var newAttributes_1_6_7 = {
  containerShadowColor: {
    type: "string"
  },
  containerShadowBlur: {
    type: "number",
    default: "0"
  },
  containerShadowHorizontal: {
    type: "number",
    default: "0"
  },
  containerShadowVertical: {
    type: "number",
    default: "0"
  },
  containerShadowPosition: {
    type: "string",
    default: ""
  }
};

var deprecated_attributes_1_6_7 = Object.assign(deprecated_attributes_1_5_3, newAttributes_1_6_7);

var deprecatedContent = [{
  attributes: deprecated_attributes_1_6_7,
  migrate: function migrate(attributes) {
    var newAttributes = {
      paddingT: "",
      paddingR: "",
      paddingB: "",
      paddingL: "",
      paddingU: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        id = _props$attributes.id,
        imageURL = _props$attributes.imageURL,
        title = _props$attributes.title,
        titleTag = _props$attributes.titleTag,
        desc = _props$attributes.desc,
        contentAlign = _props$attributes.contentAlign,
        effect = _props$attributes.effect,
        hoverEffect = _props$attributes.hoverEffect,
        height = _props$attributes.height,
        minHeight = _props$attributes.minHeight,
        verAlign = _props$attributes.verAlign,
        hovered = _props$attributes.hovered,
        responsive = _props$attributes.responsive,
        background = _props$attributes.background,
        opacity = _props$attributes.opacity,
        borderType = _props$attributes.borderType,
        borderWidth = _props$attributes.borderWidth,
        borderRadius = _props$attributes.borderRadius,
        borderColor = _props$attributes.borderColor,
        titleColor = _props$attributes.titleColor,
        titleBack = _props$attributes.titleBack,
        titleSize = _props$attributes.titleSize,
        titleWeight = _props$attributes.titleWeight,
        titleLine = _props$attributes.titleLine,
        shadowBlur = _props$attributes.shadowBlur,
        shadowColor = _props$attributes.shadowColor,
        shadowHorizontal = _props$attributes.shadowHorizontal,
        shadowVertical = _props$attributes.shadowVertical,
        descColor = _props$attributes.descColor,
        descSize = _props$attributes.descSize,
        descLine = _props$attributes.descLine,
        descWeight = _props$attributes.descWeight,
        descShadowBlur = _props$attributes.descShadowBlur,
        descShadowColor = _props$attributes.descShadowColor,
        descShadowHorizontal = _props$attributes.descShadowHorizontal,
        descShadowVertical = _props$attributes.descShadowVertical,
        urlCheck = _props$attributes.urlCheck,
        url = _props$attributes.url,
        target = _props$attributes.target,
        sepColor = _props$attributes.sepColor,
        blur = _props$attributes.blur,
        bright = _props$attributes.bright,
        contrast = _props$attributes.contrast,
        saturation = _props$attributes.saturation,
        hue = _props$attributes.hue,
        containerShadowBlur = _props$attributes.containerShadowBlur,
        containerShadowColor = _props$attributes.containerShadowColor,
        containerShadowHorizontal = _props$attributes.containerShadowHorizontal,
        containerShadowVertical = _props$attributes.containerShadowVertical,
        containerShadowPosition = _props$attributes.containerShadowPosition;

    return wp.element.createElement(
      "div",
      {
        id: "premium-banner-" + id,
        className: className + " " + className + "__responsive_" + responsive,
        style: {
          boxShadow: containerShadowHorizontal + "px " + containerShadowVertical + "px " + containerShadowBlur + "px " + containerShadowColor + " " + containerShadowPosition
        }
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-banner-" + id + " .premium-banner__effect3 .premium-banner__title_wrap::after{", "background: " + sepColor, "}", "#premium-banner-" + id + " .premium-banner__inner {", "background: " + background, "}", "#premium-banner-" + id + " .premium-banner__img.premium-banner__active {", "opacity: " + (background ? 1 - opacity / 100 : 1) + " ", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        {
          className: className + "__inner " + className + "__min " + className + "__" + effect + " " + className + "__" + hoverEffect + " hover_" + hovered,
          style: {
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius + "px",
            borderColor: borderColor
          }
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__img_wrap " + className + "__" + height,
            style: {
              minHeight: minHeight,
              alignItems: verAlign
            }
          },
          wp.element.createElement("img", {
            className: className + "__img",
            alt: "Banner Image",
            src: imageURL,
            style: {
              filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
            }
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              background: "effect2" === effect ? titleBack : "transparent"
            }
          },
          wp.element.createElement(
            "div",
            {
              className: className + "__title_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: titleTag.toLowerCase(),
              className: className + "__title",
              value: title,
              style: {
                color: titleColor,
                fontSize: titleSize + "px",
                fontWeight: titleWeight,
                lineHeight: titleLine + "px",
                textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
              }
            })
          ),
          wp.element.createElement(
            "div",
            {
              className: className + "__desc_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: "p",
              className: className + "__desc",
              value: desc,
              style: {
                color: descColor,
                fontSize: descSize + "px",
                fontWeight: descWeight,
                lineHeight: descLine + "px",
                textShadow: descShadowHorizontal + "px " + descShadowVertical + "px " + descShadowBlur + "px " + descShadowColor
              }
            })
          )
        ),
        urlCheck && "" !== url && wp.element.createElement("a", {
          className: className + "__link",
          href: url,
          target: target && "_blank"
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_5_3,
  migrate: function migrate(attributes) {
    var newAttributes = {
      containerShadowColor: "",
      containerShadowBlur: "0",
      containerShadowHorizontal: "0",
      containerShadowVertical: "0",
      containerShadowPosition: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        id = _props$attributes2.id,
        imageURL = _props$attributes2.imageURL,
        title = _props$attributes2.title,
        titleTag = _props$attributes2.titleTag,
        desc = _props$attributes2.desc,
        contentAlign = _props$attributes2.contentAlign,
        effect = _props$attributes2.effect,
        hoverEffect = _props$attributes2.hoverEffect,
        height = _props$attributes2.height,
        minHeight = _props$attributes2.minHeight,
        verAlign = _props$attributes2.verAlign,
        hovered = _props$attributes2.hovered,
        responsive = _props$attributes2.responsive,
        background = _props$attributes2.background,
        opacity = _props$attributes2.opacity,
        borderType = _props$attributes2.borderType,
        borderWidth = _props$attributes2.borderWidth,
        borderRadius = _props$attributes2.borderRadius,
        borderColor = _props$attributes2.borderColor,
        titleColor = _props$attributes2.titleColor,
        titleBack = _props$attributes2.titleBack,
        titleSize = _props$attributes2.titleSize,
        titleWeight = _props$attributes2.titleWeight,
        titleLine = _props$attributes2.titleLine,
        shadowBlur = _props$attributes2.shadowBlur,
        shadowColor = _props$attributes2.shadowColor,
        shadowHorizontal = _props$attributes2.shadowHorizontal,
        shadowVertical = _props$attributes2.shadowVertical,
        descColor = _props$attributes2.descColor,
        descSize = _props$attributes2.descSize,
        descLine = _props$attributes2.descLine,
        descWeight = _props$attributes2.descWeight,
        descShadowBlur = _props$attributes2.descShadowBlur,
        descShadowColor = _props$attributes2.descShadowColor,
        descShadowHorizontal = _props$attributes2.descShadowHorizontal,
        descShadowVertical = _props$attributes2.descShadowVertical,
        urlCheck = _props$attributes2.urlCheck,
        url = _props$attributes2.url,
        target = _props$attributes2.target,
        sepColor = _props$attributes2.sepColor,
        blur = _props$attributes2.blur,
        bright = _props$attributes2.bright,
        contrast = _props$attributes2.contrast,
        saturation = _props$attributes2.saturation,
        hue = _props$attributes2.hue;

    return wp.element.createElement(
      "div",
      {
        id: "premium-banner-" + id,
        className: className + " " + className + "__responsive_" + responsive
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-banner-" + id + " .premium-banner__effect3 .premium-banner__title_wrap::after{", "background: " + sepColor, "}", "#premium-banner-" + id + " .premium-banner__inner {", "background: " + background, "}", "#premium-banner-" + id + " .premium-banner__img.premium-banner__active {", "opacity: " + (background ? 1 - opacity / 100 : 1) + " ", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        {
          className: className + "__inner " + className + "__min " + className + "__" + effect + " " + className + "__" + hoverEffect + " hover_" + hovered,
          style: {
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius + "px",
            borderColor: borderColor
          }
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__img_wrap " + className + "__" + height,
            style: {
              minHeight: minHeight,
              alignItems: verAlign
            }
          },
          wp.element.createElement("img", {
            className: className + "__img",
            alt: "Banner Image",
            src: imageURL,
            style: {
              filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
            }
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              background: "effect2" === effect ? titleBack : "transparent"
            }
          },
          wp.element.createElement(
            "div",
            {
              className: className + "__title_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: titleTag.toLowerCase(),
              className: className + "__title",
              value: title,
              style: {
                color: titleColor,
                fontSize: titleSize + "px",
                fontWeight: titleWeight,
                lineHeight: titleLine + "px",
                textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
              }
            })
          ),
          wp.element.createElement(
            "div",
            {
              className: className + "__desc_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: "p",
              className: className + "__desc",
              value: desc,
              style: {
                color: descColor,
                fontSize: descSize + "px",
                fontWeight: descWeight,
                lineHeight: descLine + "px",
                textShadow: descShadowHorizontal + "px " + descShadowVertical + "px " + descShadowBlur + "px " + descShadowColor
              }
            })
          )
        ),
        urlCheck && "" !== url && wp.element.createElement("a", {
          className: className + "__link",
          href: url,
          target: target && "_blank"
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_3_8,
  migrate: function migrate(attributes) {
    var newAttributes = {
      descShadowBlur: "0",
      descShadowColor: "",
      descShadowHorizontal: "0",
      descShadowVertical: "0"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        id = _props$attributes3.id,
        imageURL = _props$attributes3.imageURL,
        title = _props$attributes3.title,
        titleTag = _props$attributes3.titleTag,
        desc = _props$attributes3.desc,
        contentAlign = _props$attributes3.contentAlign,
        effect = _props$attributes3.effect,
        hoverEffect = _props$attributes3.hoverEffect,
        height = _props$attributes3.height,
        minHeight = _props$attributes3.minHeight,
        verAlign = _props$attributes3.verAlign,
        hovered = _props$attributes3.hovered,
        responsive = _props$attributes3.responsive,
        background = _props$attributes3.background,
        opacity = _props$attributes3.opacity,
        borderType = _props$attributes3.borderType,
        borderWidth = _props$attributes3.borderWidth,
        borderRadius = _props$attributes3.borderRadius,
        borderColor = _props$attributes3.borderColor,
        titleColor = _props$attributes3.titleColor,
        titleBack = _props$attributes3.titleBack,
        titleSize = _props$attributes3.titleSize,
        titleWeight = _props$attributes3.titleWeight,
        titleLine = _props$attributes3.titleLine,
        shadowBlur = _props$attributes3.shadowBlur,
        shadowColor = _props$attributes3.shadowColor,
        shadowHorizontal = _props$attributes3.shadowHorizontal,
        shadowVertical = _props$attributes3.shadowVertical,
        descColor = _props$attributes3.descColor,
        descSize = _props$attributes3.descSize,
        descWeight = _props$attributes3.descWeight,
        descLine = _props$attributes3.descLine,
        urlCheck = _props$attributes3.urlCheck,
        url = _props$attributes3.url,
        target = _props$attributes3.target,
        sepColor = _props$attributes3.sepColor,
        blur = _props$attributes3.blur,
        bright = _props$attributes3.bright,
        contrast = _props$attributes3.contrast,
        saturation = _props$attributes3.saturation,
        hue = _props$attributes3.hue;

    return wp.element.createElement(
      "div",
      {
        id: "premium-banner-" + id,
        className: className + " " + className + "__responsive_" + responsive
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-banner-" + id + " .premium-banner__effect3 .premium-banner__title_wrap::after{", "background: " + sepColor, "}", "#premium-banner-" + id + " .premium-banner__inner {", "background: " + background, "}", "#premium-banner-" + id + " .premium-banner__img.premium-banner__active {", "opacity: " + (background ? 1 - opacity / 100 : 1) + " ", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        {
          className: className + "__inner " + className + "__min " + className + "__" + effect + " " + className + "__" + hoverEffect + " hover_" + hovered,
          style: {
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius + "px",
            borderColor: borderColor
          }
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__img_wrap " + className + "__" + height,
            style: {
              minHeight: minHeight,
              alignItems: verAlign
            }
          },
          wp.element.createElement("img", {
            className: className + "__img",
            alt: "Banner Image",
            src: imageURL,
            style: {
              filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
            }
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              background: "effect2" === effect ? titleBack : "transparent"
            }
          },
          wp.element.createElement(
            "div",
            {
              className: className + "__title_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: titleTag.toLowerCase(),
              className: className + "__title",
              value: title,
              style: {
                color: titleColor,
                fontSize: titleSize + "px",
                fontWeight: titleWeight,
                lineHeight: titleLine + "px",
                textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
              }
            })
          ),
          wp.element.createElement(
            "div",
            {
              className: className + "__desc_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: "p",
              className: className + "__desc",
              value: desc,
              style: {
                color: descColor,
                fontSize: descSize + "px",
                fontWeight: descWeight,
                lineHeight: descLine + "px"
              }
            })
          )
        ),
        urlCheck && "" !== url && wp.element.createElement("a", {
          className: className + "__link",
          href: url,
          target: target && "_blank"
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_3_8,
  migrate: function migrate(attributes) {
    var newAttributes = {
      blur: "0",
      bright: "100",
      contrast: "100",
      saturation: "100",
      hue: "0"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes4 = props.attributes,
        id = _props$attributes4.id,
        imageURL = _props$attributes4.imageURL,
        title = _props$attributes4.title,
        titleTag = _props$attributes4.titleTag,
        desc = _props$attributes4.desc,
        contentAlign = _props$attributes4.contentAlign,
        effect = _props$attributes4.effect,
        hoverEffect = _props$attributes4.hoverEffect,
        height = _props$attributes4.height,
        minHeight = _props$attributes4.minHeight,
        verAlign = _props$attributes4.verAlign,
        hovered = _props$attributes4.hovered,
        responsive = _props$attributes4.responsive,
        background = _props$attributes4.background,
        opacity = _props$attributes4.opacity,
        borderType = _props$attributes4.borderType,
        borderWidth = _props$attributes4.borderWidth,
        borderRadius = _props$attributes4.borderRadius,
        borderColor = _props$attributes4.borderColor,
        titleColor = _props$attributes4.titleColor,
        titleBack = _props$attributes4.titleBack,
        titleSize = _props$attributes4.titleSize,
        titleWeight = _props$attributes4.titleWeight,
        titleLine = _props$attributes4.titleLine,
        shadowBlur = _props$attributes4.shadowBlur,
        shadowColor = _props$attributes4.shadowColor,
        shadowHorizontal = _props$attributes4.shadowHorizontal,
        shadowVertical = _props$attributes4.shadowVertical,
        descColor = _props$attributes4.descColor,
        descSize = _props$attributes4.descSize,
        descWeight = _props$attributes4.descWeight,
        descLine = _props$attributes4.descLine,
        urlCheck = _props$attributes4.urlCheck,
        url = _props$attributes4.url,
        target = _props$attributes4.target,
        sepColor = _props$attributes4.sepColor;

    return wp.element.createElement(
      "div",
      {
        id: "premium-banner-" + id,
        className: className + " " + className + "__responsive_" + responsive
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-banner-" + id + " .premium-banner__effect3 .premium-banner__title_wrap::after{", "background: " + sepColor, "}", "#premium-banner-" + id + " .premium-banner__inner {", "background: " + background, "}", "#premium-banner-" + id + " .premium-banner__img.premium-banner__active {", "opacity: " + (background ? 1 - opacity / 100 : 1) + " ", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        {
          className: className + "__inner " + className + "__min " + className + "__" + effect + " " + className + "__" + hoverEffect + " hover_" + hovered,
          style: {
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius + "px",
            borderColor: borderColor
          }
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__img_wrap " + className + "__" + height,
            style: {
              minHeight: minHeight,
              alignItems: verAlign
            }
          },
          wp.element.createElement("img", {
            className: className + "__img",
            alt: "Banner Image",
            src: imageURL
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              background: "effect2" === effect ? titleBack : "transparent"
            }
          },
          wp.element.createElement(
            "div",
            {
              className: className + "__title_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: titleTag.toLowerCase(),
              className: className + "__title",
              value: title,
              style: {
                color: titleColor,
                fontSize: titleSize + "px",
                fontWeight: titleWeight,
                lineHeight: titleLine + "px",
                textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
              }
            })
          ),
          wp.element.createElement(
            "div",
            {
              className: className + "__desc_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: "p",
              className: className + "__desc",
              value: desc,
              style: {
                color: descColor,
                fontSize: descSize + "px",
                fontWeight: descWeight,
                lineHeight: descLine + "px"
              }
            })
          )
        ),
        urlCheck && "" !== url && wp.element.createElement("a", {
          className: className + "__link",
          href: url,
          target: target && "_blank"
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_0_1,
  migrate: function migrate(attributes) {
    var newAttributes = {
      shadowBlur: "0",
      shadowColor: "",
      shadowHorizontal: "0",
      shadowVertical: "0"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes5 = props.attributes,
        id = _props$attributes5.id,
        imageURL = _props$attributes5.imageURL,
        title = _props$attributes5.title,
        titleTag = _props$attributes5.titleTag,
        desc = _props$attributes5.desc,
        contentAlign = _props$attributes5.contentAlign,
        effect = _props$attributes5.effect,
        hoverEffect = _props$attributes5.hoverEffect,
        height = _props$attributes5.height,
        minHeight = _props$attributes5.minHeight,
        verAlign = _props$attributes5.verAlign,
        hovered = _props$attributes5.hovered,
        responsive = _props$attributes5.responsive,
        background = _props$attributes5.background,
        opacity = _props$attributes5.opacity,
        borderType = _props$attributes5.borderType,
        borderWidth = _props$attributes5.borderWidth,
        borderRadius = _props$attributes5.borderRadius,
        borderColor = _props$attributes5.borderColor,
        titleColor = _props$attributes5.titleColor,
        titleBack = _props$attributes5.titleBack,
        titleSize = _props$attributes5.titleSize,
        titleWeight = _props$attributes5.titleWeight,
        titleLine = _props$attributes5.titleLine,
        descColor = _props$attributes5.descColor,
        descSize = _props$attributes5.descSize,
        descWeight = _props$attributes5.descWeight,
        descLine = _props$attributes5.descLine,
        urlCheck = _props$attributes5.urlCheck,
        url = _props$attributes5.url,
        target = _props$attributes5.target,
        sepColor = _props$attributes5.sepColor;

    return wp.element.createElement(
      "div",
      {
        id: "premium-banner-" + id,
        className: className + " " + className + "__responsive_" + responsive
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-banner-" + id + " .premium-banner__effect3 .premium-banner__title_wrap::after{", "background: " + sepColor, "}", "#premium-banner-" + id + " .premium-banner__inner {", "background: " + background, "}", "#premium-banner-" + id + " .premium-banner__img.premium-banner__active {", "opacity: " + (background ? 1 - opacity / 100 : 1) + " ", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        {
          className: className + "__inner " + className + "__min " + className + "__" + effect + " " + className + "__" + hoverEffect + " hover_" + hovered,
          style: {
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius + "px",
            borderColor: borderColor
          }
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__img_wrap " + className + "__" + height,
            style: {
              minHeight: minHeight,
              alignItems: verAlign
            }
          },
          wp.element.createElement("img", {
            className: className + "__img",
            alt: "Banner Image",
            src: imageURL
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              background: "effect2" === effect ? titleBack : "transparent"
            }
          },
          wp.element.createElement(
            "div",
            {
              className: className + "__title_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: titleTag.toLowerCase(),
              className: className + "__title",
              value: title,
              style: {
                color: titleColor,
                fontSize: titleSize + "px",
                fontWeight: titleWeight,
                lineHeight: titleLine + "px"
              }
            })
          ),
          wp.element.createElement(
            "div",
            {
              className: className + "__desc_wrap",
              style: {
                textAlign: contentAlign
              }
            },
            wp.element.createElement(RichText.Content, {
              tagName: "p",
              className: className + "__desc",
              value: desc,
              style: {
                color: descColor,
                fontSize: descSize + "px",
                fontWeight: descWeight,
                lineHeight: descLine + "px"
              }
            })
          )
        ),
        urlCheck && "" !== url && wp.element.createElement("a", {
          className: className + "__link",
          href: url,
          target: target && "_blank"
        })
      )
    );
  }
}];
/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 195 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__edit__ = __webpack_require__(196);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__save__ = __webpack_require__(197);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__deprecated__ = __webpack_require__(198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__icons__ = __webpack_require__(3);







var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var buttonAttrs = {
    btnText: {
        type: "string",
        default: __("Premium Button")
    },
    btnSize: {
        type: "string",
        default: "md"
    },
    btnAlign: {
        type: "string",
        default: "center"
    },
    btnLink: {
        type: "string",
        source: "attribute",
        attribute: "href",
        selector: ".premium-button"
    },
    btnTarget: {
        type: "boolean",
        default: false
    },
    effect: {
        type: "string",
        default: "none"
    },
    effectDir: {
        type: "string",
        default: "top"
    },
    textColor: {
        type: "string"
    },
    textHoverColor: {
        type: "string"
    },
    backColor: {
        type: "string"
    },
    backHoverColor: {
        type: "string"
    },
    slideColor: {
        type: "string"
    },
    textSize: {
        type: "number"
    },
    textFontFamily: {
        type: "string"
    },
    textLetter: {
        type: "number"
    },
    textStyle: {
        type: "string"
    },
    textUpper: {
        type: "boolean"
    },
    textWeight: {
        type: "number",
        default: 500
    },
    textLine: {
        type: "number"
    },
    borderType: {
        type: "string",
        default: "none"
    },
    borderWidth: {
        type: "number",
        default: "1"
    },
    borderRadius: {
        type: "number"
    },
    borderColor: {
        type: "string"
    },
    borderHoverColor: {
        type: "string"
    },
    padding: {
        type: "number"
    },
    paddingU: {
        type: "string"
    },
    shadowColor: {
        type: "string"
    },
    shadowBlur: {
        type: "number",
        default: "0"
    },
    shadowHorizontal: {
        type: "number",
        default: "0"
    },
    shadowVertical: {
        type: "number",
        default: "0"
    },
    btnShadowColor: {
        type: "string"
    },
    btnShadowBlur: {
        type: "number",
        default: "0"
    },
    btnShadowHorizontal: {
        type: "number",
        default: "0"
    },
    btnShadowVertical: {
        type: "number",
        default: "0"
    },
    btnShadowPosition: {
        type: "string",
        default: ""
    },
    id: {
        type: "string"
    }
};

registerBlockType("premium/button", {
    title: __("Button"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__icons__["a" /* default */], { icon: "button" }),
    category: "premium-blocks",
    attributes: buttonAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["d" /* button */]
    },
    example: {},
    edit: __WEBPACK_IMPORTED_MODULE_1__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_2__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_3__deprecated__["a" /* default */]
});

/***/ }),
/* 196 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_size_units__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__ = __webpack_require__(21);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }









var __ = wp.i18n.__;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;
var Fragment = wp.element.Fragment;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    RichText = _wp$editor.RichText,
    URLInput = _wp$editor.URLInput;


var edit = function edit(props) {
  var _wp$element$createEle;

  var isSelected = props.isSelected,
      setAttributes = props.setAttributes,
      className = props.className,
      blockId = props.clientId;
  var _props$attributes = props.attributes,
      id = _props$attributes.id,
      btnText = _props$attributes.btnText,
      btnSize = _props$attributes.btnSize,
      btnAlign = _props$attributes.btnAlign,
      btnLink = _props$attributes.btnLink,
      btnTarget = _props$attributes.btnTarget,
      effect = _props$attributes.effect,
      effectDir = _props$attributes.effectDir,
      textColor = _props$attributes.textColor,
      textHoverColor = _props$attributes.textHoverColor,
      backColor = _props$attributes.backColor,
      backHoverColor = _props$attributes.backHoverColor,
      slideColor = _props$attributes.slideColor,
      textSize = _props$attributes.textSize,
      textFontFamily = _props$attributes.textFontFamily,
      textWeight = _props$attributes.textWeight,
      textLetter = _props$attributes.textLetter,
      textUpper = _props$attributes.textUpper,
      textLine = _props$attributes.textLine,
      textStyle = _props$attributes.textStyle,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      borderHoverColor = _props$attributes.borderHoverColor,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      padding = _props$attributes.padding,
      paddingU = _props$attributes.paddingU,
      btnShadowBlur = _props$attributes.btnShadowBlur,
      btnShadowColor = _props$attributes.btnShadowColor,
      btnShadowHorizontal = _props$attributes.btnShadowHorizontal,
      btnShadowVertical = _props$attributes.btnShadowVertical,
      btnShadowPosition = _props$attributes.btnShadowPosition;


  var SIZE = [{
    value: "sm",
    label: __("Small")
  }, {
    value: "md",
    label: __("Medium")
  }, {
    value: "lg",
    label: __("Large")
  }, {
    value: "block",
    label: __("Block")
  }];
  var DIRECTION = [{
    value: "top",
    label: __("Top to Bottom")
  }, {
    value: "bottom",
    label: __("Bottom to Top")
  }, {
    value: "left",
    label: __("Left to Right")
  }, {
    value: "right",
    label: __("Right to Left")
  }];
  var SHUTTER = [{
    value: "shutouthor",
    label: __("Shutter out Horizontal")
  }, {
    value: "shutoutver",
    label: __("Shutter out Vertical")
  }, {
    value: "scshutoutver",
    label: __("Scaled Shutter Vertical")
  }, {
    value: "scshutouthor",
    label: __("Scaled Shutter Horizontal")
  }, {
    value: "dshutinver",
    label: __("Tilted Left")
  }, {
    value: "dshutinhor",
    label: __("Tilted Right")
  }];
  var RADIAL = [{
    value: "radialin",
    label: __("Radial In")
  }, {
    value: "radialout",
    label: __("Radial Out")
  }, {
    value: "rectin",
    label: __("Rectangle In")
  }, {
    value: "rectout",
    label: __("Rectangle Out")
  }];
  var EFFECTS = [{
    value: "none",
    label: __("None")
  }, {
    value: "slide",
    label: __("Slide")
  }, {
    value: "shutter",
    label: __("Shutter")
  }, {
    value: "radial",
    label: __("Radial")
  }];
  var onChangeHover = function onChangeHover(newValue) {
    props.setAttributes({ effect: newValue });
    switch (newValue) {
      case "slide":
        props.setAttributes({ effectDir: "top" });
        break;
      case "shutter":
        props.setAttributes({ effectDir: "shutouthor" });
        break;
      case "radial":
        props.setAttributes({ effectDir: "radialin" });
        break;
    }
  };
  setAttributes({ id: blockId });

  var addFontToHead = function addFontToHead(fontFamily) {
    var head = document.head;
    var link = document.createElement("link");
    link.type = "text/css";
    link.rel = "stylesheet";
    link.href = "https://fonts.googleapis.com/css?family=" + fontFamily.replace(/\s+/g, "+") + ":" + "regular";
    head.appendChild(link);
  };

  var onChangeTextFamily = function onChangeTextFamily(fontFamily) {
    setAttributes({ textFontFamily: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-button");

  return [isSelected && "block" != btnSize && wp.element.createElement(
    BlockControls,
    { key: "controls" },
    wp.element.createElement(AlignmentToolbar, {
      value: btnAlign,
      onChange: function onChange(newAlign) {
        return setAttributes({ btnAlign: newAlign });
      }
    })
  ), isSelected && wp.element.createElement(
    InspectorControls,
    { key: "inspector" },
    wp.element.createElement(
      PanelBody,
      {
        title: __("General Settings"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(SelectControl, {
        options: EFFECTS,
        label: __("Hover Effect"),
        value: effect,
        onChange: onChangeHover
      }),
      "slide" === effect && wp.element.createElement(SelectControl, {
        options: DIRECTION,
        label: __("Direction"),
        value: effectDir,
        onChange: function onChange(newValue) {
          return setAttributes({ effectDir: newValue });
        }
      }),
      "shutter" === effect && wp.element.createElement(SelectControl, {
        options: SHUTTER,
        label: __("Shutter Direction"),
        value: effectDir,
        onChange: function onChange(newValue) {
          return setAttributes({ effectDir: newValue });
        }
      }),
      "radial" === effect && wp.element.createElement(SelectControl, {
        options: RADIAL,
        label: __("Style"),
        value: effectDir,
        onChange: function onChange(newValue) {
          return setAttributes({ effectDir: newValue });
        }
      }),
      wp.element.createElement(SelectControl, {
        options: SIZE,
        label: __("Button Size"),
        value: btnSize,
        onChange: function onChange(newSize) {
          return setAttributes({ btnSize: newSize });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Open link in new tab"),
        checked: btnTarget,
        onChange: function onChange(newValue) {
          return setAttributes({ btnTarget: newValue });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Text Style"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: textFontFamily,
        options: __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__["a" /* default */],
        onChange: onChangeTextFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_typo__["a" /* default */], (_wp$element$createEle = {
        components: ["size", "weight", "line", "style", "upper", "spacing"],
        size: textSize,
        weight: textWeight,
        style: textStyle,
        spacing: textLetter,
        upper: textUpper,
        line: textLine,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ textSize: newSize });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ textWeight: newWeight });
        },
        onChangeLine: function onChangeLine(newValue) {
          return setAttributes({ textLine: newValue });
        }
      }, _defineProperty(_wp$element$createEle, "onChangeSize", function onChangeSize(newSize) {
        return setAttributes({ textSize: newSize });
      }), _defineProperty(_wp$element$createEle, "onChangeStyle", function onChangeStyle(newStyle) {
        return setAttributes({ textStyle: newStyle });
      }), _defineProperty(_wp$element$createEle, "onChangeSpacing", function onChangeSpacing(newValue) {
        return setAttributes({ textLetter: newValue });
      }), _defineProperty(_wp$element$createEle, "onChangeUpper", function onChangeUpper(check) {
        return setAttributes({ textUpper: check });
      }), _wp$element$createEle)),
      wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref) {
            var isOpen = _ref.isOpen,
                onToggle = _ref.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                __("Text Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: textColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    textColor: newValue
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Text Hover Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: textHoverColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    textHoverColor: newValue
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
        color: shadowColor,
        blur: shadowBlur,
        horizontal: shadowHorizontal,
        vertical: shadowVertical,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({ shadowColor: newColor.hex });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({ shadowBlur: newBlur });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({ shadowHorizontal: newValue });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({ shadowVertical: newValue });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Button Style"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref2) {
            var isOpen = _ref2.isOpen,
                onToggle = _ref2.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                "radial" !== effect ? __("Background Color") : __("Background Hover Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: backColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    backColor: newValue
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                "radial" !== effect ? __("Background Hover Color") : __("Background Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: backHoverColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    backHoverColor: newValue,
                    slideColor: newValue
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_border__["a" /* default */], {
        borderType: borderType,
        borderWidth: borderWidth,
        borderColor: borderColor,
        borderRadius: borderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ borderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ borderWidth: newWidth });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({ borderColor: colorValue.hex });
        },
        onChangeRadius: function onChangeRadius(newrRadius) {
          return setAttributes({ borderRadius: newrRadius });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Border Hover Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: borderHoverColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              borderHoverColor: newValue
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_box_shadow__["a" /* default */], {
        label: "Shadow",
        inner: true,
        color: btnShadowColor,
        blur: btnShadowBlur,
        horizontal: btnShadowHorizontal,
        vertical: btnShadowVertical,
        position: btnShadowPosition,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            btnShadowColor: newColor === undefined ? "transparent" : newColor.hex
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            btnShadowBlur: newBlur === undefined ? 0 : newBlur
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            btnShadowHorizontal: newValue === undefined ? 0 : newValue
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            btnShadowVertical: newValue === undefined ? 0 : newValue
          });
        },
        onChangePosition: function onChangePosition(newValue) {
          return setAttributes({
            btnShadowPosition: newValue === undefined ? 0 : newValue
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_size_units__["a" /* default */], {
        onChangeSizeUnit: function onChangeSizeUnit(newValue) {
          return setAttributes({ paddingU: newValue });
        }
      }),
      wp.element.createElement(RangeControl, {
        label: __("Padding"),
        value: padding,
        onChange: function onChange(newValue) {
          return setAttributes({ padding: newValue });
        }
      })
    )
  ), wp.element.createElement(
    "div",
    {
      id: mainClasses + "-wrap-" + id,
      className: mainClasses + "__wrap premium-button__" + effect + " premium-button__" + effectDir,
      style: { textAlign: btnAlign }
    },
    wp.element.createElement("style", {
      dangerouslySetInnerHTML: {
        __html: ["#premium-button-wrap-" + id + " .premium-button:hover {", "color: " + textHoverColor + " !important;", "border-color: " + borderHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__none .premium-button:hover {", "background-color: " + backHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__slide .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__shutter .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__radial .premium-button::before {", "background-color: " + slideColor, "}"].join("\n")
      }
    }),
    wp.element.createElement(RichText, {
      className: "premium-button premium-button__" + btnSize,
      value: btnText,
      onChange: function onChange(value) {
        return setAttributes({ btnText: value });
      },
      style: {
        color: textColor,
        backgroundColor: backColor,
        fontSize: textSize + "px",
        fontFamily: textFontFamily,
        letterSpacing: textLetter + "px",
        textTransform: textUpper ? "uppercase" : "none",
        fontStyle: textStyle,
        lineHeight: textLine + "px",
        fontWeight: textWeight,
        textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor,
        boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition,
        padding: padding + paddingU,
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius + "px",
        borderColor: borderColor
      },
      keepPlaceholderOnFocus: true
    }),
    wp.element.createElement(URLInput, {
      value: btnLink,
      onChange: function onChange(newLink) {
        return setAttributes({ btnLink: newLink });
      }
    })
  )];
};

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 197 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var RichText = wp.editor.RichText;


var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      id = _props$attributes.id,
      btnText = _props$attributes.btnText,
      btnSize = _props$attributes.btnSize,
      btnAlign = _props$attributes.btnAlign,
      btnLink = _props$attributes.btnLink,
      btnTarget = _props$attributes.btnTarget,
      effect = _props$attributes.effect,
      effectDir = _props$attributes.effectDir,
      textColor = _props$attributes.textColor,
      textHoverColor = _props$attributes.textHoverColor,
      backColor = _props$attributes.backColor,
      backHoverColor = _props$attributes.backHoverColor,
      slideColor = _props$attributes.slideColor,
      textSize = _props$attributes.textSize,
      textFontFamily = _props$attributes.textFontFamily,
      textWeight = _props$attributes.textWeight,
      textLine = _props$attributes.textLine,
      textLetter = _props$attributes.textLetter,
      textStyle = _props$attributes.textStyle,
      textUpper = _props$attributes.textUpper,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      borderHoverColor = _props$attributes.borderHoverColor,
      padding = _props$attributes.padding,
      paddingU = _props$attributes.paddingU,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      btnShadowBlur = _props$attributes.btnShadowBlur,
      btnShadowColor = _props$attributes.btnShadowColor,
      btnShadowHorizontal = _props$attributes.btnShadowHorizontal,
      btnShadowVertical = _props$attributes.btnShadowVertical,
      btnShadowPosition = _props$attributes.btnShadowPosition;


  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-button');

  return wp.element.createElement(
    'div',
    {
      id: mainClasses + '-wrap-' + id,
      className: mainClasses + '__wrap premium-button__' + effect + ' premium-button__' + effectDir,
      style: { textAlign: btnAlign }
    },
    wp.element.createElement('style', {
      dangerouslySetInnerHTML: {
        __html: ['#premium-button-wrap-' + id + ' .premium-button:hover {', 'color: ' + textHoverColor + ' !important;', 'border-color: ' + borderHoverColor + ' !important;', "}", '#premium-button-wrap-' + id + '.premium-button__none .premium-button:hover {', 'background-color: ' + backHoverColor + ' !important;', "}", '#premium-button-wrap-' + id + '.premium-button__slide .premium-button::before,', '#premium-button-wrap-' + id + '.premium-button__shutter .premium-button::before,', '#premium-button-wrap-' + id + '.premium-button__radial .premium-button::before {', 'background-color: ' + slideColor, "}"].join("\n")
      }
    }),
    wp.element.createElement(RichText.Content, {
      tagName: 'a',
      value: btnText,
      className: 'premium-button premium-button__' + btnSize,
      href: btnLink,
      rel: 'noopener noreferrer',
      target: btnTarget ? "_blank" : "_self",
      style: {
        color: textColor,
        backgroundColor: backColor,
        fontSize: textSize + "px",
        fontFamily: textFontFamily,
        letterSpacing: textLetter + "px",
        textTransform: textUpper ? "uppercase" : "none",
        fontStyle: textStyle,
        lineHeight: textLine + "px",
        fontWeight: textWeight,
        textShadow: shadowHorizontal + 'px ' + shadowVertical + 'px ' + shadowBlur + 'px ' + shadowColor,
        boxShadow: btnShadowHorizontal + 'px ' + btnShadowVertical + 'px ' + btnShadowBlur + 'px ' + btnShadowColor + ' ' + btnShadowPosition,
        padding: padding + paddingU,
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius + "px",
        borderColor: borderColor
      }
    })
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 198 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//import { merge } from "lodash";

var className = "premium-button";

var __ = wp.i18n.__;
var RichText = wp.editor.RichText;


var buttonAttrs_1_0_0 = {
    btnText: {
        type: "string",
        default: __("Premium Button")
    },
    btnSize: {
        type: "string",
        default: "md"
    },
    btnAlign: {
        type: "string",
        default: "center"
    },
    btnLink: {
        type: "string",
        source: "attribute",
        attribute: "href",
        selector: ".premium-button"
    },
    btnTarget: {
        type: "boolean",
        default: false
    },
    effect: {
        type: "string",
        default: "none"
    },
    effectDir: {
        type: "string",
        default: "top"
    },
    textColor: {
        type: "string"
    },
    textHoverColor: {
        type: "string"
    },
    backColor: {
        type: "string"
    },
    backHoverColor: {
        type: "string"
    },
    slideColor: {
        type: "string"
    },
    textSize: {
        type: "number"
    },
    textLetter: {
        type: "number"
    },
    textStyle: {
        type: "string"
    },
    textUpper: {
        type: "boolean"
    },
    textWeight: {
        type: "number",
        default: 500
    },
    textLine: {
        type: "number"
    },
    borderType: {
        type: "string",
        default: "none"
    },
    borderWidth: {
        type: "number",
        default: "1"
    },
    borderRadius: {
        type: "number"
    },
    borderColor: {
        type: "string"
    },
    padding: {
        type: "number"
    },
    shadowColor: {
        type: "string"
    },
    shadowBlur: {
        type: "number",
        default: "0"
    },
    shadowHorizontal: {
        type: "number",
        default: "0"
    },
    shadowVertical: {
        type: "number",
        default: "0"
    },
    id: {
        type: "string"
    }
};

var newAttributes_1_0_1 = {
    btnShadowColor: {
        type: "string"
    },
    btnShadowBlur: {
        type: "number",
        default: "0"
    },
    btnShadowHorizontal: {
        type: "number",
        default: "0"
    },
    btnShadowVertical: {
        type: "number",
        default: "0"
    },
    btnShadowPosition: {
        type: "string",
        default: ""
    }
};

var buttonAttrs_1_0_1 = Object.assign(buttonAttrs_1_0_0, newAttributes_1_0_1);

var newAttributes_1_3_4 = {
    borderHoverColor: {
        type: "string"
    }
};

var buttonAttrs_1_3_4 = Object.assign(buttonAttrs_1_0_1, newAttributes_1_3_4);

var newAttributes_1_4_7 = {
    textFontFamily: {
        type: "string"
    }
};

var buttonAttrs_1_4_7 = Object.assign(buttonAttrs_1_3_4, newAttributes_1_4_7);

var deprecatedContent = [{
    attributes: buttonAttrs_1_4_7,
    migrate: function migrate(attributes) {
        return Object.assign(attributes, { paddingU: "" });
    },
    save: function save(props) {
        var _props$attributes = props.attributes,
            id = _props$attributes.id,
            btnText = _props$attributes.btnText,
            btnSize = _props$attributes.btnSize,
            btnAlign = _props$attributes.btnAlign,
            btnLink = _props$attributes.btnLink,
            btnTarget = _props$attributes.btnTarget,
            effect = _props$attributes.effect,
            effectDir = _props$attributes.effectDir,
            textColor = _props$attributes.textColor,
            textHoverColor = _props$attributes.textHoverColor,
            backColor = _props$attributes.backColor,
            backHoverColor = _props$attributes.backHoverColor,
            slideColor = _props$attributes.slideColor,
            textSize = _props$attributes.textSize,
            textFontFamily = _props$attributes.textFontFamily,
            textWeight = _props$attributes.textWeight,
            textLine = _props$attributes.textLine,
            textLetter = _props$attributes.textLetter,
            textStyle = _props$attributes.textStyle,
            textUpper = _props$attributes.textUpper,
            borderType = _props$attributes.borderType,
            borderWidth = _props$attributes.borderWidth,
            borderRadius = _props$attributes.borderRadius,
            borderColor = _props$attributes.borderColor,
            borderHoverColor = _props$attributes.borderHoverColor,
            padding = _props$attributes.padding,
            shadowBlur = _props$attributes.shadowBlur,
            shadowColor = _props$attributes.shadowColor,
            shadowHorizontal = _props$attributes.shadowHorizontal,
            shadowVertical = _props$attributes.shadowVertical,
            btnShadowBlur = _props$attributes.btnShadowBlur,
            btnShadowColor = _props$attributes.btnShadowColor,
            btnShadowHorizontal = _props$attributes.btnShadowHorizontal,
            btnShadowVertical = _props$attributes.btnShadowVertical,
            btnShadowPosition = _props$attributes.btnShadowPosition;

        return wp.element.createElement(
            "div",
            {
                id: className + "-wrap-" + id,
                className: className + "__wrap " + className + "__" + effect + " " + className + "__" + effectDir,
                style: { textAlign: btnAlign }
            },
            wp.element.createElement("style", {
                dangerouslySetInnerHTML: {
                    __html: ["#premium-button-wrap-" + id + " .premium-button:hover {", "color: " + textHoverColor + " !important;", "border-color: " + borderHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__none .premium-button:hover {", "background-color: " + backHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__slide .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__shutter .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__radial .premium-button::before {", "background-color: " + slideColor, "}"].join("\n")
                }
            }),
            wp.element.createElement(RichText.Content, {
                tagName: "a",
                value: btnText,
                className: className + " " + className + "__" + btnSize,
                href: btnLink,
                rel: "noopener noreferrer",
                target: btnTarget ? "_blank" : "_self",
                style: {
                    color: textColor,
                    backgroundColor: backColor,
                    fontSize: textSize + "px",
                    fontFamily: textFontFamily,
                    letterSpacing: textLetter + "px",
                    textTransform: textUpper ? "uppercase" : "none",
                    fontStyle: textStyle,
                    lineHeight: textLine + "px",
                    fontWeight: textWeight,
                    textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor,
                    boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition,
                    padding: padding + "px",
                    border: borderType,
                    borderWidth: borderWidth + "px",
                    borderRadius: borderRadius + "px",
                    borderColor: borderColor
                }
            })
        );
    }
}, {
    attributes: buttonAttrs_1_4_7,
    save: function save(props) {
        var _props$attributes2 = props.attributes,
            id = _props$attributes2.id,
            btnText = _props$attributes2.btnText,
            btnSize = _props$attributes2.btnSize,
            btnAlign = _props$attributes2.btnAlign,
            btnLink = _props$attributes2.btnLink,
            btnTarget = _props$attributes2.btnTarget,
            effect = _props$attributes2.effect,
            effectDir = _props$attributes2.effectDir,
            textColor = _props$attributes2.textColor,
            textHoverColor = _props$attributes2.textHoverColor,
            backColor = _props$attributes2.backColor,
            backHoverColor = _props$attributes2.backHoverColor,
            slideColor = _props$attributes2.slideColor,
            textSize = _props$attributes2.textSize,
            textFontFamily = _props$attributes2.textFontFamily,
            textWeight = _props$attributes2.textWeight,
            textLine = _props$attributes2.textLine,
            textLetter = _props$attributes2.textLetter,
            textStyle = _props$attributes2.textStyle,
            textUpper = _props$attributes2.textUpper,
            borderType = _props$attributes2.borderType,
            borderWidth = _props$attributes2.borderWidth,
            borderRadius = _props$attributes2.borderRadius,
            borderColor = _props$attributes2.borderColor,
            borderHoverColor = _props$attributes2.borderHoverColor,
            padding = _props$attributes2.padding,
            shadowBlur = _props$attributes2.shadowBlur,
            shadowColor = _props$attributes2.shadowColor,
            shadowHorizontal = _props$attributes2.shadowHorizontal,
            shadowVertical = _props$attributes2.shadowVertical,
            btnShadowBlur = _props$attributes2.btnShadowBlur,
            btnShadowColor = _props$attributes2.btnShadowColor,
            btnShadowHorizontal = _props$attributes2.btnShadowHorizontal,
            btnShadowVertical = _props$attributes2.btnShadowVertical,
            btnShadowPosition = _props$attributes2.btnShadowPosition;

        return wp.element.createElement(
            "div",
            {
                id: className + "-wrap-" + id,
                className: className + "__wrap " + className + "__" + effect + " " + className + "__" + effectDir,
                style: { textAlign: btnAlign }
            },
            wp.element.createElement("style", {
                dangerouslySetInnerHTML: {
                    __html: ["#premium-button-wrap-" + id + " .premium-button:hover {", "color: " + textHoverColor + " !important;", "border-color: " + borderHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__none .premium-button:hover {", "background-color: " + backHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__slide .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__shutter .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__radial .premium-button::before {", "background-color: " + slideColor, "}"].join("\n")
                }
            }),
            wp.element.createElement(RichText.Content, {
                tagName: "a",
                value: btnText,
                className: className + " " + className + "__" + btnSize,
                href: btnLink,
                target: btnTarget ? "_blank" : "_self",
                style: {
                    color: textColor,
                    backgroundColor: backColor,
                    fontSize: textSize + "px",
                    fontFamily: textFontFamily,
                    letterSpacing: textLetter + "px",
                    textTransform: textUpper ? "uppercase" : "none",
                    fontStyle: textStyle,
                    lineHeight: textLine + "px",
                    fontWeight: textWeight,
                    textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor,
                    boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition,
                    padding: padding + "px",
                    border: borderType,
                    borderWidth: borderWidth + "px",
                    borderRadius: borderRadius + "px",
                    borderColor: borderColor
                }
            })
        );
    }
}, {
    attributes: buttonAttrs_1_3_4,
    migrate: function migrate(attributes) {
        return Object.assign(attributes, { textFontFamily: "" });
    },
    save: function save(props) {
        var _props$attributes3 = props.attributes,
            id = _props$attributes3.id,
            btnText = _props$attributes3.btnText,
            btnSize = _props$attributes3.btnSize,
            btnAlign = _props$attributes3.btnAlign,
            btnLink = _props$attributes3.btnLink,
            btnTarget = _props$attributes3.btnTarget,
            effect = _props$attributes3.effect,
            effectDir = _props$attributes3.effectDir,
            textColor = _props$attributes3.textColor,
            textHoverColor = _props$attributes3.textHoverColor,
            backColor = _props$attributes3.backColor,
            backHoverColor = _props$attributes3.backHoverColor,
            slideColor = _props$attributes3.slideColor,
            textSize = _props$attributes3.textSize,
            textWeight = _props$attributes3.textWeight,
            textLine = _props$attributes3.textLine,
            textLetter = _props$attributes3.textLetter,
            textStyle = _props$attributes3.textStyle,
            textUpper = _props$attributes3.textUpper,
            borderType = _props$attributes3.borderType,
            borderWidth = _props$attributes3.borderWidth,
            borderRadius = _props$attributes3.borderRadius,
            borderColor = _props$attributes3.borderColor,
            borderHoverColor = _props$attributes3.borderHoverColor,
            padding = _props$attributes3.padding,
            shadowBlur = _props$attributes3.shadowBlur,
            shadowColor = _props$attributes3.shadowColor,
            shadowHorizontal = _props$attributes3.shadowHorizontal,
            shadowVertical = _props$attributes3.shadowVertical,
            btnShadowBlur = _props$attributes3.btnShadowBlur,
            btnShadowColor = _props$attributes3.btnShadowColor,
            btnShadowHorizontal = _props$attributes3.btnShadowHorizontal,
            btnShadowVertical = _props$attributes3.btnShadowVertical,
            btnShadowPosition = _props$attributes3.btnShadowPosition;

        return wp.element.createElement(
            "div",
            {
                id: className + "-wrap-" + id,
                className: className + "__wrap " + className + "__" + effect + " " + className + "__" + effectDir,
                style: { textAlign: btnAlign }
            },
            wp.element.createElement("style", {
                dangerouslySetInnerHTML: {
                    __html: ["#premium-button-wrap-" + id + " .premium-button:hover {", "color: " + textHoverColor + " !important;", "border-color: " + borderHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__none .premium-button:hover {", "background-color: " + backHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__slide .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__shutter .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__radial .premium-button::before {", "background-color: " + slideColor, "}"].join("\n")
                }
            }),
            wp.element.createElement(RichText.Content, {
                tagName: "a",
                value: btnText,
                className: className + " " + className + "__" + btnSize,
                href: btnLink,
                target: btnTarget ? "_blank" : "_self",
                style: {
                    color: textColor,
                    backgroundColor: backColor,
                    fontSize: textSize + "px",
                    letterSpacing: textLetter + "px",
                    textTransform: textUpper ? "uppercase" : "none",
                    fontStyle: textStyle,
                    lineHeight: textLine + "px",
                    fontWeight: textWeight,
                    textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor,
                    boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition,
                    padding: padding + "px",
                    border: borderType,
                    borderWidth: borderWidth + "px",
                    borderRadius: borderRadius + "px",
                    borderColor: borderColor
                }
            })
        );
    }
}, {
    attributes: buttonAttrs_1_0_1,
    migrate: function migrate(attributes) {
        return Object.assign(attributes, { borderHoverColor: "" });
    },
    save: function save(props) {
        var _props$attributes4 = props.attributes,
            id = _props$attributes4.id,
            btnText = _props$attributes4.btnText,
            btnSize = _props$attributes4.btnSize,
            btnAlign = _props$attributes4.btnAlign,
            btnLink = _props$attributes4.btnLink,
            btnTarget = _props$attributes4.btnTarget,
            effect = _props$attributes4.effect,
            effectDir = _props$attributes4.effectDir,
            textColor = _props$attributes4.textColor,
            textHoverColor = _props$attributes4.textHoverColor,
            backColor = _props$attributes4.backColor,
            backHoverColor = _props$attributes4.backHoverColor,
            slideColor = _props$attributes4.slideColor,
            textSize = _props$attributes4.textSize,
            textWeight = _props$attributes4.textWeight,
            textLine = _props$attributes4.textLine,
            textLetter = _props$attributes4.textLetter,
            textStyle = _props$attributes4.textStyle,
            textUpper = _props$attributes4.textUpper,
            borderType = _props$attributes4.borderType,
            borderWidth = _props$attributes4.borderWidth,
            borderRadius = _props$attributes4.borderRadius,
            borderColor = _props$attributes4.borderColor,
            padding = _props$attributes4.padding,
            shadowBlur = _props$attributes4.shadowBlur,
            shadowColor = _props$attributes4.shadowColor,
            shadowHorizontal = _props$attributes4.shadowHorizontal,
            shadowVertical = _props$attributes4.shadowVertical,
            btnShadowBlur = _props$attributes4.btnShadowBlur,
            btnShadowColor = _props$attributes4.btnShadowColor,
            btnShadowHorizontal = _props$attributes4.btnShadowHorizontal,
            btnShadowVertical = _props$attributes4.btnShadowVertical,
            btnShadowPosition = _props$attributes4.btnShadowPosition;

        return wp.element.createElement(
            "div",
            {
                id: className + "-wrap-" + id,
                className: className + "__wrap " + className + "__" + effect + " " + className + "__" + effectDir,
                style: { textAlign: btnAlign }
            },
            wp.element.createElement("style", {
                dangerouslySetInnerHTML: {
                    __html: ["#premium-button-wrap-" + id + " .premium-button:hover {", "color: " + textHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__none .premium-button:hover {", "background-color: " + backHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__slide .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__shutter .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__radial .premium-button::before {", "background-color: " + slideColor, "}"].join("\n")
                }
            }),
            wp.element.createElement(RichText.Content, {
                tagName: "a",
                value: btnText,
                className: className + " " + className + "__" + btnSize,
                href: btnLink,
                target: btnTarget ? "_blank" : "_self",
                style: {
                    color: textColor,
                    backgroundColor: backColor,
                    fontSize: textSize + "px",
                    letterSpacing: textLetter + "px",
                    textTransform: textUpper ? "uppercase" : "none",
                    fontStyle: textStyle,
                    lineHeight: textLine + "px",
                    fontWeight: textWeight,
                    textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor,
                    boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition,
                    padding: padding + "px",
                    border: borderType,
                    borderWidth: borderWidth + "px",
                    borderRadius: borderRadius + "px",
                    borderColor: borderColor
                }
            })
        );
    }
}, {
    attributes: buttonAttrs_1_0_0,
    migrate: function migrate(attributes) {
        var newAttributes = {
            btnShadowColor: "",
            btnShadowBlur: "0",
            btnShadowHorizontal: "0",
            btnShadowVertical: "0",
            btnShadowPosition: ""
        };
        return Object.assign(attributes, newAttributes);
    },
    save: function save(props) {
        var _props$attributes5 = props.attributes,
            id = _props$attributes5.id,
            btnText = _props$attributes5.btnText,
            btnSize = _props$attributes5.btnSize,
            btnAlign = _props$attributes5.btnAlign,
            btnLink = _props$attributes5.btnLink,
            btnTarget = _props$attributes5.btnTarget,
            effect = _props$attributes5.effect,
            effectDir = _props$attributes5.effectDir,
            textColor = _props$attributes5.textColor,
            textHoverColor = _props$attributes5.textHoverColor,
            backColor = _props$attributes5.backColor,
            backHoverColor = _props$attributes5.backHoverColor,
            slideColor = _props$attributes5.slideColor,
            textSize = _props$attributes5.textSize,
            textWeight = _props$attributes5.textWeight,
            textLine = _props$attributes5.textLine,
            textLetter = _props$attributes5.textLetter,
            textStyle = _props$attributes5.textStyle,
            textUpper = _props$attributes5.textUpper,
            borderType = _props$attributes5.borderType,
            borderWidth = _props$attributes5.borderWidth,
            borderRadius = _props$attributes5.borderRadius,
            borderColor = _props$attributes5.borderColor,
            padding = _props$attributes5.padding,
            shadowBlur = _props$attributes5.shadowBlur,
            shadowColor = _props$attributes5.shadowColor,
            shadowHorizontal = _props$attributes5.shadowHorizontal,
            shadowVertical = _props$attributes5.shadowVertical;

        return wp.element.createElement(
            "div",
            {
                id: className + "-wrap-" + id,
                className: className + "__wrap " + className + "__" + effect + " " + className + "__" + effectDir,
                style: { textAlign: btnAlign }
            },
            wp.element.createElement("style", {
                dangerouslySetInnerHTML: {
                    __html: ["#premium-button-wrap-" + id + " .premium-button:hover {", "color: " + textHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__none .premium-button:hover {", "background-color: " + backHoverColor + " !important;", "}", "#premium-button-wrap-" + id + ".premium-button__slide .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__shutter .premium-button::before,", "#premium-button-wrap-" + id + ".premium-button__radial .premium-button::before {", "background-color: " + slideColor, "}"].join("\n")
                }
            }),
            wp.element.createElement(RichText.Content, {
                tagName: "a",
                value: btnText,
                className: className + " " + className + "__" + btnSize,
                href: btnLink,
                target: btnTarget ? "_blank" : "_self",
                style: {
                    color: textColor,
                    backgroundColor: backColor,
                    fontSize: textSize + "px",
                    letterSpacing: textLetter + "px",
                    textTransform: textUpper ? "uppercase" : "none",
                    fontStyle: textStyle,
                    lineHeight: textLine + "px",
                    fontWeight: textWeight,
                    textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor,
                    padding: padding + "px",
                    border: borderType,
                    borderWidth: borderWidth + "px",
                    borderRadius: borderRadius + "px",
                    borderColor: borderColor
                }
            })
        );
    }
}];

/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 199 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__edit__ = __webpack_require__(200);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__save__ = __webpack_require__(201);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__deprecated__ = __webpack_require__(202);






var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var counterAttrs = {
    increment: {
        type: "string",
        default: 500
    },
    time: {
        type: "string",
        default: 1000
    },
    delay: {
        type: "string",
        default: 10
    },
    align: {
        type: "string",
        default: "center"
    },
    flexDir: {
        type: "string",
        default: "column"
    },
    numberSize: {
        type: "number",
        default: 30
    },
    numberColor: {
        type: "string",
        default: "#6ec1e4"
    },
    numberWeight: {
        type: "number",
        default: 900
    },
    prefix: {
        type: "boolean",
        default: true
    },
    prefixTxt: {
        type: "string",
        default: "Prefix"
    },
    prefixSize: {
        type: "number",
        default: 20
    },
    prefixColor: {
        type: "string"
    },
    prefixWeight: {
        type: "number"
    },
    prefixGap: {
        type: "number",
        default: 2
    },
    suffix: {
        type: "boolean",
        default: true
    },
    suffixTxt: {
        type: "string",
        default: "Suffix"
    },
    suffixSize: {
        type: "number",
        default: 20
    },
    suffixColor: {
        type: "string"
    },
    suffixWeight: {
        type: "number"
    },
    suffixGap: {
        type: "number",
        default: 2
    },
    icon: {
        type: "string",
        default: "icon"
    },
    iconSpacing: {
        type: "number",
        default: 10
    },
    imageID: {
        type: "string"
    },
    imageURL: {
        type: "string"
    },
    iconType: {
        type: "string",
        default: "dash"
    },
    iconCheck: {
        type: "boolean",
        default: true
    },
    iconSize: {
        type: "number",
        default: 40
    },
    iconColor: {
        type: "string",
        default: "#6ec1e4"
    },
    selfAlign: {
        type: "string",
        default: "center"
    },
    titleCheck: {
        type: "boolean",
        default: true
    },
    titleTxt: {
        type: "string",
        default: "Premium Count Up"
    },
    titleSize: {
        type: "number",
        default: 20
    },
    titleSpacing: {
        type: "number"
    },
    titleStyle: {
        type: "string"
    },
    titleUpper: {
        type: "boolean"
    },
    titleT: {
        type: "number",
        default: 1
    },
    titleB: {
        type: "number",
        default: 1
    },
    titleColor: {
        type: "string"
    },
    titleWeight: {
        type: "number",
        default: 500
    },
    faIcon: {
        type: "string",
        default: "dashicons-clock"
    },
    containerBack: {
        type: "string"
    },
    shadowColor: {
        type: "string"
    },
    shadowBlur: {
        type: "number",
        default: "0"
    },
    shadowHorizontal: {
        type: "number",
        default: "0"
    },
    shadowVertical: {
        type: "number",
        default: "0"
    },
    shadowPosition: {
        type: "string",
        default: ""
    },
    backgroundImageID: {
        type: "string"
    },
    backgroundImageURL: {
        type: "string"
    },
    backgroundRepeat: {
        type: "string",
        default: "no-repeat"
    },
    backgroundPosition: {
        type: "string",
        default: "top center"
    },
    backgroundSize: {
        type: "string",
        default: "auto"
    },
    fixed: {
        type: "boolean",
        default: false
    },
    borderType: {
        type: "string",
        default: "none"
    },
    borderWidth: {
        type: "number",
        default: "1"
    },
    borderRadius: {
        type: "number",
        default: "0"
    },
    borderColor: {
        type: "string"
    },
    titleFamily: {
        type: "string"
    },
    counterFamily: {
        type: "string"
    },
    prefixFamily: {
        type: "string"
    },
    suffixFamily: {
        type: "string"
    }
};

registerBlockType("premium/countup", {
    title: __("CountUp"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__icons__["a" /* default */], { icon: "counter" }),
    category: "premium-blocks",
    attributes: counterAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["g" /* countUp */]
    },
    example: {},
    edit: __WEBPACK_IMPORTED_MODULE_1__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_2__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_4__deprecated__["a" /* default */]
});

/***/ }),
/* 200 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_background__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__ = __webpack_require__(21);








var __ = wp.i18n.__;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    SelectControl = _wp$components.SelectControl,
    TextControl = _wp$components.TextControl,
    RangeControl = _wp$components.RangeControl,
    ToggleControl = _wp$components.ToggleControl,
    IconButton = _wp$components.IconButton;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette,
    MediaUpload = _wp$editor.MediaUpload;
var Fragment = wp.element.Fragment;


var edit = function edit(props) {
  var isSelected = props.isSelected,
      setAttributes = props.setAttributes,
      className = props.className;
  var _props$attributes = props.attributes,
      increment = _props$attributes.increment,
      time = _props$attributes.time,
      delay = _props$attributes.delay,
      align = _props$attributes.align,
      flexDir = _props$attributes.flexDir,
      numberSize = _props$attributes.numberSize,
      numberColor = _props$attributes.numberColor,
      numberWeight = _props$attributes.numberWeight,
      icon = _props$attributes.icon,
      iconSpacing = _props$attributes.iconSpacing,
      iconSize = _props$attributes.iconSize,
      iconColor = _props$attributes.iconColor,
      titleCheck = _props$attributes.titleCheck,
      titleTxt = _props$attributes.titleTxt,
      titleColor = _props$attributes.titleColor,
      titleSize = _props$attributes.titleSize,
      titleSpacing = _props$attributes.titleSpacing,
      titleStyle = _props$attributes.titleStyle,
      titleUpper = _props$attributes.titleUpper,
      titleT = _props$attributes.titleT,
      titleB = _props$attributes.titleB,
      titleWeight = _props$attributes.titleWeight,
      imageID = _props$attributes.imageID,
      imageURL = _props$attributes.imageURL,
      iconType = _props$attributes.iconType,
      iconCheck = _props$attributes.iconCheck,
      prefix = _props$attributes.prefix,
      prefixTxt = _props$attributes.prefixTxt,
      prefixSize = _props$attributes.prefixSize,
      prefixColor = _props$attributes.prefixColor,
      prefixWeight = _props$attributes.prefixWeight,
      prefixGap = _props$attributes.prefixGap,
      suffix = _props$attributes.suffix,
      suffixTxt = _props$attributes.suffixTxt,
      suffixSize = _props$attributes.suffixSize,
      suffixColor = _props$attributes.suffixColor,
      suffixWeight = _props$attributes.suffixWeight,
      suffixGap = _props$attributes.suffixGap,
      selfAlign = _props$attributes.selfAlign,
      faIcon = _props$attributes.faIcon,
      containerBack = _props$attributes.containerBack,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      shadowPosition = _props$attributes.shadowPosition,
      backgroundImageID = _props$attributes.backgroundImageID,
      backgroundImageURL = _props$attributes.backgroundImageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      borderType = _props$attributes.borderType,
      borderColor = _props$attributes.borderColor,
      borderRadius = _props$attributes.borderRadius,
      borderWidth = _props$attributes.borderWidth,
      titleFamily = _props$attributes.titleFamily,
      counterFamily = _props$attributes.counterFamily,
      prefixFamily = _props$attributes.prefixFamily,
      suffixFamily = _props$attributes.suffixFamily;

  var iconClass = "fa" === iconType ? "fa fa-" + faIcon : "dashicons " + faIcon;
  var ICONS = [{
    value: "icon",
    label: __("Icon")
  }, {
    value: "img",
    label: __("Image")
  }];
  var DIRECTION = [{
    value: "row",
    label: __("Row")
  }, {
    value: "row-reverse",
    label: __("Reversed Row")
  }, {
    value: "column",
    label: __("Column")
  }, {
    value: "column-reverse",
    label: __("Reversed Column")
  }];
  var TYPE = [{
    value: "fa",
    label: "Font Awesome Icon"
  }, {
    value: "dash",
    label: "Dashicon"
  }];
  var ALIGNS = ["left", "center", "right"];
  var REVALIGNS = ["right", "center", "left"];
  switch (align) {
    case "left":
      setAttributes({ selfAlign: "flex-start" });
      break;
    case "center":
      setAttributes({ selfAlign: "center" });
      break;
    case "right":
      setAttributes({ selfAlign: "flex-end" });
      break;
  }

  var addFontToHead = function addFontToHead(fontFamily) {
    var head = document.head;
    var link = document.createElement("link");
    link.type = "text/css";
    link.rel = "stylesheet";
    link.href = "https://fonts.googleapis.com/css?family=" + fontFamily.replace(/\s+/g, "+") + ":" + "regular";
    head.appendChild(link);
  };

  var onChangeTitleFamily = function onChangeTitleFamily(fontFamily) {
    setAttributes({ titleFamily: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var onChangePrefixFamily = function onChangePrefixFamily(fontFamily) {
    setAttributes({ prefixFamily: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var onChangeCounterFamily = function onChangeCounterFamily(fontFamily) {
    setAttributes({ counterFamily: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var onChangeSuffixFamily = function onChangeSuffixFamily(fontFamily) {
    setAttributes({ suffixFamily: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-countup");

  return [isSelected && wp.element.createElement(
    InspectorControls,
    { key: "inspector" },
    wp.element.createElement(
      PanelBody,
      {
        title: __("Counter"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(TextControl, {
        label: __("Increment"),
        value: increment,
        onChange: function onChange(value) {
          return setAttributes({ increment: value });
        }
      }),
      wp.element.createElement(TextControl, {
        label: __("Rolling Time"),
        value: time,
        onChange: function onChange(value) {
          return setAttributes({ time: value });
        },
        help: __("Set counting time in milliseconds, for example: 1000")
      }),
      wp.element.createElement(TextControl, {
        label: __("Delay"),
        value: delay,
        onChange: function onChange(value) {
          return setAttributes({ delay: value });
        },
        help: __("Set delay in milliseconds, for example: 10")
      }),
      wp.element.createElement(
        "p",
        null,
        __("Align")
      ),
      "row-reverse" !== flexDir && wp.element.createElement(Toolbar, {
        controls: ALIGNS.map(function (contentAlign) {
          return {
            icon: "editor-align" + contentAlign,
            isActive: contentAlign === align,
            onClick: function onClick() {
              return setAttributes({ align: contentAlign });
            }
          };
        })
      }),
      "row-reverse" === flexDir && wp.element.createElement(Toolbar, {
        label: __("Align"),
        controls: REVALIGNS.map(function (contentAlign) {
          return {
            icon: "editor-align" + contentAlign,
            isActive: contentAlign === align,
            onClick: function onClick() {
              return setAttributes({ align: contentAlign });
            }
          };
        })
      }),
      wp.element.createElement(SelectControl, {
        label: __("Direction"),
        options: DIRECTION,
        value: flexDir,
        onChange: function onChange(newDir) {
          return setAttributes({ flexDir: newDir });
        }
      }),
      ("row" === flexDir || "row-reverse" === flexDir) && wp.element.createElement(RangeControl, {
        label: __("Spacing (PX)"),
        value: iconSpacing,
        onChange: function onChange(newValue) {
          return setAttributes({ iconSpacing: newValue });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Icon"),
        checked: iconCheck,
        onChange: function onChange(check) {
          return setAttributes({ iconCheck: check });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Prefix"),
        checked: prefix,
        onChange: function onChange(check) {
          return setAttributes({ prefix: check });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Suffix"),
        checked: suffix,
        onChange: function onChange(check) {
          return setAttributes({ suffix: check });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Title"),
        checked: titleCheck,
        onChange: function onChange(check) {
          return setAttributes({ titleCheck: check });
        }
      })
    ),
    iconCheck && wp.element.createElement(
      PanelBody,
      {
        title: __("Icon"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(SelectControl, {
        label: __("Icon Type"),
        options: ICONS,
        value: icon,
        onChange: function onChange(newType) {
          return setAttributes({ icon: newType });
        }
      }),
      ("" !== faIcon || "undefined" !== typeof faIcon) && "icon" === icon && wp.element.createElement(
        "div",
        { className: "premium-icon__sidebar_icon" },
        wp.element.createElement("i", { className: iconClass })
      ),
      "icon" === icon && wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(SelectControl, {
          label: __("Icon Type"),
          value: iconType,
          options: TYPE,
          onChange: function onChange(newType) {
            return setAttributes({ iconType: newType });
          }
        }),
        wp.element.createElement(TextControl, {
          label: __("Icon Class"),
          value: faIcon,
          help: [__("Get icon class from"), wp.element.createElement(
            "a",
            {
              href: "fa" === iconType ? "https://fontawesome.com/v4.7.0/icons/" : "https://developer.wordpress.org/resource/dashicons/",
              target: "_blank"
            },
            "\xA0",
            __("here")
          ), __(" , for example: "), "fa" === iconType ? "address-book" : "dashicons-admin-site"],
          onChange: function onChange(newIcon) {
            return setAttributes({ faIcon: newIcon });
          }
        })
      ),
      "img" === icon && imageURL && wp.element.createElement("img", { src: imageURL, width: "100%", height: "auto" }),
      "img" === icon && wp.element.createElement(MediaUpload, {
        allowedTypes: ["image"],
        onSelect: function onSelect(media) {
          setAttributes({
            imageID: media.id,
            imageURL: "undefined" === typeof media.sizes.thumbnail ? media.url : media.sizes.thumbnail.url
          });
        },
        type: "image",
        value: imageID,
        render: function render(_ref) {
          var open = _ref.open;
          return wp.element.createElement(
            IconButton,
            {
              className: "premium-media-uplpad-btn",
              label: __("Change Image"),
              icon: "edit",
              onClick: open
            },
            __("Change Image")
          );
        }
      }),
      wp.element.createElement(RangeControl, {
        label: __("Size (PX)"),
        max: "200",
        value: iconSize,
        onChange: function onChange(newValue) {
          return setAttributes({ iconSize: newValue });
        }
      }),
      "icon" === icon && wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Icon Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: iconColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              iconColor: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      )
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Number"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: counterFamily,
        options: __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__["a" /* default */],
        onChange: onChangeCounterFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight"],
        size: numberSize,
        weight: numberWeight,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ numberSize: newSize });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ numberWeight: newWeight });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Number Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: numberColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              numberColor: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      )
    ),
    prefix && wp.element.createElement(
      PanelBody,
      {
        title: __("Prefix"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(TextControl, {
        label: __("Prefix"),
        value: prefixTxt,
        onChange: function onChange(value) {
          return setAttributes({ prefixTxt: value });
        }
      }),
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: prefixFamily,
        options: __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__["a" /* default */],
        onChange: onChangePrefixFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight"],
        size: prefixSize,
        weight: prefixWeight,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ prefixSize: newSize });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ prefixWeight: newWeight });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Text Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: prefixColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              prefixColor: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(RangeControl, {
        label: __("Gap After (PX)"),
        value: prefixGap,
        onChange: function onChange(newValue) {
          return setAttributes({ prefixGap: newValue });
        }
      })
    ),
    suffix && wp.element.createElement(
      PanelBody,
      {
        title: __("Suffix"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(TextControl, {
        label: __("Suffix"),
        value: suffixTxt,
        onChange: function onChange(value) {
          return setAttributes({ suffixTxt: value });
        }
      }),
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: suffixFamily,
        options: __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__["a" /* default */],
        onChange: onChangeSuffixFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight"],
        size: suffixSize,
        weight: suffixWeight,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ suffixSize: newSize });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ suffixWeight: newWeight });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Text Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: suffixColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              suffixColor: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(RangeControl, {
        label: __("Gap Before (PX)"),
        value: suffixGap,
        onChange: function onChange(newValue) {
          return setAttributes({ suffixGap: newValue });
        }
      })
    ),
    titleCheck && wp.element.createElement(
      PanelBody,
      {
        title: __("Title"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(TextControl, {
        label: __("Title Text"),
        value: titleTxt,
        onChange: function onChange(value) {
          return setAttributes({ titleTxt: value });
        }
      }),
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: titleFamily,
        options: __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__["a" /* default */],
        onChange: onChangeTitleFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "spacing", "style", "upper"],
        size: titleSize,
        weight: titleWeight,
        style: titleStyle,
        spacing: titleSpacing,
        upper: titleUpper,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ titleSize: newSize });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ titleWeight: newWeight });
        },
        onChangeStyle: function onChangeStyle(newStyle) {
          return setAttributes({ titleStyle: newStyle });
        },
        onChangeSpacing: function onChangeSpacing(newValue) {
          return setAttributes({ titleSpacing: newValue });
        },
        onChangeUpper: function onChangeUpper(check) {
          return setAttributes({ titleUpper: check });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Text Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: titleColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              titleColor: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(
        PanelBody,
        {
          title: __("Spacings"),
          className: "premium-panel-body-inner",
          initialOpen: false
        },
        wp.element.createElement(RangeControl, {
          label: __("Margin Top (PX)"),
          value: titleT,
          onChange: function onChange(newValue) {
            return setAttributes({ titleT: newValue });
          }
        }),
        wp.element.createElement(RangeControl, {
          label: __("Margin Bottom (PX)"),
          value: titleB,
          onChange: function onChange(newValue) {
            return setAttributes({ titleB: newValue });
          }
        })
      )
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Container"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Background Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: containerBack,
          onChange: function onChange(newValue) {
            return setAttributes({
              containerBack: newValue === undefined ? "transparent" : newValue
            });
          },
          allowReset: true
        })
      ),
      backgroundImageURL && wp.element.createElement("img", { src: backgroundImageURL, width: "100%", height: "auto" }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_background__["a" /* default */], {
        imageID: backgroundImageID,
        imageURL: backgroundImageURL,
        backgroundPosition: backgroundPosition,
        backgroundRepeat: backgroundRepeat,
        backgroundSize: backgroundSize,
        fixed: fixed,
        onSelectMedia: function onSelectMedia(media) {
          setAttributes({
            backgroundImageID: media.id,
            backgroundImageURL: media.url
          });
        },
        onRemoveImage: function onRemoveImage(value) {
          return setAttributes({
            backgroundImageURL: "",
            backgroundImageID: ""
          });
        },
        onChangeBackPos: function onChangeBackPos(newValue) {
          return setAttributes({ backgroundPosition: newValue });
        },
        onchangeBackRepeat: function onchangeBackRepeat(newValue) {
          return setAttributes({ backgroundRepeat: newValue });
        },
        onChangeBackSize: function onChangeBackSize(newValue) {
          return setAttributes({ backgroundSize: newValue });
        },
        onChangeFixed: function onChangeFixed(check) {
          return setAttributes({ fixed: check });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_border__["a" /* default */], {
        borderType: borderType,
        borderWidth: borderWidth,
        borderColor: borderColor,
        borderRadius: borderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ borderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ borderWidth: newWidth });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({ borderColor: colorValue.hex });
        },
        onChangeRadius: function onChangeRadius(newRadius) {
          return setAttributes({ borderRadius: newRadius });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_box_shadow__["a" /* default */], {
        inner: true,
        color: shadowColor,
        blur: shadowBlur,
        horizontal: shadowHorizontal,
        vertical: shadowVertical,
        position: shadowPosition,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            shadowColor: newColor.hex
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            shadowBlur: newBlur
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            shadowHorizontal: newValue
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            shadowVertical: newValue
          });
        },
        onChangePosition: function onChangePosition(newValue) {
          return setAttributes({
            shadowPosition: newValue
          });
        }
      })
    )
  ), wp.element.createElement(
    "div",
    null,
    iconType === "fa" && 1 != __WEBPACK_IMPORTED_MODULE_1__assets_js_settings__["a" /* FontAwesomeEnabled */] && iconCheck && wp.element.createElement(
      "p",
      { className: "premium-countup__alert" },
      __("Please Enable Font Awesome Icons from Plugin settings")
    )
  ), wp.element.createElement(
    "div",
    {
      className: mainClasses + "__wrap",
      style: {
        justifyContent: align,
        flexDirection: flexDir,
        backgroundColor: containerBack,
        boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
        backgroundImage: "url('" + backgroundImageURL + "')",
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset",
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius + "px",
        borderColor: borderColor
      }
    },
    iconCheck && wp.element.createElement(
      "div",
      {
        className: "premium-countup__icon_wrap",
        style: {
          marginRight: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
          marginLeft: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
          alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
        }
      },
      "icon" === icon && wp.element.createElement("i", {
        className: "premium-countup__icon " + iconClass,
        style: {
          fontSize: iconSize + "px",
          color: iconColor
        }
      }),
      "img" === icon && imageURL && wp.element.createElement("img", {
        src: imageURL,
        style: {
          width: iconSize + "px",
          height: iconSize + "px"
        }
      })
    ),
    wp.element.createElement(
      "div",
      {
        className: "premium-countup__info",
        style: {
          alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
        }
      },
      wp.element.createElement(
        "div",
        { className: "premium-countup__desc" },
        prefix && wp.element.createElement(
          "p",
          {
            className: "premium-countup__prefix",
            style: {
              fontSize: prefixSize + "px",
              fontFamily: prefixFamily,
              color: prefixColor,
              fontWeight: prefixWeight,
              marginRight: prefixGap + "px"
            }
          },
          prefixTxt
        ),
        wp.element.createElement(
          "p",
          {
            className: "premium-countup__increment",
            "data-interval": time,
            "data-delay": delay,
            style: {
              fontSize: numberSize + "px",
              fontFamily: counterFamily,
              color: numberColor,
              fontWeight: numberWeight
            }
          },
          increment
        ),
        suffix && wp.element.createElement(
          "p",
          {
            className: "premium-countup__suffix",
            style: {
              fontSize: suffixSize + "px",
              fontFamily: suffixFamily,
              color: suffixColor,
              fontWeight: suffixWeight,
              marginLeft: suffixGap + "px"
            }
          },
          suffixTxt
        )
      ),
      titleCheck && ("row" === flexDir || "row-reverse" === flexDir) && wp.element.createElement(
        "h3",
        {
          className: "premium-countup__title",
          style: {
            fontSize: titleSize + "px",
            fontFamily: titleFamily,
            marginTop: titleT + "px",
            marginBottom: titleB + "px",
            color: titleColor,
            letterSpacing: titleSpacing + "px",
            fontWeight: titleWeight,
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle
          }
        },
        titleTxt
      )
    ),
    titleCheck && ("column" === flexDir || "column-reverse" === flexDir) && wp.element.createElement(
      "h3",
      {
        className: "premium-countup__title",
        style: {
          fontSize: titleSize + "px",
          fontFamily: titleFamily,
          marginTop: titleT + "px",
          marginBottom: titleB + "px",
          color: titleColor,
          letterSpacing: titleSpacing + "px",
          fontWeight: titleWeight,
          textTransform: titleUpper ? "uppercase" : "none",
          fontStyle: titleStyle,
          alignSelf: selfAlign
        }
      },
      titleTxt
    )
  )];
};

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 201 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      increment = _props$attributes.increment,
      time = _props$attributes.time,
      delay = _props$attributes.delay,
      align = _props$attributes.align,
      flexDir = _props$attributes.flexDir,
      numberSize = _props$attributes.numberSize,
      numberColor = _props$attributes.numberColor,
      numberWeight = _props$attributes.numberWeight,
      prefix = _props$attributes.prefix,
      prefixTxt = _props$attributes.prefixTxt,
      prefixSize = _props$attributes.prefixSize,
      prefixColor = _props$attributes.prefixColor,
      prefixWeight = _props$attributes.prefixWeight,
      prefixGap = _props$attributes.prefixGap,
      suffix = _props$attributes.suffix,
      suffixTxt = _props$attributes.suffixTxt,
      suffixSize = _props$attributes.suffixSize,
      suffixColor = _props$attributes.suffixColor,
      suffixWeight = _props$attributes.suffixWeight,
      suffixGap = _props$attributes.suffixGap,
      iconCheck = _props$attributes.iconCheck,
      icon = _props$attributes.icon,
      iconSpacing = _props$attributes.iconSpacing,
      iconType = _props$attributes.iconType,
      imageURL = _props$attributes.imageURL,
      iconSize = _props$attributes.iconSize,
      iconColor = _props$attributes.iconColor,
      selfAlign = _props$attributes.selfAlign,
      titleCheck = _props$attributes.titleCheck,
      titleTxt = _props$attributes.titleTxt,
      titleColor = _props$attributes.titleColor,
      titleSize = _props$attributes.titleSize,
      titleSpacing = _props$attributes.titleSpacing,
      titleStyle = _props$attributes.titleStyle,
      titleUpper = _props$attributes.titleUpper,
      titleT = _props$attributes.titleT,
      titleB = _props$attributes.titleB,
      titleWeight = _props$attributes.titleWeight,
      faIcon = _props$attributes.faIcon,
      containerBack = _props$attributes.containerBack,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      shadowPosition = _props$attributes.shadowPosition,
      backgroundImageURL = _props$attributes.backgroundImageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      borderType = _props$attributes.borderType,
      borderColor = _props$attributes.borderColor,
      borderRadius = _props$attributes.borderRadius,
      borderWidth = _props$attributes.borderWidth,
      titleFamily = _props$attributes.titleFamily,
      counterFamily = _props$attributes.counterFamily,
      prefixFamily = _props$attributes.prefixFamily,
      suffixFamily = _props$attributes.suffixFamily;

  var iconClass = "fa" === iconType ? 'fa fa-' + faIcon : 'dashicons ' + faIcon;

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-countup');

  return wp.element.createElement(
    'div',
    {
      className: mainClasses + '__wrap',
      style: {
        justifyContent: align,
        flexDirection: flexDir,
        backgroundColor: containerBack,
        boxShadow: shadowHorizontal + 'px ' + shadowVertical + 'px ' + shadowBlur + 'px ' + shadowColor + ' ' + shadowPosition,
        backgroundImage: 'url(\'' + backgroundImageURL + '\')',
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset",
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius + "px",
        borderColor: borderColor
      }
    },
    iconCheck && wp.element.createElement(
      'div',
      {
        className: 'premium-countup__icon_wrap',
        style: {
          marginRight: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
          marginLeft: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
          alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
        }
      },
      "icon" === icon && wp.element.createElement('i', {
        className: 'premium-countup__icon ' + iconClass,
        style: {
          fontSize: iconSize + "px",
          color: iconColor
        }
      }),
      "img" === icon && imageURL && wp.element.createElement('img', {
        src: imageURL,
        style: {
          width: iconSize + "px",
          height: iconSize + "px"
        }
      })
    ),
    wp.element.createElement(
      'div',
      {
        className: 'premium-countup__info',
        style: {
          alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
        }
      },
      wp.element.createElement(
        'div',
        { className: 'premium-countup__desc' },
        prefix && wp.element.createElement(
          'p',
          {
            className: 'premium-countup__prefix',
            style: {
              fontSize: prefixSize + "px",
              fontFamily: prefixFamily,
              color: prefixColor,
              fontWeight: prefixWeight,
              marginRight: prefixGap + "px"
            }
          },
          prefixTxt
        ),
        wp.element.createElement(
          'p',
          {
            className: 'premium-countup__increment',
            'data-interval': time,
            'data-delay': delay,
            style: {
              fontSize: numberSize + "px",
              fontFamily: counterFamily,
              color: numberColor,
              fontWeight: numberWeight
            }
          },
          increment
        ),
        suffix && wp.element.createElement(
          'p',
          {
            className: 'premium-countup__suffix',
            style: {
              fontSize: suffixSize + "px",
              fontFamily: suffixFamily,
              color: suffixColor,
              fontWeight: suffixWeight,
              marginLeft: suffixGap + "px"
            }
          },
          suffixTxt
        )
      ),
      titleCheck && ("row" === flexDir || "row-reverse" === flexDir) && wp.element.createElement(
        'h3',
        {
          className: 'premium-countup__title',
          style: {
            fontSize: titleSize + "px",
            fontFamily: titleFamily,
            marginTop: titleT + "px",
            marginBottom: titleB + "px",
            color: titleColor,
            letterSpacing: titleSpacing + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight
          }
        },
        titleTxt
      )
    ),
    titleCheck && ("column" === flexDir || "column-reverse" === flexDir) && wp.element.createElement(
      'h3',
      {
        className: 'premium-countup__title',
        style: {
          fontSize: titleSize + "px",
          fontFamily: titleFamily,
          marginTop: titleT + "px",
          marginBottom: titleB + "px",
          color: titleColor,
          letterSpacing: titleSpacing + "px",
          fontWeight: titleWeight,
          textTransform: titleUpper ? "uppercase" : "none",
          fontStyle: titleStyle,
          alignSelf: selfAlign
        }
      },
      titleTxt
    )
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 202 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var className = "premium-countup";

var counterAttrs_1_0_9 = {
  increment: {
    type: "string",
    default: 500
  },
  time: {
    type: "string",
    default: 1000
  },
  delay: {
    type: "string",
    default: 10
  },
  align: {
    type: "string",
    default: "center"
  },
  flexDir: {
    type: "string",
    default: "column"
  },
  numberSize: {
    type: "number",
    default: 30
  },
  numberColor: {
    type: "string",
    default: "#6ec1e4"
  },
  numberWeight: {
    type: "number",
    default: 900
  },
  prefix: {
    type: "boolean",
    default: true
  },
  prefixTxt: {
    type: "string",
    default: "Prefix"
  },
  prefixSize: {
    type: "number",
    default: 20
  },
  prefixColor: {
    type: "string"
  },
  prefixWeight: {
    type: "number"
  },
  prefixGap: {
    type: "number",
    default: 2
  },
  suffix: {
    type: "boolean",
    default: true
  },
  suffixTxt: {
    type: "string",
    default: "Suffix"
  },
  suffixSize: {
    type: "number",
    default: 20
  },
  suffixColor: {
    type: "string"
  },
  suffixWeight: {
    type: "number"
  },
  suffixGap: {
    type: "number",
    default: 2
  },
  icon: {
    type: "string",
    default: "icon"
  },
  iconSpacing: {
    type: "number",
    default: 10
  },
  imageID: {
    type: "string"
  },
  imageURL: {
    type: "string"
  },
  iconType: {
    type: "string",
    default: "dash"
  },
  iconCheck: {
    type: "boolean",
    default: true
  },
  iconSize: {
    type: "number",
    default: 40
  },
  iconColor: {
    type: "string",
    default: "#6ec1e4"
  },
  selfAlign: {
    type: "string",
    default: "center"
  },
  titleCheck: {
    type: "boolean",
    default: true
  },
  titleTxt: {
    type: "string",
    default: "Premium Count Up"
  },
  titleSize: {
    type: "number",
    default: 20
  },
  titleSpacing: {
    type: "number"
  },
  titleStyle: {
    type: "string"
  },
  titleUpper: {
    type: "boolean"
  },
  titleT: {
    type: "number",
    default: 1
  },
  titleB: {
    type: "number",
    default: 1
  },
  titleColor: {
    type: "string"
  },
  titleWeight: {
    type: "number",
    default: 500
  },
  faIcon: {
    type: "string",
    default: "dashicons-clock"
  }
};

var newAttributes_1_2_1 = {
  containerBack: {
    type: "string"
  }
};

var newAttributes_1_3_7 = {
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  shadowPosition: {
    type: "string",
    default: ""
  }
};

var newAttributes_1_4_1 = {
  backgroundImageID: {
    type: "string"
  },
  backgroundImageURL: {
    type: "string"
  },
  backgroundRepeat: {
    type: "string",
    default: "no-repeat"
  },
  backgroundPosition: {
    type: "string",
    default: "top center"
  },
  backgroundSize: {
    type: "string",
    default: "auto"
  },
  fixed: {
    type: "boolean",
    default: false
  }
};

var newAttributes_1_6_4 = {
  titleFamily: {
    type: "string"
  },
  counterFamily: {
    type: "string"
  },
  prefixFamily: {
    type: "string"
  },
  suffixFamily: {
    type: "string"
  }
};

var counterAttrs_1_2_1 = Object.assign(counterAttrs_1_0_9, newAttributes_1_2_1);

var counterAttrs_1_3_7 = Object.assign(counterAttrs_1_2_1, newAttributes_1_3_7);

var counterAttrs_1_4_1 = Object.assign(counterAttrs_1_3_7, newAttributes_1_4_1);

var counterAttrs_1_6_4 = Object.assign(counterAttrs_1_4_1, newAttributes_1_6_4);

var deprecatedContent = [{
  attributes: counterAttrs_1_6_4,
  migrate: function migrate(attributes) {
    var newAttributes = {
      borderType: "",
      borderColor: "",
      borderRadius: "",
      borderWidth: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        increment = _props$attributes.increment,
        time = _props$attributes.time,
        delay = _props$attributes.delay,
        align = _props$attributes.align,
        flexDir = _props$attributes.flexDir,
        numberSize = _props$attributes.numberSize,
        numberColor = _props$attributes.numberColor,
        numberWeight = _props$attributes.numberWeight,
        prefix = _props$attributes.prefix,
        prefixTxt = _props$attributes.prefixTxt,
        prefixSize = _props$attributes.prefixSize,
        prefixColor = _props$attributes.prefixColor,
        prefixWeight = _props$attributes.prefixWeight,
        prefixGap = _props$attributes.prefixGap,
        suffix = _props$attributes.suffix,
        suffixTxt = _props$attributes.suffixTxt,
        suffixSize = _props$attributes.suffixSize,
        suffixColor = _props$attributes.suffixColor,
        suffixWeight = _props$attributes.suffixWeight,
        suffixGap = _props$attributes.suffixGap,
        iconCheck = _props$attributes.iconCheck,
        icon = _props$attributes.icon,
        iconSpacing = _props$attributes.iconSpacing,
        iconType = _props$attributes.iconType,
        imageURL = _props$attributes.imageURL,
        iconSize = _props$attributes.iconSize,
        iconColor = _props$attributes.iconColor,
        selfAlign = _props$attributes.selfAlign,
        titleCheck = _props$attributes.titleCheck,
        titleTxt = _props$attributes.titleTxt,
        titleColor = _props$attributes.titleColor,
        titleSize = _props$attributes.titleSize,
        titleSpacing = _props$attributes.titleSpacing,
        titleStyle = _props$attributes.titleStyle,
        titleUpper = _props$attributes.titleUpper,
        titleT = _props$attributes.titleT,
        titleB = _props$attributes.titleB,
        titleWeight = _props$attributes.titleWeight,
        faIcon = _props$attributes.faIcon,
        containerBack = _props$attributes.containerBack,
        shadowBlur = _props$attributes.shadowBlur,
        shadowColor = _props$attributes.shadowColor,
        shadowHorizontal = _props$attributes.shadowHorizontal,
        shadowVertical = _props$attributes.shadowVertical,
        shadowPosition = _props$attributes.shadowPosition,
        backgroundImageURL = _props$attributes.backgroundImageURL,
        fixed = _props$attributes.fixed,
        backgroundRepeat = _props$attributes.backgroundRepeat,
        backgroundPosition = _props$attributes.backgroundPosition,
        backgroundSize = _props$attributes.backgroundSize,
        titleFamily = _props$attributes.titleFamily,
        counterFamily = _props$attributes.counterFamily,
        prefixFamily = _props$attributes.prefixFamily,
        suffixFamily = _props$attributes.suffixFamily;

    var iconClass = "fa" === iconType ? "fa fa-" + faIcon : "dashicons " + faIcon;
    return wp.element.createElement(
      "div",
      {
        className: className + "__wrap",
        style: {
          justifyContent: align,
          flexDirection: flexDir,
          backgroundColor: containerBack,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundImage: "url('" + backgroundImageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      iconCheck && wp.element.createElement(
        "div",
        {
          className: className + "__icon_wrap",
          style: {
            marginRight: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            marginLeft: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        "icon" === icon && wp.element.createElement("i", {
          className: className + "__icon " + iconClass,
          style: {
            fontSize: iconSize + "px",
            color: iconColor
          }
        }),
        "img" === icon && imageURL && wp.element.createElement("img", {
          src: imageURL,
          style: {
            width: iconSize + "px",
            height: iconSize + "px"
          }
        })
      ),
      wp.element.createElement(
        "div",
        {
          className: className + "__info",
          style: {
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__desc" },
          prefix && wp.element.createElement(
            "p",
            {
              className: className + "__prefix",
              style: {
                fontSize: prefixSize + "px",
                fontFamily: prefixFamily,
                color: prefixColor,
                fontWeight: prefixWeight,
                marginRight: prefixGap + "px"
              }
            },
            prefixTxt
          ),
          wp.element.createElement(
            "p",
            {
              className: className + "__increment",
              "data-interval": time,
              "data-delay": delay,
              style: {
                fontSize: numberSize + "px",
                fontFamily: counterFamily,
                color: numberColor,
                fontWeight: numberWeight
              }
            },
            increment
          ),
          suffix && wp.element.createElement(
            "p",
            {
              className: className + "__suffix",
              style: {
                fontSize: suffixSize + "px",
                fontFamily: suffixFamily,
                color: suffixColor,
                fontWeight: suffixWeight,
                marginLeft: suffixGap + "px"
              }
            },
            suffixTxt
          )
        ),
        titleCheck && ("row" === flexDir || "row-reverse" === flexDir) && wp.element.createElement(
          "h3",
          {
            className: className + "__title",
            style: {
              fontSize: titleSize + "px",
              fontFamily: titleFamily,
              marginTop: titleT + "px",
              marginBottom: titleB + "px",
              color: titleColor,
              letterSpacing: titleSpacing + "px",
              textTransform: titleUpper ? "uppercase" : "none",
              fontStyle: titleStyle,
              fontWeight: titleWeight
            }
          },
          titleTxt
        )
      ),
      titleCheck && ("column" === flexDir || "column-reverse" === flexDir) && wp.element.createElement(
        "h3",
        {
          className: className + "__title",
          style: {
            fontSize: titleSize + "px",
            fontFamily: titleFamily,
            marginTop: titleT + "px",
            marginBottom: titleB + "px",
            color: titleColor,
            letterSpacing: titleSpacing + "px",
            fontWeight: titleWeight,
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            alignSelf: selfAlign
          }
        },
        titleTxt
      )
    );
  }
}, {
  attributes: counterAttrs_1_4_1,
  migrate: function migrate(attributes) {
    var newAttributes = {
      titleFamily: "",
      counterFamily: "",
      prefixFamily: "",
      suffixFamily: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        increment = _props$attributes2.increment,
        time = _props$attributes2.time,
        delay = _props$attributes2.delay,
        align = _props$attributes2.align,
        flexDir = _props$attributes2.flexDir,
        numberSize = _props$attributes2.numberSize,
        numberColor = _props$attributes2.numberColor,
        numberWeight = _props$attributes2.numberWeight,
        prefix = _props$attributes2.prefix,
        prefixTxt = _props$attributes2.prefixTxt,
        prefixSize = _props$attributes2.prefixSize,
        prefixColor = _props$attributes2.prefixColor,
        prefixWeight = _props$attributes2.prefixWeight,
        prefixGap = _props$attributes2.prefixGap,
        suffix = _props$attributes2.suffix,
        suffixTxt = _props$attributes2.suffixTxt,
        suffixSize = _props$attributes2.suffixSize,
        suffixColor = _props$attributes2.suffixColor,
        suffixWeight = _props$attributes2.suffixWeight,
        suffixGap = _props$attributes2.suffixGap,
        iconCheck = _props$attributes2.iconCheck,
        icon = _props$attributes2.icon,
        iconSpacing = _props$attributes2.iconSpacing,
        iconType = _props$attributes2.iconType,
        imageURL = _props$attributes2.imageURL,
        iconSize = _props$attributes2.iconSize,
        iconColor = _props$attributes2.iconColor,
        selfAlign = _props$attributes2.selfAlign,
        titleCheck = _props$attributes2.titleCheck,
        titleTxt = _props$attributes2.titleTxt,
        titleColor = _props$attributes2.titleColor,
        titleSize = _props$attributes2.titleSize,
        titleSpacing = _props$attributes2.titleSpacing,
        titleStyle = _props$attributes2.titleStyle,
        titleUpper = _props$attributes2.titleUpper,
        titleT = _props$attributes2.titleT,
        titleB = _props$attributes2.titleB,
        titleWeight = _props$attributes2.titleWeight,
        faIcon = _props$attributes2.faIcon,
        containerBack = _props$attributes2.containerBack,
        shadowBlur = _props$attributes2.shadowBlur,
        shadowColor = _props$attributes2.shadowColor,
        shadowHorizontal = _props$attributes2.shadowHorizontal,
        shadowVertical = _props$attributes2.shadowVertical,
        shadowPosition = _props$attributes2.shadowPosition,
        backgroundImageURL = _props$attributes2.backgroundImageURL,
        fixed = _props$attributes2.fixed,
        backgroundRepeat = _props$attributes2.backgroundRepeat,
        backgroundPosition = _props$attributes2.backgroundPosition,
        backgroundSize = _props$attributes2.backgroundSize;

    var iconClass = "fa" === iconType ? "fa fa-" + faIcon : "dashicons " + faIcon;
    return wp.element.createElement(
      "div",
      {
        className: className + "__wrap",
        style: {
          justifyContent: align,
          flexDirection: flexDir,
          backgroundColor: containerBack,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundImage: "url('" + backgroundImageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      iconCheck && wp.element.createElement(
        "div",
        {
          className: className + "__icon_wrap",
          style: {
            marginRight: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            marginLeft: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        "icon" === icon && wp.element.createElement("i", {
          className: className + "__icon " + iconClass,
          style: {
            fontSize: iconSize + "px",
            color: iconColor
          }
        }),
        "img" === icon && imageURL && wp.element.createElement("img", {
          src: imageURL,
          style: {
            width: iconSize + "px",
            height: iconSize + "px"
          }
        })
      ),
      wp.element.createElement(
        "div",
        {
          className: className + "__info",
          style: {
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__desc" },
          prefix && wp.element.createElement(
            "p",
            {
              style: {
                fontSize: prefixSize + "px",
                color: prefixColor,
                fontWeight: prefixWeight,
                marginRight: prefixGap + "px"
              }
            },
            prefixTxt
          ),
          wp.element.createElement(
            "p",
            {
              className: className + "__increment",
              "data-interval": time,
              "data-delay": delay,
              style: {
                fontSize: numberSize + "px",
                color: numberColor,
                fontWeight: numberWeight
              }
            },
            increment
          ),
          suffix && wp.element.createElement(
            "p",
            {
              style: {
                fontSize: suffixSize + "px",
                color: suffixColor,
                fontWeight: suffixWeight,
                marginLeft: suffixGap + "px"
              }
            },
            suffixTxt
          )
        ),
        titleCheck && ("row" === flexDir || "row-reverse" === flexDir) && wp.element.createElement(
          "h3",
          {
            className: className + "__title",
            style: {
              fontSize: titleSize + "px",
              marginTop: titleT + "px",
              marginBottom: titleB + "px",
              color: titleColor,
              letterSpacing: titleSpacing + "px",
              textTransform: titleUpper ? "uppercase" : "none",
              fontStyle: titleStyle,
              fontWeight: titleWeight
            }
          },
          titleTxt
        )
      ),
      titleCheck && ("column" === flexDir || "column-reverse" === flexDir) && wp.element.createElement(
        "h3",
        {
          className: className + "__title",
          style: {
            fontSize: titleSize + "px",
            marginTop: titleT + "px",
            marginBottom: titleB + "px",
            color: titleColor,
            letterSpacing: titleSpacing + "px",
            fontWeight: titleWeight,
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            alignSelf: selfAlign
          }
        },
        titleTxt
      )
    );
  }
}, {
  attributes: counterAttrs_1_3_7,
  migrate: function migrate(attributes) {
    var newAttributes = {
      shadowColor: "",
      shadowBlur: "0",
      shadowHorizontal: "0",
      shadowVertical: "0",
      shadowPosition: "",
      backgroundImageID: "",
      backgroundImageURL: "",
      fixed: false,
      backgroundRepeat: "no-repeat",
      backgroundPosition: "top center",
      backgroundSize: "auto"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        increment = _props$attributes3.increment,
        time = _props$attributes3.time,
        delay = _props$attributes3.delay,
        align = _props$attributes3.align,
        flexDir = _props$attributes3.flexDir,
        numberSize = _props$attributes3.numberSize,
        numberColor = _props$attributes3.numberColor,
        numberWeight = _props$attributes3.numberWeight,
        prefix = _props$attributes3.prefix,
        prefixTxt = _props$attributes3.prefixTxt,
        prefixSize = _props$attributes3.prefixSize,
        prefixColor = _props$attributes3.prefixColor,
        prefixWeight = _props$attributes3.prefixWeight,
        prefixGap = _props$attributes3.prefixGap,
        suffix = _props$attributes3.suffix,
        suffixTxt = _props$attributes3.suffixTxt,
        suffixSize = _props$attributes3.suffixSize,
        suffixColor = _props$attributes3.suffixColor,
        suffixWeight = _props$attributes3.suffixWeight,
        suffixGap = _props$attributes3.suffixGap,
        iconCheck = _props$attributes3.iconCheck,
        icon = _props$attributes3.icon,
        iconSpacing = _props$attributes3.iconSpacing,
        iconType = _props$attributes3.iconType,
        imageURL = _props$attributes3.imageURL,
        iconSize = _props$attributes3.iconSize,
        iconColor = _props$attributes3.iconColor,
        selfAlign = _props$attributes3.selfAlign,
        titleCheck = _props$attributes3.titleCheck,
        titleTxt = _props$attributes3.titleTxt,
        titleColor = _props$attributes3.titleColor,
        titleSize = _props$attributes3.titleSize,
        titleSpacing = _props$attributes3.titleSpacing,
        titleStyle = _props$attributes3.titleStyle,
        titleUpper = _props$attributes3.titleUpper,
        titleT = _props$attributes3.titleT,
        titleB = _props$attributes3.titleB,
        titleWeight = _props$attributes3.titleWeight,
        faIcon = _props$attributes3.faIcon,
        containerBack = _props$attributes3.containerBack,
        shadowBlur = _props$attributes3.shadowBlur,
        shadowColor = _props$attributes3.shadowColor,
        shadowHorizontal = _props$attributes3.shadowHorizontal,
        shadowVertical = _props$attributes3.shadowVertical,
        shadowPosition = _props$attributes3.shadowPosition;

    var iconClass = "fa" === iconType ? "fa fa-" + faIcon : "dashicons " + faIcon;
    return wp.element.createElement(
      "div",
      {
        className: className + "__wrap",
        style: {
          justifyContent: align,
          flexDirection: flexDir,
          backgroundColor: containerBack,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      iconCheck && wp.element.createElement(
        "div",
        {
          className: className + "__icon_wrap",
          style: {
            marginRight: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            marginLeft: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        "icon" === icon && wp.element.createElement("i", {
          className: className + "__icon " + iconClass,
          style: {
            fontSize: iconSize + "px",
            color: iconColor
          }
        }),
        "img" === icon && imageURL && wp.element.createElement("img", {
          src: imageURL,
          style: {
            width: iconSize + "px",
            height: iconSize + "px"
          }
        })
      ),
      wp.element.createElement(
        "div",
        {
          className: className + "__info",
          style: {
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__desc" },
          prefix && wp.element.createElement(
            "p",
            {
              style: {
                fontSize: prefixSize + "px",
                color: prefixColor,
                fontWeight: prefixWeight,
                marginRight: prefixGap + "px"
              }
            },
            prefixTxt
          ),
          wp.element.createElement(
            "p",
            {
              className: className + "__increment",
              "data-interval": time,
              "data-delay": delay,
              style: {
                fontSize: numberSize + "px",
                color: numberColor,
                fontWeight: numberWeight
              }
            },
            increment
          ),
          suffix && wp.element.createElement(
            "p",
            {
              style: {
                fontSize: suffixSize + "px",
                color: suffixColor,
                fontWeight: suffixWeight,
                marginLeft: suffixGap + "px"
              }
            },
            suffixTxt
          )
        ),
        titleCheck && ("row" === flexDir || "row-reverse" === flexDir) && wp.element.createElement(
          "h3",
          {
            className: className + "__title",
            style: {
              fontSize: titleSize + "px",
              marginTop: titleT + "px",
              marginBottom: titleB + "px",
              color: titleColor,
              letterSpacing: titleSpacing + "px",
              textTransform: titleUpper ? "uppercase" : "none",
              fontStyle: titleStyle,
              fontWeight: titleWeight
            }
          },
          titleTxt
        )
      ),
      titleCheck && ("column" === flexDir || "column-reverse" === flexDir) && wp.element.createElement(
        "h3",
        {
          className: className + "__title",
          style: {
            fontSize: titleSize + "px",
            marginTop: titleT + "px",
            marginBottom: titleB + "px",
            color: titleColor,
            letterSpacing: titleSpacing + "px",
            fontWeight: titleWeight,
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            alignSelf: selfAlign
          }
        },
        titleTxt
      )
    );
  }
}, {
  attributes: counterAttrs_1_2_1,
  migrate: function migrate(attributes) {
    var newAttributes = {
      shadowColor: "",
      shadowBlur: "0",
      shadowHorizontal: "0",
      shadowVertical: "0",
      shadowPosition: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes4 = props.attributes,
        increment = _props$attributes4.increment,
        time = _props$attributes4.time,
        delay = _props$attributes4.delay,
        align = _props$attributes4.align,
        flexDir = _props$attributes4.flexDir,
        numberSize = _props$attributes4.numberSize,
        numberColor = _props$attributes4.numberColor,
        numberWeight = _props$attributes4.numberWeight,
        prefix = _props$attributes4.prefix,
        prefixTxt = _props$attributes4.prefixTxt,
        prefixSize = _props$attributes4.prefixSize,
        prefixColor = _props$attributes4.prefixColor,
        prefixWeight = _props$attributes4.prefixWeight,
        prefixGap = _props$attributes4.prefixGap,
        suffix = _props$attributes4.suffix,
        suffixTxt = _props$attributes4.suffixTxt,
        suffixSize = _props$attributes4.suffixSize,
        suffixColor = _props$attributes4.suffixColor,
        suffixWeight = _props$attributes4.suffixWeight,
        suffixGap = _props$attributes4.suffixGap,
        iconCheck = _props$attributes4.iconCheck,
        icon = _props$attributes4.icon,
        iconSpacing = _props$attributes4.iconSpacing,
        iconType = _props$attributes4.iconType,
        imageURL = _props$attributes4.imageURL,
        iconSize = _props$attributes4.iconSize,
        iconColor = _props$attributes4.iconColor,
        selfAlign = _props$attributes4.selfAlign,
        titleCheck = _props$attributes4.titleCheck,
        titleTxt = _props$attributes4.titleTxt,
        titleColor = _props$attributes4.titleColor,
        titleSize = _props$attributes4.titleSize,
        titleSpacing = _props$attributes4.titleSpacing,
        titleStyle = _props$attributes4.titleStyle,
        titleUpper = _props$attributes4.titleUpper,
        titleT = _props$attributes4.titleT,
        titleB = _props$attributes4.titleB,
        titleWeight = _props$attributes4.titleWeight,
        faIcon = _props$attributes4.faIcon,
        containerBack = _props$attributes4.containerBack;

    var iconClass = "fa" === iconType ? "fa fa-" + faIcon : "dashicons " + faIcon;
    return wp.element.createElement(
      "div",
      {
        className: className + "__wrap",
        style: {
          justifyContent: align,
          flexDirection: flexDir,
          backgroundColor: containerBack
        }
      },
      iconCheck && wp.element.createElement(
        "div",
        {
          className: className + "__icon_wrap",
          style: {
            marginRight: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            marginLeft: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        "icon" === icon && wp.element.createElement("i", {
          className: className + "__icon " + iconClass,
          style: {
            fontSize: iconSize + "px",
            color: iconColor
          }
        }),
        "img" === icon && imageURL && wp.element.createElement("img", {
          src: imageURL,
          style: {
            width: iconSize + "px",
            height: iconSize + "px"
          }
        })
      ),
      wp.element.createElement(
        "div",
        {
          className: className + "__info",
          style: {
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__desc" },
          prefix && wp.element.createElement(
            "p",
            {
              style: {
                fontSize: prefixSize + "px",
                color: prefixColor,
                fontWeight: prefixWeight,
                marginRight: prefixGap + "px"
              }
            },
            prefixTxt
          ),
          wp.element.createElement(
            "p",
            {
              className: className + "__increment",
              "data-interval": time,
              "data-delay": delay,
              style: {
                fontSize: numberSize + "px",
                color: numberColor,
                fontWeight: numberWeight
              }
            },
            increment
          ),
          suffix && wp.element.createElement(
            "p",
            {
              style: {
                fontSize: suffixSize + "px",
                color: suffixColor,
                fontWeight: suffixWeight,
                marginLeft: suffixGap + "px"
              }
            },
            suffixTxt
          )
        ),
        titleCheck && ("row" === flexDir || "row-reverse" === flexDir) && wp.element.createElement(
          "h3",
          {
            className: className + "__title",
            style: {
              fontSize: titleSize + "px",
              marginTop: titleT + "px",
              marginBottom: titleB + "px",
              color: titleColor,
              letterSpacing: titleSpacing + "px",
              textTransform: titleUpper ? "uppercase" : "none",
              fontStyle: titleStyle,
              fontWeight: titleWeight
            }
          },
          titleTxt
        )
      ),
      titleCheck && ("column" === flexDir || "column-reverse" === flexDir) && wp.element.createElement(
        "h3",
        {
          className: className + "__title",
          style: {
            fontSize: titleSize + "px",
            marginTop: titleT + "px",
            marginBottom: titleB + "px",
            color: titleColor,
            letterSpacing: titleSpacing + "px",
            fontWeight: titleWeight,
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            alignSelf: selfAlign
          }
        },
        titleTxt
      )
    );
  }
}, {
  attributes: counterAttrs_1_0_9,
  save: function save(props) {
    var _props$attributes5 = props.attributes,
        increment = _props$attributes5.increment,
        time = _props$attributes5.time,
        delay = _props$attributes5.delay,
        align = _props$attributes5.align,
        flexDir = _props$attributes5.flexDir,
        numberSize = _props$attributes5.numberSize,
        numberColor = _props$attributes5.numberColor,
        numberWeight = _props$attributes5.numberWeight,
        prefix = _props$attributes5.prefix,
        prefixTxt = _props$attributes5.prefixTxt,
        prefixSize = _props$attributes5.prefixSize,
        prefixColor = _props$attributes5.prefixColor,
        prefixWeight = _props$attributes5.prefixWeight,
        prefixGap = _props$attributes5.prefixGap,
        suffix = _props$attributes5.suffix,
        suffixTxt = _props$attributes5.suffixTxt,
        suffixSize = _props$attributes5.suffixSize,
        suffixColor = _props$attributes5.suffixColor,
        suffixWeight = _props$attributes5.suffixWeight,
        suffixGap = _props$attributes5.suffixGap,
        iconCheck = _props$attributes5.iconCheck,
        icon = _props$attributes5.icon,
        iconSpacing = _props$attributes5.iconSpacing,
        iconType = _props$attributes5.iconType,
        imageURL = _props$attributes5.imageURL,
        iconSize = _props$attributes5.iconSize,
        iconColor = _props$attributes5.iconColor,
        selfAlign = _props$attributes5.selfAlign,
        titleCheck = _props$attributes5.titleCheck,
        titleTxt = _props$attributes5.titleTxt,
        titleColor = _props$attributes5.titleColor,
        titleSize = _props$attributes5.titleSize,
        titleSpacing = _props$attributes5.titleSpacing,
        titleStyle = _props$attributes5.titleStyle,
        titleUpper = _props$attributes5.titleUpper,
        titleT = _props$attributes5.titleT,
        titleB = _props$attributes5.titleB,
        titleWeight = _props$attributes5.titleWeight,
        faIcon = _props$attributes5.faIcon;

    var iconClass = "fa" === iconType ? "fa fa-" + faIcon : "dashicons " + faIcon;
    return wp.element.createElement(
      "div",
      {
        className: className + "__wrap",
        style: {
          justifyContent: align,
          flexDirection: flexDir
        }
      },
      iconCheck && wp.element.createElement(
        "div",
        {
          className: className + "__icon_wrap",
          style: {
            marginRight: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            marginLeft: "row" === flexDir || "row-reverse" === flexDir ? iconSpacing + "px" : "0",
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        "icon" === icon && wp.element.createElement("i", {
          className: className + "__icon " + iconClass,
          style: {
            fontSize: iconSize + "px",
            color: iconColor
          }
        }),
        "img" === icon && imageURL && wp.element.createElement("img", {
          src: imageURL,
          style: {
            width: iconSize + "px",
            height: iconSize + "px"
          }
        })
      ),
      wp.element.createElement(
        "div",
        {
          className: className + "__info",
          style: {
            alignSelf: "row-reverse" === flexDir || "row" === flexDir ? "center" : selfAlign
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__desc" },
          prefix && wp.element.createElement(
            "p",
            {
              style: {
                fontSize: prefixSize + "px",
                color: prefixColor,
                fontWeight: prefixWeight,
                marginRight: prefixGap + "px"
              }
            },
            prefixTxt
          ),
          wp.element.createElement(
            "p",
            {
              className: className + "__increment",
              "data-interval": time,
              "data-delay": delay,
              style: {
                fontSize: numberSize + "px",
                color: numberColor,
                fontWeight: numberWeight
              }
            },
            increment
          ),
          suffix && wp.element.createElement(
            "p",
            {
              style: {
                fontSize: suffixSize + "px",
                color: suffixColor,
                fontWeight: suffixWeight,
                marginLeft: suffixGap + "px"
              }
            },
            suffixTxt
          )
        ),
        titleCheck && ("row" === flexDir || "row-reverse" === flexDir) && wp.element.createElement(
          "h3",
          {
            className: className + "__title",
            style: {
              fontSize: titleSize + "px",
              marginTop: titleT + "px",
              marginBottom: titleB + "px",
              color: titleColor,
              letterSpacing: titleSpacing + "px",
              textTransform: titleUpper ? "uppercase" : "none",
              fontStyle: titleStyle,
              fontWeight: titleWeight
            }
          },
          titleTxt
        )
      ),
      titleCheck && ("column" === flexDir || "column-reverse" === flexDir) && wp.element.createElement(
        "h3",
        {
          className: className + "__title",
          style: {
            fontSize: titleSize + "px",
            marginTop: titleT + "px",
            marginBottom: titleB + "px",
            color: titleColor,
            letterSpacing: titleSpacing + "px",
            fontWeight: titleWeight,
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            alignSelf: selfAlign
          }
        },
        titleTxt
      )
    );
  }
}];

/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 203 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(204);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__save__ = __webpack_require__(205);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__deprecated__ = __webpack_require__(206);






var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var dualHeadingAttrs = {
    contentAlign: {
        type: "string",
        default: "center"
    },
    firstHeading: {
        type: "array",
        source: "children",
        default: "Premium ",
        selector: ".premium-dheading-block__first"
    },
    secondHeading: {
        type: "array",
        source: "children",
        default: "Blocks",
        selector: ".premium-dheading-block__second"
    },
    titleTag: {
        type: "string",
        default: "h1"
    },
    display: {
        type: "string",
        default: "inline"
    },
    firstColor: {
        type: "string",
        default: "#6ec1e4"
    },
    firstSize: {
        type: "number",
        default: "20"
    },
    firstFamily: {
        type: "string"
    },
    firstLetter: {
        type: "number"
    },
    firstStyle: {
        type: "string"
    },
    firstUpper: {
        type: "boolean"
    },
    firstWeight: {
        type: "number",
        default: 500
    },
    firstBackground: {
        type: "string"
    },
    firstBorderType: {
        type: "string",
        default: "none"
    },
    firstBorderWidth: {
        type: "number",
        default: "1"
    },
    firstBorderRadius: {
        type: "number",
        default: "0"
    },
    firstBorderColor: {
        type: "string"
    },
    firstMarginR: {
        type: "number",
        default: "0"
    },
    firstMarginL: {
        type: "number",
        default: "0"
    },
    firstPadding: {
        type: "number",
        default: "0"
    },
    firstClip: {
        type: "boolean",
        default: false
    },
    firstAnim: {
        type: "boolean",
        default: false
    },
    firstStroke: {
        type: "boolean",
        default: false
    },
    firstClipColor: {
        type: "string",
        default: "#54595f"
    },
    firstShadowColor: {
        type: "string"
    },
    firstShadowBlur: {
        type: "number",
        default: "0"
    },
    firstShadowHorizontal: {
        type: "number",
        default: "0"
    },
    firstShadowVertical: {
        type: "number",
        default: "0"
    },
    secondColor: {
        type: "string",
        default: "#54595f"
    },
    secondSize: {
        type: "number",
        default: "20"
    },
    secondFamily: {
        type: "string"
    },
    secondLetter: {
        type: "number"
    },
    secondStyle: {
        type: "string"
    },
    secondUpper: {
        type: "boolean"
    },
    secondWeight: {
        type: "number",
        default: 500
    },
    secondBackground: {
        type: "string"
    },
    secondBorderType: {
        type: "string",
        default: "none"
    },
    secondBorderWidth: {
        type: "number",
        default: "1"
    },
    secondBorderRadius: {
        type: "number",
        default: "0"
    },
    secondBorderColor: {
        type: "string"
    },
    secondMarginR: {
        type: "number",
        default: "0"
    },
    secondMarginL: {
        type: "number",
        default: "0"
    },
    secondPadding: {
        type: "number",
        default: "0"
    },
    secondClip: {
        type: "boolean",
        default: false
    },
    secondStroke: {
        type: "boolean",
        default: false
    },
    secondShadowColor: {
        type: "string"
    },
    secondShadowBlur: {
        type: "number",
        default: "0"
    },
    secondShadowHorizontal: {
        type: "number",
        default: "0"
    },
    secondShadowVertical: {
        type: "number",
        default: "0"
    },
    secondAnim: {
        type: "boolean",
        default: false
    },
    secondClipColor: {
        type: "string",
        default: "#6ec1e4"
    },
    link: {
        type: "boolean",
        default: false
    },
    target: {
        type: "boolean",
        default: false
    },
    headingURL: {
        type: "string"
    },
    containerBack: {
        type: "string"
    },
    imageID: {
        type: "string"
    },
    imageURL: {
        type: "string"
    },
    backgroundRepeat: {
        type: "string",
        default: "no-repeat"
    },
    backgroundPosition: {
        type: "string",
        default: "top center"
    },
    backgroundSize: {
        type: "string",
        default: "auto"
    },
    fixed: {
        type: "boolean",
        default: false
    },
    containerBorderType: {
        type: "string",
        default: "none"
    },
    containerBorderWidth: {
        type: "number",
        default: "1"
    },
    containerBorderRadius: {
        type: "number",
        default: "0"
    },
    containerBorderColor: {
        type: "string"
    }
};
registerBlockType("premium/dheading-block", {
    title: __("Dual Heading"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "dual-heading" }),
    category: "premium-blocks",
    attributes: dualHeadingAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["h" /* dualHeading */]
    },
    example: {},
    edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_3__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_4__deprecated__["a" /* default */]
});

/***/ }),
/* 204 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_background__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_fonts__ = __webpack_require__(21);







var __ = wp.i18n.__;
var Fragment = wp.element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    TextControl = _wp$components.TextControl,
    RangeControl = _wp$components.RangeControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    InspectorControls = _wp$editor.InspectorControls,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    ColorPalette = _wp$editor.ColorPalette,
    URLInput = _wp$editor.URLInput;


var edit = function edit(props) {
  var setAttributes = props.setAttributes,
      isSelected = props.isSelected,
      className = props.className;
  var _props$attributes = props.attributes,
      contentAlign = _props$attributes.contentAlign,
      firstHeading = _props$attributes.firstHeading,
      secondHeading = _props$attributes.secondHeading,
      display = _props$attributes.display,
      firstColor = _props$attributes.firstColor,
      firstBackground = _props$attributes.firstBackground,
      firstSize = _props$attributes.firstSize,
      firstFamily = _props$attributes.firstFamily,
      firstStyle = _props$attributes.firstStyle,
      firstUpper = _props$attributes.firstUpper,
      firstLetter = _props$attributes.firstLetter,
      firstWeight = _props$attributes.firstWeight,
      firstBorderType = _props$attributes.firstBorderType,
      firstBorderWidth = _props$attributes.firstBorderWidth,
      firstBorderRadius = _props$attributes.firstBorderRadius,
      firstBorderColor = _props$attributes.firstBorderColor,
      firstPadding = _props$attributes.firstPadding,
      firstMarginR = _props$attributes.firstMarginR,
      firstMarginL = _props$attributes.firstMarginL,
      firstClip = _props$attributes.firstClip,
      firstAnim = _props$attributes.firstAnim,
      firstStroke = _props$attributes.firstStroke,
      firstClipColor = _props$attributes.firstClipColor,
      firstShadowBlur = _props$attributes.firstShadowBlur,
      firstShadowColor = _props$attributes.firstShadowColor,
      firstShadowHorizontal = _props$attributes.firstShadowHorizontal,
      firstShadowVertical = _props$attributes.firstShadowVertical,
      secondColor = _props$attributes.secondColor,
      secondBackground = _props$attributes.secondBackground,
      secondSize = _props$attributes.secondSize,
      secondFamily = _props$attributes.secondFamily,
      secondLetter = _props$attributes.secondLetter,
      secondUpper = _props$attributes.secondUpper,
      secondWeight = _props$attributes.secondWeight,
      secondStyle = _props$attributes.secondStyle,
      secondBorderType = _props$attributes.secondBorderType,
      secondBorderWidth = _props$attributes.secondBorderWidth,
      secondBorderRadius = _props$attributes.secondBorderRadius,
      secondBorderColor = _props$attributes.secondBorderColor,
      secondPadding = _props$attributes.secondPadding,
      secondMarginL = _props$attributes.secondMarginL,
      secondMarginR = _props$attributes.secondMarginR,
      secondClip = _props$attributes.secondClip,
      secondStroke = _props$attributes.secondStroke,
      secondAnim = _props$attributes.secondAnim,
      secondClipColor = _props$attributes.secondClipColor,
      secondShadowBlur = _props$attributes.secondShadowBlur,
      secondShadowColor = _props$attributes.secondShadowColor,
      secondShadowHorizontal = _props$attributes.secondShadowHorizontal,
      secondShadowVertical = _props$attributes.secondShadowVertical,
      link = _props$attributes.link,
      target = _props$attributes.target,
      headingURL = _props$attributes.headingURL,
      containerBack = _props$attributes.containerBack,
      imageID = _props$attributes.imageID,
      imageURL = _props$attributes.imageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      containerBorderType = _props$attributes.containerBorderType,
      containerBorderWidth = _props$attributes.containerBorderWidth,
      containerBorderRadius = _props$attributes.containerBorderRadius,
      containerBorderColor = _props$attributes.containerBorderColor;

  var DISPLAY = [{
    value: "inline",
    label: __("Inline")
  }, {
    value: "block",
    label: __("Block")
  }];

  var addFontToHead = function addFontToHead(fontFamily) {
    var head = document.head;
    var link = document.createElement("link");
    link.type = "text/css";
    link.rel = "stylesheet";
    link.href = "https://fonts.googleapis.com/css?family=" + fontFamily.replace(/\s+/g, "+") + ":" + "regular";
    head.appendChild(link);
  };

  var onChangeFirstFamily = function onChangeFirstFamily(fontFamily) {
    setAttributes({ firstFamily: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var onChangeSecondFamily = function onChangeSecondFamily(fontFamily) {
    setAttributes({ secondFamily: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-dheading-block__container");

  return [isSelected && wp.element.createElement(
    BlockControls,
    { key: "controls" },
    wp.element.createElement(AlignmentToolbar, {
      value: contentAlign,
      onChange: function onChange(newAlign) {
        return setAttributes({ contentAlign: newAlign });
      }
    })
  ), isSelected && wp.element.createElement(
    InspectorControls,
    { key: "inspector" },
    wp.element.createElement(
      PanelBody,
      {
        title: __("General Settings"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(TextControl, {
        label: __("First Heading"),
        type: "url",
        value: firstHeading,
        onChange: function onChange(value) {
          return setAttributes({ firstHeading: value });
        }
      }),
      wp.element.createElement(TextControl, {
        label: __("Second Heading"),
        type: "url",
        value: secondHeading,
        onChange: function onChange(value) {
          return setAttributes({ secondHeading: value });
        }
      }),
      wp.element.createElement(SelectControl, {
        label: __("Display"),
        value: display,
        options: DISPLAY,
        onChange: function onChange(value) {
          return setAttributes({ display: value });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Link"),
        checked: link,
        onChange: function onChange(newValue) {
          return setAttributes({ link: newValue });
        }
      }),
      link && wp.element.createElement(ToggleControl, {
        label: __("Open link in new tab"),
        checked: target,
        onChange: function onChange(newValue) {
          return setAttributes({ target: newValue });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("First Heading Style"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(ToggleControl, {
        label: __("Clipped"),
        checked: firstClip,
        onChange: function onChange(newValue) {
          return setAttributes({ firstClip: newValue });
        }
      }),
      firstClip && wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(ToggleControl, {
          label: __("Animated"),
          checked: firstAnim,
          onChange: function onChange(newValue) {
            return setAttributes({ firstAnim: newValue });
          }
        }),
        wp.element.createElement(ToggleControl, {
          label: __("Stroke"),
          checked: firstStroke,
          onChange: function onChange(newValue) {
            return setAttributes({ firstStroke: newValue });
          }
        })
      ),
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: firstFamily,
        options: __WEBPACK_IMPORTED_MODULE_5__components_premium_fonts__["a" /* default */],
        onChange: onChangeFirstFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "style", "upper", "spacing"],
        size: firstSize,
        weight: firstWeight,
        style: firstStyle,
        spacing: firstLetter,
        upper: firstUpper,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ firstSize: newSize || 20 });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ firstWeight: newWeight || 500 });
        },
        onChangeStyle: function onChangeStyle(newStyle) {
          return setAttributes({ firstStyle: newStyle });
        },
        onChangeSpacing: function onChangeSpacing(newValue) {
          return setAttributes({ firstLetter: newValue });
        },
        onChangeUpper: function onChangeUpper(check) {
          return setAttributes({ firstUpper: check });
        }
      }),
      !firstClip && wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref) {
            var isOpen = _ref.isOpen,
                onToggle = _ref.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                __("Text Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: firstColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    firstColor: newValue
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Background Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: firstBackground,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    firstBackground: newValue
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      firstClip && wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref2) {
            var isOpen = _ref2.isOpen,
                onToggle = _ref2.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                __("First Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: firstColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    firstColor: newValue
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Second Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: firstClipColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    firstClipColor: newValue
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
        borderType: firstBorderType,
        borderWidth: firstBorderWidth,
        borderColor: firstBorderColor,
        borderRadius: firstBorderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ firstBorderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ firstBorderWidth: newWidth || "0" });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({
            firstBorderColor: colorValue.hex || "transparent"
          });
        },
        onChangeRadius: function onChangeRadius(newrRadius) {
          return setAttributes({ firstBorderRadius: newrRadius || "0" });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
        color: firstShadowColor,
        blur: firstShadowBlur,
        horizontal: firstShadowHorizontal,
        vertical: firstShadowVertical,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({ firstShadowColor: newColor.hex || "transparent" });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({ firstShadowBlur: newBlur || "0" });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({ firstShadowHorizontal: newValue || "0" });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({ firstShadowVertical: newValue || "0" });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Margin Left")
      ),
      wp.element.createElement(RangeControl, {
        value: firstMarginL,
        min: "0",
        max: "100",
        onChange: function onChange(newMargin) {
          return setAttributes({ firstMarginL: newMargin || "0" });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Margin Right")
      ),
      wp.element.createElement(RangeControl, {
        value: firstMarginR,
        min: "0",
        max: "100",
        onChange: function onChange(newMargin) {
          return setAttributes({ firstMarginR: newMargin || "0" });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Padding")
      ),
      wp.element.createElement(RangeControl, {
        value: firstPadding,
        min: "0",
        max: "100",
        onChange: function onChange(newPadding) {
          return setAttributes({ firstPadding: newPadding || "0" });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Second Heading Style"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(ToggleControl, {
        label: __("Clipped"),
        checked: secondClip,
        onChange: function onChange(newValue) {
          return setAttributes({ secondClip: newValue });
        }
      }),
      secondClip && wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(ToggleControl, {
          label: __("Animated"),
          checked: secondAnim,
          onChange: function onChange(newValue) {
            return setAttributes({ secondAnim: newValue });
          }
        }),
        wp.element.createElement(ToggleControl, {
          label: __('Stroke'),
          checked: secondStroke,
          onChange: function onChange(newValue) {
            return setAttributes({ secondStroke: newValue });
          }
        })
      ),
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: secondFamily,
        options: __WEBPACK_IMPORTED_MODULE_5__components_premium_fonts__["a" /* default */],
        onChange: onChangeSecondFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "style", "upper", "spacing"],
        size: secondSize,
        weight: secondWeight,
        style: secondStyle,
        spacing: secondLetter,
        upper: secondUpper,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ secondSize: newSize || 20 });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ secondWeight: newWeight || 500 });
        },
        onChangeStyle: function onChangeStyle(newStyle) {
          return setAttributes({ secondStyle: newStyle });
        },
        onChangeSpacing: function onChangeSpacing(newValue) {
          return setAttributes({ secondLetter: newValue });
        },
        onChangeUpper: function onChangeUpper(check) {
          return setAttributes({ secondUpper: check });
        }
      }),
      !secondClip && wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref3) {
            var isOpen = _ref3.isOpen,
                onToggle = _ref3.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                __("Text Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: secondColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    secondColor: newValue || "transparent"
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Background Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: secondBackground,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    secondBackground: newValue
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      secondClip && wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref4) {
            var isOpen = _ref4.isOpen,
                onToggle = _ref4.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                __("First Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: secondColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    secondColor: newValue || "transparent"
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Second Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: secondClipColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    secondClipColor: newValue || "transparent"
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
        borderType: secondBorderType,
        borderWidth: secondBorderWidth,
        borderColor: secondBorderColor,
        borderRadius: secondBorderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ secondBorderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ secondBorderWidth: newWidth });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({
            secondBorderColor: colorValue.hex || "transparent"
          });
        },
        onChangeRadius: function onChangeRadius(newrRadius) {
          return setAttributes({ secondBorderRadius: newrRadius || "0" });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
        color: secondShadowColor,
        blur: secondShadowBlur,
        horizontal: secondShadowHorizontal,
        vertical: secondShadowVertical,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            secondShadowColor: newColor.hex || "transparent"
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({ secondShadowBlur: newBlur || "0" });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({ secondShadowHorizontal: newValue || "0" });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({ secondShadowVertical: newValue || "0" });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Margin Left")
      ),
      wp.element.createElement(RangeControl, {
        value: secondMarginL,
        min: "0",
        max: "100",
        onChange: function onChange(newMargin) {
          return setAttributes({ secondMarginL: newMargin || "0" });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Margin Right")
      ),
      wp.element.createElement(RangeControl, {
        value: secondMarginR,
        min: "0",
        max: "100",
        onChange: function onChange(newMargin) {
          return setAttributes({ secondMarginR: newMargin || "0" });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Padding")
      ),
      wp.element.createElement(RangeControl, {
        value: secondPadding,
        min: "0",
        max: "100",
        onChange: function onChange(newPadding) {
          return setAttributes({ secondPadding: newPadding || "0" });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Container Style"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        "p",
        null,
        __("Background Color")
      ),
      wp.element.createElement(ColorPalette, {
        value: containerBack,
        onChange: function onChange(newValue) {
          return setAttributes({
            containerBack: newValue || "transparent"
          });
        },
        allowReset: true
      }),
      imageURL && wp.element.createElement("img", { src: imageURL, width: "100%", height: "auto" }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_background__["a" /* default */], {
        imageID: imageID,
        imageURL: imageURL,
        backgroundPosition: backgroundPosition,
        backgroundRepeat: backgroundRepeat,
        backgroundSize: backgroundSize,
        fixed: fixed,
        onSelectMedia: function onSelectMedia(media) {
          setAttributes({
            imageID: media.id,
            imageURL: media.url
          });
        },
        onRemoveImage: function onRemoveImage(value) {
          return setAttributes({ imageURL: "", imageID: "" });
        },
        onChangeBackPos: function onChangeBackPos(newValue) {
          return setAttributes({ backgroundPosition: newValue });
        },
        onchangeBackRepeat: function onchangeBackRepeat(newValue) {
          return setAttributes({ backgroundRepeat: newValue });
        },
        onChangeBackSize: function onChangeBackSize(newValue) {
          return setAttributes({ backgroundSize: newValue });
        },
        onChangeFixed: function onChangeFixed(check) {
          return setAttributes({ fixed: check });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
        borderType: containerBorderType,
        borderWidth: containerBorderWidth,
        borderColor: containerBorderColor,
        borderRadius: containerBorderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ containerBorderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ containerBorderWidth: newWidth });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({
            containerBorderColor: colorValue.hex
          });
        },
        onChangeRadius: function onChangeRadius(newrRadius) {
          return setAttributes({ containerBorderRadius: newrRadius });
        }
      })
    )
  ), wp.element.createElement(
    "div",
    {
      className: "" + mainClasses,
      style: {
        textAlign: contentAlign,
        backgroundColor: containerBack,
        backgroundImage: "url('" + imageURL + "')",
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset",
        border: containerBorderType,
        borderWidth: containerBorderWidth + "px",
        borderRadius: containerBorderRadius + "px",
        borderColor: containerBorderColor
      }
    },
    wp.element.createElement(
      "div",
      { className: "premium-dheading-block__wrap" },
      wp.element.createElement(
        "h2",
        { className: "premium-dheading-block__title" },
        wp.element.createElement(
          "span",
          {
            className: "premium-dheading-block__first premium-headingc-" + firstClip + " premium-headinga-" + firstAnim + " premium-headings-" + firstStroke,
            style: {
              display: display,
              color: firstColor,
              backgroundColor: firstClip ? "none" : firstBackground,
              backgroundImage: firstClip ? "linear-gradient(to left, " + firstColor + ", " + firstClipColor + ")" : "none",
              fontSize: firstSize + "px",
              fontFamily: firstFamily,
              letterSpacing: firstLetter + "px",
              textTransform: firstUpper ? "uppercase" : "none",
              fontStyle: firstStyle,
              fontWeight: firstWeight,
              border: firstBorderType,
              borderWidth: firstBorderWidth + "px",
              borderRadius: firstBorderRadius + "px",
              borderColor: firstBorderColor,
              padding: firstPadding + "px",
              marginLeft: firstMarginL + "px",
              marginRight: firstMarginR + "px",
              textShadow: firstShadowHorizontal + "px " + firstShadowVertical + "px " + firstShadowBlur + "px " + firstShadowColor
            }
          },
          firstHeading
        ),
        wp.element.createElement(
          "span",
          {
            className: "premium-dheading-block__second premium-headingc-" + secondClip + " premium-headinga-" + secondAnim + " premium-headings-" + secondStroke,
            style: {
              display: display,
              color: secondColor,
              backgroundColor: secondClip ? "none" : secondBackground,
              backgroundImage: secondClip ? "linear-gradient(to left, " + secondColor + ", " + secondClipColor + ")" : "none",
              fontSize: secondSize + "px",
              fontFamily: secondFamily,
              letterSpacing: secondLetter + "px",
              textTransform: secondUpper ? "uppercase" : "none",
              fontStyle: secondStyle,
              fontWeight: secondWeight,
              border: secondBorderType,
              borderWidth: secondBorderWidth + "px",
              borderRadius: secondBorderRadius + "px",
              borderColor: secondBorderColor,
              padding: secondPadding + "px",
              marginLeft: secondMarginL + "px",
              marginRight: secondMarginR + "px",
              textShadow: secondShadowHorizontal + "px " + secondShadowVertical + "px " + secondShadowBlur + "px " + secondShadowColor
            }
          },
          secondHeading
        )
      )
    ),
    link && isSelected && wp.element.createElement(URLInput, {
      value: headingURL,
      onChange: function onChange(newUrl) {
        return setAttributes({ headingURL: newUrl });
      }
    })
  )];
};
/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 205 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var save = function save(props) {
    var className = props.className;
    var _props$attributes = props.attributes,
        contentAlign = _props$attributes.contentAlign,
        firstHeading = _props$attributes.firstHeading,
        secondHeading = _props$attributes.secondHeading,
        display = _props$attributes.display,
        firstColor = _props$attributes.firstColor,
        firstBackground = _props$attributes.firstBackground,
        firstSize = _props$attributes.firstSize,
        firstFamily = _props$attributes.firstFamily,
        firstStyle = _props$attributes.firstStyle,
        firstUpper = _props$attributes.firstUpper,
        firstLetter = _props$attributes.firstLetter,
        firstWeight = _props$attributes.firstWeight,
        firstBorderType = _props$attributes.firstBorderType,
        firstBorderWidth = _props$attributes.firstBorderWidth,
        firstBorderRadius = _props$attributes.firstBorderRadius,
        firstBorderColor = _props$attributes.firstBorderColor,
        firstPadding = _props$attributes.firstPadding,
        firstMargin = _props$attributes.firstMargin,
        firstClip = _props$attributes.firstClip,
        firstAnim = _props$attributes.firstAnim,
        firstStroke = _props$attributes.firstStroke,
        firstClipColor = _props$attributes.firstClipColor,
        firstShadowBlur = _props$attributes.firstShadowBlur,
        firstShadowColor = _props$attributes.firstShadowColor,
        firstShadowHorizontal = _props$attributes.firstShadowHorizontal,
        firstShadowVertical = _props$attributes.firstShadowVertical,
        secondColor = _props$attributes.secondColor,
        secondBackground = _props$attributes.secondBackground,
        secondSize = _props$attributes.secondSize,
        secondFamily = _props$attributes.secondFamily,
        secondLetter = _props$attributes.secondLetter,
        secondUpper = _props$attributes.secondUpper,
        secondWeight = _props$attributes.secondWeight,
        secondStyle = _props$attributes.secondStyle,
        secondBorderType = _props$attributes.secondBorderType,
        secondBorderWidth = _props$attributes.secondBorderWidth,
        secondBorderRadius = _props$attributes.secondBorderRadius,
        secondBorderColor = _props$attributes.secondBorderColor,
        secondPadding = _props$attributes.secondPadding,
        secondMargin = _props$attributes.secondMargin,
        secondClip = _props$attributes.secondClip,
        secondStroke = _props$attributes.secondStroke,
        secondAnim = _props$attributes.secondAnim,
        secondClipColor = _props$attributes.secondClipColor,
        secondShadowBlur = _props$attributes.secondShadowBlur,
        secondShadowColor = _props$attributes.secondShadowColor,
        secondShadowHorizontal = _props$attributes.secondShadowHorizontal,
        secondShadowVertical = _props$attributes.secondShadowVertical,
        link = _props$attributes.link,
        target = _props$attributes.target,
        headingURL = _props$attributes.headingURL,
        containerBack = _props$attributes.containerBack,
        imageURL = _props$attributes.imageURL,
        fixed = _props$attributes.fixed,
        backgroundRepeat = _props$attributes.backgroundRepeat,
        backgroundPosition = _props$attributes.backgroundPosition,
        backgroundSize = _props$attributes.backgroundSize,
        containerBorderType = _props$attributes.containerBorderType,
        containerBorderWidth = _props$attributes.containerBorderWidth,
        containerBorderRadius = _props$attributes.containerBorderRadius,
        containerBorderColor = _props$attributes.containerBorderColor;


    var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-dheading-block__container");

    return wp.element.createElement(
        "div",
        {
            className: "" + mainClasses,
            style: {
                textAlign: contentAlign,
                backgroundColor: containerBack,
                backgroundImage: "url('" + imageURL + "')",
                backgroundRepeat: backgroundRepeat,
                backgroundPosition: backgroundPosition,
                backgroundSize: backgroundSize,
                backgroundAttachment: fixed ? "fixed" : "unset",
                border: containerBorderType,
                borderWidth: containerBorderWidth + "px",
                borderRadius: containerBorderRadius + "px",
                borderColor: containerBorderColor
            }
        },
        wp.element.createElement(
            "div",
            { className: "premium-dheading-block__wrap" },
            wp.element.createElement(
                "h2",
                { className: "premium-dheading-block__title" },
                wp.element.createElement(
                    "span",
                    {
                        className: "premium-dheading-block__first premium-headingc-" + firstClip + " premium-headinga-" + firstAnim + " premium-headings-" + firstStroke,
                        style: {
                            display: display,
                            color: firstColor,
                            backgroundColor: firstClip ? "none" : firstBackground,
                            backgroundImage: firstClip ? "linear-gradient(to left, " + firstColor + ", " + firstClipColor + ")" : "none",
                            fontSize: firstSize + "px",
                            fontFamily: firstFamily,
                            letterSpacing: firstLetter + "px",
                            textTransform: firstUpper ? "uppercase" : "none",
                            fontStyle: firstStyle,
                            fontWeight: firstWeight,
                            border: firstBorderType,
                            borderWidth: firstBorderWidth + "px",
                            borderRadius: firstBorderRadius + "px",
                            borderColor: firstBorderColor,
                            padding: firstPadding + "px",
                            margin: firstMargin + "px",
                            textShadow: firstShadowHorizontal + "px " + firstShadowVertical + "px " + firstShadowBlur + "px " + firstShadowColor
                        }
                    },
                    firstHeading
                ),
                wp.element.createElement(
                    "span",
                    {
                        className: "premium-dheading-block__second premium-headingc-" + secondClip + " premium-headinga-" + secondAnim + " premium-headings-" + secondStroke,
                        style: {
                            display: display,
                            color: secondColor,
                            backgroundColor: secondClip ? "none" : secondBackground,
                            backgroundImage: secondClip ? "linear-gradient(to left, " + secondColor + ", " + secondClipColor + ")" : "none",
                            fontSize: secondSize + "px",
                            fontFamily: secondFamily,
                            letterSpacing: secondLetter + "px",
                            textTransform: secondUpper ? "uppercase" : "none",
                            fontStyle: secondStyle,
                            fontWeight: secondWeight,
                            border: secondBorderType,
                            borderWidth: secondBorderWidth + "px",
                            borderRadius: secondBorderRadius + "px",
                            borderColor: secondBorderColor,
                            padding: secondPadding + "px",
                            margin: secondMargin + "px",
                            textShadow: secondShadowHorizontal + "px " + secondShadowVertical + "px " + secondShadowBlur + "px " + secondShadowColor
                        }
                    },
                    secondHeading
                )
            ),
            link && headingURL && wp.element.createElement("a", {
                className: "premium-dheading-block__link",
                href: link && headingURL,
                target: target && "_blank"
            })
        )
    );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 206 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var className = "premium-dheading-block";

var deprecated_attributes_1_3_0 = {
  contentAlign: {
    type: "string",
    default: "center"
  },
  firstHeading: {
    type: "array",
    source: "children",
    default: "Premium ",
    selector: ".premium-dheading-block__first"
  },
  secondHeading: {
    type: "array",
    source: "children",
    default: "Blocks",
    selector: ".premium-dheading-block__second"
  },
  titleTag: {
    type: "string",
    default: "h1"
  },
  display: {
    type: "string",
    default: "inline"
  },
  firstColor: {
    type: "string",
    default: "#6ec1e4"
  },
  firstSize: {
    type: "number",
    default: "20"
  },
  firstLetter: {
    type: "number"
  },
  firstStyle: {
    type: "string"
  },
  firstUpper: {
    type: "boolean"
  },
  firstWeight: {
    type: "number",
    default: 500
  },
  firstBackground: {
    type: "string"
  },
  firstBorderType: {
    type: "string",
    default: "none"
  },
  firstBorderWidth: {
    type: "number",
    default: "1"
  },
  firstBorderRadius: {
    type: "number",
    default: "0"
  },
  firstBorderColor: {
    type: "string"
  },
  firstMarginR: {
    type: "number",
    default: "0"
  },
  firstMarginL: {
    type: "number",
    default: "0"
  },
  firstPadding: {
    type: "number",
    default: "0"
  },
  firstClip: {
    type: "boolean",
    default: false
  },
  firstAnim: {
    type: "boolean",
    default: false
  },
  firstClipColor: {
    type: "string",
    default: "#54595f"
  },
  firstShadowColor: {
    type: "string"
  },
  firstShadowBlur: {
    type: "number",
    default: "0"
  },
  firstShadowHorizontal: {
    type: "number",
    default: "0"
  },
  firstShadowVertical: {
    type: "number",
    default: "0"
  },
  secondColor: {
    type: "string",
    default: "#54595f"
  },
  secondSize: {
    type: "number",
    default: "20"
  },
  secondLetter: {
    type: "number"
  },
  secondStyle: {
    type: "string"
  },
  secondUpper: {
    type: "boolean"
  },
  secondWeight: {
    type: "number",
    default: 500
  },
  secondBackground: {
    type: "string"
  },
  secondBorderType: {
    type: "string",
    default: "none"
  },
  secondBorderWidth: {
    type: "number",
    default: "1"
  },
  secondBorderRadius: {
    type: "number",
    default: "0"
  },
  secondBorderColor: {
    type: "string"
  },
  secondMarginR: {
    type: "number",
    default: "0"
  },
  secondMarginL: {
    type: "number",
    default: "0"
  },
  secondPadding: {
    type: "number",
    default: "0"
  },
  secondClip: {
    type: "boolean",
    default: false
  },
  secondShadowColor: {
    type: "string"
  },
  secondShadowBlur: {
    type: "number",
    default: "0"
  },
  secondShadowHorizontal: {
    type: "number",
    default: "0"
  },
  secondShadowVertical: {
    type: "number",
    default: "0"
  },
  secondAnim: {
    type: "boolean",
    default: false
  },
  secondClipColor: {
    type: "string",
    default: "#6ec1e4"
  },
  link: {
    type: "boolean",
    default: false
  },
  target: {
    type: "boolean",
    default: false
  },
  headingURL: {
    type: "string"
  },
  containerBack: {
    type: "string"
  }
};

var newAttributes_1_4_1 = {
  imageID: {
    type: "string"
  },
  imageURL: {
    type: "string"
  },
  backgroundRepeat: {
    type: "string",
    default: "no-repeat"
  },
  backgroundPosition: {
    type: "string",
    default: "top center"
  },
  backgroundSize: {
    type: "string",
    default: "auto"
  },
  fixed: {
    type: "boolean",
    default: false
  }
};

var deprecated_attributes_1_4_1 = Object.assign(deprecated_attributes_1_3_0, newAttributes_1_4_1);

var newAttributes_1_4_8 = {
  firstFamily: {
    type: "string"
  },
  secondFamily: {
    type: "string"
  }
};

var newAttributes_1_7_2 = {
  containerBorderType: {
    type: "string",
    default: "none"
  },
  containerBorderWidth: {
    type: "number",
    default: "1"
  },
  containerBorderRadius: {
    type: "number",
    default: "0"
  },
  containerBorderColor: {
    type: "string"
  }
};

var deprecated_attributes_1_4_8 = Object.assign(deprecated_attributes_1_4_1, newAttributes_1_4_8);

var deprecated_attributes_1_7_2 = Object.assign(deprecated_attributes_1_4_8, newAttributes_1_7_2);

var deprecatedContent = [{
  attributes: deprecated_attributes_1_7_2,
  migrate: function migrate(attributes) {
    var newAttributes = {
      firstStroke: false,
      secondStroke: false
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var className = props.className;
    var _props$attributes = props.attributes,
        contentAlign = _props$attributes.contentAlign,
        firstHeading = _props$attributes.firstHeading,
        secondHeading = _props$attributes.secondHeading,
        display = _props$attributes.display,
        firstColor = _props$attributes.firstColor,
        firstBackground = _props$attributes.firstBackground,
        firstSize = _props$attributes.firstSize,
        firstFamily = _props$attributes.firstFamily,
        firstStyle = _props$attributes.firstStyle,
        firstUpper = _props$attributes.firstUpper,
        firstLetter = _props$attributes.firstLetter,
        firstWeight = _props$attributes.firstWeight,
        firstBorderType = _props$attributes.firstBorderType,
        firstBorderWidth = _props$attributes.firstBorderWidth,
        firstBorderRadius = _props$attributes.firstBorderRadius,
        firstBorderColor = _props$attributes.firstBorderColor,
        firstPadding = _props$attributes.firstPadding,
        firstMargin = _props$attributes.firstMargin,
        firstClip = _props$attributes.firstClip,
        firstAnim = _props$attributes.firstAnim,
        firstClipColor = _props$attributes.firstClipColor,
        firstShadowBlur = _props$attributes.firstShadowBlur,
        firstShadowColor = _props$attributes.firstShadowColor,
        firstShadowHorizontal = _props$attributes.firstShadowHorizontal,
        firstShadowVertical = _props$attributes.firstShadowVertical,
        secondColor = _props$attributes.secondColor,
        secondBackground = _props$attributes.secondBackground,
        secondSize = _props$attributes.secondSize,
        secondFamily = _props$attributes.secondFamily,
        secondLetter = _props$attributes.secondLetter,
        secondUpper = _props$attributes.secondUpper,
        secondWeight = _props$attributes.secondWeight,
        secondStyle = _props$attributes.secondStyle,
        secondBorderType = _props$attributes.secondBorderType,
        secondBorderWidth = _props$attributes.secondBorderWidth,
        secondBorderRadius = _props$attributes.secondBorderRadius,
        secondBorderColor = _props$attributes.secondBorderColor,
        secondPadding = _props$attributes.secondPadding,
        secondMargin = _props$attributes.secondMargin,
        secondClip = _props$attributes.secondClip,
        secondAnim = _props$attributes.secondAnim,
        secondClipColor = _props$attributes.secondClipColor,
        secondShadowBlur = _props$attributes.secondShadowBlur,
        secondShadowColor = _props$attributes.secondShadowColor,
        secondShadowHorizontal = _props$attributes.secondShadowHorizontal,
        secondShadowVertical = _props$attributes.secondShadowVertical,
        link = _props$attributes.link,
        target = _props$attributes.target,
        headingURL = _props$attributes.headingURL,
        containerBack = _props$attributes.containerBack,
        imageURL = _props$attributes.imageURL,
        fixed = _props$attributes.fixed,
        backgroundRepeat = _props$attributes.backgroundRepeat,
        backgroundPosition = _props$attributes.backgroundPosition,
        backgroundSize = _props$attributes.backgroundSize,
        containerBorderType = _props$attributes.containerBorderType,
        containerBorderWidth = _props$attributes.containerBorderWidth,
        containerBorderRadius = _props$attributes.containerBorderRadius,
        containerBorderColor = _props$attributes.containerBorderColor;


    var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-dheading-block__container');

    return wp.element.createElement(
      "div",
      {
        className: "" + mainClasses,
        style: {
          textAlign: contentAlign,
          backgroundColor: containerBack,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset",
          border: containerBorderType,
          borderWidth: containerBorderWidth + "px",
          borderRadius: containerBorderRadius + "px",
          borderColor: containerBorderColor
        }
      },
      wp.element.createElement(
        "div",
        { className: "premium-dheading-block__wrap" },
        wp.element.createElement(
          "h2",
          { className: "premium-dheading-block__title" },
          wp.element.createElement(
            "span",
            {
              className: "premium-dheading-block__first premium-headingc-" + firstClip + " premium-headinga-" + firstAnim,
              style: {
                display: display,
                color: firstColor,
                backgroundColor: firstClip ? "none" : firstBackground,
                backgroundImage: firstClip ? "linear-gradient(to left, " + firstColor + ", " + firstClipColor + ")" : "none",
                fontSize: firstSize + "px",
                fontFamily: firstFamily,
                letterSpacing: firstLetter + "px",
                textTransform: firstUpper ? "uppercase" : "none",
                fontStyle: firstStyle,
                fontWeight: firstWeight,
                border: firstBorderType,
                borderWidth: firstBorderWidth + "px",
                borderRadius: firstBorderRadius + "px",
                borderColor: firstBorderColor,
                padding: firstPadding + "px",
                margin: firstMargin + "px",
                textShadow: firstShadowHorizontal + "px " + firstShadowVertical + "px " + firstShadowBlur + "px " + firstShadowColor
              }
            },
            firstHeading
          ),
          wp.element.createElement(
            "span",
            {
              className: "premium-dheading-block__second premium-headingc-" + secondClip + " premium-headinga-" + secondAnim,
              style: {
                display: display,
                color: secondColor,
                backgroundColor: secondClip ? "none" : secondBackground,
                backgroundImage: secondClip ? "linear-gradient(to left, " + secondColor + ", " + secondClipColor + ")" : "none",
                fontSize: secondSize + "px",
                fontFamily: secondFamily,
                letterSpacing: secondLetter + "px",
                textTransform: secondUpper ? "uppercase" : "none",
                fontStyle: secondStyle,
                fontWeight: secondWeight,
                border: secondBorderType,
                borderWidth: secondBorderWidth + "px",
                borderRadius: secondBorderRadius + "px",
                borderColor: secondBorderColor,
                padding: secondPadding + "px",
                margin: secondMargin + "px",
                textShadow: secondShadowHorizontal + "px " + secondShadowVertical + "px " + secondShadowBlur + "px " + secondShadowColor
              }
            },
            secondHeading
          )
        ),
        link && headingURL && wp.element.createElement("a", {
          className: "premium-dheading-block__link",
          href: link && headingURL,
          target: target && "_blank"
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_4_8,
  migrate: function migrate(attributes) {
    var newAttributes = {
      containerBorderType: "none",
      containerBorderWidth: "1",
      containerBorderRadius: "0",
      containerBorderColor: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        contentAlign = _props$attributes2.contentAlign,
        firstHeading = _props$attributes2.firstHeading,
        secondHeading = _props$attributes2.secondHeading,
        display = _props$attributes2.display,
        firstColor = _props$attributes2.firstColor,
        firstBackground = _props$attributes2.firstBackground,
        firstSize = _props$attributes2.firstSize,
        firstFamily = _props$attributes2.firstFamily,
        firstStyle = _props$attributes2.firstStyle,
        firstUpper = _props$attributes2.firstUpper,
        firstLetter = _props$attributes2.firstLetter,
        firstWeight = _props$attributes2.firstWeight,
        firstBorderType = _props$attributes2.firstBorderType,
        firstBorderWidth = _props$attributes2.firstBorderWidth,
        firstBorderRadius = _props$attributes2.firstBorderRadius,
        firstBorderColor = _props$attributes2.firstBorderColor,
        firstPadding = _props$attributes2.firstPadding,
        firstMargin = _props$attributes2.firstMargin,
        firstClip = _props$attributes2.firstClip,
        firstAnim = _props$attributes2.firstAnim,
        firstClipColor = _props$attributes2.firstClipColor,
        firstShadowBlur = _props$attributes2.firstShadowBlur,
        firstShadowColor = _props$attributes2.firstShadowColor,
        firstShadowHorizontal = _props$attributes2.firstShadowHorizontal,
        firstShadowVertical = _props$attributes2.firstShadowVertical,
        secondColor = _props$attributes2.secondColor,
        secondBackground = _props$attributes2.secondBackground,
        secondSize = _props$attributes2.secondSize,
        secondFamily = _props$attributes2.secondFamily,
        secondLetter = _props$attributes2.secondLetter,
        secondUpper = _props$attributes2.secondUpper,
        secondWeight = _props$attributes2.secondWeight,
        secondStyle = _props$attributes2.secondStyle,
        secondBorderType = _props$attributes2.secondBorderType,
        secondBorderWidth = _props$attributes2.secondBorderWidth,
        secondBorderRadius = _props$attributes2.secondBorderRadius,
        secondBorderColor = _props$attributes2.secondBorderColor,
        secondPadding = _props$attributes2.secondPadding,
        secondMargin = _props$attributes2.secondMargin,
        secondClip = _props$attributes2.secondClip,
        secondAnim = _props$attributes2.secondAnim,
        secondClipColor = _props$attributes2.secondClipColor,
        secondShadowBlur = _props$attributes2.secondShadowBlur,
        secondShadowColor = _props$attributes2.secondShadowColor,
        secondShadowHorizontal = _props$attributes2.secondShadowHorizontal,
        secondShadowVertical = _props$attributes2.secondShadowVertical,
        link = _props$attributes2.link,
        target = _props$attributes2.target,
        headingURL = _props$attributes2.headingURL,
        containerBack = _props$attributes2.containerBack,
        imageURL = _props$attributes2.imageURL,
        fixed = _props$attributes2.fixed,
        backgroundRepeat = _props$attributes2.backgroundRepeat,
        backgroundPosition = _props$attributes2.backgroundPosition,
        backgroundSize = _props$attributes2.backgroundSize;


    return wp.element.createElement(
      "div",
      {
        className: className + "__container",
        style: {
          textAlign: contentAlign,
          backgroundColor: containerBack,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      wp.element.createElement(
        "div",
        { className: className + "__wrap" },
        wp.element.createElement(
          "h2",
          { className: className + "__title" },
          wp.element.createElement(
            "span",
            {
              className: className + "__first premium-headingc-" + firstClip + " premium-headinga-" + firstAnim,
              style: {
                display: display,
                color: firstColor,
                backgroundColor: firstClip ? "none" : firstBackground,
                backgroundImage: firstClip ? "linear-gradient(to left, " + firstColor + ", " + firstClipColor + ")" : "none",
                fontSize: firstSize + "px",
                fontFamily: firstFamily,
                letterSpacing: firstLetter + "px",
                textTransform: firstUpper ? "uppercase" : "none",
                fontStyle: firstStyle,
                fontWeight: firstWeight,
                border: firstBorderType,
                borderWidth: firstBorderWidth + "px",
                borderRadius: firstBorderRadius + "px",
                borderColor: firstBorderColor,
                padding: firstPadding + "px",
                margin: firstMargin + "px",
                textShadow: firstShadowHorizontal + "px " + firstShadowVertical + "px " + firstShadowBlur + "px " + firstShadowColor
              }
            },
            firstHeading
          ),
          wp.element.createElement(
            "span",
            {
              className: className + "__second premium-headingc-" + secondClip + " premium-headinga-" + secondAnim,
              style: {
                display: display,
                color: secondColor,
                backgroundColor: secondClip ? "none" : secondBackground,
                backgroundImage: secondClip ? "linear-gradient(to left, " + secondColor + ", " + secondClipColor + ")" : "none",
                fontSize: secondSize + "px",
                fontFamily: secondFamily,
                letterSpacing: secondLetter + "px",
                textTransform: secondUpper ? "uppercase" : "none",
                fontStyle: secondStyle,
                fontWeight: secondWeight,
                border: secondBorderType,
                borderWidth: secondBorderWidth + "px",
                borderRadius: secondBorderRadius + "px",
                borderColor: secondBorderColor,
                padding: secondPadding + "px",
                margin: secondMargin + "px",
                textShadow: secondShadowHorizontal + "px " + secondShadowVertical + "px " + secondShadowBlur + "px " + secondShadowColor
              }
            },
            secondHeading
          )
        ),
        link && headingURL && wp.element.createElement("a", {
          className: className + "__link",
          href: link && headingURL,
          target: target && "_blank"
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_4_1,
  migrate: function migrate(attributes) {
    var newAttributes = {
      firstFamily: "",
      secondFamily: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        contentAlign = _props$attributes3.contentAlign,
        firstHeading = _props$attributes3.firstHeading,
        secondHeading = _props$attributes3.secondHeading,
        display = _props$attributes3.display,
        firstColor = _props$attributes3.firstColor,
        firstBackground = _props$attributes3.firstBackground,
        firstSize = _props$attributes3.firstSize,
        firstStyle = _props$attributes3.firstStyle,
        firstUpper = _props$attributes3.firstUpper,
        firstLetter = _props$attributes3.firstLetter,
        firstWeight = _props$attributes3.firstWeight,
        firstBorderType = _props$attributes3.firstBorderType,
        firstBorderWidth = _props$attributes3.firstBorderWidth,
        firstBorderRadius = _props$attributes3.firstBorderRadius,
        firstBorderColor = _props$attributes3.firstBorderColor,
        firstPadding = _props$attributes3.firstPadding,
        firstMargin = _props$attributes3.firstMargin,
        firstClip = _props$attributes3.firstClip,
        firstAnim = _props$attributes3.firstAnim,
        firstClipColor = _props$attributes3.firstClipColor,
        firstShadowBlur = _props$attributes3.firstShadowBlur,
        firstShadowColor = _props$attributes3.firstShadowColor,
        firstShadowHorizontal = _props$attributes3.firstShadowHorizontal,
        firstShadowVertical = _props$attributes3.firstShadowVertical,
        secondColor = _props$attributes3.secondColor,
        secondBackground = _props$attributes3.secondBackground,
        secondSize = _props$attributes3.secondSize,
        secondLetter = _props$attributes3.secondLetter,
        secondUpper = _props$attributes3.secondUpper,
        secondWeight = _props$attributes3.secondWeight,
        secondStyle = _props$attributes3.secondStyle,
        secondBorderType = _props$attributes3.secondBorderType,
        secondBorderWidth = _props$attributes3.secondBorderWidth,
        secondBorderRadius = _props$attributes3.secondBorderRadius,
        secondBorderColor = _props$attributes3.secondBorderColor,
        secondPadding = _props$attributes3.secondPadding,
        secondMargin = _props$attributes3.secondMargin,
        secondClip = _props$attributes3.secondClip,
        secondAnim = _props$attributes3.secondAnim,
        secondClipColor = _props$attributes3.secondClipColor,
        secondShadowBlur = _props$attributes3.secondShadowBlur,
        secondShadowColor = _props$attributes3.secondShadowColor,
        secondShadowHorizontal = _props$attributes3.secondShadowHorizontal,
        secondShadowVertical = _props$attributes3.secondShadowVertical,
        link = _props$attributes3.link,
        target = _props$attributes3.target,
        headingURL = _props$attributes3.headingURL,
        containerBack = _props$attributes3.containerBack,
        imageURL = _props$attributes3.imageURL,
        fixed = _props$attributes3.fixed,
        backgroundRepeat = _props$attributes3.backgroundRepeat,
        backgroundPosition = _props$attributes3.backgroundPosition,
        backgroundSize = _props$attributes3.backgroundSize;


    return wp.element.createElement(
      "div",
      {
        className: className + "__container",
        style: {
          textAlign: contentAlign,
          backgroundColor: containerBack,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      wp.element.createElement(
        "div",
        { className: className + "__wrap" },
        wp.element.createElement(
          "h2",
          { className: className + "__title" },
          wp.element.createElement(
            "span",
            {
              className: className + "__first premium-headingc-" + firstClip + " premium-headinga-" + firstAnim,
              style: {
                display: display,
                color: firstColor,
                backgroundColor: firstClip ? "none" : firstBackground,
                backgroundImage: firstClip ? "linear-gradient(to left, " + firstColor + ", " + firstClipColor + ")" : "none",
                fontSize: firstSize + "px",
                letterSpacing: firstLetter + "px",
                textTransform: firstUpper ? "uppercase" : "none",
                fontStyle: firstStyle,
                fontWeight: firstWeight,
                border: firstBorderType,
                borderWidth: firstBorderWidth + "px",
                borderRadius: firstBorderRadius + "px",
                borderColor: firstBorderColor,
                padding: firstPadding + "px",
                margin: firstMargin + "px",
                textShadow: firstShadowHorizontal + "px " + firstShadowVertical + "px " + firstShadowBlur + "px " + firstShadowColor
              }
            },
            firstHeading
          ),
          wp.element.createElement(
            "span",
            {
              className: className + "__second premium-headingc-" + secondClip + " premium-headinga-" + secondAnim,
              style: {
                display: display,
                color: secondColor,
                backgroundColor: secondClip ? "none" : secondBackground,
                backgroundImage: secondClip ? "linear-gradient(to left, " + secondColor + ", " + secondClipColor + ")" : "none",
                fontSize: secondSize + "px",
                letterSpacing: secondLetter + "px",
                textTransform: secondUpper ? "uppercase" : "none",
                fontStyle: secondStyle,
                fontWeight: secondWeight,
                border: secondBorderType,
                borderWidth: secondBorderWidth + "px",
                borderRadius: secondBorderRadius + "px",
                borderColor: secondBorderColor,
                padding: secondPadding + "px",
                margin: secondMargin + "px",
                textShadow: secondShadowHorizontal + "px " + secondShadowVertical + "px " + secondShadowBlur + "px " + secondShadowColor
              }
            },
            secondHeading
          )
        ),
        link && headingURL && wp.element.createElement("a", {
          className: className + "__link",
          href: link && headingURL,
          target: target && "_blank"
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_3_0,
  migrate: function migrate(attributes) {
    var newAttributes = {
      imageID: "",
      imageURL: "",
      fixed: false,
      backgroundRepeat: "no-repeat",
      backgroundPosition: "top center",
      backgroundSize: "auto"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes4 = props.attributes,
        contentAlign = _props$attributes4.contentAlign,
        firstHeading = _props$attributes4.firstHeading,
        secondHeading = _props$attributes4.secondHeading,
        display = _props$attributes4.display,
        firstColor = _props$attributes4.firstColor,
        firstBackground = _props$attributes4.firstBackground,
        firstSize = _props$attributes4.firstSize,
        firstStyle = _props$attributes4.firstStyle,
        firstUpper = _props$attributes4.firstUpper,
        firstLetter = _props$attributes4.firstLetter,
        firstWeight = _props$attributes4.firstWeight,
        firstBorderType = _props$attributes4.firstBorderType,
        firstBorderWidth = _props$attributes4.firstBorderWidth,
        firstBorderRadius = _props$attributes4.firstBorderRadius,
        firstBorderColor = _props$attributes4.firstBorderColor,
        firstPadding = _props$attributes4.firstPadding,
        firstMargin = _props$attributes4.firstMargin,
        firstClip = _props$attributes4.firstClip,
        firstAnim = _props$attributes4.firstAnim,
        firstClipColor = _props$attributes4.firstClipColor,
        firstShadowBlur = _props$attributes4.firstShadowBlur,
        firstShadowColor = _props$attributes4.firstShadowColor,
        firstShadowHorizontal = _props$attributes4.firstShadowHorizontal,
        firstShadowVertical = _props$attributes4.firstShadowVertical,
        secondColor = _props$attributes4.secondColor,
        secondBackground = _props$attributes4.secondBackground,
        secondSize = _props$attributes4.secondSize,
        secondLetter = _props$attributes4.secondLetter,
        secondUpper = _props$attributes4.secondUpper,
        secondWeight = _props$attributes4.secondWeight,
        secondStyle = _props$attributes4.secondStyle,
        secondBorderType = _props$attributes4.secondBorderType,
        secondBorderWidth = _props$attributes4.secondBorderWidth,
        secondBorderRadius = _props$attributes4.secondBorderRadius,
        secondBorderColor = _props$attributes4.secondBorderColor,
        secondPadding = _props$attributes4.secondPadding,
        secondMargin = _props$attributes4.secondMargin,
        secondClip = _props$attributes4.secondClip,
        secondAnim = _props$attributes4.secondAnim,
        secondClipColor = _props$attributes4.secondClipColor,
        secondShadowBlur = _props$attributes4.secondShadowBlur,
        secondShadowColor = _props$attributes4.secondShadowColor,
        secondShadowHorizontal = _props$attributes4.secondShadowHorizontal,
        secondShadowVertical = _props$attributes4.secondShadowVertical,
        link = _props$attributes4.link,
        target = _props$attributes4.target,
        headingURL = _props$attributes4.headingURL,
        containerBack = _props$attributes4.containerBack;


    return wp.element.createElement(
      "div",
      {
        className: className + "__container",
        style: {
          textAlign: contentAlign,
          backgroundColor: containerBack
        }
      },
      wp.element.createElement(
        "div",
        { className: className + "__wrap" },
        wp.element.createElement(
          "h2",
          { className: className + "__title" },
          wp.element.createElement(
            "span",
            {
              className: className + "__first premium-headingc-" + firstClip + " premium-headinga-" + firstAnim,
              style: {
                display: display,
                color: firstColor,
                backgroundColor: firstClip ? "none" : firstBackground,
                backgroundImage: firstClip ? "linear-gradient(to left, " + firstColor + ", " + firstClipColor + ")" : "none",
                fontSize: firstSize + "px",
                letterSpacing: firstLetter + "px",
                textTransform: firstUpper ? "uppercase" : "none",
                fontStyle: firstStyle,
                fontWeight: firstWeight,
                border: firstBorderType,
                borderWidth: firstBorderWidth + "px",
                borderRadius: firstBorderRadius + "px",
                borderColor: firstBorderColor,
                padding: firstPadding + "px",
                margin: firstMargin + "px",
                textShadow: firstShadowHorizontal + "px " + firstShadowVertical + "px " + firstShadowBlur + "px " + firstShadowColor
              }
            },
            firstHeading
          ),
          wp.element.createElement(
            "span",
            {
              className: className + "__second premium-headingc-" + secondClip + " premium-headinga-" + secondAnim,
              style: {
                display: display,
                color: secondColor,
                backgroundColor: secondClip ? "none" : secondBackground,
                backgroundImage: secondClip ? "linear-gradient(to left, " + secondColor + ", " + secondClipColor + ")" : "none",
                fontSize: secondSize + "px",
                letterSpacing: secondLetter + "px",
                textTransform: secondUpper ? "uppercase" : "none",
                fontStyle: secondStyle,
                fontWeight: secondWeight,
                border: secondBorderType,
                borderWidth: secondBorderWidth + "px",
                borderRadius: secondBorderRadius + "px",
                borderColor: secondBorderColor,
                padding: secondPadding + "px",
                margin: secondMargin + "px",
                textShadow: secondShadowHorizontal + "px " + secondShadowVertical + "px " + secondShadowBlur + "px " + secondShadowColor
              }
            },
            secondHeading
          )
        ),
        link && headingURL && wp.element.createElement("a", {
          className: className + "__link",
          href: link && headingURL,
          target: target && "_blank"
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_3_0,
  save: function save(props) {
    {
      var _props$attributes5 = props.attributes,
          contentAlign = _props$attributes5.contentAlign,
          firstHeading = _props$attributes5.firstHeading,
          secondHeading = _props$attributes5.secondHeading,
          display = _props$attributes5.display,
          firstColor = _props$attributes5.firstColor,
          firstBackground = _props$attributes5.firstBackground,
          firstSize = _props$attributes5.firstSize,
          firstStyle = _props$attributes5.firstStyle,
          firstUpper = _props$attributes5.firstUpper,
          firstLetter = _props$attributes5.firstLetter,
          firstWeight = _props$attributes5.firstWeight,
          firstBorderType = _props$attributes5.firstBorderType,
          firstBorderWidth = _props$attributes5.firstBorderWidth,
          firstBorderRadius = _props$attributes5.firstBorderRadius,
          firstBorderColor = _props$attributes5.firstBorderColor,
          firstPadding = _props$attributes5.firstPadding,
          firstMargin = _props$attributes5.firstMargin,
          firstClip = _props$attributes5.firstClip,
          firstAnim = _props$attributes5.firstAnim,
          firstClipColor = _props$attributes5.firstClipColor,
          firstShadowBlur = _props$attributes5.firstShadowBlur,
          firstShadowColor = _props$attributes5.firstShadowColor,
          firstShadowHorizontal = _props$attributes5.firstShadowHorizontal,
          firstShadowVertical = _props$attributes5.firstShadowVertical,
          secondColor = _props$attributes5.secondColor,
          secondBackground = _props$attributes5.secondBackground,
          secondSize = _props$attributes5.secondSize,
          secondLetter = _props$attributes5.secondLetter,
          secondUpper = _props$attributes5.secondUpper,
          secondWeight = _props$attributes5.secondWeight,
          secondStyle = _props$attributes5.secondStyle,
          secondBorderType = _props$attributes5.secondBorderType,
          secondBorderWidth = _props$attributes5.secondBorderWidth,
          secondBorderRadius = _props$attributes5.secondBorderRadius,
          secondBorderColor = _props$attributes5.secondBorderColor,
          secondPadding = _props$attributes5.secondPadding,
          secondMargin = _props$attributes5.secondMargin,
          secondClip = _props$attributes5.secondClip,
          secondAnim = _props$attributes5.secondAnim,
          secondClipColor = _props$attributes5.secondClipColor,
          secondShadowBlur = _props$attributes5.secondShadowBlur,
          secondShadowColor = _props$attributes5.secondShadowColor,
          secondShadowHorizontal = _props$attributes5.secondShadowHorizontal,
          secondShadowVertical = _props$attributes5.secondShadowVertical,
          link = _props$attributes5.link,
          target = _props$attributes5.target,
          headingURL = _props$attributes5.headingURL,
          containerBack = _props$attributes5.containerBack;


      return wp.element.createElement(
        "a",
        {
          className: className + "__link",
          href: link && headingURL,
          target: target && "_blank"
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__container",
            style: {
              textAlign: contentAlign,
              backgroundColor: containerBack
            }
          },
          wp.element.createElement(
            "h2",
            { className: className + "__title" },
            wp.element.createElement(
              "span",
              {
                className: className + "__first premium-headingc-" + firstClip + " premium-headinga-" + firstAnim,
                style: {
                  display: display,
                  color: firstColor,
                  backgroundColor: firstClip ? "none" : firstBackground,
                  backgroundImage: firstClip ? "linear-gradient(to left, " + firstColor + ", " + firstClipColor + ")" : "none",
                  fontSize: firstSize + "px",
                  letterSpacing: firstLetter + "px",
                  textTransform: firstUpper ? "uppercase" : "none",
                  fontStyle: firstStyle,
                  fontWeight: firstWeight,
                  border: firstBorderType,
                  borderWidth: firstBorderWidth + "px",
                  borderRadius: firstBorderRadius + "px",
                  borderColor: firstBorderColor,
                  padding: firstPadding + "px",
                  margin: firstMargin + "px",
                  textShadow: firstShadowHorizontal + "px " + firstShadowVertical + "px " + firstShadowBlur + "px " + firstShadowColor
                }
              },
              firstHeading
            ),
            wp.element.createElement(
              "span",
              {
                className: className + "__second premium-headingc-" + secondClip + " premium-headinga-" + secondAnim,
                style: {
                  display: display,
                  color: secondColor,
                  backgroundColor: secondClip ? "none" : secondBackground,
                  backgroundImage: secondClip ? "linear-gradient(to left, " + secondColor + ", " + secondClipColor + ")" : "none",
                  fontSize: secondSize + "px",
                  letterSpacing: secondLetter + "px",
                  textTransform: secondUpper ? "uppercase" : "none",
                  fontStyle: secondStyle,
                  fontWeight: secondWeight,
                  border: secondBorderType,
                  borderWidth: secondBorderWidth + "px",
                  borderRadius: secondBorderRadius + "px",
                  borderColor: secondBorderColor,
                  padding: secondPadding + "px",
                  margin: secondMargin + "px",
                  textShadow: secondShadowHorizontal + "px " + secondShadowVertical + "px " + secondShadowBlur + "px " + secondShadowColor
                }
              },
              secondHeading
            )
          )
        )
      );
    }
  }
}];
/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 207 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(208);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__save__ = __webpack_require__(221);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__deprecated__ = __webpack_require__(222);






var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var iconAttrs = {
    iconType: {
        type: "string",
        default: "dash"
    },
    selectedIcon: {
        type: "string",
        default: "dashicons dashicons-admin-site"
    },
    align: {
        type: "string",
        default: "center"
    },
    hoverEffect: {
        type: "string",
        default: "none"
    },
    iconSize: {
        type: "number"
    },
    iconSizeUnit: {
        type: "string",
        default: "px"
    },
    iconColor: {
        type: "string",
        default: "#6ec1e4"
    },
    iconBack: {
        type: "string"
    },
    padding: {
        type: "string",
        default: "up"
    },
    shadowColor: {
        type: "string"
    },
    shadowBlur: {
        type: "number",
        default: "0"
    },
    shadowHorizontal: {
        type: "number",
        default: "0"
    },
    shadowVertical: {
        type: "number",
        default: "0"
    },
    paddingT: {
        type: "number"
    },
    paddingR: {
        type: "number"
    },
    paddingB: {
        type: "number"
    },
    paddingL: {
        type: "number"
    },
    paddingU: {
        type: "string",
        default: "px"
    },
    margin: {
        type: "string",
        default: "up"
    },
    marginT: {
        type: "number"
    },
    marginR: {
        type: "number"
    },
    marginB: {
        type: "number"
    },
    marginL: {
        type: "number"
    },
    borderType: {
        type: "string",
        default: "none"
    },
    borderWidth: {
        type: "number",
        default: "1"
    },
    borderRadius: {
        type: "number",
        default: 100
    },
    borderColor: {
        type: "string"
    },
    backgroundColor: {
        type: "string"
    },
    background: {
        type: "string"
    },
    imageID: {
        type: "string"
    },
    imageURL: {
        type: "string"
    },
    backgroundRepeat: {
        type: "string",
        default: "no-repeat"
    },
    backgroundPosition: {
        type: "string",
        default: "top center"
    },
    backgroundSize: {
        type: "string",
        default: "auto"
    },
    fixed: {
        type: "boolean",
        default: false
    },
    wrapBorderType: {
        type: "string",
        default: "none"
    },
    wrapBorderWidth: {
        type: "number",
        default: "1"
    },
    wrapBorderRadius: {
        type: "number"
    },
    wrapBorderColor: {
        type: "string"
    },
    wrapPadding: {
        type: "string",
        default: "up"
    },
    wrapShadowColor: {
        type: "string"
    },
    wrapShadowBlur: {
        type: "number",
        default: "0"
    },
    wrapShadowHorizontal: {
        type: "number",
        default: "0"
    },
    wrapShadowVertical: {
        type: "number",
        default: "0"
    },
    wrapShadowPosition: {
        type: "string",
        default: ""
    },
    wrapPaddingT: {
        type: "number"
    },
    wrapPaddingR: {
        type: "number"
    },
    wrapPaddingB: {
        type: "number"
    },
    wrapPaddingL: {
        type: "number"
    },
    wrapMargin: {
        type: "string",
        default: "up"
    },
    wrapMarginT: {
        type: "number"
    },
    wrapMarginR: {
        type: "number"
    },
    wrapMarginB: {
        type: "number"
    },
    wrapMarginL: {
        type: "number"
    },
    urlCheck: {
        type: "boolean"
    },
    link: {
        type: "string"
    },
    target: {
        type: "boolean"
    }
};

registerBlockType("premium/icon", {
    title: __("Icon"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "icon" }),
    category: "premium-blocks",
    attributes: iconAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["i" /* icon */]
    },
    example: {},
    edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_3__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_4__deprecated__["a" /* default */]
});

/***/ }),
/* 208 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_icons_list__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_size_units__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_margin__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_premium_padding__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_premium_background__ = __webpack_require__(22);












var __ = wp.i18n.__;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Toolbar = _wp$components.Toolbar,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette,
    URLInput = _wp$editor.URLInput;
var Fragment = wp.element.Fragment;


var edit = function edit(props) {
  var isSelected = props.isSelected,
      setAttributes = props.setAttributes,
      className = props.className;
  var _props$attributes = props.attributes,
      iconType = _props$attributes.iconType,
      selectedIcon = _props$attributes.selectedIcon,
      align = _props$attributes.align,
      hoverEffect = _props$attributes.hoverEffect,
      iconSize = _props$attributes.iconSize,
      iconSizeUnit = _props$attributes.iconSizeUnit,
      iconColor = _props$attributes.iconColor,
      iconBack = _props$attributes.iconBack,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      paddingT = _props$attributes.paddingT,
      paddingR = _props$attributes.paddingR,
      paddingB = _props$attributes.paddingB,
      paddingL = _props$attributes.paddingL,
      paddingU = _props$attributes.paddingU,
      marginT = _props$attributes.marginT,
      marginR = _props$attributes.marginR,
      marginB = _props$attributes.marginB,
      marginL = _props$attributes.marginL,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      backgroundColor = _props$attributes.backgroundColor,
      imageID = _props$attributes.imageID,
      imageURL = _props$attributes.imageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      wrapBorderType = _props$attributes.wrapBorderType,
      wrapBorderWidth = _props$attributes.wrapBorderWidth,
      wrapBorderRadius = _props$attributes.wrapBorderRadius,
      wrapBorderColor = _props$attributes.wrapBorderColor,
      wrapShadowBlur = _props$attributes.wrapShadowBlur,
      wrapShadowColor = _props$attributes.wrapShadowColor,
      wrapShadowHorizontal = _props$attributes.wrapShadowHorizontal,
      wrapShadowVertical = _props$attributes.wrapShadowVertical,
      wrapShadowPosition = _props$attributes.wrapShadowPosition,
      wrapPaddingT = _props$attributes.wrapPaddingT,
      wrapPaddingR = _props$attributes.wrapPaddingR,
      wrapPaddingB = _props$attributes.wrapPaddingB,
      wrapPaddingL = _props$attributes.wrapPaddingL,
      wrapMarginT = _props$attributes.wrapMarginT,
      wrapMarginR = _props$attributes.wrapMarginR,
      wrapMarginB = _props$attributes.wrapMarginB,
      wrapMarginL = _props$attributes.wrapMarginL,
      urlCheck = _props$attributes.urlCheck,
      link = _props$attributes.link,
      target = _props$attributes.target;


  var EFFECTS = [{
    value: "none",
    label: __("None")
  }, {
    value: "pulse",
    label: __("Pulse")
  }, {
    value: "rotate",
    label: __("Rotate")
  }, {
    value: "drotate",
    label: __("3D Rotate")
  }, {
    value: "buzz",
    label: __("Buzz")
  }, {
    value: "drop",
    label: __("Drop Shadow")
  }, {
    value: "wobble",
    label: __("Wobble")
  }];

  var ALIGNS = ["left", "center", "right"];

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-icon");

  return [isSelected && wp.element.createElement(
    InspectorControls,
    { key: "inspector" },
    wp.element.createElement(
      PanelBody,
      {
        title: __("Icon"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        "p",
        { className: "premium-editor-paragraph" },
        __("Select Icon")
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, {
        icons: __WEBPACK_IMPORTED_MODULE_3__components_premium_icons_list__["a" /* default */],
        onChange: function onChange(newIcon) {
          return setAttributes({ selectedIcon: newIcon });
        },
        value: selectedIcon,
        isMulti: false,
        appendTo: "body",
        noSelectedPlaceholder: __("Select Icon")
      }),
      wp.element.createElement(SelectControl, {
        label: __("Hover Effect"),
        options: EFFECTS,
        value: hoverEffect,
        onChange: function onChange(newEffect) {
          return setAttributes({ hoverEffect: newEffect });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Align")
      ),
      wp.element.createElement(Toolbar, {
        controls: ALIGNS.map(function (iconAlign) {
          return {
            icon: "editor-align" + iconAlign,
            isActive: iconAlign === align,
            onClick: function onClick() {
              return setAttributes({ align: iconAlign });
            }
          };
        })
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Link"),
        checked: urlCheck,
        onChange: function onChange(newValue) {
          return setAttributes({ urlCheck: newValue });
        }
      }),
      urlCheck && wp.element.createElement(ToggleControl, {
        label: __("Open link in new tab"),
        checked: target,
        onChange: function onChange(newValue) {
          return setAttributes({ target: newValue });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Icon Style"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_size_units__["a" /* default */], {
        onChangeSizeUnit: function onChangeSizeUnit(newValue) {
          return setAttributes({ iconSizeUnit: newValue });
        }
      }),
      wp.element.createElement(RangeControl, {
        label: __("Size"),
        value: iconSize,
        onChange: function onChange(newValue) {
          return setAttributes({ iconSize: newValue });
        },
        initialPosition: 50,
        allowReset: true
      }),
      wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref) {
            var isOpen = _ref.isOpen,
                onToggle = _ref.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                __("Icon Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: iconColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    iconColor: newValue
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Background Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: iconBack,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    iconBack: newValue
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_border__["a" /* default */], {
        borderType: borderType,
        borderWidth: borderWidth,
        borderColor: borderColor,
        borderRadius: borderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ borderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ borderWidth: newWidth });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({ borderColor: colorValue.hex });
        },
        onChangeRadius: function onChangeRadius(newrRadius) {
          return setAttributes({ borderRadius: newrRadius });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_text_shadow__["a" /* default */], {
        label: "Shadow",
        color: shadowColor,
        blur: shadowBlur,
        horizontal: shadowHorizontal,
        vertical: shadowVertical,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({ shadowColor: newColor.hex });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({ shadowBlur: newBlur });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({ shadowHorizontal: newValue });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({ shadowVertical: newValue });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_margin__["a" /* default */], {
        directions: ["all"],
        marginTop: marginT,
        marginRight: marginR,
        marginBottom: marginB,
        marginLeft: marginL,
        onChangeMarTop: function onChangeMarTop(value) {
          return setAttributes({
            marginT: value
          });
        },
        onChangeMarRight: function onChangeMarRight(value) {
          return setAttributes({
            marginR: value
          });
        },
        onChangeMarBottom: function onChangeMarBottom(value) {
          return setAttributes({
            marginB: value
          });
        },
        onChangeMarLeft: function onChangeMarLeft(value) {
          return setAttributes({
            marginL: value
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_premium_padding__["a" /* default */], {
        paddingTop: paddingT,
        paddingRight: paddingR,
        paddingBottom: paddingB,
        paddingLeft: paddingL,
        onChangePadTop: function onChangePadTop(value) {
          return setAttributes({
            paddingT: value
          });
        },
        onChangePadRight: function onChangePadRight(value) {
          return setAttributes({
            paddingR: value
          });
        },
        onChangePadBottom: function onChangePadBottom(value) {
          return setAttributes({
            paddingB: value
          });
        },
        onChangePadLeft: function onChangePadLeft(value) {
          return setAttributes({
            paddingL: value
          });
        },
        showUnits: true,
        selectedUnit: paddingU,
        onChangePadSizeUnit: function onChangePadSizeUnit(newvalue) {
          return setAttributes({ paddingU: newvalue });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Container Style"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Background Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: backgroundColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              backgroundColor: newValue
            });
          },
          allowReset: true
        }),
        imageURL && wp.element.createElement("img", { src: imageURL, width: "100%", height: "auto" }),
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_10__components_premium_background__["a" /* default */], {
          imageID: imageID,
          imageURL: imageURL,
          backgroundPosition: backgroundPosition,
          backgroundRepeat: backgroundRepeat,
          backgroundSize: backgroundSize,
          fixed: fixed,
          onSelectMedia: function onSelectMedia(media) {
            setAttributes({
              imageID: media.id,
              imageURL: media.url
            });
          },
          onRemoveImage: function onRemoveImage(value) {
            return setAttributes({ imageURL: "", imageID: "" });
          },
          onChangeBackPos: function onChangeBackPos(newValue) {
            return setAttributes({ backgroundPosition: newValue });
          },
          onchangeBackRepeat: function onchangeBackRepeat(newValue) {
            return setAttributes({ backgroundRepeat: newValue });
          },
          onChangeBackSize: function onChangeBackSize(newValue) {
            return setAttributes({ backgroundSize: newValue });
          },
          onChangeFixed: function onChangeFixed(check) {
            return setAttributes({ fixed: check });
          }
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_border__["a" /* default */], {
        borderType: wrapBorderType,
        borderWidth: wrapBorderWidth,
        borderColor: wrapBorderColor,
        borderRadius: wrapBorderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ wrapBorderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ wrapBorderWidth: newWidth });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({ wrapBorderColor: colorValue.hex });
        },
        onChangeRadius: function onChangeRadius(newrRadius) {
          return setAttributes({ wrapBorderRadius: newrRadius });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_premium_box_shadow__["a" /* default */], {
        inner: true,
        color: wrapShadowColor,
        blur: wrapShadowBlur,
        horizontal: wrapShadowHorizontal,
        vertical: wrapShadowVertical,
        position: wrapShadowPosition,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            wrapShadowColor: newColor.hex
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            wrapShadowBlur: newBlur
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            wrapShadowHorizontal: newValue
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            wrapShadowVertical: newValue
          });
        },
        onChangePosition: function onChangePosition(newValue) {
          return setAttributes({
            wrapShadowPosition: newValue
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_margin__["a" /* default */], {
        directions: ["all"],
        marginTop: wrapMarginT,
        marginRight: wrapMarginR,
        marginBottom: wrapMarginB,
        marginLeft: wrapMarginL,
        onChangeMarTop: function onChangeMarTop(value) {
          return setAttributes({
            wrapMarginT: value
          });
        },
        onChangeMarRight: function onChangeMarRight(value) {
          return setAttributes({
            wrapMarginR: value
          });
        },
        onChangeMarBottom: function onChangeMarBottom(value) {
          return setAttributes({
            wrapMarginB: value
          });
        },
        onChangeMarLeft: function onChangeMarLeft(value) {
          return setAttributes({
            wrapMarginL: value
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_premium_padding__["a" /* default */], {
        paddingTop: wrapPaddingT,
        paddingRight: wrapPaddingR,
        paddingBottom: wrapPaddingB,
        paddingLeft: wrapPaddingL,
        onChangePadTop: function onChangePadTop(value) {
          return setAttributes({
            wrapPaddingT: value
          });
        },
        onChangePadRight: function onChangePadRight(value) {
          return setAttributes({
            wrapPaddingR: value
          });
        },
        onChangePadBottom: function onChangePadBottom(value) {
          return setAttributes({
            wrapPaddingB: value
          });
        },
        onChangePadLeft: function onChangePadLeft(value) {
          return setAttributes({
            wrapPaddingL: value
          });
        }
      })
    )
  ), wp.element.createElement(
    "div",
    {
      className: mainClasses + "__container",
      style: {
        textAlign: align,
        backgroundColor: backgroundColor,
        backgroundImage: "url('" + imageURL + "')",
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset",
        border: wrapBorderType,
        borderWidth: wrapBorderWidth + "px",
        borderRadius: wrapBorderRadius + "px",
        borderColor: wrapBorderColor,
        boxShadow: (wrapShadowHorizontal || 0) + "px " + (wrapShadowVertical || 0) + "px " + (wrapShadowBlur || 0) + "px " + wrapShadowColor + " " + wrapShadowPosition,
        paddingTop: wrapPaddingT,
        paddingRight: wrapPaddingR,
        paddingBottom: wrapPaddingB,
        paddingLeft: wrapPaddingL,
        marginTop: wrapMarginT,
        marginRight: wrapMarginR,
        marginBottom: wrapMarginB,
        marginLeft: wrapMarginL
      }
    },
    iconType === "fa" && 1 != __WEBPACK_IMPORTED_MODULE_1__assets_js_settings__["a" /* FontAwesomeEnabled */] && wp.element.createElement(
      "p",
      { className: "premium-icon__alert" },
      __("Please Enable Font Awesome Icons from Plugin settings")
    ),
    (iconType === "dash" || 1 == __WEBPACK_IMPORTED_MODULE_1__assets_js_settings__["a" /* FontAwesomeEnabled */]) && wp.element.createElement("i", {
      className: "premium-icon " + selectedIcon + " premium-icon__" + hoverEffect,
      style: {
        color: iconColor || "#6ec1e4",
        backgroundColor: iconBack,
        fontSize: (iconSize || 50) + iconSizeUnit,
        paddingTop: paddingT + paddingU,
        paddingRight: paddingR + paddingU,
        paddingBottom: paddingB + paddingU,
        paddingLeft: paddingL + paddingU,
        marginTop: marginT,
        marginRight: marginR,
        marginBottom: marginB,
        marginLeft: marginL,
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius || 100 + "px",
        borderColor: borderColor,
        textShadow: (shadowHorizontal || 0) + "px " + (shadowVertical || 0) + "px " + (shadowBlur || 0) + "px " + shadowColor
      }
    }),
    urlCheck && isSelected && wp.element.createElement(URLInput, {
      value: link,
      onChange: function onChange(newUrl) {
        return setAttributes({ link: newUrl });
      }
    })
  )];
};

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", { value: !0 });
var b = "function" === typeof Symbol && Symbol.for,
    c = b ? Symbol.for("react.element") : 60103,
    d = b ? Symbol.for("react.portal") : 60106,
    e = b ? Symbol.for("react.fragment") : 60107,
    f = b ? Symbol.for("react.strict_mode") : 60108,
    g = b ? Symbol.for("react.profiler") : 60114,
    h = b ? Symbol.for("react.provider") : 60109,
    k = b ? Symbol.for("react.context") : 60110,
    l = b ? Symbol.for("react.async_mode") : 60111,
    m = b ? Symbol.for("react.concurrent_mode") : 60111,
    n = b ? Symbol.for("react.forward_ref") : 60112,
    p = b ? Symbol.for("react.suspense") : 60113,
    q = b ? Symbol.for("react.memo") : 60115,
    r = b ? Symbol.for("react.lazy") : 60116;function t(a) {
  if ("object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) && null !== a) {
    var u = a.$$typeof;switch (u) {case c:
        switch (a = a.type, a) {case l:case m:case e:case g:case f:case p:
            return a;default:
            switch (a = a && a.$$typeof, a) {case k:case n:case h:
                return a;default:
                return u;}}case r:case q:case d:
        return u;}
  }
}function v(a) {
  return t(a) === m;
}exports.typeOf = t;exports.AsyncMode = l;exports.ConcurrentMode = m;exports.ContextConsumer = k;exports.ContextProvider = h;exports.Element = c;exports.ForwardRef = n;
exports.Fragment = e;exports.Lazy = r;exports.Memo = q;exports.Portal = d;exports.Profiler = g;exports.StrictMode = f;exports.Suspense = p;exports.isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || "object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) && null !== a && (a.$$typeof === r || a.$$typeof === q || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n);
};exports.isAsyncMode = function (a) {
  return v(a) || t(a) === l;
};exports.isConcurrentMode = v;exports.isContextConsumer = function (a) {
  return t(a) === k;
};
exports.isContextProvider = function (a) {
  return t(a) === h;
};exports.isElement = function (a) {
  return "object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) && null !== a && a.$$typeof === c;
};exports.isForwardRef = function (a) {
  return t(a) === n;
};exports.isFragment = function (a) {
  return t(a) === e;
};exports.isLazy = function (a) {
  return t(a) === r;
};exports.isMemo = function (a) {
  return t(a) === q;
};exports.isPortal = function (a) {
  return t(a) === d;
};exports.isProfiler = function (a) {
  return t(a) === g;
};exports.isStrictMode = function (a) {
  return t(a) === f;
};
exports.isSuspense = function (a) {
  return t(a) === p;
};

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.8.6
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

if (process.env.NODE_ENV !== "production") {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', { value: true });

    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;

    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

    function isValidElementType(type) {
      return typeof type === 'string' || typeof type === 'function' ||
      // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || (typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
    }

    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */

    var lowPriorityWarning = function lowPriorityWarning() {};

    {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.warn(message);
        }
        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarning = function lowPriorityWarning(condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }

    var lowPriorityWarning$1 = lowPriorityWarning;

    function typeOf(object) {
      if ((typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null) {
        var $$typeof = object.$$typeof;
        switch ($$typeof) {
          case REACT_ELEMENT_TYPE:
            var type = object.type;

            switch (type) {
              case REACT_ASYNC_MODE_TYPE:
              case REACT_CONCURRENT_MODE_TYPE:
              case REACT_FRAGMENT_TYPE:
              case REACT_PROFILER_TYPE:
              case REACT_STRICT_MODE_TYPE:
              case REACT_SUSPENSE_TYPE:
                return type;
              default:
                var $$typeofType = type && type.$$typeof;

                switch ($$typeofType) {
                  case REACT_CONTEXT_TYPE:
                  case REACT_FORWARD_REF_TYPE:
                  case REACT_PROVIDER_TYPE:
                    return $$typeofType;
                  default:
                    return $$typeof;
                }
            }
          case REACT_LAZY_TYPE:
          case REACT_MEMO_TYPE:
          case REACT_PORTAL_TYPE:
            return $$typeof;
        }
      }

      return undefined;
    }

    // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;

    var hasWarnedAboutDeprecatedIsAsyncMode = false;

    // AsyncMode should be deprecated
    function isAsyncMode(object) {
      {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
          hasWarnedAboutDeprecatedIsAsyncMode = true;
          lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
        }
      }
      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
      return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
      return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
      return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
      return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
      return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
      return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
      return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
      return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
      return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
      return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
      return typeOf(object) === REACT_SUSPENSE_TYPE;
    }

    exports.typeOf = typeOf;
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isValidElementType = isValidElementType;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
  })();
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var ReactIs = __webpack_require__(92);
var assign = __webpack_require__(93);

var ReactPropTypesSecret = __webpack_require__(59);
var checkPropTypes = __webpack_require__(212);

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function printWarning() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function printWarning(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function (isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] &&
          // Avoid spamming the console because they are often not actionable except for lib authors
          manualPropTypeWarningCount < 3) {
            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var printWarning = function printWarning() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret = __webpack_require__(59);
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function printWarning(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + _typeof(typeSpecs[typeSpecName]) + '`.');
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + (typeof error === 'undefined' ? 'undefined' : _typeof(error)) + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function () {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
};

module.exports = checkPropTypes;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(59);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(13));

var _addClass = _interopRequireDefault(__webpack_require__(215));

var _removeClass = _interopRequireDefault(__webpack_require__(218));

var _react = _interopRequireDefault(__webpack_require__(1));

var _Transition = _interopRequireDefault(__webpack_require__(60));

var _PropTypes = __webpack_require__(96);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }newObj.default = obj;return newObj;
  }
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };return _extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);subClass.prototype.constructor = subClass;subClass.__proto__ = superClass;
}

var addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _addClass.default)(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _removeClass.default)(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
 * using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity: 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**.
 */

var CSSTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.onEnter = function (node, appearing) {
      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
          className = _this$getClassNames.className;

      _this.removeClasses(node, 'exit');

      addClass(node, className);

      if (_this.props.onEnter) {
        _this.props.onEnter(node, appearing);
      }
    };

    _this.onEntering = function (node, appearing) {
      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
          activeClassName = _this$getClassNames2.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onEntering) {
        _this.props.onEntering(node, appearing);
      }
    };

    _this.onEntered = function (node, appearing) {
      var appearClassName = _this.getClassNames('appear').doneClassName;

      var enterClassName = _this.getClassNames('enter').doneClassName;

      var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;

      _this.removeClasses(node, appearing ? 'appear' : 'enter');

      addClass(node, doneClassName);

      if (_this.props.onEntered) {
        _this.props.onEntered(node, appearing);
      }
    };

    _this.onExit = function (node) {
      var _this$getClassNames3 = _this.getClassNames('exit'),
          className = _this$getClassNames3.className;

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      addClass(node, className);

      if (_this.props.onExit) {
        _this.props.onExit(node);
      }
    };

    _this.onExiting = function (node) {
      var _this$getClassNames4 = _this.getClassNames('exit'),
          activeClassName = _this$getClassNames4.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onExiting) {
        _this.props.onExiting(node);
      }
    };

    _this.onExited = function (node) {
      var _this$getClassNames5 = _this.getClassNames('exit'),
          doneClassName = _this$getClassNames5.doneClassName;

      _this.removeClasses(node, 'exit');

      addClass(node, doneClassName);

      if (_this.props.onExited) {
        _this.props.onExited(node);
      }
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + '-' : '';
      var className = isStringClassNames ? prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];
      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];
      return {
        className: className,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$getClassNames6 = this.getClassNames(type),
        className = _this$getClassNames6.className,
        activeClassName = _this$getClassNames6.activeClassName,
        doneClassName = _this$getClassNames6.doneClassName;

    className && removeClass(node, className);
    activeClassName && removeClass(node, activeClassName);
    doneClassName && removeClass(node, doneClassName);
  };

  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
    // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.
    if (className) {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
      /* eslint-enable no-unused-expressions */

      addClass(node, className);
    }
  };

  _proto.render = function render() {
    var props = _extends({}, this.props);

    delete props.classNames;
    return _react.default.createElement(_Transition.default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(_react.default.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes = process.env.NODE_ENV !== "production" ? _extends({}, _Transition.default.propTypes, {
  /**
   * The animation classNames applied to the component as it enters, exits or
   * has finished the transition. A single name can be provided and it will be
   * suffixed for each stage: e.g.
   *
   * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,
   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.
   *
   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
   * This allows you to define different behavior for when appearing is done and
   * when regular entering is done, using selectors like
   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
   * epic entrance animation when element first appears in the DOM using
   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   * simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: _PropTypes.classNamesShape,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExit: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement)
   */
  onExited: PropTypes.func
}) : {};
var _default = CSSTransition;
exports.default = _default;
module.exports = exports["default"];
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(216);

exports.__esModule = true;
exports.default = addClass;

var _hasClass = _interopRequireDefault(__webpack_require__(217));

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
}

module.exports = exports["default"];

/***/ }),
/* 216 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = hasClass;

function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

module.exports = exports["default"];

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

module.exports = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
};

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(13));

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = __webpack_require__(27);

var _TransitionGroup = _interopRequireDefault(__webpack_require__(97));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
  }return target;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);subClass.prototype.constructor = subClass;subClass.__proto__ = superClass;
}

/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */
var ReplaceTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;

    var child = _react.default.Children.toArray(children)[idx];

    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);

    var _React$Children$toArr = _react.default.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : _react.default.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(_react.default.Component);

ReplaceTransition.propTypes = process.env.NODE_ENV !== "production" ? {
  in: _propTypes.default.bool.isRequired,
  children: function children(props, propName) {
    if (_react.default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
    return null;
  }
} : {};
var _default = ReplaceTransition;
exports.default = _default;
module.exports = exports["default"];
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;
exports.getInitialChildMapping = getInitialChildMapping;
exports.getNextChildMapping = getNextChildMapping;

var _react = __webpack_require__(1);

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) _react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0, _react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}

function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0, _react.isValidElement)(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0, _react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      selectedIcon = _props$attributes.selectedIcon,
      align = _props$attributes.align,
      hoverEffect = _props$attributes.hoverEffect,
      iconSize = _props$attributes.iconSize,
      iconSizeUnit = _props$attributes.iconSizeUnit,
      iconColor = _props$attributes.iconColor,
      iconBack = _props$attributes.iconBack,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      paddingT = _props$attributes.paddingT,
      paddingR = _props$attributes.paddingR,
      paddingB = _props$attributes.paddingB,
      paddingL = _props$attributes.paddingL,
      paddingU = _props$attributes.paddingU,
      marginT = _props$attributes.marginT,
      marginR = _props$attributes.marginR,
      marginB = _props$attributes.marginB,
      marginL = _props$attributes.marginL,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      backgroundColor = _props$attributes.backgroundColor,
      imageURL = _props$attributes.imageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      wrapBorderType = _props$attributes.wrapBorderType,
      wrapBorderWidth = _props$attributes.wrapBorderWidth,
      wrapBorderRadius = _props$attributes.wrapBorderRadius,
      wrapBorderColor = _props$attributes.wrapBorderColor,
      wrapShadowBlur = _props$attributes.wrapShadowBlur,
      wrapShadowColor = _props$attributes.wrapShadowColor,
      wrapShadowHorizontal = _props$attributes.wrapShadowHorizontal,
      wrapShadowVertical = _props$attributes.wrapShadowVertical,
      wrapShadowPosition = _props$attributes.wrapShadowPosition,
      wrapPaddingT = _props$attributes.wrapPaddingT,
      wrapPaddingR = _props$attributes.wrapPaddingR,
      wrapPaddingB = _props$attributes.wrapPaddingB,
      wrapPaddingL = _props$attributes.wrapPaddingL,
      wrapMarginT = _props$attributes.wrapMarginT,
      wrapMarginR = _props$attributes.wrapMarginR,
      wrapMarginB = _props$attributes.wrapMarginB,
      wrapMarginL = _props$attributes.wrapMarginL,
      urlCheck = _props$attributes.urlCheck,
      link = _props$attributes.link,
      target = _props$attributes.target;


  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-icon');

  return wp.element.createElement(
    'div',
    {
      className: mainClasses + '__container',
      style: {
        textAlign: align,
        backgroundColor: backgroundColor,
        backgroundImage: 'url(\'' + imageURL + '\')',
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset",
        border: wrapBorderType,
        borderWidth: wrapBorderWidth + "px",
        borderRadius: wrapBorderRadius + "px",
        borderColor: wrapBorderColor,
        boxShadow: (wrapShadowHorizontal || 0) + 'px ' + (wrapShadowVertical || 0) + 'px ' + (wrapShadowBlur || 0) + 'px ' + wrapShadowColor + ' ' + wrapShadowPosition,
        paddingTop: wrapPaddingT,
        paddingRight: wrapPaddingR,
        paddingBottom: wrapPaddingB,
        paddingLeft: wrapPaddingL,
        marginTop: wrapMarginT,
        marginRight: wrapMarginR,
        marginBottom: wrapMarginB,
        marginLeft: wrapMarginL
      }
    },
    wp.element.createElement(
      'a',
      {
        className: 'premium-icon__link',
        href: urlCheck && link,
        rel: 'noopener noreferrer',
        target: target ? "_blank" : "_self"
      },
      wp.element.createElement('i', {
        className: 'premium-icon ' + selectedIcon + ' premium-icon__' + hoverEffect,
        style: {
          color: iconColor || "#6ec1e4",
          backgroundColor: iconBack,
          fontSize: (iconSize || 50) + iconSizeUnit,
          paddingTop: paddingT + paddingU,
          paddingRight: paddingR + paddingU,
          paddingBottom: paddingB + paddingU,
          paddingLeft: paddingL + paddingU,
          marginTop: marginT,
          marginRight: marginR,
          marginBottom: marginB,
          marginLeft: marginL,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius || 100 + "px",
          borderColor: borderColor,
          textShadow: (shadowHorizontal || 0) + 'px ' + (shadowVertical || 0) + 'px ' + (shadowBlur || 0) + 'px ' + shadowColor
        }
      })
    )
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var className = "premium-icon";

var deprecated_attributes_1_5_5 = {
  iconType: {
    type: "string",
    default: "dash"
  },
  selectedIcon: {
    type: "string",
    default: "dashicons dashicons-admin-site"
  },
  align: {
    type: "string",
    default: "center"
  },
  hoverEffect: {
    type: "string",
    default: "none"
  },
  iconSize: {
    type: "number"
  },
  iconColor: {
    type: "string",
    default: "#6ec1e4"
  },
  iconBack: {
    type: "string"
  },
  padding: {
    type: "string",
    default: "up"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  paddingT: {
    type: "number"
  },
  paddingR: {
    type: "number"
  },
  paddingB: {
    type: "number"
  },
  paddingL: {
    type: "number"
  },
  margin: {
    type: "string",
    default: "up"
  },
  marginT: {
    type: "number"
  },
  marginR: {
    type: "number"
  },
  marginB: {
    type: "number"
  },
  marginL: {
    type: "number"
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number",
    default: 100
  },
  borderColor: {
    type: "string"
  },
  background: {
    type: "string"
  },
  backgroundColor: {
    type: "string"
  },
  imageID: {
    type: "string"
  },
  imageURL: {
    type: "string"
  },
  backgroundRepeat: {
    type: "string",
    default: "no-repeat"
  },
  backgroundPosition: {
    type: "string",
    default: "top center"
  },
  backgroundSize: {
    type: "string",
    default: "auto"
  },
  fixed: {
    type: "boolean",
    default: false
  },
  wrapBorderType: {
    type: "string",
    default: "none"
  },
  wrapBorderWidth: {
    type: "number",
    default: "1"
  },
  wrapBorderRadius: {
    type: "number"
  },
  wrapBorderColor: {
    type: "string"
  },
  wrapPadding: {
    type: "string",
    default: "up"
  },
  wrapShadowColor: {
    type: "string"
  },
  wrapShadowBlur: {
    type: "number",
    default: "0"
  },
  wrapShadowHorizontal: {
    type: "number",
    default: "0"
  },
  wrapShadowVertical: {
    type: "number",
    default: "0"
  },
  wrapShadowPosition: {
    type: "string",
    default: ""
  },
  wrapPaddingT: {
    type: "number"
  },
  wrapPaddingR: {
    type: "number"
  },
  wrapPaddingB: {
    type: "number"
  },
  wrapPaddingL: {
    type: "number"
  },
  wrapMargin: {
    type: "string",
    default: "up"
  },
  wrapMarginT: {
    type: "number"
  },
  wrapMarginR: {
    type: "number"
  },
  wrapMarginB: {
    type: "number"
  },
  wrapMarginL: {
    type: "number"
  },
  urlCheck: {
    type: "boolean"
  },
  link: {
    type: "string"
  },
  target: {
    type: "boolean"
  }
};

var newAttributes_1_5_6 = {
  iconSizeUnit: {
    type: "px"
  }
};

var deprecated_attributes_1_5_6 = Object.assign(deprecated_attributes_1_5_5, newAttributes_1_5_6);

var deprecated_attributes_1_3_9 = {
  iconType: {
    type: "string",
    default: "dash"
  },
  selectedIcon: {
    type: "string",
    default: "dashicons dashicons-admin-site"
  },
  align: {
    type: "string",
    default: "center"
  },
  hoverEffect: {
    type: "string",
    default: "none"
  },
  iconSize: {
    type: "number"
  },
  iconColor: {
    type: "string",
    default: "#6ec1e4"
  },
  iconBack: {
    type: "string"
  },
  padding: {
    type: "string",
    default: "up"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  paddingT: {
    type: "number"
  },
  paddingR: {
    type: "number"
  },
  paddingB: {
    type: "number"
  },
  paddingL: {
    type: "number"
  },
  margin: {
    type: "string",
    default: "up"
  },
  marginT: {
    type: "number"
  },
  marginR: {
    type: "number"
  },
  marginB: {
    type: "number"
  },
  marginL: {
    type: "number"
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number",
    default: 100
  },
  borderColor: {
    type: "string"
  },
  background: {
    type: "string"
  },
  wrapBorderType: {
    type: "string",
    default: "none"
  },
  wrapBorderWidth: {
    type: "number",
    default: "1"
  },
  wrapBorderRadius: {
    type: "number"
  },
  wrapBorderColor: {
    type: "string"
  },
  wrapPadding: {
    type: "string",
    default: "up"
  },
  wrapShadowColor: {
    type: "string"
  },
  wrapShadowBlur: {
    type: "number",
    default: "0"
  },
  wrapShadowHorizontal: {
    type: "number",
    default: "0"
  },
  wrapShadowVertical: {
    type: "number",
    default: "0"
  },
  wrapShadowPosition: {
    type: "string",
    default: ""
  },
  wrapPaddingT: {
    type: "number"
  },
  wrapPaddingR: {
    type: "number"
  },
  wrapPaddingB: {
    type: "number"
  },
  wrapPaddingL: {
    type: "number"
  },
  wrapMargin: {
    type: "string",
    default: "up"
  },
  wrapMarginT: {
    type: "number"
  },
  wrapMarginR: {
    type: "number"
  },
  wrapMarginB: {
    type: "number"
  },
  wrapMarginL: {
    type: "number"
  },
  urlCheck: {
    type: "boolean"
  },
  link: {
    type: "string"
  },
  target: {
    type: "boolean"
  }
};

var deprecated_attributes_1_3_1 = {
  iconType: {
    type: "string",
    default: "dash"
  },
  selectedIcon: {
    type: "string",
    default: "dashicons dashicons-admin-site"
  },
  align: {
    type: "string",
    default: "center"
  },
  hoverEffect: {
    type: "string",
    default: "none"
  },
  iconSize: {
    type: "number",
    default: 50
  },
  iconColor: {
    type: "string",
    default: "#6ec1e4"
  },
  iconBack: {
    type: "string"
  },
  padding: {
    type: "string",
    default: "up"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  paddingT: {
    type: "number"
  },
  paddingR: {
    type: "number"
  },
  paddingB: {
    type: "number"
  },
  paddingL: {
    type: "number"
  },
  margin: {
    type: "string",
    default: "up"
  },
  marginT: {
    type: "number"
  },
  marginR: {
    type: "number"
  },
  marginB: {
    type: "number"
  },
  marginL: {
    type: "number"
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number",
    default: 100
  },
  borderColor: {
    type: "string"
  },
  background: {
    type: "string"
  },
  wrapBorderType: {
    type: "string",
    default: "none"
  },
  wrapBorderWidth: {
    type: "number",
    default: "1"
  },
  wrapBorderRadius: {
    type: "number"
  },
  wrapBorderColor: {
    type: "string"
  },
  wrapPadding: {
    type: "string",
    default: "up"
  },
  wrapShadowColor: {
    type: "string"
  },
  wrapShadowBlur: {
    type: "number",
    default: "0"
  },
  wrapShadowHorizontal: {
    type: "number",
    default: "0"
  },
  wrapShadowVertical: {
    type: "number",
    default: "0"
  },
  wrapShadowPosition: {
    type: "string",
    default: ""
  },
  wrapPaddingT: {
    type: "number"
  },
  wrapPaddingR: {
    type: "number"
  },
  wrapPaddingB: {
    type: "number"
  },
  wrapPaddingL: {
    type: "number"
  },
  wrapMargin: {
    type: "string",
    default: "up"
  },
  wrapMarginT: {
    type: "number"
  },
  wrapMarginR: {
    type: "number"
  },
  wrapMarginB: {
    type: "number"
  },
  wrapMarginL: {
    type: "number"
  },
  urlCheck: {
    type: "boolean"
  },
  link: {
    type: "string"
  },
  target: {
    type: "boolean"
  }
};

var deprecatedContent = [{
  attributes: deprecated_attributes_1_5_6,
  migrate: function migrate(attributes) {
    var newAttributes = {
      paddingU: "px"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        selectedIcon = _props$attributes.selectedIcon,
        align = _props$attributes.align,
        hoverEffect = _props$attributes.hoverEffect,
        iconSize = _props$attributes.iconSize,
        iconSizeUnit = _props$attributes.iconSizeUnit,
        iconColor = _props$attributes.iconColor,
        iconBack = _props$attributes.iconBack,
        shadowBlur = _props$attributes.shadowBlur,
        shadowColor = _props$attributes.shadowColor,
        shadowHorizontal = _props$attributes.shadowHorizontal,
        shadowVertical = _props$attributes.shadowVertical,
        paddingT = _props$attributes.paddingT,
        paddingR = _props$attributes.paddingR,
        paddingB = _props$attributes.paddingB,
        paddingL = _props$attributes.paddingL,
        marginT = _props$attributes.marginT,
        marginR = _props$attributes.marginR,
        marginB = _props$attributes.marginB,
        marginL = _props$attributes.marginL,
        borderType = _props$attributes.borderType,
        borderWidth = _props$attributes.borderWidth,
        borderRadius = _props$attributes.borderRadius,
        borderColor = _props$attributes.borderColor,
        backgroundColor = _props$attributes.backgroundColor,
        imageURL = _props$attributes.imageURL,
        fixed = _props$attributes.fixed,
        backgroundRepeat = _props$attributes.backgroundRepeat,
        backgroundPosition = _props$attributes.backgroundPosition,
        backgroundSize = _props$attributes.backgroundSize,
        wrapBorderType = _props$attributes.wrapBorderType,
        wrapBorderWidth = _props$attributes.wrapBorderWidth,
        wrapBorderRadius = _props$attributes.wrapBorderRadius,
        wrapBorderColor = _props$attributes.wrapBorderColor,
        wrapShadowBlur = _props$attributes.wrapShadowBlur,
        wrapShadowColor = _props$attributes.wrapShadowColor,
        wrapShadowHorizontal = _props$attributes.wrapShadowHorizontal,
        wrapShadowVertical = _props$attributes.wrapShadowVertical,
        wrapShadowPosition = _props$attributes.wrapShadowPosition,
        wrapPaddingT = _props$attributes.wrapPaddingT,
        wrapPaddingR = _props$attributes.wrapPaddingR,
        wrapPaddingB = _props$attributes.wrapPaddingB,
        wrapPaddingL = _props$attributes.wrapPaddingL,
        wrapMarginT = _props$attributes.wrapMarginT,
        wrapMarginR = _props$attributes.wrapMarginR,
        wrapMarginB = _props$attributes.wrapMarginB,
        wrapMarginL = _props$attributes.wrapMarginL,
        urlCheck = _props$attributes.urlCheck,
        link = _props$attributes.link,
        target = _props$attributes.target;


    return wp.element.createElement(
      "div",
      {
        className: className + "__container",
        style: {
          textAlign: align,
          backgroundColor: backgroundColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset",
          border: wrapBorderType,
          borderWidth: wrapBorderWidth + "px",
          borderRadius: wrapBorderRadius + "px",
          borderColor: wrapBorderColor,
          boxShadow: (wrapShadowHorizontal || 0) + "px " + (wrapShadowVertical || 0) + "px " + (wrapShadowBlur || 0) + "px " + wrapShadowColor + " " + wrapShadowPosition,
          paddingTop: wrapPaddingT,
          paddingRight: wrapPaddingR,
          paddingBottom: wrapPaddingB,
          paddingLeft: wrapPaddingL,
          marginTop: wrapMarginT,
          marginRight: wrapMarginR,
          marginBottom: wrapMarginB,
          marginLeft: wrapMarginL
        }
      },
      wp.element.createElement(
        "a",
        {
          className: className + "__link",
          href: urlCheck && link,
          rel: "noopener noreferrer",
          target: target ? "_blank" : "_self"
        },
        wp.element.createElement("i", {
          className: className + " " + selectedIcon + " " + className + "__" + hoverEffect,
          style: {
            color: iconColor || "#6ec1e4",
            backgroundColor: iconBack,
            fontSize: (iconSize || 50) + iconSizeUnit,
            paddingTop: paddingT,
            paddingRight: paddingR,
            paddingBottom: paddingB,
            paddingLeft: paddingL,
            marginTop: marginT,
            marginRight: marginR,
            marginBottom: marginB,
            marginLeft: marginL,
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius || 100 + "px",
            borderColor: borderColor,
            textShadow: (shadowHorizontal || 0) + "px " + (shadowVertical || 0) + "px " + (shadowBlur || 0) + "px " + shadowColor
          }
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_5_5,
  migrate: function migrate(attributes) {
    var newAttributes = {
      iconSizeUnit: "px"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        selectedIcon = _props$attributes2.selectedIcon,
        align = _props$attributes2.align,
        hoverEffect = _props$attributes2.hoverEffect,
        iconSize = _props$attributes2.iconSize,
        iconColor = _props$attributes2.iconColor,
        iconBack = _props$attributes2.iconBack,
        shadowBlur = _props$attributes2.shadowBlur,
        shadowColor = _props$attributes2.shadowColor,
        shadowHorizontal = _props$attributes2.shadowHorizontal,
        shadowVertical = _props$attributes2.shadowVertical,
        paddingT = _props$attributes2.paddingT,
        paddingR = _props$attributes2.paddingR,
        paddingB = _props$attributes2.paddingB,
        paddingL = _props$attributes2.paddingL,
        marginT = _props$attributes2.marginT,
        marginR = _props$attributes2.marginR,
        marginB = _props$attributes2.marginB,
        marginL = _props$attributes2.marginL,
        borderType = _props$attributes2.borderType,
        borderWidth = _props$attributes2.borderWidth,
        borderRadius = _props$attributes2.borderRadius,
        borderColor = _props$attributes2.borderColor,
        backgroundColor = _props$attributes2.backgroundColor,
        imageURL = _props$attributes2.imageURL,
        fixed = _props$attributes2.fixed,
        backgroundRepeat = _props$attributes2.backgroundRepeat,
        backgroundPosition = _props$attributes2.backgroundPosition,
        backgroundSize = _props$attributes2.backgroundSize,
        wrapBorderType = _props$attributes2.wrapBorderType,
        wrapBorderWidth = _props$attributes2.wrapBorderWidth,
        wrapBorderRadius = _props$attributes2.wrapBorderRadius,
        wrapBorderColor = _props$attributes2.wrapBorderColor,
        wrapShadowBlur = _props$attributes2.wrapShadowBlur,
        wrapShadowColor = _props$attributes2.wrapShadowColor,
        wrapShadowHorizontal = _props$attributes2.wrapShadowHorizontal,
        wrapShadowVertical = _props$attributes2.wrapShadowVertical,
        wrapShadowPosition = _props$attributes2.wrapShadowPosition,
        wrapPaddingT = _props$attributes2.wrapPaddingT,
        wrapPaddingR = _props$attributes2.wrapPaddingR,
        wrapPaddingB = _props$attributes2.wrapPaddingB,
        wrapPaddingL = _props$attributes2.wrapPaddingL,
        wrapMarginT = _props$attributes2.wrapMarginT,
        wrapMarginR = _props$attributes2.wrapMarginR,
        wrapMarginB = _props$attributes2.wrapMarginB,
        wrapMarginL = _props$attributes2.wrapMarginL,
        urlCheck = _props$attributes2.urlCheck,
        link = _props$attributes2.link,
        target = _props$attributes2.target;


    return wp.element.createElement(
      "div",
      {
        className: className + "__container",
        style: {
          textAlign: align,
          backgroundColor: backgroundColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset",
          border: wrapBorderType,
          borderWidth: wrapBorderWidth + "px",
          borderRadius: wrapBorderRadius + "px",
          borderColor: wrapBorderColor,
          boxShadow: (wrapShadowHorizontal || 0) + "px " + (wrapShadowVertical || 0) + "px " + (wrapShadowBlur || 0) + "px " + wrapShadowColor + " " + wrapShadowPosition,
          paddingTop: wrapPaddingT,
          paddingRight: wrapPaddingR,
          paddingBottom: wrapPaddingB,
          paddingLeft: wrapPaddingL,
          marginTop: wrapMarginT,
          marginRight: wrapMarginR,
          marginBottom: wrapMarginB,
          marginLeft: wrapMarginL
        }
      },
      wp.element.createElement(
        "a",
        {
          className: className + "__link",
          href: urlCheck && link,
          rel: "noopener noreferrer",
          target: target ? "_blank" : "_self"
        },
        wp.element.createElement("i", {
          className: className + " " + selectedIcon + " " + className + "__" + hoverEffect,
          style: {
            color: iconColor || "#6ec1e4",
            backgroundColor: iconBack,
            fontSize: iconSize || 50,
            paddingTop: paddingT,
            paddingRight: paddingR,
            paddingBottom: paddingB,
            paddingLeft: paddingL,
            marginTop: marginT,
            marginRight: marginR,
            marginBottom: marginB,
            marginLeft: marginL,
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius || 100 + "px",
            borderColor: borderColor,
            textShadow: (shadowHorizontal || 0) + "px " + (shadowVertical || 0) + "px " + (shadowBlur || 0) + "px " + shadowColor
          }
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_3_9,
  migrate: function migrate(attributes) {
    var newAttributes = {
      backgroundColor: attributes.background,
      imageID: "",
      imageURL: "",
      fixed: false,
      backgroundRepeat: "no-repeat",
      backgroundPosition: "top center",
      backgroundSize: "auto"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        selectedIcon = _props$attributes3.selectedIcon,
        align = _props$attributes3.align,
        hoverEffect = _props$attributes3.hoverEffect,
        iconSize = _props$attributes3.iconSize,
        iconColor = _props$attributes3.iconColor,
        iconBack = _props$attributes3.iconBack,
        shadowBlur = _props$attributes3.shadowBlur,
        shadowColor = _props$attributes3.shadowColor,
        shadowHorizontal = _props$attributes3.shadowHorizontal,
        shadowVertical = _props$attributes3.shadowVertical,
        paddingT = _props$attributes3.paddingT,
        paddingR = _props$attributes3.paddingR,
        paddingB = _props$attributes3.paddingB,
        paddingL = _props$attributes3.paddingL,
        marginT = _props$attributes3.marginT,
        marginR = _props$attributes3.marginR,
        marginB = _props$attributes3.marginB,
        marginL = _props$attributes3.marginL,
        borderType = _props$attributes3.borderType,
        borderWidth = _props$attributes3.borderWidth,
        borderRadius = _props$attributes3.borderRadius,
        borderColor = _props$attributes3.borderColor,
        background = _props$attributes3.background,
        wrapBorderType = _props$attributes3.wrapBorderType,
        wrapBorderWidth = _props$attributes3.wrapBorderWidth,
        wrapBorderRadius = _props$attributes3.wrapBorderRadius,
        wrapBorderColor = _props$attributes3.wrapBorderColor,
        wrapShadowBlur = _props$attributes3.wrapShadowBlur,
        wrapShadowColor = _props$attributes3.wrapShadowColor,
        wrapShadowHorizontal = _props$attributes3.wrapShadowHorizontal,
        wrapShadowVertical = _props$attributes3.wrapShadowVertical,
        wrapShadowPosition = _props$attributes3.wrapShadowPosition,
        wrapPaddingT = _props$attributes3.wrapPaddingT,
        wrapPaddingR = _props$attributes3.wrapPaddingR,
        wrapPaddingB = _props$attributes3.wrapPaddingB,
        wrapPaddingL = _props$attributes3.wrapPaddingL,
        wrapMarginT = _props$attributes3.wrapMarginT,
        wrapMarginR = _props$attributes3.wrapMarginR,
        wrapMarginB = _props$attributes3.wrapMarginB,
        wrapMarginL = _props$attributes3.wrapMarginL,
        urlCheck = _props$attributes3.urlCheck,
        link = _props$attributes3.link,
        target = _props$attributes3.target;


    return wp.element.createElement(
      "div",
      {
        className: className + "__container",
        style: {
          textAlign: align,
          backgroundColor: background,
          border: wrapBorderType,
          borderWidth: wrapBorderWidth + "px",
          borderRadius: wrapBorderRadius + "px",
          borderColor: wrapBorderColor,
          boxShadow: (wrapShadowHorizontal || 0) + "px " + (wrapShadowVertical || 0) + "px " + (wrapShadowBlur || 0) + "px " + wrapShadowColor + " " + wrapShadowPosition,
          paddingTop: wrapPaddingT,
          paddingRight: wrapPaddingR,
          paddingBottom: wrapPaddingB,
          paddingLeft: wrapPaddingL,
          marginTop: wrapMarginT,
          marginRight: wrapMarginR,
          marginBottom: wrapMarginB,
          marginLeft: wrapMarginL
        }
      },
      wp.element.createElement(
        "a",
        {
          className: className + "__link",
          href: urlCheck && link,
          target: target ? "_blank" : "_self"
        },
        wp.element.createElement("i", {
          className: className + " " + selectedIcon + " " + className + "__" + hoverEffect,
          style: {
            color: iconColor || "#6ec1e4",
            backgroundColor: iconBack,
            fontSize: iconSize || 50,
            paddingTop: paddingT,
            paddingRight: paddingR,
            paddingBottom: paddingB,
            paddingLeft: paddingL,
            marginTop: marginT,
            marginRight: marginR,
            marginBottom: marginB,
            marginLeft: marginL,
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius || 100 + "px",
            borderColor: borderColor,
            textShadow: (shadowHorizontal || 0) + "px " + (shadowVertical || 0) + "px " + (shadowBlur || 0) + "px " + shadowColor
          }
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_3_1,
  save: function save(props) {
    var _props$attributes4 = props.attributes,
        selectedIcon = _props$attributes4.selectedIcon,
        align = _props$attributes4.align,
        hoverEffect = _props$attributes4.hoverEffect,
        iconSize = _props$attributes4.iconSize,
        iconColor = _props$attributes4.iconColor,
        iconBack = _props$attributes4.iconBack,
        shadowBlur = _props$attributes4.shadowBlur,
        shadowColor = _props$attributes4.shadowColor,
        shadowHorizontal = _props$attributes4.shadowHorizontal,
        shadowVertical = _props$attributes4.shadowVertical,
        paddingT = _props$attributes4.paddingT,
        paddingR = _props$attributes4.paddingR,
        paddingB = _props$attributes4.paddingB,
        paddingL = _props$attributes4.paddingL,
        marginT = _props$attributes4.marginT,
        marginR = _props$attributes4.marginR,
        marginB = _props$attributes4.marginB,
        marginL = _props$attributes4.marginL,
        borderType = _props$attributes4.borderType,
        borderWidth = _props$attributes4.borderWidth,
        borderRadius = _props$attributes4.borderRadius,
        borderColor = _props$attributes4.borderColor,
        background = _props$attributes4.background,
        wrapBorderType = _props$attributes4.wrapBorderType,
        wrapBorderWidth = _props$attributes4.wrapBorderWidth,
        wrapBorderRadius = _props$attributes4.wrapBorderRadius,
        wrapBorderColor = _props$attributes4.wrapBorderColor,
        wrapPaddingT = _props$attributes4.wrapPaddingT,
        wrapPaddingR = _props$attributes4.wrapPaddingR,
        wrapPaddingB = _props$attributes4.wrapPaddingB,
        wrapPaddingL = _props$attributes4.wrapPaddingL,
        wrapMarginT = _props$attributes4.wrapMarginT,
        wrapMarginR = _props$attributes4.wrapMarginR,
        wrapMarginB = _props$attributes4.wrapMarginB,
        wrapMarginL = _props$attributes4.wrapMarginL,
        urlCheck = _props$attributes4.urlCheck,
        link = _props$attributes4.link,
        target = _props$attributes4.target;


    return wp.element.createElement(
      "div",
      {
        className: className + "__container",
        style: {
          textAlign: align,
          backgroundColor: background,
          border: wrapBorderType,
          borderWidth: wrapBorderWidth + "px",
          borderRadius: wrapBorderRadius + "px",
          borderColor: wrapBorderColor,
          paddingTop: wrapPaddingT,
          paddingRight: wrapPaddingR,
          paddingBottom: wrapPaddingB,
          paddingLeft: wrapPaddingL,
          marginTop: wrapMarginT,
          marginRight: wrapMarginR,
          marginBottom: wrapMarginB,
          marginLeft: wrapMarginL
        }
      },
      wp.element.createElement(
        "a",
        {
          className: className + "__link",
          href: urlCheck && link,
          target: target ? "_blank" : "_self"
        },
        wp.element.createElement("i", {
          className: className + " " + selectedIcon + " " + className + "__" + hoverEffect,
          style: {
            color: iconColor,
            backgroundColor: iconBack,
            fontSize: iconSize,
            paddingTop: paddingT,
            paddingRight: paddingR,
            paddingBottom: paddingB,
            paddingLeft: paddingL,
            marginTop: marginT,
            marginRight: marginR,
            marginBottom: marginB,
            marginLeft: marginL,
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius + "px",
            borderColor: borderColor,
            textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
          }
        })
      )
    );
  }
}];

/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__save__ = __webpack_require__(225);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__deprecated__ = __webpack_require__(226);






var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var iconBoxAttrs = {
    id: {
        type: "string"
    },
    align: {
        type: "string",
        default: "center"
    },
    iconImage: {
        type: "string",
        default: "icon"
    },
    iconImgId: {
        type: "string"
    },
    iconImgUrl: {
        type: "string"
    },
    hoverEffect: {
        type: "string",
        default: "none"
    },
    iconChecked: {
        type: "boolean",
        default: true
    },
    iconPos: {
        type: "string",
        default: "block"
    },
    iconHPos: {
        type: "string",
        default: "before"
    },
    iconVPos: {
        type: "string",
        default: "center"
    },
    iconSize: {
        type: "number"
    },
    iconRadius: {
        type: "number"
    },
    iconColor: {
        type: "string"
    },
    iconBackColor: {
        type: "string"
    },
    selectedIcon: {
        type: "string",
        default: "dashicons dashicons-admin-site"
    },
    titleChecked: {
        type: "boolean",
        default: true
    },
    titleText: {
        type: "array",
        source: "children",
        selector: ".premium-icon-box__title",
        default: __("Awesome Title")
    },
    titleTag: {
        type: "string",
        default: "H2"
    },
    titleFont: {
        type: "string"
    },
    titleColor: {
        type: "string"
    },
    titleSize: {
        type: "number"
    },
    titleLine: {
        type: "number"
    },
    titleLetter: {
        type: "number"
    },
    titleStyle: {
        type: "string"
    },
    titleUpper: {
        type: "boolean"
    },
    titleWeight: {
        type: "number",
        default: 500
    },
    titleShadowColor: {
        type: "string"
    },
    titleShadowBlur: {
        type: "number",
        default: "0"
    },
    titleShadowHorizontal: {
        type: "number",
        default: "0"
    },
    titleShadowVertical: {
        type: "number",
        default: "0"
    },
    titleMarginT: {
        type: "number"
    },
    titleMarginB: {
        type: "number"
    },
    descText: {
        type: "array",
        source: "children",
        selector: ".premium-icon-box__desc",
        default: "Donec id elit non mi porta gravida at eget metus. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Cras mattis consectetur purus sit amet fermentum. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus."
    },
    descChecked: {
        type: "boolean",
        default: true
    },
    descFont: {
        type: "string"
    },
    descColor: {
        type: "string"
    },
    descSize: {
        type: "number"
    },
    descLine: {
        type: "number"
    },
    descWeight: {
        type: "number",
        default: 500
    },
    descMarginT: {
        type: "number"
    },
    descMarginB: {
        type: "number"
    },
    btnChecked: {
        type: "boolean",
        default: true
    },
    btnEffect: {
        type: "string",
        default: "none"
    },
    effectDir: {
        type: "string",
        default: "top"
    },
    btnTarget: {
        type: "boolean",
        default: false
    },
    btnText: {
        type: "array",
        source: "children",
        selector: ".premium-icon-box__btn",
        default: __("Click Here")
    },
    btnLink: {
        type: "string",
        source: "attribute",
        attribute: "href",
        selector: ".premium-icon-box__btn"
    },
    btnColor: {
        type: "string"
    },
    btnHoverColor: {
        type: "string"
    },
    btnBack: {
        type: "string"
    },
    btnHoverBack: {
        type: "string"
    },
    btnHoverBorder: {
        type: "string"
    },
    btnSize: {
        type: "number"
    },
    btnLine: {
        type: "number"
    },
    btnLetter: {
        type: "number"
    },
    btnStyle: {
        type: "string"
    },
    btnUpper: {
        type: "boolean"
    },
    btnWeight: {
        type: "number",
        default: 500
    },
    btnBorderType: {
        type: "string",
        default: "none"
    },
    btnBorderWidth: {
        type: "number",
        default: "1"
    },
    btnBorderRadius: {
        type: "number"
    },
    btnBorderColor: {
        type: "string"
    },
    btnPadding: {
        type: "number"
    },
    btnPaddingU: {
        type: "string"
    },
    btnMarginT: {
        type: "number"
    },
    btnMarginB: {
        type: "number"
    },
    btnShadowColor: {
        type: "string"
    },
    btnShadowBlur: {
        type: "number",
        default: "0"
    },
    btnShadowHorizontal: {
        type: "number",
        default: "0"
    },
    btnShadowVertical: {
        type: "number",
        default: "0"
    },
    btnShadowPosition: {
        type: "string",
        default: ""
    },
    imageID: {
        type: "string"
    },
    imageURL: {
        type: "string"
    },
    backColor: {
        type: "string"
    },
    backgroundRepeat: {
        type: "string",
        default: "no-repeat"
    },
    backgroundPosition: {
        type: "string",
        default: "top center"
    },
    backgroundSize: {
        type: "string",
        default: "auto"
    },
    fixed: {
        type: "boolean",
        default: false
    },
    borderType: {
        type: "string",
        default: "none"
    },
    borderWidth: {
        type: "number",
        default: "1"
    },
    borderRadius: {
        type: "number"
    },
    borderColor: {
        type: "string"
    },
    marginT: {
        type: "number"
    },
    marginR: {
        type: "number"
    },
    marginB: {
        type: "number"
    },
    marginL: {
        type: "number"
    },
    paddingT: {
        type: "number"
    },
    paddingR: {
        type: "number"
    },
    paddingB: {
        type: "number"
    },
    paddingL: {
        type: "number"
    },
    paddingU: {
        type: "string"
    },
    shadowColor: {
        type: "string"
    },
    shadowBlur: {
        type: "number",
        default: "0"
    },
    shadowHorizontal: {
        type: "number",
        default: "0"
    },
    shadowVertical: {
        type: "number",
        default: "0"
    },
    shadowPosition: {
        type: "string",
        default: ""
    },
    hoverShadowColor: {
        type: "string"
    },
    hoverShadowBlur: {
        type: "number"
    },
    hoverShadowHorizontal: {
        type: "number"
    },
    hoverShadowVertical: {
        type: "number"
    },
    hoverShadowPosition: {
        type: "string"
    }
};

registerBlockType("premium/icon-box", {
    title: __("Icon Box"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "icon-box" }),
    category: "premium-blocks",
    attributes: iconBoxAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["j" /* iconBox */]
    },
    example: {},
    edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_3__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_4__deprecated__["a" /* default */]
});

/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_icons_list__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_padding__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_premium_margin__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_premium_background__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_premium_size_units__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_premium_fonts__ = __webpack_require__(21);














var __ = wp.i18n.__;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    IconButton = _wp$components.IconButton,
    Toolbar = _wp$components.Toolbar,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;
var Fragment = wp.element.Fragment;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    InspectorControls = _wp$editor.InspectorControls,
    RichText = _wp$editor.RichText,
    ColorPalette = _wp$editor.ColorPalette,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    MediaUpload = _wp$editor.MediaUpload,
    URLInput = _wp$editor.URLInput;


var edit = function edit(props) {
  var isSelected = props.isSelected,
      setAttributes = props.setAttributes,
      className = props.className,
      blockId = props.clientId;
  var _props$attributes = props.attributes,
      id = _props$attributes.id,
      align = _props$attributes.align,
      iconChecked = _props$attributes.iconChecked,
      iconImage = _props$attributes.iconImage,
      iconImgId = _props$attributes.iconImgId,
      iconImgUrl = _props$attributes.iconImgUrl,
      iconType = _props$attributes.iconType,
      selectedIcon = _props$attributes.selectedIcon,
      hoverEffect = _props$attributes.hoverEffect,
      iconPos = _props$attributes.iconPos,
      iconHPos = _props$attributes.iconHPos,
      iconVPos = _props$attributes.iconVPos,
      iconSize = _props$attributes.iconSize,
      iconRadius = _props$attributes.iconRadius,
      iconColor = _props$attributes.iconColor,
      iconBackColor = _props$attributes.iconBackColor,
      titleChecked = _props$attributes.titleChecked,
      titleText = _props$attributes.titleText,
      titleTag = _props$attributes.titleTag,
      titleColor = _props$attributes.titleColor,
      titleFont = _props$attributes.titleFont,
      titleSize = _props$attributes.titleSize,
      titleLine = _props$attributes.titleLine,
      titleLetter = _props$attributes.titleLetter,
      titleStyle = _props$attributes.titleStyle,
      titleUpper = _props$attributes.titleUpper,
      titleWeight = _props$attributes.titleWeight,
      titleShadowBlur = _props$attributes.titleShadowBlur,
      titleShadowColor = _props$attributes.titleShadowColor,
      titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
      titleShadowVertical = _props$attributes.titleShadowVertical,
      titleMarginT = _props$attributes.titleMarginT,
      titleMarginB = _props$attributes.titleMarginB,
      descChecked = _props$attributes.descChecked,
      descText = _props$attributes.descText,
      descColor = _props$attributes.descColor,
      descFont = _props$attributes.descFont,
      descSize = _props$attributes.descSize,
      descLine = _props$attributes.descLine,
      descWeight = _props$attributes.descWeight,
      descMarginT = _props$attributes.descMarginT,
      descMarginB = _props$attributes.descMarginB,
      btnChecked = _props$attributes.btnChecked,
      btnEffect = _props$attributes.btnEffect,
      effectDir = _props$attributes.effectDir,
      btnTarget = _props$attributes.btnTarget,
      btnText = _props$attributes.btnText,
      btnLink = _props$attributes.btnLink,
      btnSize = _props$attributes.btnSize,
      btnUpper = _props$attributes.btnUpper,
      btnWeight = _props$attributes.btnWeight,
      btnLetter = _props$attributes.btnLetter,
      btnColor = _props$attributes.btnColor,
      btnStyle = _props$attributes.btnStyle,
      btnHoverColor = _props$attributes.btnHoverColor,
      btnBack = _props$attributes.btnBack,
      btnHoverBack = _props$attributes.btnHoverBack,
      btnHoverBorder = _props$attributes.btnHoverBorder,
      btnBorderColor = _props$attributes.btnBorderColor,
      btnBorderWidth = _props$attributes.btnBorderWidth,
      btnBorderRadius = _props$attributes.btnBorderRadius,
      btnBorderType = _props$attributes.btnBorderType,
      btnPadding = _props$attributes.btnPadding,
      btnPaddingU = _props$attributes.btnPaddingU,
      btnMarginT = _props$attributes.btnMarginT,
      btnMarginB = _props$attributes.btnMarginB,
      btnShadowBlur = _props$attributes.btnShadowBlur,
      btnShadowColor = _props$attributes.btnShadowColor,
      btnShadowHorizontal = _props$attributes.btnShadowHorizontal,
      btnShadowVertical = _props$attributes.btnShadowVertical,
      btnShadowPosition = _props$attributes.btnShadowPosition,
      imageID = _props$attributes.imageID,
      imageURL = _props$attributes.imageURL,
      fixed = _props$attributes.fixed,
      backColor = _props$attributes.backColor,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      marginT = _props$attributes.marginT,
      marginR = _props$attributes.marginR,
      marginB = _props$attributes.marginB,
      marginL = _props$attributes.marginL,
      paddingT = _props$attributes.paddingT,
      paddingR = _props$attributes.paddingR,
      paddingB = _props$attributes.paddingB,
      paddingL = _props$attributes.paddingL,
      paddingU = _props$attributes.paddingU,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      shadowPosition = _props$attributes.shadowPosition,
      hoverShadowBlur = _props$attributes.hoverShadowBlur,
      hoverShadowColor = _props$attributes.hoverShadowColor,
      hoverShadowHorizontal = _props$attributes.hoverShadowHorizontal,
      hoverShadowVertical = _props$attributes.hoverShadowVertical,
      hoverShadowPosition = _props$attributes.hoverShadowPosition;


  setAttributes({ id: blockId });

  var imgIcon = [{
    label: __("Icon"),
    value: "icon"
  }, {
    label: __("Image"),
    value: "image"
  }];

  var ALIGNS = ["left", "center", "right"];

  var EFFECTS = [{
    value: "none",
    label: __("None")
  }, {
    value: "pulse",
    label: __("Pulse")
  }, {
    value: "rotate",
    label: __("Rotate")
  }, {
    value: "drotate",
    label: __("3D Rotate")
  }, {
    value: "buzz",
    label: __("Buzz")
  }, {
    value: "drop",
    label: __("Drop Shadow")
  }, {
    value: "wobble",
    label: __("Wobble")
  }];

  var BTN_EFFECTS = [{
    value: "none",
    label: __("None")
  }, {
    value: "slide",
    label: __("Slide")
  }];

  var DIRECTION = [{
    value: "top",
    label: __("Top to Bottom")
  }, {
    value: "bottom",
    label: __("Bottom to Top")
  }, {
    value: "left",
    label: __("Left to Right")
  }, {
    value: "right",
    label: __("Right to Left")
  }];

  var ICON_POS = [{
    label: __("Inline"),
    value: "inline"
  }, {
    label: __("Block"),
    value: "block"
  }];

  var ICON_HPOS = [{
    label: __("Before"),
    value: "before"
  }, {
    label: __("After"),
    value: "after"
  }];

  var ICON_VPOS = [{
    label: __("Top"),
    value: "top"
  }, {
    label: __("Middle"),
    value: "center"
  }, {
    label: __("Bottom"),
    value: "bottom"
  }];

  var addFontToHead = function addFontToHead(fontFamily) {
    var head = document.head;
    var link = document.createElement("link");
    link.type = "text/css";
    link.rel = "stylesheet";
    link.href = "https://fonts.googleapis.com/css?family=" + fontFamily.replace(/\s+/g, "+") + ":" + "regular";
    head.appendChild(link);
  };

  var onChangeTitleFamily = function onChangeTitleFamily(fontFamily) {
    setAttributes({ titleFont: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var onChangeDescFamily = function onChangeDescFamily(fontFamily) {
    setAttributes({ descFont: fontFamily });
    if (!fontFamily) {
      return;
    }

    addFontToHead(fontFamily);
  };

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-icon-box");

  return [isSelected && wp.element.createElement(
    BlockControls,
    { key: "controls" },
    wp.element.createElement(AlignmentToolbar, {
      value: align,
      onChange: function onChange(newAlign) {
        return setAttributes({ align: newAlign });
      }
    })
  ), isSelected && wp.element.createElement(
    InspectorControls,
    { key: "inspector" },
    wp.element.createElement(
      PanelBody,
      {
        title: __("Display Options"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(ToggleControl, {
        label: __("Icon"),
        checked: iconChecked,
        onChange: function onChange(newValue) {
          return setAttributes({ iconChecked: newValue });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Title"),
        checked: titleChecked,
        onChange: function onChange(newValue) {
          return setAttributes({ titleChecked: newValue });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Description"),
        checked: descChecked,
        onChange: function onChange(newValue) {
          return setAttributes({ descChecked: newValue });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Button"),
        checked: btnChecked,
        onChange: function onChange(newValue) {
          return setAttributes({ btnChecked: newValue });
        }
      })
    ),
    iconChecked && wp.element.createElement(
      PanelBody,
      {
        title: __("Icon"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(SelectControl, {
        label: __("Icon Position"),
        options: ICON_POS,
        value: iconPos,
        onChange: function onChange(newValue) {
          return setAttributes({ iconPos: newValue });
        }
      }),
      "inline" === iconPos && wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(SelectControl, {
          label: __("Horizontal Position"),
          options: ICON_HPOS,
          value: iconHPos,
          onChange: function onChange(newValue) {
            return setAttributes({ iconHPos: newValue });
          }
        }),
        wp.element.createElement(SelectControl, {
          label: __("Vertical Position"),
          options: ICON_VPOS,
          value: iconVPos,
          onChange: function onChange(newValue) {
            return setAttributes({ iconVPos: newValue });
          }
        })
      ),
      wp.element.createElement(SelectControl, {
        label: __("Icon Type"),
        options: imgIcon,
        value: iconImage,
        onChange: function onChange(newType) {
          return setAttributes({ iconImage: newType });
        }
      }),
      "icon" === iconImage && wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          { className: "premium-editor-paragraph" },
          __("Select Icon")
        ),
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker___default.a, {
          icons: __WEBPACK_IMPORTED_MODULE_4__components_premium_icons_list__["a" /* default */],
          onChange: function onChange(newIcon) {
            return setAttributes({ selectedIcon: newIcon });
          },
          value: selectedIcon,
          isMulti: false,
          appendTo: "body",
          noSelectedPlaceholder: __("Select Icon")
        }),
        wp.element.createElement(
          Fragment,
          null,
          wp.element.createElement(
            "p",
            null,
            __("Icon Color")
          ),
          wp.element.createElement(ColorPalette, {
            value: iconColor,
            onChange: function onChange(newValue) {
              return setAttributes({
                iconColor: newValue || "transparent"
              });
            },
            allowReset: true
          }),
          wp.element.createElement(
            "p",
            null,
            __("Background Color")
          ),
          wp.element.createElement(ColorPalette, {
            value: iconBackColor,
            onChange: function onChange(newValue) {
              return setAttributes({
                iconBackColor: newValue
              });
            },
            allowReset: true
          })
        )
      ),
      "image" === iconImage && wp.element.createElement(
        Fragment,
        null,
        iconImgUrl && wp.element.createElement("img", { src: iconImgUrl, width: "100%", height: "auto" }),
        wp.element.createElement(MediaUpload, {
          allowedTypes: ["image"],
          onSelect: function onSelect(media) {
            setAttributes({
              iconImgId: media.id,
              iconImgUrl: "undefined" === typeof media.sizes.thumbnail ? media.url : media.sizes.thumbnail.url
            });
          },
          type: "image",
          value: iconImgId,
          render: function render(_ref) {
            var open = _ref.open;
            return wp.element.createElement(
              IconButton,
              {
                className: "premium-media-uplpad-btn",
                label: __("Change Image"),
                icon: "edit",
                onClick: open
              },
              __("Change Image")
            );
          }
        }),
        wp.element.createElement(RangeControl, {
          label: __("Border Radius (PX)"),
          value: iconRadius,
          onChange: function onChange(newValue) {
            return setAttributes({ iconRadius: newValue || 0 });
          }
        })
      ),
      wp.element.createElement(SelectControl, {
        label: __("Hover Effect"),
        options: EFFECTS,
        value: hoverEffect,
        onChange: function onChange(newEffect) {
          return setAttributes({ hoverEffect: newEffect });
        }
      }),
      wp.element.createElement(RangeControl, {
        label: __("Size (PX)"),
        value: iconSize,
        min: "1",
        max: "200",
        onChange: function onChange(newValue) {
          return setAttributes({ iconSize: newValue || 30 });
        }
      })
    ),
    titleChecked && wp.element.createElement(
      PanelBody,
      {
        title: __("Title"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        "p",
        null,
        __("Title")
      ),
      wp.element.createElement(Toolbar, {
        controls: "123456".split("").map(function (tag) {
          return {
            icon: "heading",
            isActive: "H" + tag === titleTag,
            onClick: function onClick() {
              return setAttributes({ titleTag: "H" + tag });
            },
            subscript: tag
          };
        })
      }),
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: titleFont,
        options: __WEBPACK_IMPORTED_MODULE_12__components_premium_fonts__["a" /* default */],
        onChange: onChangeTitleFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "style", "upper", "spacing", "line"],
        size: titleSize,
        weight: titleWeight,
        style: titleStyle,
        spacing: titleLetter,
        line: titleLine,
        upper: titleUpper,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ titleSize: newSize });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ titleWeight: newWeight || 500 });
        },
        onChangeStyle: function onChangeStyle(newStyle) {
          return setAttributes({ titleStyle: newStyle });
        },
        onChangeSpacing: function onChangeSpacing(newValue) {
          return setAttributes({ titleLetter: newValue });
        },
        onChangeLine: function onChangeLine(newValue) {
          return setAttributes({ titleLine: newValue });
        },
        onChangeUpper: function onChangeUpper(check) {
          return setAttributes({ titleUpper: check });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Text Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: titleColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              titleColor: newValue || "transparent"
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_premium_text_shadow__["a" /* default */], {
        color: titleShadowColor,
        blur: titleShadowBlur,
        horizontal: titleShadowHorizontal,
        vertical: titleShadowVertical,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            titleShadowColor: newColor.hex || "transparent"
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({ titleShadowBlur: newBlur || 0 });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({ titleShadowHorizontal: newValue || 0 });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({ titleShadowVertical: newValue || 0 });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_premium_margin__["a" /* default */], {
        directions: ["top", "bottom"],
        marginTop: titleMarginT,
        marginBottom: titleMarginB,
        onChangeMarTop: function onChangeMarTop(value) {
          return setAttributes({
            titleMarginT: value || 0
          });
        },
        onChangeMarBottom: function onChangeMarBottom(value) {
          return setAttributes({
            titleMarginB: value || 0
          });
        }
      })
    ),
    descChecked && wp.element.createElement(
      PanelBody,
      {
        title: __("Description"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(SelectControl, {
        label: __("Font Family"),
        value: descFont,
        options: __WEBPACK_IMPORTED_MODULE_12__components_premium_fonts__["a" /* default */],
        onChange: onChangeDescFamily
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "line"],
        size: descSize,
        weight: descWeight,
        line: descLine,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ descSize: newSize || 20 });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ descWeight: newWeight || 500 });
        },
        onChangeLine: function onChangeLine(newValue) {
          return setAttributes({ descLine: newValue });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Text Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: descColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              descColor: newValue || "transparent"
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_premium_margin__["a" /* default */], {
        directions: ["top", "bottom"],
        marginTop: descMarginT,
        marginBottom: descMarginB,
        onChangeMarTop: function onChangeMarTop(value) {
          return setAttributes({
            descMarginT: value || 0
          });
        },
        onChangeMarBottom: function onChangeMarBottom(value) {
          return setAttributes({
            descMarginB: value || 0
          });
        }
      })
    ),
    btnChecked && wp.element.createElement(
      PanelBody,
      {
        title: __("Button"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(SelectControl, {
        options: BTN_EFFECTS,
        label: __("Hover Effect"),
        value: btnEffect,
        onChange: function onChange(newValue) {
          return setAttributes({ btnEffect: newValue });
        }
      }),
      "slide" === btnEffect && wp.element.createElement(SelectControl, {
        options: DIRECTION,
        label: __("Direction"),
        value: effectDir,
        onChange: function onChange(newValue) {
          return setAttributes({ effectDir: newValue });
        }
      }),
      wp.element.createElement(ToggleControl, {
        label: __("Open link in new tab"),
        checked: btnTarget,
        onChange: function onChange(newValue) {
          return setAttributes({ btnTarget: newValue });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "style", "upper", "spacing"],
        size: btnSize,
        weight: btnWeight,
        style: btnStyle,
        spacing: btnLetter,
        upper: btnUpper,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ btnSize: newSize || 20 });
        },
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ btnWeight: newWeight || 500 });
        },
        onChangeStyle: function onChangeStyle(newStyle) {
          return setAttributes({ btnStyle: newStyle });
        },
        onChangeSpacing: function onChangeSpacing(newValue) {
          return setAttributes({ btnLetter: newValue });
        },
        onChangeUpper: function onChangeUpper(check) {
          return setAttributes({ btnUpper: check });
        }
      }),
      wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref2) {
            var isOpen = _ref2.isOpen,
                onToggle = _ref2.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                __("Text Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: btnColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    btnColor: newValue || "#000"
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Text Hover Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: btnHoverColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    btnHoverColor: newValue || "#000"
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Background Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: btnBack,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    btnBack: newValue || "transparent"
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Background Hover Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: btnHoverBack,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    btnHoverBack: newValue
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Border Hover Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: btnHoverBorder,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    btnHoverBorder: newValue || "transparent"
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_border__["a" /* default */], {
        borderType: btnBorderType,
        borderWidth: btnBorderWidth,
        borderColor: btnBorderColor,
        borderRadius: btnBorderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ btnBorderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ btnBorderWidth: newWidth });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({ btnBorderColor: colorValue.hex });
        },
        onChangeRadius: function onChangeRadius(newrRadius) {
          return setAttributes({ btnBorderRadius: newrRadius });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_box_shadow__["a" /* default */], {
        inner: true,
        color: btnShadowColor,
        blur: btnShadowBlur,
        horizontal: btnShadowHorizontal,
        vertical: btnShadowVertical,
        position: btnShadowPosition,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            btnShadowColor: newColor.hex || "transparent"
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            btnShadowBlur: newBlur || 0
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            btnShadowHorizontal: newValue || 0
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            btnShadowVertical: newValue || 0
          });
        },
        onChangePosition: function onChangePosition(newValue) {
          return setAttributes({
            btnShadowPosition: newValue || 0
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_11__components_premium_size_units__["a" /* default */], {
        onChangeSizeUnit: function onChangeSizeUnit(newValue) {
          return setAttributes({ btnPaddingU: newValue });
        }
      }),
      wp.element.createElement(RangeControl, {
        label: __("Padding"),
        value: btnPadding,
        onChange: function onChange(newValue) {
          return setAttributes({ btnPadding: newValue });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_premium_margin__["a" /* default */], {
        directions: ["top", "bottom"],
        marginTop: btnMarginT,
        marginBottom: btnMarginB,
        onChangeMarTop: function onChangeMarTop(value) {
          return setAttributes({
            btnMarginT: value || 0
          });
        },
        onChangeMarBottom: function onChangeMarBottom(value) {
          return setAttributes({
            btnMarginB: value || 0
          });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Container"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Background Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: backColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              backColor: newValue || "transparent"
            });
          },
          allowReset: true
        })
      ),
      imageURL && wp.element.createElement("img", { src: imageURL, width: "100%", height: "auto" }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_10__components_premium_background__["a" /* default */], {
        imageID: imageID,
        imageURL: imageURL,
        backgroundPosition: backgroundPosition,
        backgroundRepeat: backgroundRepeat,
        backgroundSize: backgroundSize,
        fixed: fixed,
        onSelectMedia: function onSelectMedia(media) {
          setAttributes({
            imageID: media.id,
            imageURL: media.url
          });
        },
        onRemoveImage: function onRemoveImage(value) {
          return setAttributes({ imageURL: "", imageID: "" });
        },
        onChangeBackPos: function onChangeBackPos(newValue) {
          return setAttributes({ backgroundPosition: newValue });
        },
        onchangeBackRepeat: function onchangeBackRepeat(newValue) {
          return setAttributes({ backgroundRepeat: newValue });
        },
        onChangeBackSize: function onChangeBackSize(newValue) {
          return setAttributes({ backgroundSize: newValue });
        },
        onChangeFixed: function onChangeFixed(check) {
          return setAttributes({ fixed: check });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_border__["a" /* default */], {
        borderType: borderType,
        borderWidth: borderWidth,
        borderColor: borderColor,
        borderRadius: borderRadius,
        onChangeType: function onChangeType(newType) {
          return setAttributes({ borderType: newType });
        },
        onChangeWidth: function onChangeWidth(newWidth) {
          return setAttributes({ borderWidth: newWidth });
        },
        onChangeColor: function onChangeColor(colorValue) {
          return setAttributes({ borderColor: colorValue.hex });
        },
        onChangeRadius: function onChangeRadius(newrRadius) {
          return setAttributes({ borderRadius: newrRadius });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_box_shadow__["a" /* default */], {
        inner: true,
        color: shadowColor,
        blur: shadowBlur,
        horizontal: shadowHorizontal,
        vertical: shadowVertical,
        position: shadowPosition,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            shadowColor: newColor.hex || "transparent"
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            shadowBlur: newBlur || 0
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            shadowHorizontal: newValue || 0
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            shadowVertical: newValue || 0
          });
        },
        onChangePosition: function onChangePosition(newValue) {
          return setAttributes({
            shadowPosition: newValue
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_box_shadow__["a" /* default */], {
        inner: true,
        label: __("Hover Box Shadow"),
        color: hoverShadowColor,
        blur: hoverShadowBlur,
        horizontal: hoverShadowHorizontal,
        vertical: hoverShadowVertical,
        position: hoverShadowPosition,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            hoverShadowColor: newColor.hex
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            hoverShadowBlur: newBlur
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            hoverShadowHorizontal: newValue
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            hoverShadowVertical: newValue
          });
        },
        onChangePosition: function onChangePosition(newValue) {
          return setAttributes({
            hoverShadowPosition: newValue
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_premium_margin__["a" /* default */], {
        directions: ["all"],
        marginTop: marginT,
        marginRight: marginR,
        marginBottom: marginB,
        marginLeft: marginL,
        onChangeMarTop: function onChangeMarTop(value) {
          return setAttributes({
            marginT: value || 0
          });
        },
        onChangeMarRight: function onChangeMarRight(value) {
          return setAttributes({
            marginR: value || 0
          });
        },
        onChangeMarBottom: function onChangeMarBottom(value) {
          return setAttributes({
            marginB: value || 0
          });
        },
        onChangeMarLeft: function onChangeMarLeft(value) {
          return setAttributes({
            marginL: value || 0
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_padding__["a" /* default */], {
        paddingTop: paddingT,
        paddingRight: paddingR,
        paddingBottom: paddingB,
        paddingLeft: paddingL,
        showUnits: true,
        onChangePadTop: function onChangePadTop(value) {
          return setAttributes({
            paddingT: value || 0
          });
        },
        onChangePadRight: function onChangePadRight(value) {
          return setAttributes({
            paddingR: value || 0
          });
        },
        onChangePadBottom: function onChangePadBottom(value) {
          return setAttributes({
            paddingB: value || 0
          });
        },
        onChangePadLeft: function onChangePadLeft(value) {
          return setAttributes({
            paddingL: value || 0
          });
        },
        selectedUnit: paddingU,
        onChangePadSizeUnit: function onChangePadSizeUnit(newvalue) {
          return setAttributes({ paddingU: newvalue });
        }
      })
    )
  ), wp.element.createElement(
    "div",
    {
      id: mainClasses + "-" + id,
      className: mainClasses + " premium-icon-box-" + iconPos + " premium-icon-box-" + iconHPos,
      style: {
        textAlign: align,
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius + "px",
        borderColor: borderColor,
        marginTop: marginT,
        marginRight: marginR,
        marginBottom: marginB,
        marginLeft: marginL,
        paddingTop: paddingT + paddingU,
        paddingRight: paddingR + paddingU,
        paddingBottom: paddingB + paddingU,
        paddingLeft: paddingL + paddingU,
        boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
        backgroundColor: backColor,
        backgroundImage: "url('" + imageURL + "')",
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset"
      }
    },
    btnChecked && btnText && wp.element.createElement("style", {
      dangerouslySetInnerHTML: {
        __html: ["#premium-icon-box-" + id + ":hover {", "box-shadow: " + hoverShadowHorizontal + "px " + hoverShadowVertical + "px " + hoverShadowBlur + "px " + hoverShadowColor + " " + hoverShadowPosition + " !important", "}", "#premium-icon-box-" + id + " .premium-icon-box__btn:hover {", "color: " + btnHoverColor + " !important;", "border-color: " + btnHoverBorder + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__none .premium-icon-box__btn:hover {", "background-color: " + btnHoverBack + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__slide .premium-button::before {", "background-color: " + btnHoverBack + " !important;", "}"].join("\n")
      }
    }),
    iconChecked && wp.element.createElement(
      "div",
      {
        className: "premium-icon-box__icon_wrap premium-icon-box__icon_" + iconVPos
      },
      "icon" === iconImage && wp.element.createElement(
        Fragment,
        null,
        iconType === "fa" && 1 != __WEBPACK_IMPORTED_MODULE_1__assets_js_settings__["a" /* FontAwesomeEnabled */] && wp.element.createElement(
          "p",
          { className: "premium-icon-box__alert" },
          __("Please Enable Font Awesome Icons from Plugin settings")
        ),
        (iconType === "dash" || 1 == __WEBPACK_IMPORTED_MODULE_1__assets_js_settings__["a" /* FontAwesomeEnabled */]) && wp.element.createElement("i", {
          className: selectedIcon + " premium-icon-box__icon premium-icon__" + hoverEffect,
          style: {
            color: iconColor,
            backgroundColor: iconBackColor,
            fontSize: iconSize
          }
        })
      ),
      "image" === iconImage && iconImgUrl && wp.element.createElement("img", {
        className: "premium-icon-box__icon premium-icon__" + hoverEffect,
        src: "" + iconImgUrl,
        alt: "Image Icon",
        style: {
          width: iconSize + "px",
          height: iconSize + "px",
          borderRadius: iconRadius + "px"
        }
      })
    ),
    wp.element.createElement(
      "div",
      { className: "premium-icon-box__content_wrap" },
      titleChecked && titleText && wp.element.createElement(
        "div",
        {
          className: "premium-icon-box__title_wrap",
          style: {
            marginTop: titleMarginT,
            marginBottom: titleMarginB
          }
        },
        wp.element.createElement(RichText, {
          tagName: titleTag.toLowerCase(),
          className: "premium-icon-box__title",
          onChange: function onChange(newText) {
            return setAttributes({ titleText: newText });
          },
          placeholder: __("Awesome Title"),
          value: titleText,
          style: {
            color: titleColor,
            fontSize: titleSize + "px",
            fontFamily: titleFont,
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
            lineHeight: titleLine + "px"
          },
          keepPlaceholderOnFocus: true
        })
      ),
      descChecked && descText && wp.element.createElement(
        "div",
        {
          className: "premium-icon-box__desc_wrap",
          style: {
            marginTop: descMarginT,
            marginBottom: descMarginB
          }
        },
        wp.element.createElement(RichText, {
          tagName: "p",
          className: "premium-icon-box__desc",
          value: descText,
          isSelected: false,
          placeholder: "Donec id elit non mi porta gravida at eget metus. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Cras mattis consectetur purus sit amet fermentum. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus.",
          onChange: function onChange(newText) {
            return setAttributes({ descText: newText });
          },
          style: {
            color: descColor,
            fontSize: descSize + "px",
            fontFamily: descFont,
            lineHeight: descLine + "px",
            fontWeight: descWeight
          },
          keepPlaceholderOnFocus: true
        })
      ),
      btnChecked && btnText && wp.element.createElement(
        "div",
        {
          className: "premium-icon-box__btn_wrap premium-button__" + btnEffect + " premium-button__" + effectDir,
          style: {
            marginTop: btnMarginT,
            marginBottom: btnMarginB
          }
        },
        wp.element.createElement(RichText, {
          tagName: "a",
          className: "premium-icon-box__btn premium-button",
          onChange: function onChange(newText) {
            return setAttributes({ btnText: newText });
          },
          placeholder: __("Click Here"),
          value: btnText,
          style: {
            color: btnColor,
            backgroundColor: btnBack,
            fontSize: btnSize + "px",
            letterSpacing: btnLetter + "px",
            textTransform: btnUpper ? "uppercase" : "none",
            fontStyle: btnStyle,
            fontWeight: btnWeight,
            border: btnBorderType,
            borderWidth: btnBorderWidth + "px",
            borderRadius: btnBorderRadius + "px",
            borderColor: btnBorderColor,
            padding: btnPadding + btnPaddingU,
            boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition
          },
          keepPlaceholderOnFocus: true
        }),
        isSelected && wp.element.createElement(URLInput, {
          value: btnLink,
          onChange: function onChange(newLink) {
            return setAttributes({ btnLink: newLink });
          }
        })
      )
    )
  )];
};

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var RichText = wp.editor.RichText;


var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      id = _props$attributes.id,
      align = _props$attributes.align,
      iconImage = _props$attributes.iconImage,
      iconImgUrl = _props$attributes.iconImgUrl,
      iconRadius = _props$attributes.iconRadius,
      selectedIcon = _props$attributes.selectedIcon,
      iconChecked = _props$attributes.iconChecked,
      hoverEffect = _props$attributes.hoverEffect,
      iconPos = _props$attributes.iconPos,
      iconHPos = _props$attributes.iconHPos,
      iconVPos = _props$attributes.iconVPos,
      iconSize = _props$attributes.iconSize,
      iconColor = _props$attributes.iconColor,
      iconBackColor = _props$attributes.iconBackColor,
      titleChecked = _props$attributes.titleChecked,
      titleText = _props$attributes.titleText,
      titleTag = _props$attributes.titleTag,
      titleColor = _props$attributes.titleColor,
      titleFont = _props$attributes.titleFont,
      titleSize = _props$attributes.titleSize,
      titleLine = _props$attributes.titleLine,
      titleLetter = _props$attributes.titleLetter,
      titleStyle = _props$attributes.titleStyle,
      titleUpper = _props$attributes.titleUpper,
      titleWeight = _props$attributes.titleWeight,
      titleShadowBlur = _props$attributes.titleShadowBlur,
      titleShadowColor = _props$attributes.titleShadowColor,
      titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
      titleShadowVertical = _props$attributes.titleShadowVertical,
      titleMarginT = _props$attributes.titleMarginT,
      titleMarginB = _props$attributes.titleMarginB,
      descChecked = _props$attributes.descChecked,
      descText = _props$attributes.descText,
      descColor = _props$attributes.descColor,
      descFont = _props$attributes.descFont,
      descSize = _props$attributes.descSize,
      descLine = _props$attributes.descLine,
      descWeight = _props$attributes.descWeight,
      descMarginT = _props$attributes.descMarginT,
      descMarginB = _props$attributes.descMarginB,
      btnChecked = _props$attributes.btnChecked,
      btnEffect = _props$attributes.btnEffect,
      effectDir = _props$attributes.effectDir,
      btnText = _props$attributes.btnText,
      btnTarget = _props$attributes.btnTarget,
      btnLink = _props$attributes.btnLink,
      btnSize = _props$attributes.btnSize,
      btnStyle = _props$attributes.btnStyle,
      btnUpper = _props$attributes.btnUpper,
      btnWeight = _props$attributes.btnWeight,
      btnLetter = _props$attributes.btnLetter,
      btnColor = _props$attributes.btnColor,
      btnHoverColor = _props$attributes.btnHoverColor,
      btnHoverBorder = _props$attributes.btnHoverBorder,
      btnBack = _props$attributes.btnBack,
      btnHoverBack = _props$attributes.btnHoverBack,
      btnBorderWidth = _props$attributes.btnBorderWidth,
      btnBorderRadius = _props$attributes.btnBorderRadius,
      btnBorderColor = _props$attributes.btnBorderColor,
      btnBorderType = _props$attributes.btnBorderType,
      btnPadding = _props$attributes.btnPadding,
      btnPaddingU = _props$attributes.btnPaddingU,
      btnMarginT = _props$attributes.btnMarginT,
      btnMarginB = _props$attributes.btnMarginB,
      btnShadowBlur = _props$attributes.btnShadowBlur,
      btnShadowColor = _props$attributes.btnShadowColor,
      btnShadowHorizontal = _props$attributes.btnShadowHorizontal,
      btnShadowVertical = _props$attributes.btnShadowVertical,
      btnShadowPosition = _props$attributes.btnShadowPosition,
      backColor = _props$attributes.backColor,
      imageURL = _props$attributes.imageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      marginT = _props$attributes.marginT,
      marginR = _props$attributes.marginR,
      marginB = _props$attributes.marginB,
      marginL = _props$attributes.marginL,
      paddingT = _props$attributes.paddingT,
      paddingR = _props$attributes.paddingR,
      paddingB = _props$attributes.paddingB,
      paddingL = _props$attributes.paddingL,
      paddingU = _props$attributes.paddingU,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      shadowPosition = _props$attributes.shadowPosition,
      hoverShadowBlur = _props$attributes.hoverShadowBlur,
      hoverShadowColor = _props$attributes.hoverShadowColor,
      hoverShadowHorizontal = _props$attributes.hoverShadowHorizontal,
      hoverShadowVertical = _props$attributes.hoverShadowVertical,
      hoverShadowPosition = _props$attributes.hoverShadowPosition;


  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-icon-box');

  return wp.element.createElement(
    'div',
    {
      id: 'premium-icon-box-' + id,
      className: mainClasses + ' premium-icon-box-' + iconPos + ' premium-icon-box-' + iconHPos,
      style: {
        textAlign: align,
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius + "px",
        borderColor: borderColor,
        marginTop: marginT,
        marginRight: marginR,
        marginBottom: marginB,
        marginLeft: marginL,
        paddingTop: paddingT + paddingU,
        paddingRight: paddingR + paddingU,
        paddingBottom: paddingB + paddingU,
        paddingLeft: paddingL + paddingU,
        boxShadow: shadowHorizontal + 'px ' + shadowVertical + 'px ' + shadowBlur + 'px ' + shadowColor + ' ' + shadowPosition,
        backgroundColor: backColor,
        backgroundImage: 'url(\'' + imageURL + '\')',
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset"
      }
    },
    btnChecked && btnText && wp.element.createElement('style', {
      dangerouslySetInnerHTML: {
        __html: ['#premium-icon-box-' + id + ':hover {', 'box-shadow: ' + hoverShadowHorizontal + 'px ' + hoverShadowVertical + 'px ' + hoverShadowBlur + 'px ' + hoverShadowColor + ' ' + hoverShadowPosition + ' !important', "}", '#premium-icon-box-' + id + ' .premium-icon-box__btn:hover {', 'color: ' + btnHoverColor + ' !important;', 'border-color: ' + btnHoverBorder + ' !important;', "}", '#premium-icon-box-' + id + ' .premium-button__none .premium-icon-box__btn:hover {', 'background-color: ' + btnHoverBack + ' !important;', "}", '#premium-icon-box-' + id + ' .premium-button__slide .premium-button::before {', 'background-color: ' + btnHoverBack + ' !important;', "}"].join("\n")
      }
    }),
    iconChecked && wp.element.createElement(
      'div',
      {
        className: 'premium-icon-box__icon_wrap premium-icon-box__icon_' + iconVPos
      },
      "icon" === iconImage && selectedIcon && wp.element.createElement('i', {
        className: selectedIcon + ' premium-icon-box__icon premium-icon__' + hoverEffect,
        style: {
          color: iconColor,
          backgroundColor: iconBackColor,
          fontSize: iconSize
        }
      }),
      "image" === iconImage && iconImgUrl && wp.element.createElement('img', {
        className: 'premium-icon-box__icon premium-icon__' + hoverEffect,
        src: '' + iconImgUrl,
        alt: 'Image Icon',
        style: {
          width: iconSize + "px",
          height: iconSize + "px",
          borderRadius: iconRadius + "px"
        }
      })
    ),
    wp.element.createElement(
      'div',
      { className: 'premium-icon-box__content_wrap' },
      titleChecked && titleText && wp.element.createElement(
        'div',
        {
          className: 'premium-icon-box__title_wrap',
          style: {
            marginTop: titleMarginT,
            marginBottom: titleMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: 'premium-icon-box__title',
          value: titleText,
          style: {
            color: titleColor,
            fontSize: titleSize + "px",
            fontFamily: titleFont,
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            textShadow: titleShadowHorizontal + 'px ' + titleShadowVertical + 'px ' + titleShadowBlur + 'px ' + titleShadowColor,
            lineHeight: titleLine + "px"
          }
        })
      ),
      descChecked && descText && wp.element.createElement(
        'div',
        {
          className: 'premium-icon-box__desc_wrap',
          style: {
            marginTop: descMarginT,
            marginBottom: descMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: 'p',
          className: 'premium-icon-box__desc',
          value: descText,
          style: {
            color: descColor,
            fontSize: descSize + "px",
            fontFamily: descFont,
            lineHeight: descLine + "px",
            fontWeight: descWeight
          }
        })
      ),
      btnChecked && btnText && wp.element.createElement(
        'div',
        {
          className: 'premium-icon-box__btn_wrap premium-button__' + btnEffect + ' premium-button__' + effectDir,
          style: {
            marginTop: btnMarginT,
            marginBottom: btnMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: 'a',
          className: 'premium-icon-box__btn premium-button',
          href: btnLink,
          rel: 'noopener noreferrer',
          target: btnTarget ? "_blank" : "_self",
          value: btnText,
          style: {
            color: btnColor,
            backgroundColor: btnBack,
            fontSize: btnSize + "px",
            letterSpacing: btnLetter + "px",
            textTransform: btnUpper ? "uppercase" : "none",
            fontStyle: btnStyle,
            fontWeight: btnWeight,
            border: btnBorderType,
            borderWidth: btnBorderWidth + "px",
            borderRadius: btnBorderRadius + "px",
            borderColor: btnBorderColor,
            padding: btnPadding + btnPaddingU,
            boxShadow: btnShadowHorizontal + 'px ' + btnShadowVertical + 'px ' + btnShadowBlur + 'px ' + btnShadowColor + ' ' + btnShadowPosition
          }
        })
      )
    )
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var className = "premium-icon-box";

var __ = wp.i18n.__;
var RichText = wp.editor.RichText;


var deprecated_attributes_1_3_4 = {
  id: {
    type: "string"
  },
  align: {
    type: "string",
    default: "center"
  },
  iconImage: {
    type: "string",
    default: "icon"
  },
  iconImgId: {
    type: "string"
  },
  iconImgUrl: {
    type: "string"
  },
  hoverEffect: {
    type: "string",
    default: "none"
  },
  iconChecked: {
    type: "boolean",
    default: true
  },
  iconSize: {
    type: "number"
  },
  iconRadius: {
    type: "number"
  },
  iconColor: {
    type: "string"
  },
  selectedIcon: {
    type: "string",
    default: "dashicons dashicons-admin-site"
  },
  titleChecked: {
    type: "boolean",
    default: true
  },
  titleText: {
    type: "array",
    source: "children",
    selector: ".premium-icon-box__title",
    default: __("Awesome Title")
  },
  titleTag: {
    type: "string",
    default: "H2"
  },
  titleColor: {
    type: "string"
  },
  titleSize: {
    type: "number"
  },
  titleLine: {
    type: "number"
  },
  titleLetter: {
    type: "number"
  },
  titleStyle: {
    type: "string"
  },
  titleUpper: {
    type: "boolean"
  },
  titleWeight: {
    type: "number",
    default: 500
  },
  titleShadowColor: {
    type: "string"
  },
  titleShadowBlur: {
    type: "number",
    default: "0"
  },
  titleShadowHorizontal: {
    type: "number",
    default: "0"
  },
  titleShadowVertical: {
    type: "number",
    default: "0"
  },
  titleMarginT: {
    type: "number"
  },
  titleMarginB: {
    type: "number"
  },
  descText: {
    type: "array",
    source: "children",
    selector: ".premium-icon-box__desc",
    default: "Donec id elit non mi porta gravida at eget metus. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Cras mattis consectetur purus sit amet fermentum. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus."
  },
  descChecked: {
    type: "boolean",
    default: true
  },
  descColor: {
    type: "string"
  },
  descSize: {
    type: "number"
  },
  descLine: {
    type: "number"
  },
  descWeight: {
    type: "number",
    default: 500
  },
  descMarginT: {
    type: "number"
  },
  descMarginB: {
    type: "number"
  },
  btnChecked: {
    type: "boolean",
    default: true
  },
  btnEffect: {
    type: "string",
    default: "none"
  },
  effectDir: {
    type: "string",
    default: "top"
  },
  btnTarget: {
    type: "boolean",
    default: false
  },
  btnText: {
    type: "array",
    source: "children",
    selector: ".premium-icon-box__btn",
    default: __("Click Here")
  },
  btnLink: {
    type: "string",
    source: "attribute",
    attribute: "href",
    selector: ".premium-icon-box__btn"
  },
  btnColor: {
    type: "string"
  },
  btnHoverColor: {
    type: "string"
  },
  btnBack: {
    type: "string"
  },
  btnHoverBack: {
    type: "string"
  },
  btnHoverBorder: {
    type: "string"
  },
  btnSize: {
    type: "number"
  },
  btnLine: {
    type: "number"
  },
  btnLetter: {
    type: "number"
  },
  btnStyle: {
    type: "string"
  },
  btnUpper: {
    type: "boolean"
  },
  btnWeight: {
    type: "number",
    default: 500
  },
  btnBorderType: {
    type: "string",
    default: "none"
  },
  btnBorderWidth: {
    type: "number",
    default: "1"
  },
  btnBorderRadius: {
    type: "number"
  },
  btnBorderColor: {
    type: "string"
  },
  btnPadding: {
    type: "number"
  },
  btnMarginT: {
    type: "number"
  },
  btnMarginB: {
    type: "number"
  },
  btnShadowColor: {
    type: "string"
  },
  btnShadowBlur: {
    type: "number",
    default: "0"
  },
  btnShadowHorizontal: {
    type: "number",
    default: "0"
  },
  btnShadowVertical: {
    type: "number",
    default: "0"
  },
  btnShadowPosition: {
    type: "string",
    default: ""
  },
  imageID: {
    type: "string"
  },
  imageURL: {
    type: "string"
  },
  backColor: {
    type: "string"
  },
  backgroundRepeat: {
    type: "string",
    default: "no-repeat"
  },
  backgroundPosition: {
    type: "string",
    default: "top center"
  },
  backgroundSize: {
    type: "string",
    default: "auto"
  },
  fixed: {
    type: "boolean",
    default: false
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number"
  },
  borderColor: {
    type: "string"
  },
  marginT: {
    type: "number"
  },
  marginR: {
    type: "number"
  },
  marginB: {
    type: "number"
  },
  marginL: {
    type: "number"
  },
  paddingT: {
    type: "number"
  },
  paddingR: {
    type: "number"
  },
  paddingB: {
    type: "number"
  },
  paddingL: {
    type: "number"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  shadowPosition: {
    type: "string",
    default: ""
  }
};

var deprecated_attributes_1_3_0 = {
  id: {
    type: "string"
  },
  align: {
    type: "string",
    default: "center"
  },
  iconImage: {
    type: "string",
    default: "icon"
  },
  iconImgId: {
    type: "string"
  },
  iconImgUrl: {
    type: "string"
  },
  hoverEffect: {
    type: "string",
    default: "none"
  },
  iconChecked: {
    type: "boolean",
    default: true
  },
  iconSize: {
    type: "number",
    default: 50
  },
  iconRadius: {
    type: "number"
  },
  iconColor: {
    type: "string"
  },
  iconType: {
    type: "string",
    default: "dash"
  },
  selectedIcon: {
    type: "string",
    default: "dashicons dashicons-admin-site"
  },
  titleChecked: {
    type: "boolean",
    default: true
  },
  titleText: {
    type: "array",
    source: "children",
    selector: ".premium-icon-box__title",
    default: __("Awesome Title")
  },
  titleTag: {
    type: "string",
    default: "H2"
  },
  titleColor: {
    type: "string"
  },
  titleSize: {
    type: "number"
  },
  titleLine: {
    type: "number"
  },
  titleLetter: {
    type: "number"
  },
  titleStyle: {
    type: "string"
  },
  titleUpper: {
    type: "boolean"
  },
  titleWeight: {
    type: "number",
    default: 500
  },
  titleShadowColor: {
    type: "string"
  },
  titleShadowBlur: {
    type: "number",
    default: "0"
  },
  titleShadowHorizontal: {
    type: "number",
    default: "0"
  },
  titleShadowVertical: {
    type: "number",
    default: "0"
  },
  titleMarginT: {
    type: "number"
  },
  titleMarginB: {
    type: "number"
  },
  descText: {
    type: "array",
    source: "children",
    selector: ".premium-icon-box__desc",
    default: "Donec id elit non mi porta gravida at eget metus. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Cras mattis consectetur purus sit amet fermentum. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus."
  },
  descChecked: {
    type: "boolean",
    default: true
  },
  descColor: {
    type: "string"
  },
  descSize: {
    type: "number"
  },
  descLine: {
    type: "number"
  },
  descWeight: {
    type: "number",
    default: 500
  },
  descMarginT: {
    type: "number"
  },
  descMarginB: {
    type: "number"
  },
  btnChecked: {
    type: "boolean",
    default: true
  },
  btnEffect: {
    type: "string",
    default: "none"
  },
  effectDir: {
    type: "string",
    default: "top"
  },
  btnTarget: {
    type: "boolean",
    default: false
  },
  btnText: {
    type: "array",
    source: "children",
    selector: ".premium-icon-box__btn",
    default: __("Click Here")
  },
  btnLink: {
    type: "string",
    source: "attribute",
    attribute: "href",
    selector: ".premium-icon-box__btn"
  },
  btnColor: {
    type: "string"
  },
  btnHoverColor: {
    type: "string"
  },
  btnBack: {
    type: "string"
  },
  btnHoverBack: {
    type: "string"
  },
  btnHoverBorder: {
    type: "string"
  },
  btnSize: {
    type: "number"
  },
  btnLine: {
    type: "number"
  },
  btnLetter: {
    type: "number"
  },
  btnStyle: {
    type: "string"
  },
  btnUpper: {
    type: "boolean"
  },
  btnWeight: {
    type: "number",
    default: 500
  },
  btnBorderType: {
    type: "string",
    default: "none"
  },
  btnBorderWidth: {
    type: "number",
    default: "1"
  },
  btnBorderRadius: {
    type: "number"
  },
  btnBorderColor: {
    type: "string"
  },
  btnPadding: {
    type: "number"
  },
  btnMarginT: {
    type: "number"
  },
  btnMarginB: {
    type: "number"
  },
  btnShadowColor: {
    type: "string"
  },
  btnShadowBlur: {
    type: "number",
    default: "0"
  },
  btnShadowHorizontal: {
    type: "number",
    default: "0"
  },
  btnShadowVertical: {
    type: "number",
    default: "0"
  },
  btnShadowPosition: {
    type: "string",
    default: ""
  },
  imageID: {
    type: "string"
  },
  imageURL: {
    type: "string"
  },
  backColor: {
    type: "string"
  },
  backgroundRepeat: {
    type: "string",
    default: "no-repeat"
  },
  backgroundPosition: {
    type: "string",
    default: "top center"
  },
  backgroundSize: {
    type: "string",
    default: "auto"
  },
  fixed: {
    type: "boolean",
    default: false
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number"
  },
  borderColor: {
    type: "string"
  },
  marginT: {
    type: "number"
  },
  marginR: {
    type: "number"
  },
  marginB: {
    type: "number"
  },
  marginL: {
    type: "number"
  },
  paddingT: {
    type: "number"
  },
  paddingR: {
    type: "number"
  },
  paddingB: {
    type: "number"
  },
  paddingL: {
    type: "number"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  shadowPosition: {
    type: "string",
    default: ""
  }
};

var newAttributes_1_4_9 = {
  hoverShadowColor: {
    type: "string"
  },
  hoverShadowBlur: {
    type: "number"
  },
  hoverShadowHorizontal: {
    type: "number"
  },
  hoverShadowVertical: {
    type: "number"
  },
  hoverShadowPosition: {
    type: "string"
  }
};

var deprecated_attributes_1_4_9 = Object.assign(deprecated_attributes_1_3_4, newAttributes_1_4_9);

var newAttributes_1_5_1 = {
  iconBackColor: {
    type: "string"
  }
};

var deprecated_attributes_1_5_1 = Object.assign(deprecated_attributes_1_4_9, newAttributes_1_5_1);

var newAttributes_1_5_7 = {
  titleFont: {
    type: "string"
  },
  descFont: {
    type: "string"
  }
};

var deprecated_attributes_1_5_7 = Object.assign(deprecated_attributes_1_5_1, newAttributes_1_5_7);

var newAttributes_1_6_6 = {
  btnPaddingU: {
    type: "string"
  },
  paddingU: {
    type: "string"
  }
};

var deprecated_attributes_1_6_6 = Object.assign(deprecated_attributes_1_5_7, newAttributes_1_6_6);

var deprecatedContent = [{
  attributes: deprecated_attributes_1_6_6,
  migrate: function migrate(attributes) {
    var newAttributes = {
      iconPos: "block",
      iconHPos: "before",
      iconVPos: "center"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        id = _props$attributes.id,
        align = _props$attributes.align,
        iconImage = _props$attributes.iconImage,
        iconImgUrl = _props$attributes.iconImgUrl,
        iconRadius = _props$attributes.iconRadius,
        selectedIcon = _props$attributes.selectedIcon,
        iconChecked = _props$attributes.iconChecked,
        hoverEffect = _props$attributes.hoverEffect,
        iconSize = _props$attributes.iconSize,
        iconColor = _props$attributes.iconColor,
        iconBackColor = _props$attributes.iconBackColor,
        titleChecked = _props$attributes.titleChecked,
        titleText = _props$attributes.titleText,
        titleTag = _props$attributes.titleTag,
        titleColor = _props$attributes.titleColor,
        titleFont = _props$attributes.titleFont,
        titleSize = _props$attributes.titleSize,
        titleLine = _props$attributes.titleLine,
        titleLetter = _props$attributes.titleLetter,
        titleStyle = _props$attributes.titleStyle,
        titleUpper = _props$attributes.titleUpper,
        titleWeight = _props$attributes.titleWeight,
        titleShadowBlur = _props$attributes.titleShadowBlur,
        titleShadowColor = _props$attributes.titleShadowColor,
        titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
        titleShadowVertical = _props$attributes.titleShadowVertical,
        titleMarginT = _props$attributes.titleMarginT,
        titleMarginB = _props$attributes.titleMarginB,
        descChecked = _props$attributes.descChecked,
        descText = _props$attributes.descText,
        descColor = _props$attributes.descColor,
        descFont = _props$attributes.descFont,
        descSize = _props$attributes.descSize,
        descLine = _props$attributes.descLine,
        descWeight = _props$attributes.descWeight,
        descMarginT = _props$attributes.descMarginT,
        descMarginB = _props$attributes.descMarginB,
        btnChecked = _props$attributes.btnChecked,
        btnEffect = _props$attributes.btnEffect,
        effectDir = _props$attributes.effectDir,
        btnText = _props$attributes.btnText,
        btnTarget = _props$attributes.btnTarget,
        btnLink = _props$attributes.btnLink,
        btnSize = _props$attributes.btnSize,
        btnStyle = _props$attributes.btnStyle,
        btnUpper = _props$attributes.btnUpper,
        btnWeight = _props$attributes.btnWeight,
        btnLetter = _props$attributes.btnLetter,
        btnColor = _props$attributes.btnColor,
        btnHoverColor = _props$attributes.btnHoverColor,
        btnHoverBorder = _props$attributes.btnHoverBorder,
        btnBack = _props$attributes.btnBack,
        btnHoverBack = _props$attributes.btnHoverBack,
        btnBorderWidth = _props$attributes.btnBorderWidth,
        btnBorderRadius = _props$attributes.btnBorderRadius,
        btnBorderColor = _props$attributes.btnBorderColor,
        btnBorderType = _props$attributes.btnBorderType,
        btnPadding = _props$attributes.btnPadding,
        btnPaddingU = _props$attributes.btnPaddingU,
        btnMarginT = _props$attributes.btnMarginT,
        btnMarginB = _props$attributes.btnMarginB,
        btnShadowBlur = _props$attributes.btnShadowBlur,
        btnShadowColor = _props$attributes.btnShadowColor,
        btnShadowHorizontal = _props$attributes.btnShadowHorizontal,
        btnShadowVertical = _props$attributes.btnShadowVertical,
        btnShadowPosition = _props$attributes.btnShadowPosition,
        backColor = _props$attributes.backColor,
        imageURL = _props$attributes.imageURL,
        fixed = _props$attributes.fixed,
        backgroundRepeat = _props$attributes.backgroundRepeat,
        backgroundPosition = _props$attributes.backgroundPosition,
        backgroundSize = _props$attributes.backgroundSize,
        borderType = _props$attributes.borderType,
        borderWidth = _props$attributes.borderWidth,
        borderRadius = _props$attributes.borderRadius,
        borderColor = _props$attributes.borderColor,
        marginT = _props$attributes.marginT,
        marginR = _props$attributes.marginR,
        marginB = _props$attributes.marginB,
        marginL = _props$attributes.marginL,
        paddingT = _props$attributes.paddingT,
        paddingR = _props$attributes.paddingR,
        paddingB = _props$attributes.paddingB,
        paddingL = _props$attributes.paddingL,
        paddingU = _props$attributes.paddingU,
        shadowBlur = _props$attributes.shadowBlur,
        shadowColor = _props$attributes.shadowColor,
        shadowHorizontal = _props$attributes.shadowHorizontal,
        shadowVertical = _props$attributes.shadowVertical,
        shadowPosition = _props$attributes.shadowPosition,
        hoverShadowBlur = _props$attributes.hoverShadowBlur,
        hoverShadowColor = _props$attributes.hoverShadowColor,
        hoverShadowHorizontal = _props$attributes.hoverShadowHorizontal,
        hoverShadowVertical = _props$attributes.hoverShadowVertical,
        hoverShadowPosition = _props$attributes.hoverShadowPosition;


    return wp.element.createElement(
      "div",
      {
        id: className + "-" + id,
        className: "" + className,
        style: {
          textAlign: align,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          marginTop: marginT,
          marginRight: marginR,
          marginBottom: marginB,
          marginLeft: marginL,
          paddingTop: paddingT + paddingU,
          paddingRight: paddingR + paddingU,
          paddingBottom: paddingB + paddingU,
          paddingLeft: paddingL + paddingU,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundColor: backColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      btnChecked && btnText && wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-icon-box-" + id + ":hover {", "box-shadow: " + hoverShadowHorizontal + "px " + hoverShadowVertical + "px " + hoverShadowBlur + "px " + hoverShadowColor + " " + hoverShadowPosition + " !important", "}", "#premium-icon-box-" + id + " .premium-icon-box__btn:hover {", "color: " + btnHoverColor + " !important;", "border-color: " + btnHoverBorder + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__none .premium-icon-box__btn:hover {", "background-color: " + btnHoverBack + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__slide .premium-button::before {", "background-color: " + btnHoverBack + " !important;", "}"].join("\n")
        }
      }),
      iconChecked && wp.element.createElement(
        "div",
        { className: className + "__icon_wrap" },
        "icon" === iconImage && selectedIcon && wp.element.createElement("i", {
          className: selectedIcon + " " + className + "__icon premium-icon__" + hoverEffect,
          style: {
            color: iconColor,
            backgroundColor: iconBackColor,
            fontSize: iconSize
          }
        }),
        "image" === iconImage && iconImgUrl && wp.element.createElement("img", {
          className: className + "__icon premium-icon__" + hoverEffect,
          src: "" + iconImgUrl,
          alt: "Image Icon",
          style: {
            width: iconSize + "px",
            height: iconSize + "px",
            borderRadius: iconRadius + "px"
          }
        })
      ),
      titleChecked && titleText && wp.element.createElement(
        "div",
        {
          className: className + "__title_wrap",
          style: {
            marginTop: titleMarginT,
            marginBottom: titleMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: className + "__title",
          value: titleText,
          style: {
            color: titleColor,
            fontSize: titleSize + "px",
            fontFamily: titleFont,
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
            lineHeight: titleLine + "px"
          }
        })
      ),
      descChecked && descText && wp.element.createElement(
        "div",
        {
          className: className + "__desc_wrap",
          style: {
            marginTop: descMarginT,
            marginBottom: descMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "p",
          className: className + "__desc",
          value: descText,
          style: {
            color: descColor,
            fontSize: descSize + "px",
            fontFamily: descFont,
            lineHeight: descLine + "px",
            fontWeight: descWeight
          }
        })
      ),
      btnChecked && btnText && wp.element.createElement(
        "div",
        {
          className: className + "__btn_wrap premium-button__" + btnEffect + " premium-button__" + effectDir,
          style: {
            marginTop: btnMarginT,
            marginBottom: btnMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "a",
          className: className + "__btn premium-button",
          href: btnLink,
          rel: "noopener noreferrer",
          target: btnTarget ? "_blank" : "_self",
          value: btnText,
          style: {
            color: btnColor,
            backgroundColor: btnBack,
            fontSize: btnSize + "px",
            letterSpacing: btnLetter + "px",
            textTransform: btnUpper ? "uppercase" : "none",
            fontStyle: btnStyle,
            fontWeight: btnWeight,
            border: btnBorderType,
            borderWidth: btnBorderWidth + "px",
            borderRadius: btnBorderRadius + "px",
            borderColor: btnBorderColor,
            padding: btnPadding + btnPaddingU,
            boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition
          }
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_5_7,
  migrate: function migrate(attributes) {
    var newAttributes = {
      paddingU: "",
      btnPaddingU: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        id = _props$attributes2.id,
        align = _props$attributes2.align,
        iconImage = _props$attributes2.iconImage,
        iconImgUrl = _props$attributes2.iconImgUrl,
        iconRadius = _props$attributes2.iconRadius,
        selectedIcon = _props$attributes2.selectedIcon,
        iconChecked = _props$attributes2.iconChecked,
        hoverEffect = _props$attributes2.hoverEffect,
        iconSize = _props$attributes2.iconSize,
        iconColor = _props$attributes2.iconColor,
        iconBackColor = _props$attributes2.iconBackColor,
        titleChecked = _props$attributes2.titleChecked,
        titleText = _props$attributes2.titleText,
        titleTag = _props$attributes2.titleTag,
        titleColor = _props$attributes2.titleColor,
        titleFont = _props$attributes2.titleFont,
        titleSize = _props$attributes2.titleSize,
        titleLine = _props$attributes2.titleLine,
        titleLetter = _props$attributes2.titleLetter,
        titleStyle = _props$attributes2.titleStyle,
        titleUpper = _props$attributes2.titleUpper,
        titleWeight = _props$attributes2.titleWeight,
        titleShadowBlur = _props$attributes2.titleShadowBlur,
        titleShadowColor = _props$attributes2.titleShadowColor,
        titleShadowHorizontal = _props$attributes2.titleShadowHorizontal,
        titleShadowVertical = _props$attributes2.titleShadowVertical,
        titleMarginT = _props$attributes2.titleMarginT,
        titleMarginB = _props$attributes2.titleMarginB,
        descChecked = _props$attributes2.descChecked,
        descText = _props$attributes2.descText,
        descColor = _props$attributes2.descColor,
        descFont = _props$attributes2.descFont,
        descSize = _props$attributes2.descSize,
        descLine = _props$attributes2.descLine,
        descWeight = _props$attributes2.descWeight,
        descMarginT = _props$attributes2.descMarginT,
        descMarginB = _props$attributes2.descMarginB,
        btnChecked = _props$attributes2.btnChecked,
        btnEffect = _props$attributes2.btnEffect,
        effectDir = _props$attributes2.effectDir,
        btnText = _props$attributes2.btnText,
        btnTarget = _props$attributes2.btnTarget,
        btnLink = _props$attributes2.btnLink,
        btnSize = _props$attributes2.btnSize,
        btnStyle = _props$attributes2.btnStyle,
        btnUpper = _props$attributes2.btnUpper,
        btnWeight = _props$attributes2.btnWeight,
        btnLetter = _props$attributes2.btnLetter,
        btnColor = _props$attributes2.btnColor,
        btnHoverColor = _props$attributes2.btnHoverColor,
        btnHoverBorder = _props$attributes2.btnHoverBorder,
        btnBack = _props$attributes2.btnBack,
        btnHoverBack = _props$attributes2.btnHoverBack,
        btnBorderWidth = _props$attributes2.btnBorderWidth,
        btnBorderRadius = _props$attributes2.btnBorderRadius,
        btnBorderColor = _props$attributes2.btnBorderColor,
        btnBorderType = _props$attributes2.btnBorderType,
        btnPadding = _props$attributes2.btnPadding,
        btnMarginT = _props$attributes2.btnMarginT,
        btnMarginB = _props$attributes2.btnMarginB,
        btnShadowBlur = _props$attributes2.btnShadowBlur,
        btnShadowColor = _props$attributes2.btnShadowColor,
        btnShadowHorizontal = _props$attributes2.btnShadowHorizontal,
        btnShadowVertical = _props$attributes2.btnShadowVertical,
        btnShadowPosition = _props$attributes2.btnShadowPosition,
        backColor = _props$attributes2.backColor,
        imageURL = _props$attributes2.imageURL,
        fixed = _props$attributes2.fixed,
        backgroundRepeat = _props$attributes2.backgroundRepeat,
        backgroundPosition = _props$attributes2.backgroundPosition,
        backgroundSize = _props$attributes2.backgroundSize,
        borderType = _props$attributes2.borderType,
        borderWidth = _props$attributes2.borderWidth,
        borderRadius = _props$attributes2.borderRadius,
        borderColor = _props$attributes2.borderColor,
        marginT = _props$attributes2.marginT,
        marginR = _props$attributes2.marginR,
        marginB = _props$attributes2.marginB,
        marginL = _props$attributes2.marginL,
        paddingT = _props$attributes2.paddingT,
        paddingR = _props$attributes2.paddingR,
        paddingB = _props$attributes2.paddingB,
        paddingL = _props$attributes2.paddingL,
        shadowBlur = _props$attributes2.shadowBlur,
        shadowColor = _props$attributes2.shadowColor,
        shadowHorizontal = _props$attributes2.shadowHorizontal,
        shadowVertical = _props$attributes2.shadowVertical,
        shadowPosition = _props$attributes2.shadowPosition,
        hoverShadowBlur = _props$attributes2.hoverShadowBlur,
        hoverShadowColor = _props$attributes2.hoverShadowColor,
        hoverShadowHorizontal = _props$attributes2.hoverShadowHorizontal,
        hoverShadowVertical = _props$attributes2.hoverShadowVertical,
        hoverShadowPosition = _props$attributes2.hoverShadowPosition;


    return wp.element.createElement(
      "div",
      {
        id: className + "-" + id,
        className: "" + className,
        style: {
          textAlign: align,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          marginTop: marginT,
          marginRight: marginR,
          marginBottom: marginB,
          marginLeft: marginL,
          paddingTop: paddingT,
          paddingRight: paddingR,
          paddingBottom: paddingB,
          paddingLeft: paddingL,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundColor: backColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      btnChecked && btnText && wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-icon-box-" + id + ":hover {", "box-shadow: " + hoverShadowHorizontal + "px " + hoverShadowVertical + "px " + hoverShadowBlur + "px " + hoverShadowColor + " " + hoverShadowPosition + " !important", "}", "#premium-icon-box-" + id + " .premium-icon-box__btn:hover {", "color: " + btnHoverColor + " !important;", "border-color: " + btnHoverBorder + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__none .premium-icon-box__btn:hover {", "background-color: " + btnHoverBack + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__slide .premium-button::before {", "background-color: " + btnHoverBack + " !important;", "}"].join("\n")
        }
      }),
      iconChecked && wp.element.createElement(
        "div",
        { className: className + "__icon_wrap" },
        "icon" === iconImage && selectedIcon && wp.element.createElement("i", {
          className: selectedIcon + " " + className + "__icon premium-icon__" + hoverEffect,
          style: {
            color: iconColor,
            backgroundColor: iconBackColor,
            fontSize: iconSize
          }
        }),
        "image" === iconImage && iconImgUrl && wp.element.createElement("img", {
          className: className + "__icon premium-icon__" + hoverEffect,
          src: "" + iconImgUrl,
          alt: "Image Icon",
          style: {
            width: iconSize + "px",
            height: iconSize + "px",
            borderRadius: iconRadius + "px"
          }
        })
      ),
      titleChecked && titleText && wp.element.createElement(
        "div",
        {
          className: className + "__title_wrap",
          style: {
            marginTop: titleMarginT,
            marginBottom: titleMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: className + "__title",
          value: titleText,
          style: {
            color: titleColor,
            fontSize: titleSize + "px",
            fontFamily: titleFont,
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
            lineHeight: titleLine + "px"
          }
        })
      ),
      descChecked && descText && wp.element.createElement(
        "div",
        {
          className: className + "__desc_wrap",
          style: {
            marginTop: descMarginT,
            marginBottom: descMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "p",
          className: className + "__desc",
          value: descText,
          style: {
            color: descColor,
            fontSize: descSize + "px",
            fontFamily: descFont,
            lineHeight: descLine + "px",
            fontWeight: descWeight
          }
        })
      ),
      btnChecked && btnText && wp.element.createElement(
        "div",
        {
          className: className + "__btn_wrap premium-button__" + btnEffect + " premium-button__" + effectDir,
          style: {
            marginTop: btnMarginT,
            marginBottom: btnMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "a",
          className: className + "__btn premium-button",
          href: btnLink,
          rel: "noopener noreferrer",
          target: btnTarget ? "_blank" : "_self",
          value: btnText,
          style: {
            color: btnColor,
            backgroundColor: btnBack,
            fontSize: btnSize + "px",
            letterSpacing: btnLetter + "px",
            textTransform: btnUpper ? "uppercase" : "none",
            fontStyle: btnStyle,
            fontWeight: btnWeight,
            border: btnBorderType,
            borderWidth: btnBorderWidth + "px",
            borderRadius: btnBorderRadius + "px",
            borderColor: btnBorderColor,
            padding: btnPadding + "px",
            boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition
          }
        })
      )
    );
  }
}, {
  attribute: deprecated_attributes_1_5_1,
  migrate: function migrate(attributes) {
    var newAttributes = {
      titleFont: "",
      descFont: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        id = _props$attributes3.id,
        align = _props$attributes3.align,
        iconImage = _props$attributes3.iconImage,
        iconImgUrl = _props$attributes3.iconImgUrl,
        iconRadius = _props$attributes3.iconRadius,
        selectedIcon = _props$attributes3.selectedIcon,
        iconChecked = _props$attributes3.iconChecked,
        hoverEffect = _props$attributes3.hoverEffect,
        iconSize = _props$attributes3.iconSize,
        iconColor = _props$attributes3.iconColor,
        iconBackColor = _props$attributes3.iconBackColor,
        titleChecked = _props$attributes3.titleChecked,
        titleText = _props$attributes3.titleText,
        titleTag = _props$attributes3.titleTag,
        titleColor = _props$attributes3.titleColor,
        titleSize = _props$attributes3.titleSize,
        titleLine = _props$attributes3.titleLine,
        titleLetter = _props$attributes3.titleLetter,
        titleStyle = _props$attributes3.titleStyle,
        titleUpper = _props$attributes3.titleUpper,
        titleWeight = _props$attributes3.titleWeight,
        titleShadowBlur = _props$attributes3.titleShadowBlur,
        titleShadowColor = _props$attributes3.titleShadowColor,
        titleShadowHorizontal = _props$attributes3.titleShadowHorizontal,
        titleShadowVertical = _props$attributes3.titleShadowVertical,
        titleMarginT = _props$attributes3.titleMarginT,
        titleMarginB = _props$attributes3.titleMarginB,
        descChecked = _props$attributes3.descChecked,
        descText = _props$attributes3.descText,
        descColor = _props$attributes3.descColor,
        descSize = _props$attributes3.descSize,
        descLine = _props$attributes3.descLine,
        descWeight = _props$attributes3.descWeight,
        descMarginT = _props$attributes3.descMarginT,
        descMarginB = _props$attributes3.descMarginB,
        btnChecked = _props$attributes3.btnChecked,
        btnEffect = _props$attributes3.btnEffect,
        effectDir = _props$attributes3.effectDir,
        btnText = _props$attributes3.btnText,
        btnTarget = _props$attributes3.btnTarget,
        btnLink = _props$attributes3.btnLink,
        btnSize = _props$attributes3.btnSize,
        btnStyle = _props$attributes3.btnStyle,
        btnUpper = _props$attributes3.btnUpper,
        btnWeight = _props$attributes3.btnWeight,
        btnLetter = _props$attributes3.btnLetter,
        btnColor = _props$attributes3.btnColor,
        btnHoverColor = _props$attributes3.btnHoverColor,
        btnHoverBorder = _props$attributes3.btnHoverBorder,
        btnBack = _props$attributes3.btnBack,
        btnHoverBack = _props$attributes3.btnHoverBack,
        btnBorderWidth = _props$attributes3.btnBorderWidth,
        btnBorderRadius = _props$attributes3.btnBorderRadius,
        btnBorderColor = _props$attributes3.btnBorderColor,
        btnBorderType = _props$attributes3.btnBorderType,
        btnPadding = _props$attributes3.btnPadding,
        btnMarginT = _props$attributes3.btnMarginT,
        btnMarginB = _props$attributes3.btnMarginB,
        btnShadowBlur = _props$attributes3.btnShadowBlur,
        btnShadowColor = _props$attributes3.btnShadowColor,
        btnShadowHorizontal = _props$attributes3.btnShadowHorizontal,
        btnShadowVertical = _props$attributes3.btnShadowVertical,
        btnShadowPosition = _props$attributes3.btnShadowPosition,
        backColor = _props$attributes3.backColor,
        imageURL = _props$attributes3.imageURL,
        fixed = _props$attributes3.fixed,
        backgroundRepeat = _props$attributes3.backgroundRepeat,
        backgroundPosition = _props$attributes3.backgroundPosition,
        backgroundSize = _props$attributes3.backgroundSize,
        borderType = _props$attributes3.borderType,
        borderWidth = _props$attributes3.borderWidth,
        borderRadius = _props$attributes3.borderRadius,
        borderColor = _props$attributes3.borderColor,
        marginT = _props$attributes3.marginT,
        marginR = _props$attributes3.marginR,
        marginB = _props$attributes3.marginB,
        marginL = _props$attributes3.marginL,
        paddingT = _props$attributes3.paddingT,
        paddingR = _props$attributes3.paddingR,
        paddingB = _props$attributes3.paddingB,
        paddingL = _props$attributes3.paddingL,
        shadowBlur = _props$attributes3.shadowBlur,
        shadowColor = _props$attributes3.shadowColor,
        shadowHorizontal = _props$attributes3.shadowHorizontal,
        shadowVertical = _props$attributes3.shadowVertical,
        shadowPosition = _props$attributes3.shadowPosition,
        hoverShadowBlur = _props$attributes3.hoverShadowBlur,
        hoverShadowColor = _props$attributes3.hoverShadowColor,
        hoverShadowHorizontal = _props$attributes3.hoverShadowHorizontal,
        hoverShadowVertical = _props$attributes3.hoverShadowVertical,
        hoverShadowPosition = _props$attributes3.hoverShadowPosition;


    return wp.element.createElement(
      "div",
      {
        id: className + "-" + id,
        className: "" + className,
        style: {
          textAlign: align,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          marginTop: marginT,
          marginRight: marginR,
          marginBottom: marginB,
          marginLeft: marginL,
          paddingTop: paddingT,
          paddingRight: paddingR,
          paddingBottom: paddingB,
          paddingLeft: paddingL,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundColor: backColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      btnChecked && btnText && wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-icon-box-" + id + ":hover {", "box-shadow: " + hoverShadowHorizontal + "px " + hoverShadowVertical + "px " + hoverShadowBlur + "px " + hoverShadowColor + " " + hoverShadowPosition + " !important", "}", "#premium-icon-box-" + id + " .premium-icon-box__btn:hover {", "color: " + btnHoverColor + " !important;", "border-color: " + btnHoverBorder + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__none .premium-icon-box__btn:hover {", "background-color: " + btnHoverBack + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__slide .premium-button::before {", "background-color: " + btnHoverBack + " !important;", "}"].join("\n")
        }
      }),
      iconChecked && wp.element.createElement(
        "div",
        { className: className + "__icon_wrap" },
        "icon" === iconImage && selectedIcon && wp.element.createElement("i", {
          className: selectedIcon + " " + className + "__icon premium-icon__" + hoverEffect,
          style: {
            color: iconColor,
            backgroundColor: iconBackColor,
            fontSize: iconSize
          }
        }),
        "image" === iconImage && iconImgUrl && wp.element.createElement("img", {
          className: className + "__icon premium-icon__" + hoverEffect,
          src: "" + iconImgUrl,
          alt: "Image Icon",
          style: {
            width: iconSize + "px",
            height: iconSize + "px",
            borderRadius: iconRadius + "px"
          }
        })
      ),
      titleChecked && titleText && wp.element.createElement(
        "div",
        {
          className: className + "__title_wrap",
          style: {
            marginTop: titleMarginT,
            marginBottom: titleMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: className + "__title",
          value: titleText,
          style: {
            color: titleColor,
            fontSize: titleSize + "px",
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
            lineHeight: titleLine + "px"
          }
        })
      ),
      descChecked && descText && wp.element.createElement(
        "div",
        {
          className: className + "__desc_wrap",
          style: {
            marginTop: descMarginT,
            marginBottom: descMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "p",
          className: className + "__desc",
          value: descText,
          style: {
            color: descColor,
            fontSize: descSize + "px",
            lineHeight: descLine + "px",
            fontWeight: descWeight
          }
        })
      ),
      btnChecked && btnText && wp.element.createElement(
        "div",
        {
          className: className + "__btn_wrap premium-button__" + btnEffect + " premium-button__" + effectDir,
          style: {
            marginTop: btnMarginT,
            marginBottom: btnMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "a",
          className: className + "__btn premium-button",
          href: btnLink,
          rel: "noopener noreferrer",
          target: btnTarget ? "_blank" : "_self",
          value: btnText,
          style: {
            color: btnColor,
            backgroundColor: btnBack,
            fontSize: btnSize + "px",
            letterSpacing: btnLetter + "px",
            textTransform: btnUpper ? "uppercase" : "none",
            fontStyle: btnStyle,
            fontWeight: btnWeight,
            border: btnBorderType,
            borderWidth: btnBorderWidth + "px",
            borderRadius: btnBorderRadius + "px",
            borderColor: btnBorderColor,
            padding: btnPadding + "px",
            boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition
          }
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_4_9,
  migrate: function migrate(attributes) {
    var newAttributes = {
      iconBackColor: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes4 = props.attributes,
        id = _props$attributes4.id,
        align = _props$attributes4.align,
        iconImage = _props$attributes4.iconImage,
        iconImgUrl = _props$attributes4.iconImgUrl,
        iconRadius = _props$attributes4.iconRadius,
        selectedIcon = _props$attributes4.selectedIcon,
        iconChecked = _props$attributes4.iconChecked,
        hoverEffect = _props$attributes4.hoverEffect,
        iconSize = _props$attributes4.iconSize,
        iconColor = _props$attributes4.iconColor,
        titleChecked = _props$attributes4.titleChecked,
        titleText = _props$attributes4.titleText,
        titleTag = _props$attributes4.titleTag,
        titleColor = _props$attributes4.titleColor,
        titleSize = _props$attributes4.titleSize,
        titleLine = _props$attributes4.titleLine,
        titleLetter = _props$attributes4.titleLetter,
        titleStyle = _props$attributes4.titleStyle,
        titleUpper = _props$attributes4.titleUpper,
        titleWeight = _props$attributes4.titleWeight,
        titleShadowBlur = _props$attributes4.titleShadowBlur,
        titleShadowColor = _props$attributes4.titleShadowColor,
        titleShadowHorizontal = _props$attributes4.titleShadowHorizontal,
        titleShadowVertical = _props$attributes4.titleShadowVertical,
        titleMarginT = _props$attributes4.titleMarginT,
        titleMarginB = _props$attributes4.titleMarginB,
        descChecked = _props$attributes4.descChecked,
        descText = _props$attributes4.descText,
        descColor = _props$attributes4.descColor,
        descSize = _props$attributes4.descSize,
        descLine = _props$attributes4.descLine,
        descWeight = _props$attributes4.descWeight,
        descMarginT = _props$attributes4.descMarginT,
        descMarginB = _props$attributes4.descMarginB,
        btnChecked = _props$attributes4.btnChecked,
        btnEffect = _props$attributes4.btnEffect,
        effectDir = _props$attributes4.effectDir,
        btnText = _props$attributes4.btnText,
        btnTarget = _props$attributes4.btnTarget,
        btnLink = _props$attributes4.btnLink,
        btnSize = _props$attributes4.btnSize,
        btnStyle = _props$attributes4.btnStyle,
        btnUpper = _props$attributes4.btnUpper,
        btnWeight = _props$attributes4.btnWeight,
        btnLetter = _props$attributes4.btnLetter,
        btnColor = _props$attributes4.btnColor,
        btnHoverColor = _props$attributes4.btnHoverColor,
        btnHoverBorder = _props$attributes4.btnHoverBorder,
        btnBack = _props$attributes4.btnBack,
        btnHoverBack = _props$attributes4.btnHoverBack,
        btnBorderWidth = _props$attributes4.btnBorderWidth,
        btnBorderRadius = _props$attributes4.btnBorderRadius,
        btnBorderColor = _props$attributes4.btnBorderColor,
        btnBorderType = _props$attributes4.btnBorderType,
        btnPadding = _props$attributes4.btnPadding,
        btnMarginT = _props$attributes4.btnMarginT,
        btnMarginB = _props$attributes4.btnMarginB,
        btnShadowBlur = _props$attributes4.btnShadowBlur,
        btnShadowColor = _props$attributes4.btnShadowColor,
        btnShadowHorizontal = _props$attributes4.btnShadowHorizontal,
        btnShadowVertical = _props$attributes4.btnShadowVertical,
        btnShadowPosition = _props$attributes4.btnShadowPosition,
        backColor = _props$attributes4.backColor,
        imageURL = _props$attributes4.imageURL,
        fixed = _props$attributes4.fixed,
        backgroundRepeat = _props$attributes4.backgroundRepeat,
        backgroundPosition = _props$attributes4.backgroundPosition,
        backgroundSize = _props$attributes4.backgroundSize,
        borderType = _props$attributes4.borderType,
        borderWidth = _props$attributes4.borderWidth,
        borderRadius = _props$attributes4.borderRadius,
        borderColor = _props$attributes4.borderColor,
        marginT = _props$attributes4.marginT,
        marginR = _props$attributes4.marginR,
        marginB = _props$attributes4.marginB,
        marginL = _props$attributes4.marginL,
        paddingT = _props$attributes4.paddingT,
        paddingR = _props$attributes4.paddingR,
        paddingB = _props$attributes4.paddingB,
        paddingL = _props$attributes4.paddingL,
        shadowBlur = _props$attributes4.shadowBlur,
        shadowColor = _props$attributes4.shadowColor,
        shadowHorizontal = _props$attributes4.shadowHorizontal,
        shadowVertical = _props$attributes4.shadowVertical,
        shadowPosition = _props$attributes4.shadowPosition,
        hoverShadowBlur = _props$attributes4.hoverShadowBlur,
        hoverShadowColor = _props$attributes4.hoverShadowColor,
        hoverShadowHorizontal = _props$attributes4.hoverShadowHorizontal,
        hoverShadowVertical = _props$attributes4.hoverShadowVertical,
        hoverShadowPosition = _props$attributes4.hoverShadowPosition;


    return wp.element.createElement(
      "div",
      {
        id: className + "-" + id,
        className: "" + className,
        style: {
          textAlign: align,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          marginTop: marginT,
          marginRight: marginR,
          marginBottom: marginB,
          marginLeft: marginL,
          paddingTop: paddingT,
          paddingRight: paddingR,
          paddingBottom: paddingB,
          paddingLeft: paddingL,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundColor: backColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      btnChecked && btnText && wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-icon-box-" + id + ":hover {", "box-shadow: " + hoverShadowHorizontal + "px " + hoverShadowVertical + "px " + hoverShadowBlur + "px " + hoverShadowColor + " " + hoverShadowPosition + " !important", "}", "#premium-icon-box-" + id + " .premium-icon-box__btn:hover {", "color: " + btnHoverColor + " !important;", "border-color: " + btnHoverBorder + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__none .premium-icon-box__btn:hover {", "background-color: " + btnHoverBack + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__slide .premium-button::before {", "background-color: " + btnHoverBack + " !important;", "}"].join("\n")
        }
      }),
      iconChecked && wp.element.createElement(
        "div",
        { className: className + "__icon_wrap" },
        "icon" === iconImage && selectedIcon && wp.element.createElement("i", {
          className: selectedIcon + " " + className + "__icon premium-icon__" + hoverEffect,
          style: {
            color: iconColor,
            fontSize: iconSize
          }
        }),
        "image" === iconImage && iconImgUrl && wp.element.createElement("img", {
          className: className + "__icon premium-icon__" + hoverEffect,
          src: "" + iconImgUrl,
          alt: "Image Icon",
          style: {
            width: iconSize + "px",
            height: iconSize + "px",
            borderRadius: iconRadius + "px"
          }
        })
      ),
      titleChecked && titleText && wp.element.createElement(
        "div",
        {
          className: className + "__title_wrap",
          style: {
            marginTop: titleMarginT,
            marginBottom: titleMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: className + "__title",
          value: titleText,
          style: {
            color: titleColor,
            fontSize: titleSize + "px",
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
            lineHeight: titleLine + "px"
          }
        })
      ),
      descChecked && descText && wp.element.createElement(
        "div",
        {
          className: className + "__desc_wrap",
          style: {
            marginTop: descMarginT,
            marginBottom: descMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "p",
          className: className + "__desc",
          value: descText,
          style: {
            color: descColor,
            fontSize: descSize + "px",
            lineHeight: descLine + "px",
            fontWeight: descWeight
          }
        })
      ),
      btnChecked && btnText && wp.element.createElement(
        "div",
        {
          className: className + "__btn_wrap premium-button__" + btnEffect + " premium-button__" + effectDir,
          style: {
            marginTop: btnMarginT,
            marginBottom: btnMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "a",
          className: className + "__btn premium-button",
          href: btnLink,
          target: btnTarget ? "_blank" : "_self",
          value: btnText,
          style: {
            color: btnColor,
            backgroundColor: btnBack,
            fontSize: btnSize + "px",
            letterSpacing: btnLetter + "px",
            textTransform: btnUpper ? "uppercase" : "none",
            fontStyle: btnStyle,
            fontWeight: btnWeight,
            border: btnBorderType,
            borderWidth: btnBorderWidth + "px",
            borderRadius: btnBorderRadius + "px",
            borderColor: btnBorderColor,
            padding: btnPadding + "px",
            boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition
          }
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_3_4,
  migrate: function migrate(attributes) {
    var newAttributes = {
      hoverShadowColor: "",
      hoverShadowBlur: "",
      hoverShadowHorizontal: "",
      hoverShadowVertical: "",
      hoverShadowPosition: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes5 = props.attributes,
        id = _props$attributes5.id,
        align = _props$attributes5.align,
        iconImage = _props$attributes5.iconImage,
        iconImgUrl = _props$attributes5.iconImgUrl,
        iconRadius = _props$attributes5.iconRadius,
        selectedIcon = _props$attributes5.selectedIcon,
        iconChecked = _props$attributes5.iconChecked,
        hoverEffect = _props$attributes5.hoverEffect,
        iconSize = _props$attributes5.iconSize,
        iconColor = _props$attributes5.iconColor,
        titleChecked = _props$attributes5.titleChecked,
        titleText = _props$attributes5.titleText,
        titleTag = _props$attributes5.titleTag,
        titleColor = _props$attributes5.titleColor,
        titleSize = _props$attributes5.titleSize,
        titleLine = _props$attributes5.titleLine,
        titleLetter = _props$attributes5.titleLetter,
        titleStyle = _props$attributes5.titleStyle,
        titleUpper = _props$attributes5.titleUpper,
        titleWeight = _props$attributes5.titleWeight,
        titleShadowBlur = _props$attributes5.titleShadowBlur,
        titleShadowColor = _props$attributes5.titleShadowColor,
        titleShadowHorizontal = _props$attributes5.titleShadowHorizontal,
        titleShadowVertical = _props$attributes5.titleShadowVertical,
        titleMarginT = _props$attributes5.titleMarginT,
        titleMarginB = _props$attributes5.titleMarginB,
        descChecked = _props$attributes5.descChecked,
        descText = _props$attributes5.descText,
        descColor = _props$attributes5.descColor,
        descSize = _props$attributes5.descSize,
        descLine = _props$attributes5.descLine,
        descWeight = _props$attributes5.descWeight,
        descMarginT = _props$attributes5.descMarginT,
        descMarginB = _props$attributes5.descMarginB,
        btnChecked = _props$attributes5.btnChecked,
        btnEffect = _props$attributes5.btnEffect,
        effectDir = _props$attributes5.effectDir,
        btnText = _props$attributes5.btnText,
        btnTarget = _props$attributes5.btnTarget,
        btnLink = _props$attributes5.btnLink,
        btnSize = _props$attributes5.btnSize,
        btnStyle = _props$attributes5.btnStyle,
        btnUpper = _props$attributes5.btnUpper,
        btnWeight = _props$attributes5.btnWeight,
        btnLetter = _props$attributes5.btnLetter,
        btnColor = _props$attributes5.btnColor,
        btnHoverColor = _props$attributes5.btnHoverColor,
        btnHoverBorder = _props$attributes5.btnHoverBorder,
        btnBack = _props$attributes5.btnBack,
        btnHoverBack = _props$attributes5.btnHoverBack,
        btnBorderWidth = _props$attributes5.btnBorderWidth,
        btnBorderRadius = _props$attributes5.btnBorderRadius,
        btnBorderColor = _props$attributes5.btnBorderColor,
        btnBorderType = _props$attributes5.btnBorderType,
        btnPadding = _props$attributes5.btnPadding,
        btnMarginT = _props$attributes5.btnMarginT,
        btnMarginB = _props$attributes5.btnMarginB,
        btnShadowBlur = _props$attributes5.btnShadowBlur,
        btnShadowColor = _props$attributes5.btnShadowColor,
        btnShadowHorizontal = _props$attributes5.btnShadowHorizontal,
        btnShadowVertical = _props$attributes5.btnShadowVertical,
        btnShadowPosition = _props$attributes5.btnShadowPosition,
        backColor = _props$attributes5.backColor,
        imageURL = _props$attributes5.imageURL,
        fixed = _props$attributes5.fixed,
        backgroundRepeat = _props$attributes5.backgroundRepeat,
        backgroundPosition = _props$attributes5.backgroundPosition,
        backgroundSize = _props$attributes5.backgroundSize,
        borderType = _props$attributes5.borderType,
        borderWidth = _props$attributes5.borderWidth,
        borderRadius = _props$attributes5.borderRadius,
        borderColor = _props$attributes5.borderColor,
        marginT = _props$attributes5.marginT,
        marginR = _props$attributes5.marginR,
        marginB = _props$attributes5.marginB,
        marginL = _props$attributes5.marginL,
        paddingT = _props$attributes5.paddingT,
        paddingR = _props$attributes5.paddingR,
        paddingB = _props$attributes5.paddingB,
        paddingL = _props$attributes5.paddingL,
        shadowBlur = _props$attributes5.shadowBlur,
        shadowColor = _props$attributes5.shadowColor,
        shadowHorizontal = _props$attributes5.shadowHorizontal,
        shadowVertical = _props$attributes5.shadowVertical,
        shadowPosition = _props$attributes5.shadowPosition;


    return wp.element.createElement(
      "div",
      {
        id: className + "-" + id,
        className: "" + className,
        style: {
          textAlign: align,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          marginTop: marginT,
          marginRight: marginR,
          marginBottom: marginB,
          marginLeft: marginL,
          paddingTop: paddingT,
          paddingRight: paddingR,
          paddingBottom: paddingB,
          paddingLeft: paddingL,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundColor: backColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      btnChecked && btnText && wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-icon-box-" + id + " .premium-icon-box__btn:hover {", "color: " + btnHoverColor + " !important;", "border-color: " + btnHoverBorder + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__none .premium-icon-box__btn:hover {", "background-color: " + btnHoverBack + " !important;", "}", "#premium-icon-box-" + id + " .premium-button__slide .premium-button::before {", "background-color: " + btnHoverBack + " !important;", "}"].join("\n")
        }
      }),
      iconChecked && wp.element.createElement(
        "div",
        { className: className + "__icon_wrap" },
        "icon" === iconImage && selectedIcon && wp.element.createElement("i", {
          className: selectedIcon + " " + className + "__icon premium-icon__" + hoverEffect,
          style: {
            color: iconColor,
            fontSize: iconSize
          }
        }),
        "image" === iconImage && iconImgUrl && wp.element.createElement("img", {
          className: className + "__icon premium-icon__" + hoverEffect,
          src: "" + iconImgUrl,
          alt: "Image Icon",
          style: {
            width: iconSize + "px",
            height: iconSize + "px",
            borderRadius: iconRadius + "px"
          }
        })
      ),
      titleChecked && titleText && wp.element.createElement(
        "div",
        {
          className: className + "__title_wrap",
          style: {
            marginTop: titleMarginT,
            marginBottom: titleMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: className + "__title",
          value: titleText,
          style: {
            color: titleColor,
            fontSize: titleSize + "px",
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
            lineHeight: titleLine + "px"
          }
        })
      ),
      descChecked && descText && wp.element.createElement(
        "div",
        {
          className: className + "__desc_wrap",
          style: {
            marginTop: descMarginT,
            marginBottom: descMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "p",
          className: className + "__desc",
          value: descText,
          style: {
            color: descColor,
            fontSize: descSize + "px",
            lineHeight: descLine + "px",
            fontWeight: descWeight
          }
        })
      ),
      btnChecked && btnText && wp.element.createElement(
        "div",
        {
          className: className + "__btn_wrap premium-button__" + btnEffect + " premium-button__" + effectDir,
          style: {
            marginTop: btnMarginT,
            marginBottom: btnMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "a",
          className: className + "__btn premium-button",
          href: btnLink,
          target: btnTarget ? "_blank" : "_self",
          value: btnText,
          style: {
            color: btnColor,
            backgroundColor: btnBack,
            fontSize: btnSize + "px",
            letterSpacing: btnLetter + "px",
            textTransform: btnUpper ? "uppercase" : "none",
            fontStyle: btnStyle,
            fontWeight: btnWeight,
            border: btnBorderType,
            borderWidth: btnBorderWidth + "px",
            borderRadius: btnBorderRadius + "px",
            borderColor: btnBorderColor,
            padding: btnPadding + "px",
            boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition
          }
        })
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_3_0,
  migrate: function migrate(attributes) {
    return {
      iconSize: attributes.iconSize
    };
  },
  save: function save(props) {
    var _props$attributes6 = props.attributes,
        id = _props$attributes6.id,
        align = _props$attributes6.align,
        iconType = _props$attributes6.iconType,
        iconImage = _props$attributes6.iconImage,
        iconImgUrl = _props$attributes6.iconImgUrl,
        iconRadius = _props$attributes6.iconRadius,
        selectedIcon = _props$attributes6.selectedIcon,
        iconChecked = _props$attributes6.iconChecked,
        hoverEffect = _props$attributes6.hoverEffect,
        iconSize = _props$attributes6.iconSize,
        iconColor = _props$attributes6.iconColor,
        titleChecked = _props$attributes6.titleChecked,
        titleText = _props$attributes6.titleText,
        titleTag = _props$attributes6.titleTag,
        titleColor = _props$attributes6.titleColor,
        titleSize = _props$attributes6.titleSize,
        titleLine = _props$attributes6.titleLine,
        titleLetter = _props$attributes6.titleLetter,
        titleStyle = _props$attributes6.titleStyle,
        titleUpper = _props$attributes6.titleUpper,
        titleWeight = _props$attributes6.titleWeight,
        titleShadowBlur = _props$attributes6.titleShadowBlur,
        titleShadowColor = _props$attributes6.titleShadowColor,
        titleShadowHorizontal = _props$attributes6.titleShadowHorizontal,
        titleShadowVertical = _props$attributes6.titleShadowVertical,
        titleMarginT = _props$attributes6.titleMarginT,
        titleMarginB = _props$attributes6.titleMarginB,
        descChecked = _props$attributes6.descChecked,
        descText = _props$attributes6.descText,
        descColor = _props$attributes6.descColor,
        descSize = _props$attributes6.descSize,
        descLine = _props$attributes6.descLine,
        descWeight = _props$attributes6.descWeight,
        descMarginT = _props$attributes6.descMarginT,
        descMarginB = _props$attributes6.descMarginB,
        btnChecked = _props$attributes6.btnChecked,
        btnText = _props$attributes6.btnText,
        btnTarget = _props$attributes6.btnTarget,
        btnLink = _props$attributes6.btnLink,
        btnSize = _props$attributes6.btnSize,
        btnStyle = _props$attributes6.btnStyle,
        btnUpper = _props$attributes6.btnUpper,
        btnWeight = _props$attributes6.btnWeight,
        btnLetter = _props$attributes6.btnLetter,
        btnColor = _props$attributes6.btnColor,
        btnHoverColor = _props$attributes6.btnHoverColor,
        btnHoverBorder = _props$attributes6.btnHoverBorder,
        btnBack = _props$attributes6.btnBack,
        btnHoverBack = _props$attributes6.btnHoverBack,
        btnBorderWidth = _props$attributes6.btnBorderWidth,
        btnBorderRadius = _props$attributes6.btnBorderRadius,
        btnBorderColor = _props$attributes6.btnBorderColor,
        btnBorderType = _props$attributes6.btnBorderType,
        btnPadding = _props$attributes6.btnPadding,
        btnMarginT = _props$attributes6.btnMarginT,
        btnMarginB = _props$attributes6.btnMarginB,
        btnShadowBlur = _props$attributes6.btnShadowBlur,
        btnShadowColor = _props$attributes6.btnShadowColor,
        btnShadowHorizontal = _props$attributes6.btnShadowHorizontal,
        btnShadowVertical = _props$attributes6.btnShadowVertical,
        btnShadowPosition = _props$attributes6.btnShadowPosition,
        backColor = _props$attributes6.backColor,
        imageURL = _props$attributes6.imageURL,
        fixed = _props$attributes6.fixed,
        backgroundRepeat = _props$attributes6.backgroundRepeat,
        backgroundPosition = _props$attributes6.backgroundPosition,
        backgroundSize = _props$attributes6.backgroundSize,
        borderType = _props$attributes6.borderType,
        borderWidth = _props$attributes6.borderWidth,
        borderRadius = _props$attributes6.borderRadius,
        borderColor = _props$attributes6.borderColor,
        marginT = _props$attributes6.marginT,
        marginR = _props$attributes6.marginR,
        marginB = _props$attributes6.marginB,
        marginL = _props$attributes6.marginL,
        paddingT = _props$attributes6.paddingT,
        paddingR = _props$attributes6.paddingR,
        paddingB = _props$attributes6.paddingB,
        paddingL = _props$attributes6.paddingL,
        shadowBlur = _props$attributes6.shadowBlur,
        shadowColor = _props$attributes6.shadowColor,
        shadowHorizontal = _props$attributes6.shadowHorizontal,
        shadowVertical = _props$attributes6.shadowVertical,
        shadowPosition = _props$attributes6.shadowPosition;


    return wp.element.createElement(
      "div",
      {
        id: className + "-" + id,
        className: "" + className,
        style: {
          textAlign: align,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          marginTop: marginT,
          marginRight: marginR,
          marginBottom: marginB,
          marginLeft: marginL,
          paddingTop: paddingT,
          paddingRight: paddingR,
          paddingBottom: paddingB,
          paddingLeft: paddingL,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundColor: backColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      btnChecked && btnText && wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#premium-icon-box-" + id + " .premium-icon-box__btn:hover {", "color: " + btnHoverColor + " !important;", "background-color: " + btnHoverBack + " !important;", "border-color: " + btnHoverBorder + " !important;", "}"].join("\n")
        }
      }),
      iconChecked && wp.element.createElement(
        "div",
        { className: className + "__icon_wrap" },
        "icon" === iconImage && selectedIcon && wp.element.createElement("i", {
          className: selectedIcon + " " + className + "__icon premium-icon__" + hoverEffect,
          style: {
            color: iconColor,
            fontSize: iconSize
          }
        }),
        "image" === iconImage && iconImgUrl && wp.element.createElement("img", {
          className: className + "__icon premium-icon__" + hoverEffect,
          src: "" + iconImgUrl,
          alt: "Image Icon",
          style: {
            width: iconSize + "px",
            height: iconSize + "px",
            borderRadius: iconRadius + "px"
          }
        })
      ),
      titleChecked && titleText && wp.element.createElement(
        "div",
        {
          className: className + "__title_wrap",
          style: {
            marginTop: titleMarginT,
            marginBottom: titleMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: className + "__title",
          value: titleText,
          style: {
            color: titleColor,
            fontSize: titleSize + "px",
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor,
            lineHeight: titleLine + "px"
          }
        })
      ),
      descChecked && descText && wp.element.createElement(
        "div",
        {
          className: className + "__desc_wrap",
          style: {
            marginTop: descMarginT,
            marginBottom: descMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "p",
          className: className + "__desc",
          value: descText,
          style: {
            color: descColor,
            fontSize: descSize + "px",
            lineHeight: descLine + "px",
            fontWeight: descWeight
          }
        })
      ),
      btnChecked && btnText && wp.element.createElement(
        "div",
        {
          className: className + "__btn_wrap",
          style: {
            marginTop: btnMarginT,
            marginBottom: btnMarginB
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: "a",
          className: className + "__btn",
          href: btnLink,
          target: btnTarget ? "_blank" : "_self",
          value: btnText,
          style: {
            color: btnColor,
            backgroundColor: btnBack,
            fontSize: btnSize + "px",
            letterSpacing: btnLetter + "px",
            textTransform: btnUpper ? "uppercase" : "none",
            fontStyle: btnStyle,
            fontWeight: btnWeight,
            border: btnBorderType,
            borderWidth: btnBorderWidth + "px",
            borderRadius: btnBorderRadius + "px",
            borderColor: btnBorderColor,
            padding: btnPadding + "px",
            boxShadow: btnShadowHorizontal + "px " + btnShadowVertical + "px " + btnShadowBlur + "px " + btnShadowColor + " " + btnShadowPosition
          }
        })
      )
    );
  }
}];

/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var className = "premium-maps";

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$components = wp.components,
    IconButton = _wp$components.IconButton,
    Toolbar = _wp$components.Toolbar,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    TextControl = _wp$components.TextControl,
    TextareaControl = _wp$components.TextareaControl,
    ToggleControl = _wp$components.ToggleControl;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    MediaUpload = _wp$editor.MediaUpload,
    ColorPalette = _wp$editor.ColorPalette;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;


var isMapUpdated = null;

var mapAttrs = {
  mapID: {
    type: "string"
  },
  mapStyle: {
    type: "string",
    default: "[]"
  },
  mapType: {
    type: "string",
    default: "roadmap"
  },
  height: {
    type: "number",
    default: 500
  },
  zoom: {
    type: "number",
    default: 6
  },
  mapTypeControl: {
    type: "boolean",
    default: true
  },
  zoomControl: {
    type: "boolean",
    default: true
  },
  fullscreenControl: {
    type: "boolean",
    default: true
  },
  streetViewControl: {
    type: "boolean",
    default: false
  },
  scrollwheel: {
    type: "boolean",
    default: false
  },
  centerLat: {
    type: "string",
    default: "40.7569733"
  },
  centerLng: {
    type: "string",
    default: " -73.98878250000001"
  },
  markerOpen: {
    type: "boolean",
    default: false
  },
  markerTitle: {
    type: "string",
    default: __("Awesome Title")
  },
  markerDesc: {
    type: "string",
    default: __("Cool Description")
  },
  mapMarker: {
    type: "boolean",
    default: true
  },
  markerIconUrl: {
    type: "string"
  },
  markerIconId: {
    type: "number",
    default: ""
  },
  markerCustom: {
    type: "boolean",
    default: false
  },
  maxWidth: {
    type: "number",
    default: 300
  },
  titleColor: {
    type: "string",
    default: "#6ec1e4"
  },
  titleSize: {
    type: "number",
    default: 20
  },
  descColor: {
    type: "string",
    default: "#000"
  },
  descSize: {
    type: "number",
    default: 16
  },
  boxAlign: {
    type: "string",
    default: "center"
  },
  boxPadding: {
    type: "number",
    default: "0"
  },
  gapBetween: {
    type: "number",
    default: 5
  }
};

var PremiumMap = function (_Component) {
  _inherits(PremiumMap, _Component);

  function PremiumMap() {
    _classCallCheck(this, PremiumMap);

    var _this = _possibleConstructorReturn(this, (PremiumMap.__proto__ || Object.getPrototypeOf(PremiumMap)).apply(this, arguments));

    _this.state = {
      thisAddress: "",
      thisMap: null,
      thisInfo: null,
      fetching: false
    };

    _this.initMap = _this.initMap.bind(_this);
    return _this;
  }

  _createClass(PremiumMap, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _props = this.props,
          attributes = _props.attributes,
          setAttributes = _props.setAttributes,
          clientId = _props.clientId;


      if (!attributes.mapID) {
        setAttributes({ mapID: "premium-map-" + clientId });
      }
      this.initMap();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      //if (prevProps.attributes !== this.props.attributes) {
      clearTimeout(isMapUpdated);
      isMapUpdated = setTimeout(this.initMap, 500);
      //}
    }
  }, {
    key: "initMap",
    value: function initMap() {
      if (typeof google === "undefined" || !this.props.attributes.mapID) return null;

      var _state = this.state,
          thisMap = _state.thisMap,
          thisInfo = _state.thisInfo;
      var _props$attributes = this.props.attributes,
          mapID = _props$attributes.mapID,
          mapStyle = _props$attributes.mapStyle,
          mapType = _props$attributes.mapType,
          zoom = _props$attributes.zoom,
          mapTypeControl = _props$attributes.mapTypeControl,
          zoomControl = _props$attributes.zoomControl,
          fullscreenControl = _props$attributes.fullscreenControl,
          streetViewControl = _props$attributes.streetViewControl,
          scrollwheel = _props$attributes.scrollwheel,
          centerLng = _props$attributes.centerLng,
          centerLat = _props$attributes.centerLat,
          markerTitle = _props$attributes.markerTitle,
          markerOpen = _props$attributes.markerOpen,
          markerDesc = _props$attributes.markerDesc,
          mapMarker = _props$attributes.mapMarker,
          markerIconUrl = _props$attributes.markerIconUrl,
          markerCustom = _props$attributes.markerCustom,
          maxWidth = _props$attributes.maxWidth,
          boxAlign = _props$attributes.boxAlign,
          boxPadding = _props$attributes.boxPadding,
          titleColor = _props$attributes.titleColor,
          titleSize = _props$attributes.titleSize,
          descColor = _props$attributes.descColor,
          descSize = _props$attributes.descSize,
          gapBetween = _props$attributes.gapBetween;


      var map = thisMap;
      var infoWindow = thisInfo;
      var latlng = new google.maps.LatLng(parseFloat(centerLat), parseFloat(centerLng));
      if (!map) {
        var mapElem = document.getElementById(mapID);
        map = new google.maps.Map(mapElem, {
          zoom: zoom,
          gestureHandling: "cooperative",
          mapTypeId: mapType,
          mapTypeControl: mapTypeControl,
          zoomControl: zoomControl,
          fullscreenControl: fullscreenControl,
          streetViewControl: streetViewControl,
          scrollwheel: scrollwheel,
          center: latlng,
          styles: JSON.parse(mapStyle)
        });
        this.setState({ thisMap: map });
      }

      map.setOptions({
        zoom: zoom,
        mapTypeId: mapType,
        mapTypeControl: mapTypeControl,
        zoomControl: zoomControl,
        fullscreenControl: fullscreenControl,
        streetViewControl: streetViewControl,
        styles: JSON.parse(mapStyle)
      });

      if (!infoWindow && mapMarker && "" !== markerTitle && "" !== markerDesc) {
        infoWindow = new google.maps.InfoWindow({
          maxWidth: maxWidth
        });
        this.setState({ thisInfo: infoWindow });
      }

      if (mapMarker && "" !== markerTitle && "" !== markerDesc) {
        infoWindow.setContent("<div class=\"" + className + "__info\" style=\"text-align:" + boxAlign + ";padding:" + boxPadding + "px\"\n            >\n            <h3\n                class=\"" + className + "__title\"\n                style=\"color:" + titleColor + ";font-size:" + titleSize + "px;margin-bottom:" + gapBetween + "px\"\n            >\n                " + markerTitle + "\n            </h3>\n            <div\n                class=\"" + className + "__desc\"\n                style=\"color: " + descColor + ";font-size: " + descSize + "px\"\n            >\n                " + markerDesc + "\n            </div>\n        </div>");
      }

      map.setCenter(latlng);

      if (mapMarker) {
        var marker = new google.maps.Marker({
          position: latlng,
          map: map,
          icon: markerCustom ? markerIconUrl : ""
        });

        if (markerOpen) {
          infoWindow.open(map, marker);
        }

        google.maps.event.addListener(marker, "click", function () {
          infoWindow.open(map, marker);
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          isSelected = _props2.isSelected,
          setAttributes = _props2.setAttributes,
          clientId = _props2.clientId;
      var _props$attributes2 = this.props.attributes,
          mapID = _props$attributes2.mapID,
          mapStyle = _props$attributes2.mapStyle,
          mapType = _props$attributes2.mapType,
          height = _props$attributes2.height,
          zoom = _props$attributes2.zoom,
          mapTypeControl = _props$attributes2.mapTypeControl,
          zoomControl = _props$attributes2.zoomControl,
          fullscreenControl = _props$attributes2.fullscreenControl,
          streetViewControl = _props$attributes2.streetViewControl,
          scrollwheel = _props$attributes2.scrollwheel,
          centerLng = _props$attributes2.centerLng,
          centerLat = _props$attributes2.centerLat,
          markerDesc = _props$attributes2.markerDesc,
          markerTitle = _props$attributes2.markerTitle,
          markerOpen = _props$attributes2.markerOpen,
          mapMarker = _props$attributes2.mapMarker,
          markerIconUrl = _props$attributes2.markerIconUrl,
          markerIconId = _props$attributes2.markerIconId,
          markerCustom = _props$attributes2.markerCustom,
          maxWidth = _props$attributes2.maxWidth,
          titleColor = _props$attributes2.titleColor,
          titleSize = _props$attributes2.titleSize,
          descColor = _props$attributes2.descColor,
          descSize = _props$attributes2.descSize,
          boxAlign = _props$attributes2.boxAlign,
          boxPadding = _props$attributes2.boxPadding,
          gapBetween = _props$attributes2.gapBetween;


      var TYPES = [{
        value: "roadmap",
        label: __("Road Map")
      }, {
        value: "satellite",
        label: __("Satellite")
      }, {
        value: "terrain",
        label: __("Terrain")
      }, {
        value: "hybrid",
        label: __("Hybrid")
      }];

      var ALIGNS = ["left", "center", "right"];
      return [typeof google !== "undefined" && isSelected && wp.element.createElement(
        InspectorControls,
        { key: "key" },
        wp.element.createElement(
          PanelBody,
          {
            title: __("Center Location"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(TextControl, {
            label: __("Longitude"),
            value: centerLng,
            help: [__("Get your location coordinates from"), wp.element.createElement(
              "a",
              { href: "https://www.latlong.net/", target: "_blank" },
              "\xA0",
              __("here")
            )],
            onChange: function onChange(newLng) {
              return setAttributes({ centerLng: newLng });
            }
          }),
          wp.element.createElement(TextControl, {
            label: __("Latitude"),
            value: centerLat,
            onChange: function onChange(newLat) {
              return setAttributes({ centerLat: newLat });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Marker"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(ToggleControl, {
            label: __("Enable Marker"),
            checked: mapMarker,
            onChange: function onChange(check) {
              return setAttributes({ mapMarker: check });
            },
            help: __("Disable marker is applied on page reload")
          }),
          mapMarker && wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(TextControl, {
              label: __("Marker Title"),
              value: markerTitle,
              onChange: function onChange(newText) {
                return setAttributes({ markerTitle: newText });
              }
            }),
            wp.element.createElement(TextareaControl, {
              label: __("Marker Description"),
              value: markerDesc,
              onChange: function onChange(newText) {
                return setAttributes({ markerDesc: newText });
              }
            }),
            wp.element.createElement(RangeControl, {
              label: __("Spacing (PX)"),
              value: gapBetween,
              min: "10",
              max: "80",
              onChange: function onChange(newSize) {
                return setAttributes({ gapBetween: newSize });
              }
            }),
            wp.element.createElement(ToggleControl, {
              label: __("Description opened by default"),
              checked: markerOpen,
              onChange: function onChange(newValue) {
                return setAttributes({ markerOpen: newValue });
              }
            }),
            wp.element.createElement(Toolbar, {
              controls: ALIGNS.map(function (align) {
                return {
                  icon: "editor-align" + align,
                  isActive: align === boxAlign,
                  onClick: function onClick() {
                    return setAttributes({ boxAlign: align });
                  }
                };
              })
            }),
            wp.element.createElement(ToggleControl, {
              label: __("Custom Marker Icon"),
              checked: markerCustom,
              onChange: function onChange(check) {
                return setAttributes({ markerCustom: check });
              }
            }),
            markerCustom && markerIconUrl && wp.element.createElement("img", { src: markerIconUrl, width: "100%", height: "auto" }),
            markerCustom && wp.element.createElement(MediaUpload, {
              allowedTypes: ["image"],
              onSelect: function onSelect(media) {
                setAttributes({
                  markerIconId: media.id,
                  markerIconUrl: "undefined" === typeof media.sizes.thumbnail ? media.url : media.sizes.thumbnail.url
                });
              },
              type: "image",
              value: markerIconId,
              render: function render(_ref) {
                var open = _ref.open;
                return wp.element.createElement(
                  IconButton,
                  {
                    label: __("Change Marker Icon"),
                    icon: "edit",
                    onClick: open
                  },
                  __("Change Marker Icon")
                );
              }
            }),
            wp.element.createElement(RangeControl, {
              label: __("Description Box Max Width (PX)"),
              value: maxWidth,
              min: "10",
              max: "500",
              onChange: function onChange(newSize) {
                return setAttributes({ maxWidth: newSize });
              }
            }),
            wp.element.createElement(RangeControl, {
              label: __("Description Box Padding (PX)"),
              value: boxPadding,
              min: "1",
              max: "50",
              onChange: function onChange(newSize) {
                return setAttributes({ boxPadding: newSize });
              }
            })
          )
        ),
        mapMarker && markerTitle && wp.element.createElement(
          PanelBody,
          {
            title: __("Marker Title Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(RangeControl, {
            label: __("Font Size (PX)"),
            value: titleSize,
            min: "10",
            max: "80",
            onChange: function onChange(newSize) {
              return setAttributes({ titleSize: newSize });
            }
          }),
          wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(
              "p",
              null,
              __("Text Color")
            ),
            wp.element.createElement(ColorPalette, {
              value: titleColor,
              onChange: function onChange(newValue) {
                return setAttributes({
                  titleColor: newValue === undefined ? "transparent" : newValue
                });
              },
              allowReset: true
            })
          )
        ),
        mapMarker && markerDesc && wp.element.createElement(
          PanelBody,
          {
            title: __("Marker Description Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(RangeControl, {
            label: __("Font Size (PX)"),
            value: descSize,
            min: "10",
            max: "80",
            onChange: function onChange(newSize) {
              return setAttributes({ descSize: newSize });
            }
          }),
          wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(
              "p",
              null,
              __("Text Color")
            ),
            wp.element.createElement(ColorPalette, {
              value: descColor,
              onChange: function onChange(newValue) {
                return setAttributes({
                  descColor: newValue === undefined ? "transparent" : newValue
                });
              },
              allowReset: true
            })
          )
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Controls"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(SelectControl, {
            label: __("Map Type"),
            options: TYPES,
            value: mapType,
            onChange: function onChange(newType) {
              return setAttributes({ mapType: newType });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Map Height (PX)"),
            value: height,
            min: "10",
            max: "800",
            onChange: function onChange(newSize) {
              return setAttributes({ height: newSize });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Zoom"),
            value: zoom,
            min: "1",
            max: "14",
            onChange: function onChange(newSize) {
              return setAttributes({ zoom: newSize });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Map Type Controls"),
            checked: mapTypeControl,
            onChange: function onChange(check) {
              return setAttributes({ mapTypeControl: check });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Zoom Controls"),
            checked: zoomControl,
            onChange: function onChange(check) {
              return setAttributes({ zoomControl: check });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Street View Control"),
            checked: streetViewControl,
            onChange: function onChange(check) {
              return setAttributes({ streetViewControl: check });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Full Screen Control"),
            checked: fullscreenControl,
            onChange: function onChange(check) {
              return setAttributes({ fullscreenControl: check });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Scroll Wheel Zoom"),
            checked: scrollwheel,
            onChange: function onChange(check) {
              return setAttributes({ scrollwheel: check });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Map Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(TextareaControl, {
            label: __("Maps Style"),
            value: mapStyle,
            help: [__("Get your custom styling from"), wp.element.createElement(
              "a",
              { href: "https://snazzymaps.com/", target: "_blank" },
              "\xA0",
              __("here")
            )],
            onChange: function onChange(newStyle) {
              return setAttributes({ mapStyle: "" !== newStyle ? newStyle : "[]" });
            }
          })
        )
      ), wp.element.createElement("div", {
        className: className + "__wrap",
        id: mapID,
        style: {
          height: height + "px"
        }
      })];
    }
  }]);

  return PremiumMap;
}(Component);

registerBlockType("premium/maps", {
  title: __("Maps"),
  icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "maps" }),
  category: "premium-blocks",
  attributes: mapAttrs,
  supports: {
    inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["l" /* maps */]
  },
  edit: PremiumMap,
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        mapID = _props$attributes3.mapID,
        height = _props$attributes3.height,
        mapStyle = _props$attributes3.mapStyle,
        mapType = _props$attributes3.mapType,
        zoom = _props$attributes3.zoom,
        mapTypeControl = _props$attributes3.mapTypeControl,
        zoomControl = _props$attributes3.zoomControl,
        fullscreenControl = _props$attributes3.fullscreenControl,
        streetViewControl = _props$attributes3.streetViewControl,
        scrollwheel = _props$attributes3.scrollwheel,
        centerLat = _props$attributes3.centerLat,
        centerLng = _props$attributes3.centerLng,
        mapMarker = _props$attributes3.mapMarker,
        markerOpen = _props$attributes3.markerOpen,
        markerIconUrl = _props$attributes3.markerIconUrl,
        markerCustom = _props$attributes3.markerCustom,
        maxWidth = _props$attributes3.maxWidth,
        markerTitle = _props$attributes3.markerTitle,
        markerDesc = _props$attributes3.markerDesc,
        titleColor = _props$attributes3.titleColor,
        titleSize = _props$attributes3.titleSize,
        descColor = _props$attributes3.descColor,
        descSize = _props$attributes3.descSize,
        boxAlign = _props$attributes3.boxAlign,
        boxPadding = _props$attributes3.boxPadding,
        gapBetween = _props$attributes3.gapBetween;


    return wp.element.createElement(
      "div",
      {
        className: className + "__wrap",
        id: mapID,
        style: {
          height: height + "px"
        }
      },
      wp.element.createElement(
        "div",
        { className: className + "__marker" },
        wp.element.createElement(
          "div",
          {
            className: className + "__info",
            style: {
              textAlign: boxAlign,
              padding: boxPadding + "px"
            }
          },
          markerTitle && wp.element.createElement(
            "h3",
            {
              className: className + "__title",
              style: {
                color: titleColor,
                fontSize: titleSize + "px",
                marginBottom: gapBetween + "px"
              }
            },
            markerTitle
          ),
          markerDesc && wp.element.createElement(
            "div",
            {
              className: className + "__desc",
              style: {
                color: descColor,
                fontSize: descSize + "px"
              }
            },
            markerDesc
          )
        )
      ),
      wp.element.createElement(
        "script",
        null,
        "window.addEventListener('load',function(){\n                    if( typeof google === 'undefined' ) return;\n                    let mapElem = document.getElementById('" + mapID + "');\n                    let pin = mapElem.querySelector('." + className + "__marker');\n                    let latlng = new google.maps.LatLng( parseFloat( " + centerLat + " ) , parseFloat( " + centerLng + " ) );\n\n                    let map = new google.maps.Map(mapElem, {\n                        zoom: " + zoom + ",\n                        gestureHandling: 'cooperative',\n                        mapTypeId: '" + mapType + "',\n                        mapTypeControl: " + mapTypeControl + ",\n                        zoomControl: " + zoomControl + ",\n                        fullscreenControl: " + fullscreenControl + ",\n                        streetViewControl: " + streetViewControl + ",\n                        scrollwheel: " + scrollwheel + ",\n                        center: latlng,\n                        styles: " + mapStyle + "\n                    });\n                    if( " + mapMarker + " ) {\n                        let markerIcon = '" + markerIconUrl + "';\n                        let marker = new google.maps.Marker({\n                            position\t: latlng,\n                            map\t\t\t: map,\n                            icon        : " + markerCustom + " ? markerIcon : ''\n                        });\n                        \n                        let infowindow = new google.maps.InfoWindow({\n                            maxWidth    : " + maxWidth + ",\n                            content\t\t: pin.innerHTML\n                        });\n                        if (" + markerOpen + ") {\n                          infowindow.open( map, marker );\n                        }\n                        google.maps.event.addListener(marker, 'click', function() {\n                            infowindow.open( map, marker );\n                        });\n                    }\n                    \n                });"
      )
    );
  },
  deprecated: [{
    attributes: mapAttrs,
    save: function save(props) {
      var _props$attributes4 = props.attributes,
          mapID = _props$attributes4.mapID,
          height = _props$attributes4.height,
          mapStyle = _props$attributes4.mapStyle,
          mapType = _props$attributes4.mapType,
          zoom = _props$attributes4.zoom,
          mapTypeControl = _props$attributes4.mapTypeControl,
          zoomControl = _props$attributes4.zoomControl,
          fullscreenControl = _props$attributes4.fullscreenControl,
          streetViewControl = _props$attributes4.streetViewControl,
          scrollwheel = _props$attributes4.scrollwheel,
          centerLat = _props$attributes4.centerLat,
          centerLng = _props$attributes4.centerLng,
          mapMarker = _props$attributes4.mapMarker,
          markerOpen = _props$attributes4.markerOpen,
          markerIconUrl = _props$attributes4.markerIconUrl,
          markerCustom = _props$attributes4.markerCustom,
          maxWidth = _props$attributes4.maxWidth,
          markerTitle = _props$attributes4.markerTitle,
          markerDesc = _props$attributes4.markerDesc,
          titleColor = _props$attributes4.titleColor,
          titleSize = _props$attributes4.titleSize,
          descColor = _props$attributes4.descColor,
          descSize = _props$attributes4.descSize,
          boxAlign = _props$attributes4.boxAlign,
          boxPadding = _props$attributes4.boxPadding,
          gapBetween = _props$attributes4.gapBetween;


      return wp.element.createElement(
        "div",
        {
          className: className + "__wrap",
          id: mapID,
          style: {
            height: height + "px"
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__marker" },
          wp.element.createElement(
            "div",
            {
              className: className + "__info",
              style: {
                textAlign: boxAlign,
                padding: boxPadding + "px"
              }
            },
            markerTitle && wp.element.createElement(
              "h3",
              {
                className: className + "__title",
                style: {
                  color: titleColor,
                  fontSize: titleSize + "px",
                  marginBottom: gapBetween + "px"
                }
              },
              markerTitle
            ),
            markerDesc && wp.element.createElement(
              "div",
              {
                className: className + "__desc",
                style: {
                  color: descColor,
                  fontSize: descSize + "px"
                }
              },
              markerDesc
            )
          )
        ),
        wp.element.createElement(
          "script",
          null,
          "window.addEventListener('load',function(){\n                        if( typeof google === 'undefined' ) return;\n                        let mapElem = document.getElementById('" + mapID + "');\n                        let pin = mapElem.querySelector('." + className + "__marker');\n                        let latlng = new google.maps.LatLng( parseFloat( " + centerLat + " ) , parseFloat( " + centerLng + " ) );\n    \n                        let map = new google.maps.Map(mapElem, {\n                            zoom: " + zoom + ",\n                            gestureHandling: 'cooperative',\n                            mapTypeId: '" + mapType + "',\n                            mapTypeControl: " + mapTypeControl + ",\n                            zoomControl: " + zoomControl + ",\n                            fullscreenControl: " + fullscreenControl + ",\n                            streetViewControl: " + streetViewControl + ",\n                            scrollwheel: " + scrollwheel + ",\n                            center: latlng,\n                            styles: " + mapStyle + "\n                        });\n                        if( " + mapMarker + " ) {\n                            let markerIcon = '" + markerIconUrl + "';\n                            let marker = new google.maps.Marker({\n                                position\t: latlng,\n                                map\t\t\t: map,\n                                icon        : " + markerCustom + " ? markerIcon : ''\n                            });\n                            \n                            let infowindow = new google.maps.InfoWindow({\n                                maxWidth    : " + maxWidth + ",\n                                content\t\t: pin.innerHTML\n                            });\n                            if (" + markerOpen + ") {\n                              infowindow.open( map, marker );\n                            }\n                            google.maps.event.addListener(marker, 'click', function() {\n                                infowindow.open( map, marker );\n                            });\n                        }\n                        \n                    });"
        )
      );
    }
  }]
});

/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(229);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__save__ = __webpack_require__(230);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__deprecated__ = __webpack_require__(231);






var registerBlockType = wp.blocks.registerBlockType;
var __ = wp.i18n.__;


var pricingAttrs = {
    contentAlign: {
        type: "string",
        default: "center"
    },
    tableBack: {
        type: "string"
    },
    borderType: {
        type: "string",
        default: "none"
    },
    borderWidth: {
        type: "number",
        default: "1"
    },
    borderRadius: {
        type: "number",
        default: "0"
    },
    borderColor: {
        type: "string"
    },
    tablePadding: {
        type: "number",
        default: "0"
    },
    tableShadowColor: {
        type: "string"
    },
    tableShadowBlur: {
        type: "number",
        default: "0"
    },
    tableShadowHorizontal: {
        type: "number",
        default: "0"
    },
    tableShadowVertical: {
        type: "number",
        default: "0"
    },
    tableShadowPosition: {
        type: "string",
        default: ""
    },
    title: {
        type: "array",
        source: "children",
        selector: ".premium-pricing-table__title",
        default: "Pricing Table"
    },
    titleTag: {
        type: "string",
        default: "H2"
    },
    titleColor: {
        type: "string",
        default: "#6ec1e4"
    },
    titleSize: {
        type: "number"
    },
    titleLine: {
        type: "number"
    },
    titleLetter: {
        type: "number"
    },
    titleStyle: {
        type: "string"
    },
    titleUpper: {
        type: "boolean"
    },
    titleWeight: {
        type: "number",
        default: 500
    },
    titleShadowColor: {
        type: "string"
    },
    titleShadowBlur: {
        type: "number",
        default: "0"
    },
    titleShadowHorizontal: {
        type: "number",
        default: "0"
    },
    titleShadowVertical: {
        type: "number",
        default: "0"
    },
    titleBack: {
        type: "string"
    },
    titleMarginB: {
        type: "number",
        default: 20
    },
    titleMarginT: {
        type: "number",
        default: 20
    },
    titlePadding: {
        type: "number",
        default: "0"
    },
    desc: {
        type: "array",
        source: "children",
        selector: ".premium-pricing-table__desc"
    },
    descColor: {
        type: "string",
        default: "#000"
    },
    descSize: {
        type: "number"
    },
    descWeight: {
        type: "number"
    },
    descLetter: {
        type: "number"
    },
    descStyle: {
        type: "string"
    },
    descLine: {
        type: "number"
    },
    descBack: {
        type: "string"
    },
    descMarginT: {
        type: "number",
        default: "0"
    },
    descMarginB: {
        type: "number",
        default: "30"
    },
    descPadding: {
        type: "number",
        default: "0"
    },
    titleChecked: {
        type: "boolean",
        default: true
    },
    descChecked: {
        type: "boolean",
        default: false
    },
    priceChecked: {
        type: "boolean",
        default: true
    },
    priceBack: {
        type: "string"
    },
    priceMarginT: {
        type: "number"
    },
    priceMarginB: {
        type: "number",
        default: 10
    },
    pricePadding: {
        type: "number"
    },
    slashPrice: {
        type: "string"
    },
    slashColor: {
        type: "string"
    },
    slashSize: {
        type: "number",
        default: 20
    },
    slashWeight: {
        type: "number"
    },
    currPrice: {
        type: "string",
        default: "$"
    },
    currColor: {
        type: "string"
    },
    currSize: {
        type: "number",
        default: 20
    },
    currWeight: {
        type: "number"
    },
    valPrice: {
        type: "string",
        default: "25"
    },
    valColor: {
        type: "string"
    },
    valSize: {
        type: "number",
        default: 50
    },
    valWeight: {
        type: "number"
    },
    divPrice: {
        type: "string",
        default: "/"
    },
    divColor: {
        type: "string"
    },
    divSize: {
        type: "number",
        default: 20
    },
    divWeight: {
        type: "number"
    },
    durPrice: {
        type: "string",
        default: "m"
    },
    durColor: {
        type: "string"
    },
    durSize: {
        type: "number",
        default: 20
    },
    durWeight: {
        type: "number"
    },
    selectedStyle: {
        type: "string",
        default: "price"
    },
    btnChecked: {
        type: "boolean",
        default: true
    },
    btnText: {
        type: "string",
        default: "Get Started"
    },
    btnLink: {
        type: "string",
        source: "attribute",
        attribute: "href",
        selector: ".premium-pricing-table__button_link"
    },
    btnTarget: {
        type: "boolean",
        default: true
    },
    btnColor: {
        type: "string",
        default: "#fff"
    },
    btnHoverColor: {
        type: "string"
    },
    btnWidth: {
        type: "number"
    },
    btnSize: {
        type: "number"
    },
    btnWeight: {
        type: "number",
        default: 900
    },
    btnLine: {
        type: "number"
    },
    btnLetter: {
        type: "number"
    },
    btnStyle: {
        type: "string"
    },
    btnUpper: {
        type: "boolean"
    },
    btnBack: {
        type: "string",
        default: "#6ec1e4"
    },
    btnHoverBack: {
        type: "string"
    },
    btnMarginT: {
        type: "number",
        default: "0"
    },
    btnMarginB: {
        type: "number",
        default: "0"
    },
    btnPadding: {
        type: "number",
        default: 10
    },
    btnPaddingU: {
        type: "string"
    },
    btnBorderType: {
        type: "string",
        default: "none"
    },
    btnBorderWidth: {
        type: "number",
        default: "1"
    },
    btnBorderRadius: {
        type: "number",
        default: "0"
    },
    btnBorderColor: {
        type: "string"
    },
    badgeChecked: {
        type: "boolean"
    },
    badgePos: {
        type: "string",
        default: "right"
    },
    badgeBack: {
        type: "string",
        default: "#6ec1e4"
    },
    badgeColor: {
        type: "string"
    },
    badgeTextSize: {
        type: "number"
    },
    badgeSize: {
        type: "number"
    },
    badgeTop: {
        type: "number"
    },
    badgeHorizontal: {
        type: "number"
    },
    badgeWidth: {
        type: "number"
    },
    badgeWeight: {
        type: "number",
        default: 900
    },
    badgeLetter: {
        type: "number"
    },
    badgeStyle: {
        type: "string"
    },
    badgeUpper: {
        type: "boolean"
    },
    badgeText: {
        type: "string",
        default: __("Popular")
    },
    listChecked: {
        type: "boolean",
        default: true
    },
    listColor: {
        type: "string"
    },
    listSize: {
        type: "number"
    },
    listWeight: {
        type: "number",
        default: 500
    },
    listItemsStyle: {
        type: "string"
    },
    listLetter: {
        type: "number"
    },
    listLine: {
        type: "number"
    },
    listUpper: {
        type: "boolean"
    },
    listBack: {
        type: "string"
    },
    listItems: {
        type: "array",
        source: "children",
        selector: ".premium-pricing-table__list"
    },
    listMarginB: {
        type: "number",
        default: 20
    },
    listMarginT: {
        type: "number"
    },
    listPadding: {
        type: "number"
    },
    listStyle: {
        type: "string",
        default: "disc"
    },
    featsAlign: {
        type: "string"
    },
    slashV: {
        type: "string",
        default: "center"
    },
    currV: {
        type: "string",
        default: "center"
    },
    valV: {
        type: "string",
        default: "center"
    },
    divV: {
        type: "string",
        default: "center"
    },
    durV: {
        type: "string",
        default: "center"
    },
    id: {
        type: "string"
    }
};

registerBlockType("premium/pricing-table", {
    title: __("Pricing Table"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "pricing-table" }),
    category: "premium-blocks",
    attributes: pricingAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["n" /* pricingTable */]
    },
    edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_3__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_4__deprecated__["a" /* default */]
});

/***/ }),
/* 229 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_size_units__ = __webpack_require__(7);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    Toolbar = _wp$components.Toolbar,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    InspectorControls = _wp$editor.InspectorControls,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    RichText = _wp$editor.RichText,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    ColorPalette = _wp$editor.ColorPalette,
    URLInput = _wp$editor.URLInput;

var PremiumPricingTable = function (_Component) {
  _inherits(PremiumPricingTable, _Component);

  function PremiumPricingTable() {
    _classCallCheck(this, PremiumPricingTable);

    return _possibleConstructorReturn(this, (PremiumPricingTable.__proto__ || Object.getPrototypeOf(PremiumPricingTable)).apply(this, arguments));
  }

  _createClass(PremiumPricingTable, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _props = this.props,
          setAttributes = _props.setAttributes,
          clientId = _props.clientId;


      setAttributes({ id: clientId });
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          isSelected = _props2.isSelected,
          setAttributes = _props2.setAttributes,
          className = _props2.className;
      var _props$attributes = this.props.attributes,
          contentAlign = _props$attributes.contentAlign,
          tableBack = _props$attributes.tableBack,
          borderType = _props$attributes.borderType,
          borderWidth = _props$attributes.borderWidth,
          borderRadius = _props$attributes.borderRadius,
          borderColor = _props$attributes.borderColor,
          tablePadding = _props$attributes.tablePadding,
          titleChecked = _props$attributes.titleChecked,
          tableShadowBlur = _props$attributes.tableShadowBlur,
          tableShadowColor = _props$attributes.tableShadowColor,
          tableShadowHorizontal = _props$attributes.tableShadowHorizontal,
          tableShadowVertical = _props$attributes.tableShadowVertical,
          tableShadowPosition = _props$attributes.tableShadowPosition,
          title = _props$attributes.title,
          titleTag = _props$attributes.titleTag,
          titleColor = _props$attributes.titleColor,
          titleSize = _props$attributes.titleSize,
          titleLine = _props$attributes.titleLine,
          titleLetter = _props$attributes.titleLetter,
          titleStyle = _props$attributes.titleStyle,
          titleUpper = _props$attributes.titleUpper,
          titleWeight = _props$attributes.titleWeight,
          titleBack = _props$attributes.titleBack,
          titleShadowBlur = _props$attributes.titleShadowBlur,
          titleShadowColor = _props$attributes.titleShadowColor,
          titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
          titleShadowVertical = _props$attributes.titleShadowVertical,
          titleMarginT = _props$attributes.titleMarginT,
          titleMarginB = _props$attributes.titleMarginB,
          titlePadding = _props$attributes.titlePadding,
          descChecked = _props$attributes.descChecked,
          descColor = _props$attributes.descColor,
          descSize = _props$attributes.descSize,
          descLine = _props$attributes.descLine,
          descWeight = _props$attributes.descWeight,
          descStyle = _props$attributes.descStyle,
          descLetter = _props$attributes.descLetter,
          desc = _props$attributes.desc,
          descBack = _props$attributes.descBack,
          descMarginT = _props$attributes.descMarginT,
          descMarginB = _props$attributes.descMarginB,
          descPadding = _props$attributes.descPadding,
          priceChecked = _props$attributes.priceChecked,
          priceBack = _props$attributes.priceBack,
          priceMarginT = _props$attributes.priceMarginT,
          priceMarginB = _props$attributes.priceMarginB,
          pricePadding = _props$attributes.pricePadding,
          slashPrice = _props$attributes.slashPrice,
          slashColor = _props$attributes.slashColor,
          slashSize = _props$attributes.slashSize,
          slashWeight = _props$attributes.slashWeight,
          slashV = _props$attributes.slashV,
          currPrice = _props$attributes.currPrice,
          currColor = _props$attributes.currColor,
          currSize = _props$attributes.currSize,
          currWeight = _props$attributes.currWeight,
          currV = _props$attributes.currV,
          valPrice = _props$attributes.valPrice,
          valColor = _props$attributes.valColor,
          valSize = _props$attributes.valSize,
          valWeight = _props$attributes.valWeight,
          valV = _props$attributes.valV,
          divPrice = _props$attributes.divPrice,
          divColor = _props$attributes.divColor,
          divSize = _props$attributes.divSize,
          divWeight = _props$attributes.divWeight,
          divV = _props$attributes.divV,
          durPrice = _props$attributes.durPrice,
          durColor = _props$attributes.durColor,
          durSize = _props$attributes.durSize,
          durWeight = _props$attributes.durWeight,
          durV = _props$attributes.durV,
          selectedStyle = _props$attributes.selectedStyle,
          btnChecked = _props$attributes.btnChecked,
          btnText = _props$attributes.btnText,
          btnTarget = _props$attributes.btnTarget,
          btnLink = _props$attributes.btnLink,
          btnColor = _props$attributes.btnColor,
          btnHoverColor = _props$attributes.btnHoverColor,
          btnSize = _props$attributes.btnSize,
          btnWeight = _props$attributes.btnWeight,
          btnLetter = _props$attributes.btnLetter,
          btnLine = _props$attributes.btnLine,
          btnUpper = _props$attributes.btnUpper,
          btnStyle = _props$attributes.btnStyle,
          btnBack = _props$attributes.btnBack,
          btnHoverBack = _props$attributes.btnHoverBack,
          btnMarginT = _props$attributes.btnMarginT,
          btnMarginB = _props$attributes.btnMarginB,
          btnPadding = _props$attributes.btnPadding,
          btnPaddingU = _props$attributes.btnPaddingU,
          btnWidth = _props$attributes.btnWidth,
          btnBorderType = _props$attributes.btnBorderType,
          btnBorderWidth = _props$attributes.btnBorderWidth,
          btnBorderRadius = _props$attributes.btnBorderRadius,
          btnBorderColor = _props$attributes.btnBorderColor,
          badgeChecked = _props$attributes.badgeChecked,
          badgePos = _props$attributes.badgePos,
          badgeBack = _props$attributes.badgeBack,
          badgeColor = _props$attributes.badgeColor,
          badgeSize = _props$attributes.badgeSize,
          badgeTextSize = _props$attributes.badgeTextSize,
          badgeTop = _props$attributes.badgeTop,
          badgeHorizontal = _props$attributes.badgeHorizontal,
          badgeWidth = _props$attributes.badgeWidth,
          badgeWeight = _props$attributes.badgeWeight,
          badgeLetter = _props$attributes.badgeLetter,
          badgeStyle = _props$attributes.badgeStyle,
          badgeUpper = _props$attributes.badgeUpper,
          badgeText = _props$attributes.badgeText,
          listChecked = _props$attributes.listChecked,
          listColor = _props$attributes.listColor,
          listWeight = _props$attributes.listWeight,
          listSize = _props$attributes.listSize,
          listItemsStyle = _props$attributes.listItemsStyle,
          listLetter = _props$attributes.listLetter,
          listLine = _props$attributes.listLine,
          listUpper = _props$attributes.listUpper,
          listBack = _props$attributes.listBack,
          listItems = _props$attributes.listItems,
          listMarginT = _props$attributes.listMarginT,
          listMarginB = _props$attributes.listMarginB,
          listPadding = _props$attributes.listPadding,
          listStyle = _props$attributes.listStyle,
          featsAlign = _props$attributes.featsAlign,
          id = _props$attributes.id;


      var ALIGNS = [{
        value: "flex-start",
        label: __("Top")
      }, {
        value: "center",
        label: __("Middle")
      }, {
        value: "flex-end",
        label: __("Bottom")
      }];
      var PRICE = [{
        value: "slash",
        label: __("Slashed Price")
      }, {
        value: "curr",
        label: __("Currency")
      }, {
        value: "price",
        label: __("Price")
      }, {
        value: "divider",
        label: __("Divider")
      }, {
        value: "duration",
        label: __("Duration")
      }];
      var TYPE = [{
        value: "none",
        label: __("None")
      }, {
        value: "check",
        label: __("Check Mark")
      }, {
        value: "disc",
        label: __("Filled Circle")
      }, {
        value: "circle",
        label: __("Outline Circle")
      }, {
        value: "square",
        label: __("Square")
      }];
      var POSITION = [{
        value: "right",
        label: __("Right")
      }, {
        value: "left",
        label: __("Left")
      }];

      var FEATURES_ALIGN = ["left", "center", "right"];

      var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-pricing-table");

      return [isSelected && wp.element.createElement(
        BlockControls,
        { key: "controls" },
        wp.element.createElement(AlignmentToolbar, {
          value: contentAlign,
          onChange: function onChange(newAlign) {
            return setAttributes({ contentAlign: newAlign });
          }
        })
      ), isSelected && wp.element.createElement(
        InspectorControls,
        { key: "inspector" },
        wp.element.createElement(
          PanelBody,
          {
            title: __("Display Options"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(ToggleControl, {
            label: __("Title"),
            checked: titleChecked,
            onChange: function onChange(newValue) {
              return setAttributes({ titleChecked: newValue });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Price"),
            checked: priceChecked,
            onChange: function onChange(newValue) {
              return setAttributes({ priceChecked: newValue });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Features"),
            checked: listChecked,
            onChange: function onChange(newValue) {
              return setAttributes({ listChecked: newValue });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Description"),
            checked: descChecked,
            onChange: function onChange(newValue) {
              return setAttributes({ descChecked: newValue });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Button"),
            checked: btnChecked,
            onChange: function onChange(newValue) {
              return setAttributes({ btnChecked: newValue });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Badge"),
            checked: badgeChecked,
            onChange: function onChange(newValue) {
              return setAttributes({ badgeChecked: newValue });
            }
          })
        ),
        titleChecked && wp.element.createElement(
          PanelBody,
          {
            title: __("Title"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(
            "p",
            null,
            __("Heading")
          ),
          wp.element.createElement(Toolbar, {
            controls: "123456".split("").map(function (tag) {
              return {
                icon: "heading",
                isActive: "H" + tag === titleTag,
                onClick: function onClick() {
                  return setAttributes({ titleTag: "H" + tag });
                },
                subscript: tag
              };
            })
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
            components: ["size", "weight", "style", "upper", "spacing", "line"],
            size: titleSize,
            weight: titleWeight,
            style: titleStyle,
            spacing: titleLetter,
            line: titleLine,
            upper: titleUpper,
            onChangeSize: function onChangeSize(newSize) {
              return setAttributes({ titleSize: newSize });
            },
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ titleWeight: newWeight });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ titleStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ titleLetter: newValue });
            },
            onChangeLine: function onChangeLine(newValue) {
              return setAttributes({ titleLine: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ titleUpper: check });
            }
          }),
          wp.element.createElement(PanelColorSettings, {
            title: __("Colors"),
            className: "premium-panel-body-inner",
            initialOpen: false,
            colorSettings: [{
              value: titleColor,
              onChange: function onChange(newColor) {
                return setAttributes({ titleColor: newColor });
              },
              label: __("Text Color")
            }, {
              value: titleBack,
              onChange: function onChange(newColor) {
                return setAttributes({ titleBack: newColor });
              },
              label: __("Background Color")
            }]
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_text_shadow__["a" /* default */], {
            color: titleShadowColor,
            blur: titleShadowBlur,
            horizontal: titleShadowHorizontal,
            vertical: titleShadowVertical,
            onChangeColor: function onChangeColor(newColor) {
              return setAttributes({ titleShadowColor: newColor.hex });
            },
            onChangeBlur: function onChangeBlur(newBlur) {
              return setAttributes({ titleShadowBlur: newBlur });
            },
            onChangehHorizontal: function onChangehHorizontal(newValue) {
              return setAttributes({ titleShadowHorizontal: newValue });
            },
            onChangeVertical: function onChangeVertical(newValue) {
              return setAttributes({ titleShadowVertical: newValue });
            }
          }),
          wp.element.createElement(
            "div",
            { className: "premium-control-toggle" },
            wp.element.createElement(
              "strong",
              null,
              __("Spacings")
            ),
            wp.element.createElement(Dropdown, {
              className: "premium-control-toggle-btn",
              contentClassName: "premium-control-toggle-content",
              position: "bottom right",
              renderToggle: function renderToggle(_ref) {
                var isOpen = _ref.isOpen,
                    onToggle = _ref.onToggle;
                return wp.element.createElement(
                  Button,
                  { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                  wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
              },
              renderContent: function renderContent() {
                return wp.element.createElement(
                  Fragment,
                  null,
                  wp.element.createElement(RangeControl, {
                    label: __("Margin Top (PX)"),
                    value: titleMarginT,
                    min: "10",
                    max: "80",
                    onChange: function onChange(newSize) {
                      return setAttributes({ titleMarginT: newSize });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Margin Bottom (PX)"),
                    value: titleMarginB,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newMargin) {
                      return setAttributes({ titleMarginB: newMargin });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Padding (PX)"),
                    value: titlePadding,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newPadding) {
                      return setAttributes({ titlePadding: newPadding });
                    }
                  })
                );
              }
            })
          )
        ),
        priceChecked && wp.element.createElement(
          PanelBody,
          {
            title: __("Price"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(TextControl, {
            label: __("Slashed Price"),
            value: slashPrice,
            onChange: function onChange(value) {
              return setAttributes({ slashPrice: value });
            }
          }),
          wp.element.createElement(TextControl, {
            label: __("Currency"),
            value: currPrice,
            onChange: function onChange(value) {
              return setAttributes({ currPrice: value });
            }
          }),
          wp.element.createElement(TextControl, {
            label: __("Price"),
            value: valPrice,
            onChange: function onChange(value) {
              return setAttributes({ valPrice: value });
            }
          }),
          wp.element.createElement(TextControl, {
            label: __("Divider"),
            value: divPrice,
            onChange: function onChange(value) {
              return setAttributes({ divPrice: value });
            }
          }),
          wp.element.createElement(TextControl, {
            label: __("Duration"),
            value: durPrice,
            onChange: function onChange(value) {
              return setAttributes({ durPrice: value });
            }
          }),
          wp.element.createElement(
            PanelBody,
            {
              title: __("Element to Style"),
              className: "premium-panel-body-inner",
              initialOpen: false
            },
            wp.element.createElement(SelectControl, {
              label: __("Element"),
              options: PRICE,
              value: selectedStyle,
              onChange: function onChange(newElem) {
                return setAttributes({ selectedStyle: newElem });
              }
            }),
            "slash" === selectedStyle && wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
                components: ["size", "weight"],
                size: slashSize,
                weight: slashWeight,
                onChangeSize: function onChangeSize(newSize) {
                  return setAttributes({ slashSize: newSize });
                },
                onChangeWeight: function onChangeWeight(newWeight) {
                  return setAttributes({ slashWeight: newWeight });
                }
              }),
              wp.element.createElement(SelectControl, {
                label: __("Vertical Align"),
                options: ALIGNS,
                value: slashV,
                onChange: function onChange(newValue) {
                  return setAttributes({ slashV: newValue });
                }
              }),
              wp.element.createElement(
                Fragment,
                null,
                wp.element.createElement(
                  "p",
                  null,
                  __("Text Color")
                ),
                wp.element.createElement(ColorPalette, {
                  value: slashColor,
                  onChange: function onChange(newValue) {
                    return setAttributes({
                      slashColor: newValue === undefined ? "transparent" : newValue
                    });
                  },
                  allowReset: true
                })
              )
            ),
            "curr" === selectedStyle && wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
                components: ["size", "weight"],
                size: currSize,
                weight: currWeight,
                onChangeSize: function onChangeSize(newSize) {
                  return setAttributes({ currSize: newSize });
                },
                onChangeWeight: function onChangeWeight(newWeight) {
                  return setAttributes({ currWeight: newWeight });
                }
              }),
              wp.element.createElement(SelectControl, {
                label: __("Vertical Align"),
                options: ALIGNS,
                value: currV,
                onChange: function onChange(newValue) {
                  return setAttributes({ currV: newValue });
                }
              }),
              wp.element.createElement(
                Fragment,
                null,
                wp.element.createElement(
                  "p",
                  null,
                  __("Text Color")
                ),
                wp.element.createElement(ColorPalette, {
                  value: currColor,
                  onChange: function onChange(newValue) {
                    return setAttributes({
                      currColor: newValue === undefined ? "transparent" : newValue
                    });
                  },
                  allowReset: true
                })
              )
            ),
            "price" === selectedStyle && wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
                components: ["size", "weight"],
                size: valSize,
                weight: valWeight,
                onChangeSize: function onChangeSize(newSize) {
                  return setAttributes({ valSize: newSize });
                },
                onChangeWeight: function onChangeWeight(newWeight) {
                  return setAttributes({ valWeight: newWeight });
                }
              }),
              wp.element.createElement(SelectControl, {
                label: __("Vertical Align"),
                options: ALIGNS,
                value: valV,
                onChange: function onChange(newValue) {
                  return setAttributes({ valV: newValue });
                }
              }),
              wp.element.createElement(
                Fragment,
                null,
                wp.element.createElement(
                  "p",
                  null,
                  __("Text Color")
                ),
                wp.element.createElement(ColorPalette, {
                  value: valColor,
                  onChange: function onChange(newValue) {
                    return setAttributes({
                      valColor: newValue === undefined ? "transparent" : newValue
                    });
                  },
                  allowReset: true
                })
              )
            ),
            "divider" === selectedStyle && wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
                components: ["size", "weight"],
                size: divSize,
                weight: divWeight,
                onChangeSize: function onChangeSize(newSize) {
                  return setAttributes({ divSize: newSize });
                },
                onChangeWeight: function onChangeWeight(newWeight) {
                  return setAttributes({ divWeight: newWeight });
                }
              }),
              wp.element.createElement(SelectControl, {
                label: __("Vertical Align"),
                options: ALIGNS,
                value: divV,
                onChange: function onChange(newValue) {
                  return setAttributes({ divV: newValue });
                }
              }),
              wp.element.createElement(
                Fragment,
                null,
                wp.element.createElement(
                  "p",
                  null,
                  __("Text Color")
                ),
                wp.element.createElement(ColorPalette, {
                  value: divColor,
                  onChange: function onChange(newValue) {
                    return setAttributes({
                      divColor: newValue === undefined ? "transparent" : newValue
                    });
                  },
                  allowReset: true
                })
              )
            ),
            "duration" === selectedStyle && wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
                components: ["size", "weight"],
                size: durSize,
                weight: durWeight,
                onChangeSize: function onChangeSize(newSize) {
                  return setAttributes({ durSize: newSize });
                },
                onChangeWeight: function onChangeWeight(newWeight) {
                  return setAttributes({ durWeight: newWeight });
                }
              }),
              wp.element.createElement(SelectControl, {
                label: __("Vertical Align"),
                options: ALIGNS,
                value: durV,
                onChange: function onChange(newValue) {
                  return setAttributes({ durV: newValue });
                }
              }),
              wp.element.createElement(
                Fragment,
                null,
                wp.element.createElement(
                  "p",
                  null,
                  __("Text Color")
                ),
                wp.element.createElement(ColorPalette, {
                  value: durColor,
                  onChange: function onChange(newValue) {
                    return setAttributes({
                      durColor: newValue === undefined ? "transparent" : newValue
                    });
                  },
                  allowReset: true
                })
              )
            )
          ),
          wp.element.createElement(
            "div",
            { className: "premium-control-toggle" },
            wp.element.createElement(
              "strong",
              null,
              __("Spacings")
            ),
            wp.element.createElement(Dropdown, {
              className: "premium-control-toggle-btn",
              contentClassName: "premium-control-toggle-content",
              position: "bottom right",
              renderToggle: function renderToggle(_ref2) {
                var isOpen = _ref2.isOpen,
                    onToggle = _ref2.onToggle;
                return wp.element.createElement(
                  Button,
                  { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                  wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
              },
              renderContent: function renderContent() {
                return wp.element.createElement(
                  Fragment,
                  null,
                  wp.element.createElement(RangeControl, {
                    label: __("Container Margin Top (PX)"),
                    value: priceMarginT,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newMargin) {
                      return setAttributes({ priceMarginT: newMargin });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Container Margin Bottom (PX)"),
                    value: priceMarginB,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newPadding) {
                      return setAttributes({ priceMarginB: newPadding });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Container Padding (PX)"),
                    value: pricePadding,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newPadding) {
                      return setAttributes({ pricePadding: newPadding });
                    }
                  })
                );
              }
            })
          ),
          wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(
              "p",
              null,
              __("Container Background Color")
            ),
            wp.element.createElement(ColorPalette, {
              value: priceBack,
              onChange: function onChange(newValue) {
                return setAttributes({
                  priceBack: newValue === undefined ? "transparent" : newValue
                });
              },
              allowReset: true
            })
          )
        ),
        listChecked && wp.element.createElement(
          PanelBody,
          {
            title: __("Features"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(
            "p",
            null,
            __("Align")
          ),
          wp.element.createElement(Toolbar, {
            controls: FEATURES_ALIGN.map(function (contentAlign) {
              return {
                icon: "editor-align" + contentAlign,
                isActive: contentAlign === featsAlign,
                onClick: function onClick() {
                  return setAttributes({ featsAlign: contentAlign });
                }
              };
            })
          }),
          wp.element.createElement(SelectControl, {
            label: __("List Style"),
            options: TYPE,
            value: listStyle,
            onChange: function onChange(newType) {
              return setAttributes({ listStyle: newType });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
            components: ["size", "weight", "style", "upper", "spacing", "line"],
            size: listSize,
            weight: listWeight,
            style: listItemsStyle,
            spacing: listLetter,
            line: listLine,
            upper: listUpper,
            onChangeSize: function onChangeSize(newSize) {
              return setAttributes({ listSize: newSize });
            },
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ listWeight: newWeight });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ listItemsStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ listLetter: newValue });
            },
            onChangeLine: function onChangeLine(newValue) {
              return setAttributes({ listLine: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ listUpper: check });
            }
          }),
          wp.element.createElement(PanelColorSettings, {
            title: __("Colors"),
            className: "premium-panel-body-inner",
            initialOpen: false,
            colorSettings: [{
              value: listColor,
              onChange: function onChange(newColor) {
                return setAttributes({ listColor: newColor });
              },
              label: __("List Items Color")
            }, {
              value: listBack,
              onChange: function onChange(newColor) {
                return setAttributes({ listBack: newColor });
              },
              label: __("Background Color")
            }]
          }),
          wp.element.createElement(
            "div",
            { className: "premium-control-toggle" },
            wp.element.createElement(
              "strong",
              null,
              __("Spacings")
            ),
            wp.element.createElement(Dropdown, {
              className: "premium-control-toggle-btn",
              contentClassName: "premium-control-toggle-content",
              position: "bottom right",
              renderToggle: function renderToggle(_ref3) {
                var isOpen = _ref3.isOpen,
                    onToggle = _ref3.onToggle;
                return wp.element.createElement(
                  Button,
                  { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                  wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
              },
              renderContent: function renderContent() {
                return wp.element.createElement(
                  Fragment,
                  null,
                  wp.element.createElement(RangeControl, {
                    label: __("Margin Top (PX)"),
                    value: listMarginT,
                    onChange: function onChange(newSize) {
                      return setAttributes({ listMarginT: newSize });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Margin Bottom (PX)"),
                    value: listMarginB,
                    onChange: function onChange(newSize) {
                      return setAttributes({ listMarginB: newSize });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Padding (PX)"),
                    value: listPadding,
                    onChange: function onChange(newSize) {
                      return setAttributes({ listPadding: newSize });
                    }
                  })
                );
              }
            })
          )
        ),
        descChecked && wp.element.createElement(
          PanelBody,
          {
            title: __("Description"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
            components: ["size", "weight", "style", "spacing", "line"],
            size: descSize,
            weight: descWeight,
            style: descStyle,
            spacing: descLetter,
            line: descLine,
            onChangeSize: function onChangeSize(newSize) {
              return setAttributes({ descSize: newSize });
            },
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ descWeight: newWeight });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ descStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ descLetter: newValue });
            },
            onChangeLine: function onChangeLine(newValue) {
              return setAttributes({ descLine: newValue });
            }
          }),
          wp.element.createElement(PanelColorSettings, {
            title: __("Colors"),
            className: "premium-panel-body-inner",
            initialOpen: false,
            colorSettings: [{
              value: descColor,
              onChange: function onChange(newColor) {
                return setAttributes({ descColor: newColor });
              },
              label: __("Text Color")
            }, {
              value: descBack,
              onChange: function onChange(newColor) {
                return setAttributes({ descBack: newColor });
              },
              label: __("Background Color")
            }]
          }),
          wp.element.createElement(
            "div",
            { className: "premium-control-toggle" },
            wp.element.createElement(
              "strong",
              null,
              __("Spacings")
            ),
            wp.element.createElement(Dropdown, {
              className: "premium-control-toggle-btn",
              contentClassName: "premium-control-toggle-content",
              position: "bottom right",
              renderToggle: function renderToggle(_ref4) {
                var isOpen = _ref4.isOpen,
                    onToggle = _ref4.onToggle;
                return wp.element.createElement(
                  Button,
                  { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                  wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
              },
              renderContent: function renderContent() {
                return wp.element.createElement(
                  Fragment,
                  null,
                  wp.element.createElement(RangeControl, {
                    label: __("Margin Top (PX)"),
                    value: descMarginT,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newMargin) {
                      return setAttributes({ descMarginT: newMargin });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Margin Bottom (PX)"),
                    value: descMarginB,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newMargin) {
                      return setAttributes({ descMarginB: newMargin });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Padding (PX)"),
                    value: descPadding,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newPadding) {
                      return setAttributes({ descPadding: newPadding });
                    }
                  })
                );
              }
            })
          )
        ),
        btnChecked && wp.element.createElement(
          PanelBody,
          {
            title: __("Button"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
            components: ["size", "weight", "style", "upper", "spacing", "line"],
            size: btnSize,
            weight: btnWeight,
            style: btnStyle,
            spacing: btnLetter,
            line: btnLine,
            upper: btnUpper,
            onChangeSize: function onChangeSize(newSize) {
              return setAttributes({ btnSize: newSize });
            },
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ btnWeight: newWeight });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ btnStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ btnLetter: newValue });
            },
            onChangeLine: function onChangeLine(newValue) {
              return setAttributes({ btnLine: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ btnUpper: check });
            }
          }),
          wp.element.createElement(PanelColorSettings, {
            title: __("Colors"),
            className: "premium-panel-body-inner",
            initialOpen: false,
            colorSettings: [{
              value: btnColor,
              onChange: function onChange(newColor) {
                return setAttributes({ btnColor: newColor });
              },
              label: __("Text Color")
            }, {
              value: btnHoverColor,
              onChange: function onChange(newColor) {
                return setAttributes({ btnHoverColor: newColor });
              },
              label: __("Text Hover Color")
            }, {
              value: btnBack,
              onChange: function onChange(newColor) {
                return setAttributes({ btnBack: newColor });
              },
              label: __("Background Color")
            }, {
              value: btnHoverBack,
              onChange: function onChange(newColor) {
                return setAttributes({ btnHoverBack: newColor });
              },
              label: __("Background Hover Color")
            }]
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
            borderType: btnBorderType,
            borderWidth: btnBorderWidth,
            borderColor: btnBorderColor,
            borderRadius: btnBorderRadius,
            onChangeType: function onChangeType(newType) {
              return setAttributes({ btnBorderType: newType });
            },
            onChangeWidth: function onChangeWidth(newWidth) {
              return setAttributes({ btnBorderWidth: newWidth });
            },
            onChangeColor: function onChangeColor(colorValue) {
              return setAttributes({ btnBorderColor: colorValue.hex });
            },
            onChangeRadius: function onChangeRadius(newrRadius) {
              return setAttributes({ btnBorderRadius: newrRadius });
            }
          }),
          wp.element.createElement(
            "div",
            { className: "premium-control-toggle" },
            wp.element.createElement(
              "strong",
              null,
              __("Spacings")
            ),
            wp.element.createElement(Dropdown, {
              className: "premium-control-toggle-btn",
              contentClassName: "premium-control-toggle-content",
              position: "bottom right",
              renderToggle: function renderToggle(_ref5) {
                var isOpen = _ref5.isOpen,
                    onToggle = _ref5.onToggle;
                return wp.element.createElement(
                  Button,
                  { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                  wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
              },
              renderContent: function renderContent() {
                return wp.element.createElement(
                  Fragment,
                  null,
                  wp.element.createElement(RangeControl, {
                    label: __("Width (%)"),
                    value: btnWidth,
                    onChange: function onChange(newSize) {
                      return setAttributes({ btnWidth: newSize });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Margin Top (PX)"),
                    value: btnMarginT,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newPadding) {
                      return setAttributes({ btnMarginT: newPadding });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Margin Bottom (PX)"),
                    value: btnMarginB,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newPadding) {
                      return setAttributes({ btnMarginB: newPadding });
                    }
                  }),
                  wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_size_units__["a" /* default */], {
                    onChangeSizeUnit: function onChangeSizeUnit(newValue) {
                      return setAttributes({ btnPaddingU: newValue });
                    }
                  }),
                  wp.element.createElement(RangeControl, {
                    label: __("Padding"),
                    value: btnPadding,
                    min: "0",
                    max: "100",
                    onChange: function onChange(newPadding) {
                      return setAttributes({ btnPadding: newPadding });
                    }
                  })
                );
              }
            })
          ),
          wp.element.createElement(ToggleControl, {
            label: __("Open Link in a new tab"),
            checked: btnTarget,
            onChange: function onChange(newValue) {
              return setAttributes({ btnTarget: newValue });
            }
          })
        ),
        badgeChecked && wp.element.createElement(
          PanelBody,
          {
            title: __("Badge"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(TextControl, {
            label: __("Text"),
            value: badgeText,
            onChange: function onChange(value) {
              return setAttributes({ badgeText: value });
            }
          }),
          wp.element.createElement(SelectControl, {
            label: __("Position"),
            options: POSITION,
            value: badgePos,
            onChange: function onChange(newValue) {
              return setAttributes({ badgePos: newValue });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_typo__["a" /* default */], {
            components: ["size", "weight", "style", "upper", "spacing"],
            size: badgeTextSize,
            weight: badgeWeight,
            style: badgeStyle,
            spacing: badgeLetter,
            upper: badgeUpper,
            onChangeSize: function onChangeSize(newSize) {
              return setAttributes({ badgeTextSize: newSize });
            },
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ badgeWeight: newWeight });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ badgeStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ badgeLetter: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ badgeUpper: check });
            }
          }),
          wp.element.createElement(PanelColorSettings, {
            title: __("Colors"),
            className: "premium-panel-body-inner",
            initialOpen: false,
            colorSettings: [{
              value: badgeColor,
              onChange: function onChange(newColor) {
                return setAttributes({ badgeColor: newColor });
              },
              label: __("Text Color")
            }, {
              value: badgeBack,
              onChange: function onChange(newColor) {
                return setAttributes({ badgeBack: newColor });
              },
              label: __("Background Color")
            }]
          }),
          wp.element.createElement(RangeControl, {
            label: __("Vertical Offset"),
            value: badgeTop,
            onChange: function onChange(newValue) {
              return setAttributes({ badgeTop: newValue });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Horizontal Offset"),
            value: badgeHorizontal,
            min: "1",
            max: "150",
            onChange: function onChange(newValue) {
              return setAttributes({ badgeHorizontal: newValue });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Badge Size"),
            value: badgeSize,
            max: "250",
            onChange: function onChange(newValue) {
              return setAttributes({ badgeSize: newValue });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Text Width"),
            min: "1",
            max: "200",
            value: badgeWidth,
            onChange: function onChange(newValue) {
              return setAttributes({ badgeWidth: newValue });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Table"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(
              "p",
              null,
              __("Background Color")
            ),
            wp.element.createElement(ColorPalette, {
              value: tableBack,
              onChange: function onChange(newValue) {
                return setAttributes({
                  tableBack: newValue === undefined ? "transparent" : newValue
                });
              },
              allowReset: true
            })
          ),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
            borderType: borderType,
            borderWidth: borderWidth,
            borderColor: borderColor,
            borderRadius: borderRadius,
            onChangeType: function onChangeType(newType) {
              return setAttributes({ borderType: newType });
            },
            onChangeWidth: function onChangeWidth(newWidth) {
              return setAttributes({ borderWidth: newWidth });
            },
            onChangeColor: function onChangeColor(colorValue) {
              return setAttributes({ borderColor: colorValue.hex });
            },
            onChangeRadius: function onChangeRadius(newrRadius) {
              return setAttributes({ borderRadius: newrRadius });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_box_shadow__["a" /* default */], {
            inner: true,
            color: tableShadowColor,
            blur: tableShadowBlur,
            horizontal: tableShadowHorizontal,
            vertical: tableShadowVertical,
            position: tableShadowPosition,
            onChangeColor: function onChangeColor(newColor) {
              return setAttributes({
                tableShadowColor: newColor === undefined ? "transparent" : newColor.hex
              });
            },
            onChangeBlur: function onChangeBlur(newBlur) {
              return setAttributes({
                tableShadowBlur: newBlur === undefined ? 0 : newBlur
              });
            },
            onChangehHorizontal: function onChangehHorizontal(newValue) {
              return setAttributes({
                tableShadowHorizontal: newValue === undefined ? 0 : newValue
              });
            },
            onChangeVertical: function onChangeVertical(newValue) {
              return setAttributes({
                tableShadowVertical: newValue === undefined ? 0 : newValue
              });
            },
            onChangePosition: function onChangePosition(newValue) {
              return setAttributes({
                tableShadowPosition: newValue === undefined ? 0 : newValue
              });
            }
          }),
          wp.element.createElement(
            "div",
            { className: "premium-control-toggle" },
            wp.element.createElement(
              "strong",
              null,
              __("Spacings")
            ),
            wp.element.createElement(Dropdown, {
              className: "premium-control-toggle-btn",
              contentClassName: "premium-control-toggle-content",
              position: "bottom right",
              renderToggle: function renderToggle(_ref6) {
                var isOpen = _ref6.isOpen,
                    onToggle = _ref6.onToggle;
                return wp.element.createElement(
                  Button,
                  { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                  wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                );
              },
              renderContent: function renderContent() {
                return wp.element.createElement(
                  Fragment,
                  null,
                  wp.element.createElement(RangeControl, {
                    label: __("Padding"),
                    value: tablePadding,
                    min: "0",
                    max: "50",
                    onChange: function onChange(newValue) {
                      return setAttributes({ tablePadding: newValue });
                    }
                  })
                );
              }
            })
          )
        )
      ), wp.element.createElement(
        "div",
        {
          id: mainClasses + "-" + id,
          className: "" + mainClasses,
          style: {
            textAlign: contentAlign,
            background: tableBack,
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius + "px",
            borderColor: borderColor,
            padding: tablePadding + "px",
            boxShadow: tableShadowHorizontal + "px " + tableShadowVertical + "px " + tableShadowBlur + "px " + tableShadowColor + " " + tableShadowPosition
          }
        },
        badgeChecked && wp.element.createElement(
          "div",
          {
            className: "premium-pricing-table__badge_wrap premium-pricing-table__badge_" + badgePos
          },
          wp.element.createElement(
            "div",
            {
              className: "premium-pricing-table__badge",
              style: {
                borderRightColor: "right" === badgePos ? badgeBack : "transparent",
                borderTopColor: "left" === badgePos ? badgeBack : "transparent",
                borderBottomWidth: badgeSize + "px",
                borderRightWidth: badgeSize + "px",
                borderTopWidth: "left" === badgePos ? badgeSize + "px" : "none",
                borderLeftWidth: "right" === badgePos ? badgeSize + "px" : "none"
              }
            },
            wp.element.createElement(
              "span",
              {
                style: {
                  color: badgeColor,
                  fontSize: badgeTextSize + "px",
                  fontWeight: badgeWeight,
                  textTransform: badgeUpper ? "uppercase" : "none",
                  letterSpacing: badgeLetter + "px",
                  fontStyle: badgeStyle,
                  width: badgeWidth + "px",
                  top: badgeTop + "px",
                  left: "left" === badgePos ? badgeHorizontal + "px" : "auto",
                  right: "right" === badgePos ? badgeHorizontal + "px" : "auto"
                }
              },
              badgeText
            )
          )
        ),
        titleChecked && wp.element.createElement(
          "div",
          {
            className: "premium-pricing-table__title_wrap",
            style: {
              paddingTop: titleMarginT + "px",
              paddingBottom: titleMarginB + "px"
            }
          },
          wp.element.createElement(RichText, {
            tagName: titleTag.toLowerCase(),
            className: "premium-pricing-table__title",
            onChange: function onChange(newText) {
              return setAttributes({ title: newText });
            },
            placeholder: __("Awesome Title"),
            value: title,
            style: {
              color: titleColor,
              background: titleBack,
              fontSize: titleSize + "px",
              letterSpacing: titleLetter + "px",
              textTransform: titleUpper ? "uppercase" : "none",
              fontStyle: titleStyle,
              fontWeight: titleWeight,
              lineHeight: titleLine + "px",
              padding: titlePadding + "px",
              textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor
            }
          })
        ),
        priceChecked && wp.element.createElement(
          "div",
          {
            className: "premium-pricing-table__price_wrap",
            style: {
              background: priceBack,
              marginTop: priceMarginT + "px",
              marginBottom: priceMarginB + "px",
              padding: pricePadding + "px",
              justifyContent: contentAlign
            }
          },
          slashPrice && wp.element.createElement(
            "strike",
            {
              className: "premium-pricing-table__slash",
              style: {
                color: slashColor,
                fontSize: slashSize + "px",
                fontWeight: slashWeight,
                alignSelf: slashV
              }
            },
            slashPrice
          ),
          currPrice && wp.element.createElement(
            "span",
            {
              className: "premium-pricing-table__currency",
              style: {
                color: currColor,
                fontSize: currSize + "px",
                fontWeight: currWeight,
                alignSelf: currV
              }
            },
            currPrice
          ),
          valPrice && wp.element.createElement(
            "span",
            {
              className: "premium-pricing-table__val",
              style: {
                color: valColor,
                fontSize: valSize + "px",
                fontWeight: valWeight,
                alignSelf: valV
              }
            },
            valPrice
          ),
          divPrice && wp.element.createElement(
            "span",
            {
              className: "premium-pricing-table__divider",
              style: {
                color: divColor,
                fontSize: divSize + "px",
                fontWeight: divWeight,
                alignSelf: divV
              }
            },
            divPrice
          ),
          durPrice && wp.element.createElement(
            "span",
            {
              className: "premium-pricing-table__dur",
              style: {
                color: durColor,
                fontSize: durSize + "px",
                fontWeight: durWeight,
                alignSelf: durV
              }
            },
            durPrice
          )
        ),
        listChecked && wp.element.createElement(
          "div",
          {
            className: "premium-pricing-table__list_wrap",
            style: {
              marginTop: listMarginT + "px",
              marginBottom: listMarginB + "px"
            }
          },
          wp.element.createElement(RichText, {
            tagName: "ul",
            className: "premium-pricing-table__list list-" + listStyle,
            multiline: "li",
            placeholder: __("List Item #1"),
            value: listItems,
            onChange: function onChange(newText) {
              return setAttributes({ listItems: newText });
            },
            style: {
              color: listColor,
              fontSize: listSize + "px",
              background: listBack,
              padding: listPadding + "px",
              listStyle: "check" !== listStyle ? listStyle : "none",
              listStylePosition: "inside",
              fontWeight: listWeight,
              textTransform: listUpper ? "uppercase" : "none",
              letterSpacing: listLetter + "px",
              fontStyle: listItemsStyle,
              lineHeight: listLine + "px",
              textAlign: featsAlign ? featsAlign : contentAlign
            }
          })
        ),
        descChecked && wp.element.createElement(
          "div",
          { className: "premium-pricing-table__desc_wrap" },
          wp.element.createElement(RichText, {
            tagName: "p",
            className: "premium-pricing-table__desc",
            onChange: function onChange(newText) {
              return setAttributes({ desc: newText });
            },
            placeholder: "Lorem ipsum dolor sit amet, consectetur adipiscing elit",
            value: desc,
            style: {
              color: descColor,
              background: descBack,
              fontSize: descSize + "px",
              fontWeight: descWeight,
              letterSpacing: descLetter + "px",
              fontStyle: descStyle,
              lineHeight: descLine + "px",
              marginTop: descMarginT + "px",
              marginBottom: descMarginB + "px",
              padding: descPadding + "px"
            }
          })
        ),
        btnChecked && wp.element.createElement(
          "div",
          {
            className: "premium-pricing-table__button",
            style: {
              width: btnWidth + "%"
            }
          },
          wp.element.createElement(
            "a",
            {
              "class": "premium-pricing-table__button_link",
              href: "{ attributes.btnUrl }",
              target: btnTarget ? "_blank" : "_self",
              style: {
                color: btnColor,
                background: btnBack ? btnBack : "transparent",
                fontSize: btnSize + "px",
                fontWeight: btnWeight,
                letterSpacing: btnLetter + "px",
                fontStyle: btnStyle,
                lineHeight: btnLine + "px",
                marginTop: btnMarginT,
                marginBottom: btnMarginB,
                padding: btnPadding + btnPaddingU,
                border: btnBorderType,
                borderWidth: btnBorderWidth + "px",
                borderRadius: btnBorderRadius + "px",
                borderColor: btnBorderColor
              }
            },
            wp.element.createElement(RichText, {
              tagName: "span",
              onChange: function onChange(newText) {
                return setAttributes({ btnText: newText });
              },
              value: btnText,
              style: {
                textTransform: btnUpper ? "uppercase" : "none"
              }
            })
          ),
          wp.element.createElement(URLInput, {
            value: btnLink,
            onChange: function onChange(newLink) {
              return setAttributes({ btnLink: newLink });
            }
          }),
          wp.element.createElement("style", {
            dangerouslySetInnerHTML: {
              __html: ["#premium-pricing-table-" + id + " .premium-pricing-table__button_link:hover {", "color: " + btnHoverColor + " !important;", "background: " + btnHoverBack + " !important", "}"].join("\n")
            }
          })
        )
      )];
    }
  }]);

  return PremiumPricingTable;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumPricingTable);

/***/ }),
/* 230 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var RichText = wp.editor.RichText;


var save = function save(props) {
    var className = props.className;
    var _props$attributes = props.attributes,
        contentAlign = _props$attributes.contentAlign,
        tableBack = _props$attributes.tableBack,
        borderType = _props$attributes.borderType,
        borderWidth = _props$attributes.borderWidth,
        borderRadius = _props$attributes.borderRadius,
        borderColor = _props$attributes.borderColor,
        tablePadding = _props$attributes.tablePadding,
        tableShadowBlur = _props$attributes.tableShadowBlur,
        tableShadowColor = _props$attributes.tableShadowColor,
        tableShadowHorizontal = _props$attributes.tableShadowHorizontal,
        tableShadowVertical = _props$attributes.tableShadowVertical,
        tableShadowPosition = _props$attributes.tableShadowPosition,
        titleChecked = _props$attributes.titleChecked,
        title = _props$attributes.title,
        titleTag = _props$attributes.titleTag,
        titleColor = _props$attributes.titleColor,
        titleSize = _props$attributes.titleSize,
        titleLetter = _props$attributes.titleLetter,
        titleUpper = _props$attributes.titleUpper,
        titleStyle = _props$attributes.titleStyle,
        titleLine = _props$attributes.titleLine,
        titleWeight = _props$attributes.titleWeight,
        titleBack = _props$attributes.titleBack,
        titleShadowBlur = _props$attributes.titleShadowBlur,
        titleShadowColor = _props$attributes.titleShadowColor,
        titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
        titleShadowVertical = _props$attributes.titleShadowVertical,
        titleMarginT = _props$attributes.titleMarginT,
        titleMarginB = _props$attributes.titleMarginB,
        titlePadding = _props$attributes.titlePadding,
        descChecked = _props$attributes.descChecked,
        desc = _props$attributes.desc,
        descColor = _props$attributes.descColor,
        descSize = _props$attributes.descSize,
        descLine = _props$attributes.descLine,
        descWeight = _props$attributes.descWeight,
        descStyle = _props$attributes.descStyle,
        descLetter = _props$attributes.descLetter,
        descBack = _props$attributes.descBack,
        descMarginT = _props$attributes.descMarginT,
        descMarginB = _props$attributes.descMarginB,
        descPadding = _props$attributes.descPadding,
        priceChecked = _props$attributes.priceChecked,
        priceBack = _props$attributes.priceBack,
        priceMarginT = _props$attributes.priceMarginT,
        priceMarginB = _props$attributes.priceMarginB,
        pricePadding = _props$attributes.pricePadding,
        slashPrice = _props$attributes.slashPrice,
        slashColor = _props$attributes.slashColor,
        slashSize = _props$attributes.slashSize,
        slashWeight = _props$attributes.slashWeight,
        slashV = _props$attributes.slashV,
        currPrice = _props$attributes.currPrice,
        currColor = _props$attributes.currColor,
        currSize = _props$attributes.currSize,
        currWeight = _props$attributes.currWeight,
        currV = _props$attributes.currV,
        valPrice = _props$attributes.valPrice,
        valColor = _props$attributes.valColor,
        valSize = _props$attributes.valSize,
        valWeight = _props$attributes.valWeight,
        valV = _props$attributes.valV,
        divPrice = _props$attributes.divPrice,
        divColor = _props$attributes.divColor,
        divSize = _props$attributes.divSize,
        divWeight = _props$attributes.divWeight,
        divV = _props$attributes.divV,
        durPrice = _props$attributes.durPrice,
        durColor = _props$attributes.durColor,
        durSize = _props$attributes.durSize,
        durWeight = _props$attributes.durWeight,
        durV = _props$attributes.durV,
        btnChecked = _props$attributes.btnChecked,
        btnText = _props$attributes.btnText,
        btnLink = _props$attributes.btnLink,
        btnTarget = _props$attributes.btnTarget,
        btnColor = _props$attributes.btnColor,
        btnHoverColor = _props$attributes.btnHoverColor,
        btnSize = _props$attributes.btnSize,
        btnWeight = _props$attributes.btnWeight,
        btnLine = _props$attributes.btnLine,
        btnLetter = _props$attributes.btnLetter,
        btnUpper = _props$attributes.btnUpper,
        btnStyle = _props$attributes.btnStyle,
        btnBack = _props$attributes.btnBack,
        btnHoverBack = _props$attributes.btnHoverBack,
        btnMarginT = _props$attributes.btnMarginT,
        btnMarginB = _props$attributes.btnMarginB,
        btnPadding = _props$attributes.btnPadding,
        btnPaddingU = _props$attributes.btnPaddingU,
        btnWidth = _props$attributes.btnWidth,
        btnBorderType = _props$attributes.btnBorderType,
        btnBorderWidth = _props$attributes.btnBorderWidth,
        btnBorderRadius = _props$attributes.btnBorderRadius,
        btnBorderColor = _props$attributes.btnBorderColor,
        badgeChecked = _props$attributes.badgeChecked,
        badgePos = _props$attributes.badgePos,
        badgeBack = _props$attributes.badgeBack,
        badgeColor = _props$attributes.badgeColor,
        badgeTop = _props$attributes.badgeTop,
        badgeHorizontal = _props$attributes.badgeHorizontal,
        badgeWidth = _props$attributes.badgeWidth,
        badgeSize = _props$attributes.badgeSize,
        badgeTextSize = _props$attributes.badgeTextSize,
        badgeWeight = _props$attributes.badgeWeight,
        badgeLetter = _props$attributes.badgeLetter,
        badgeStyle = _props$attributes.badgeStyle,
        badgeUpper = _props$attributes.badgeUpper,
        badgeText = _props$attributes.badgeText,
        listChecked = _props$attributes.listChecked,
        listColor = _props$attributes.listColor,
        listWeight = _props$attributes.listWeight,
        listSize = _props$attributes.listSize,
        listItemsStyle = _props$attributes.listItemsStyle,
        listLine = _props$attributes.listLine,
        listUpper = _props$attributes.listUpper,
        listLetter = _props$attributes.listLetter,
        listBack = _props$attributes.listBack,
        listItems = _props$attributes.listItems,
        listMarginB = _props$attributes.listMarginB,
        listMarginT = _props$attributes.listMarginT,
        listPadding = _props$attributes.listPadding,
        listStyle = _props$attributes.listStyle,
        featsAlign = _props$attributes.featsAlign,
        id = _props$attributes.id;


    var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-pricing-table");

    return wp.element.createElement(
        "div",
        {
            id: mainClasses + "-" + id,
            className: "" + mainClasses,
            style: {
                textAlign: contentAlign,
                background: tableBack,
                border: borderType,
                borderWidth: borderWidth + "px",
                borderRadius: borderRadius + "px",
                borderColor: borderColor,
                padding: tablePadding + "px",
                boxShadow: tableShadowHorizontal + "px " + tableShadowVertical + "px " + tableShadowBlur + "px " + tableShadowColor + " " + tableShadowPosition
            }
        },
        badgeChecked && wp.element.createElement(
            "div",
            {
                className: "premium-pricing-table__badge_wrap premium-pricing-table__badge_" + badgePos
            },
            wp.element.createElement(
                "div",
                {
                    className: "premium-pricing-table__badge",
                    style: {
                        borderRightColor: "right" === badgePos ? badgeBack : "transparent",
                        borderTopColor: "left" === badgePos ? badgeBack : "transparent",
                        borderBottomWidth: badgeSize + "px",
                        borderRightWidth: badgeSize + "px",
                        borderTopWidth: "left" === badgePos ? badgeSize + "px" : "none",
                        borderLeftWidth: "right" === badgePos ? badgeSize + "px" : "none"
                    }
                },
                wp.element.createElement(
                    "span",
                    {
                        style: {
                            fontSize: badgeTextSize + "px",
                            color: badgeColor,
                            fontWeight: badgeWeight,
                            textTransform: badgeUpper ? "uppercase" : "none",
                            letterSpacing: badgeLetter + "px",
                            fontStyle: badgeStyle,
                            width: badgeWidth + "px",
                            top: badgeTop + "px",
                            left: "left" === badgePos ? badgeHorizontal + "px" : "auto",
                            right: "right" === badgePos ? badgeHorizontal + "px" : "auto"
                        }
                    },
                    badgeText
                )
            )
        ),
        titleChecked && wp.element.createElement(
            "div",
            {
                className: "premium-pricing-table__title_wrap",
                style: {
                    paddingTop: titleMarginT + "px",
                    paddingBottom: titleMarginB + "px"
                }
            },
            wp.element.createElement(RichText.Content, {
                tagName: titleTag.toLowerCase(),
                className: "premium-pricing-table__title",
                value: title,
                style: {
                    color: titleColor,
                    background: titleBack,
                    fontSize: titleSize + "px",
                    letterSpacing: titleLetter + "px",
                    textTransform: titleUpper ? "uppercase" : "none",
                    fontStyle: titleStyle,
                    fontWeight: titleWeight,
                    lineHeight: titleLine + "px",
                    marginBottom: titleMarginB + "px",
                    padding: titlePadding + "px",
                    textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor
                }
            })
        ),
        priceChecked && wp.element.createElement(
            "div",
            {
                className: "premium-pricing-table__price_wrap",
                style: {
                    background: priceBack,
                    marginTop: priceMarginT + "px",
                    marginBottom: priceMarginB + "px",
                    padding: pricePadding + "px",
                    justifyContent: contentAlign
                }
            },
            slashPrice && wp.element.createElement(
                "strike",
                {
                    className: "premium-pricing-table__slash",
                    style: {
                        color: slashColor,
                        fontSize: slashSize + "px",
                        fontWeight: slashWeight,
                        alignSelf: slashV
                    }
                },
                slashPrice
            ),
            currPrice && wp.element.createElement(
                "span",
                {
                    className: "premium-pricing-table__currency",
                    style: {
                        color: currColor,
                        fontSize: currSize + "px",
                        fontWeight: currWeight,
                        alignSelf: currV
                    }
                },
                currPrice
            ),
            valPrice && wp.element.createElement(
                "span",
                {
                    className: "premium-pricing-table__val",
                    style: {
                        color: valColor,
                        fontSize: valSize + "px",
                        fontWeight: valWeight,
                        alignSelf: valV
                    }
                },
                valPrice
            ),
            divPrice && wp.element.createElement(
                "span",
                {
                    className: "premium-pricing-table__divider",
                    style: {
                        color: divColor,
                        fontSize: divSize + "px",
                        fontWeight: divWeight,
                        alignSelf: divV
                    }
                },
                divPrice
            ),
            durPrice && wp.element.createElement(
                "span",
                {
                    className: "premium-pricing-table__dur",
                    style: {
                        color: durColor,
                        fontSize: durSize + "px",
                        fontWeight: durWeight,
                        alignSelf: durV
                    }
                },
                durPrice
            )
        ),
        listChecked && wp.element.createElement(
            "div",
            {
                className: "premium-pricing-table__list_wrap",
                style: {
                    marginTop: listMarginT + "px",
                    marginBottom: listMarginB + "px"
                }
            },
            wp.element.createElement(
                "ul",
                {
                    className: "premium-pricing-table__list list-" + listStyle,
                    style: {
                        color: listColor,
                        fontSize: listSize + "px",
                        background: listBack,
                        padding: listPadding + "px",
                        listStyle: "check" !== listStyle ? listStyle : "none",
                        listStylePosition: "inside",
                        fontWeight: listWeight,
                        letterSpacing: listLetter + "px",
                        textTransform: listUpper ? "uppercase" : "none",
                        fontStyle: listItemsStyle,
                        lineHeight: listLine + "px",
                        textAlign: featsAlign ? featsAlign : contentAlign
                    }
                },
                listItems
            )
        ),
        descChecked && wp.element.createElement(
            "div",
            { className: "premium-pricing-table__desc_wrap" },
            wp.element.createElement(RichText.Content, {
                tagName: "p",
                className: "premium-pricing-table__desc",
                value: desc,
                style: {
                    color: descColor,
                    background: descBack,
                    fontSize: descSize + "px",
                    fontWeight: descWeight,
                    lineHeight: descLine + "px",
                    letterSpacing: descLetter + "px",
                    fontStyle: descStyle,
                    marginTop: descMarginT + "px",
                    marginBottom: descMarginB + "px",
                    padding: descPadding + "px"
                }
            })
        ),
        btnChecked && wp.element.createElement(
            "div",
            {
                className: "premium-pricing-table__button",
                style: {
                    width: btnWidth + "%"
                }
            },
            wp.element.createElement(
                "a",
                {
                    "class": "premium-pricing-table__button_link",
                    href: btnLink,
                    target: btnTarget ? "_blank" : "_self",
                    rel: "noopener noreferrer",
                    style: {
                        color: btnColor,
                        background: btnBack ? btnBack : "transparent",
                        fontSize: btnSize + "px",
                        fontWeight: btnWeight,
                        letterSpacing: btnLetter + "px",
                        fontStyle: btnStyle,
                        lineHeight: btnLine + "px",
                        marginTop: btnMarginT,
                        marginBottom: btnMarginB,
                        padding: btnPadding + btnPaddingU,
                        border: btnBorderType,
                        borderWidth: btnBorderWidth + "px",
                        borderRadius: btnBorderRadius + "px",
                        borderColor: btnBorderColor
                    }
                },
                wp.element.createElement(RichText.Content, {
                    tagName: "span",
                    onChange: function onChange(newText) {
                        return setAttributes({ btnText: newText });
                    },
                    value: btnText,
                    style: {
                        textTransform: btnUpper ? "uppercase" : "none"
                    }
                })
            ),
            wp.element.createElement("style", {
                dangerouslySetInnerHTML: {
                    __html: ["#premium-pricing-table-" + id + " .premium-pricing-table__button_link:hover {", "color: " + btnHoverColor + " !important;", "background: " + btnHoverBack + " !important", "}"].join("\n")
                }
            })
        )
    );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var className = "premium-pricing-table";

var __ = wp.i18n.__;
var RichText = wp.editor.RichText;


var pricingAttrs_1_6_3 = {
  contentAlign: {
    type: "string",
    default: "center"
  },
  tableBack: {
    type: "string"
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number",
    default: "0"
  },
  borderColor: {
    type: "string"
  },
  tablePadding: {
    type: "number",
    default: "0"
  },
  tableShadowColor: {
    type: "string"
  },
  tableShadowBlur: {
    type: "number",
    default: "0"
  },
  tableShadowHorizontal: {
    type: "number",
    default: "0"
  },
  tableShadowVertical: {
    type: "number",
    default: "0"
  },
  tableShadowPosition: {
    type: "string",
    default: ""
  },
  title: {
    type: "array",
    source: "children",
    selector: ".premium-pricing-table__title",
    default: "Pricing Table"
  },
  titleTag: {
    type: "string",
    default: "H2"
  },
  titleColor: {
    type: "string",
    default: "#6ec1e4"
  },
  titleSize: {
    type: "number"
  },
  titleLine: {
    type: "number"
  },
  titleLetter: {
    type: "number"
  },
  titleStyle: {
    type: "string"
  },
  titleUpper: {
    type: "boolean"
  },
  titleWeight: {
    type: "number",
    default: 500
  },
  titleShadowColor: {
    type: "string"
  },
  titleShadowBlur: {
    type: "number",
    default: "0"
  },
  titleShadowHorizontal: {
    type: "number",
    default: "0"
  },
  titleShadowVertical: {
    type: "number",
    default: "0"
  },
  titleBack: {
    type: "string"
  },
  titleMarginB: {
    type: "number",
    default: 20
  },
  titleMarginT: {
    type: "number",
    default: 20
  },
  titlePadding: {
    type: "number",
    default: "0"
  },
  desc: {
    type: "array",
    source: "children",
    selector: ".premium-pricing-table__desc"
  },
  descColor: {
    type: "string",
    default: "#000"
  },
  descSize: {
    type: "number"
  },
  descWeight: {
    type: "number"
  },
  descLetter: {
    type: "number"
  },
  descStyle: {
    type: "string"
  },
  descLine: {
    type: "number"
  },
  descBack: {
    type: "string"
  },
  descMarginT: {
    type: "number",
    default: "0"
  },
  descMarginB: {
    type: "number",
    default: "30"
  },
  descPadding: {
    type: "number",
    default: "0"
  },
  titleChecked: {
    type: "boolean",
    default: true
  },
  descChecked: {
    type: "boolean",
    default: false
  },
  priceChecked: {
    type: "boolean",
    default: true
  },
  priceBack: {
    type: "string"
  },
  priceMarginT: {
    type: "number"
  },
  priceMarginB: {
    type: "number",
    default: 10
  },
  pricePadding: {
    type: "number"
  },
  slashPrice: {
    type: "string"
  },
  slashColor: {
    type: "string"
  },
  slashSize: {
    type: "number",
    default: 20
  },
  slashWeight: {
    type: "number"
  },
  currPrice: {
    type: "string",
    default: "$"
  },
  currColor: {
    type: "string"
  },
  currSize: {
    type: "number",
    default: 20
  },
  currWeight: {
    type: "number"
  },
  valPrice: {
    type: "string",
    default: "25"
  },
  valColor: {
    type: "string"
  },
  valSize: {
    type: "number",
    default: 50
  },
  valWeight: {
    type: "number"
  },
  divPrice: {
    type: "string",
    default: "/"
  },
  divColor: {
    type: "string"
  },
  divSize: {
    type: "number",
    default: 20
  },
  divWeight: {
    type: "number"
  },
  durPrice: {
    type: "string",
    default: "m"
  },
  durColor: {
    type: "string"
  },
  durSize: {
    type: "number",
    default: 20
  },
  durWeight: {
    type: "number"
  },
  selectedStyle: {
    type: "string",
    default: "price"
  },
  btnChecked: {
    type: "boolean",
    default: true
  },
  btnText: {
    type: "string",
    default: "Get Started"
  },
  btnLink: {
    type: "string",
    source: "attribute",
    attribute: "href",
    selector: ".premium-pricing-table__button_link"
  },
  btnTarget: {
    type: "boolean",
    default: true
  },
  btnColor: {
    type: "string",
    default: "#fff"
  },
  btnHoverColor: {
    type: "string"
  },
  btnWidth: {
    type: "number"
  },
  btnSize: {
    type: "number"
  },
  btnWeight: {
    type: "number",
    default: 900
  },
  btnLine: {
    type: "number"
  },
  btnLetter: {
    type: "number"
  },
  btnStyle: {
    type: "string"
  },
  btnUpper: {
    type: "boolean"
  },
  btnBack: {
    type: "string",
    default: "#6ec1e4"
  },
  btnHoverBack: {
    type: "string"
  },
  btnMarginT: {
    type: "number",
    default: "0"
  },
  btnMarginB: {
    type: "number",
    default: "0"
  },
  btnPadding: {
    type: "number",
    default: 10
  },
  btnPaddingU: {
    type: "string"
  },
  btnBorderType: {
    type: "string",
    default: "none"
  },
  btnBorderWidth: {
    type: "number",
    default: "1"
  },
  btnBorderRadius: {
    type: "number",
    default: "0"
  },
  btnBorderColor: {
    type: "string"
  },
  badgeChecked: {
    type: "boolean"
  },
  badgePos: {
    type: "string",
    default: "right"
  },
  badgeBack: {
    type: "string",
    default: "#6ec1e4"
  },
  badgeColor: {
    type: "string"
  },
  badgeTextSize: {
    type: "number"
  },
  badgeSize: {
    type: "number"
  },
  badgeTop: {
    type: "number"
  },
  badgeHorizontal: {
    type: "number"
  },
  badgeWidth: {
    type: "number"
  },
  badgeWeight: {
    type: "number",
    default: 900
  },
  badgeLetter: {
    type: "number"
  },
  badgeStyle: {
    type: "string"
  },
  badgeUpper: {
    type: "boolean"
  },
  badgeText: {
    type: "string",
    default: __("Popular")
  },
  listChecked: {
    type: "boolean",
    default: true
  },
  listColor: {
    type: "string"
  },
  listSize: {
    type: "number"
  },
  listWeight: {
    type: "number",
    default: 500
  },
  listItemsStyle: {
    type: "string"
  },
  listLetter: {
    type: "number"
  },
  listLine: {
    type: "number"
  },
  listUpper: {
    type: "boolean"
  },
  listBack: {
    type: "string"
  },
  listItems: {
    type: "array",
    source: "children",
    selector: ".premium-pricing-table__list"
  },
  listMarginB: {
    type: "number",
    default: 20
  },
  listMarginT: {
    type: "number"
  },
  listPadding: {
    type: "number"
  },
  listStyle: {
    type: "string",
    default: "disc"
  },
  slashV: {
    type: "string",
    default: "center"
  },
  currV: {
    type: "string",
    default: "center"
  },
  valV: {
    type: "string",
    default: "center"
  },
  divV: {
    type: "string",
    default: "center"
  },
  durV: {
    type: "string",
    default: "center"
  },
  id: {
    type: "string"
  }
};

var deprecatedContent = [{
  attributes: pricingAttrs_1_6_3,
  migrate: function migrate(attributes) {
    return Object.assign(attributes, { featsAlign: "" });
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        contentAlign = _props$attributes.contentAlign,
        tableBack = _props$attributes.tableBack,
        borderType = _props$attributes.borderType,
        borderWidth = _props$attributes.borderWidth,
        borderRadius = _props$attributes.borderRadius,
        borderColor = _props$attributes.borderColor,
        tablePadding = _props$attributes.tablePadding,
        tableShadowBlur = _props$attributes.tableShadowBlur,
        tableShadowColor = _props$attributes.tableShadowColor,
        tableShadowHorizontal = _props$attributes.tableShadowHorizontal,
        tableShadowVertical = _props$attributes.tableShadowVertical,
        tableShadowPosition = _props$attributes.tableShadowPosition,
        titleChecked = _props$attributes.titleChecked,
        title = _props$attributes.title,
        titleTag = _props$attributes.titleTag,
        titleColor = _props$attributes.titleColor,
        titleSize = _props$attributes.titleSize,
        titleLetter = _props$attributes.titleLetter,
        titleUpper = _props$attributes.titleUpper,
        titleStyle = _props$attributes.titleStyle,
        titleLine = _props$attributes.titleLine,
        titleWeight = _props$attributes.titleWeight,
        titleBack = _props$attributes.titleBack,
        titleShadowBlur = _props$attributes.titleShadowBlur,
        titleShadowColor = _props$attributes.titleShadowColor,
        titleShadowHorizontal = _props$attributes.titleShadowHorizontal,
        titleShadowVertical = _props$attributes.titleShadowVertical,
        titleMarginT = _props$attributes.titleMarginT,
        titleMarginB = _props$attributes.titleMarginB,
        titlePadding = _props$attributes.titlePadding,
        descChecked = _props$attributes.descChecked,
        desc = _props$attributes.desc,
        descColor = _props$attributes.descColor,
        descSize = _props$attributes.descSize,
        descLine = _props$attributes.descLine,
        descWeight = _props$attributes.descWeight,
        descStyle = _props$attributes.descStyle,
        descLetter = _props$attributes.descLetter,
        descBack = _props$attributes.descBack,
        descMarginT = _props$attributes.descMarginT,
        descMarginB = _props$attributes.descMarginB,
        descPadding = _props$attributes.descPadding,
        priceChecked = _props$attributes.priceChecked,
        priceBack = _props$attributes.priceBack,
        priceMarginT = _props$attributes.priceMarginT,
        priceMarginB = _props$attributes.priceMarginB,
        pricePadding = _props$attributes.pricePadding,
        slashPrice = _props$attributes.slashPrice,
        slashColor = _props$attributes.slashColor,
        slashSize = _props$attributes.slashSize,
        slashWeight = _props$attributes.slashWeight,
        slashV = _props$attributes.slashV,
        currPrice = _props$attributes.currPrice,
        currColor = _props$attributes.currColor,
        currSize = _props$attributes.currSize,
        currWeight = _props$attributes.currWeight,
        currV = _props$attributes.currV,
        valPrice = _props$attributes.valPrice,
        valColor = _props$attributes.valColor,
        valSize = _props$attributes.valSize,
        valWeight = _props$attributes.valWeight,
        valV = _props$attributes.valV,
        divPrice = _props$attributes.divPrice,
        divColor = _props$attributes.divColor,
        divSize = _props$attributes.divSize,
        divWeight = _props$attributes.divWeight,
        divV = _props$attributes.divV,
        durPrice = _props$attributes.durPrice,
        durColor = _props$attributes.durColor,
        durSize = _props$attributes.durSize,
        durWeight = _props$attributes.durWeight,
        durV = _props$attributes.durV,
        btnChecked = _props$attributes.btnChecked,
        btnText = _props$attributes.btnText,
        btnLink = _props$attributes.btnLink,
        btnTarget = _props$attributes.btnTarget,
        btnColor = _props$attributes.btnColor,
        btnHoverColor = _props$attributes.btnHoverColor,
        btnSize = _props$attributes.btnSize,
        btnWeight = _props$attributes.btnWeight,
        btnLine = _props$attributes.btnLine,
        btnLetter = _props$attributes.btnLetter,
        btnUpper = _props$attributes.btnUpper,
        btnStyle = _props$attributes.btnStyle,
        btnBack = _props$attributes.btnBack,
        btnHoverBack = _props$attributes.btnHoverBack,
        btnMarginT = _props$attributes.btnMarginT,
        btnMarginB = _props$attributes.btnMarginB,
        btnPadding = _props$attributes.btnPadding,
        btnPaddingU = _props$attributes.btnPaddingU,
        btnWidth = _props$attributes.btnWidth,
        btnBorderType = _props$attributes.btnBorderType,
        btnBorderWidth = _props$attributes.btnBorderWidth,
        btnBorderRadius = _props$attributes.btnBorderRadius,
        btnBorderColor = _props$attributes.btnBorderColor,
        badgeChecked = _props$attributes.badgeChecked,
        badgePos = _props$attributes.badgePos,
        badgeBack = _props$attributes.badgeBack,
        badgeColor = _props$attributes.badgeColor,
        badgeTop = _props$attributes.badgeTop,
        badgeHorizontal = _props$attributes.badgeHorizontal,
        badgeWidth = _props$attributes.badgeWidth,
        badgeSize = _props$attributes.badgeSize,
        badgeTextSize = _props$attributes.badgeTextSize,
        badgeWeight = _props$attributes.badgeWeight,
        badgeLetter = _props$attributes.badgeLetter,
        badgeStyle = _props$attributes.badgeStyle,
        badgeUpper = _props$attributes.badgeUpper,
        badgeText = _props$attributes.badgeText,
        listChecked = _props$attributes.listChecked,
        listColor = _props$attributes.listColor,
        listWeight = _props$attributes.listWeight,
        listSize = _props$attributes.listSize,
        listItemsStyle = _props$attributes.listItemsStyle,
        listLine = _props$attributes.listLine,
        listUpper = _props$attributes.listUpper,
        listLetter = _props$attributes.listLetter,
        listBack = _props$attributes.listBack,
        listItems = _props$attributes.listItems,
        listMarginB = _props$attributes.listMarginB,
        listMarginT = _props$attributes.listMarginT,
        listPadding = _props$attributes.listPadding,
        listStyle = _props$attributes.listStyle,
        id = _props$attributes.id;

    return wp.element.createElement(
      "div",
      {
        id: className + "-" + id,
        className: "" + className,
        style: {
          textAlign: contentAlign,
          background: tableBack,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          padding: tablePadding + "px",
          boxShadow: tableShadowHorizontal + "px " + tableShadowVertical + "px " + tableShadowBlur + "px " + tableShadowColor + " " + tableShadowPosition
        }
      },
      badgeChecked && wp.element.createElement(
        "div",
        {
          className: className + "__badge_wrap " + className + "__badge_" + badgePos
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__badge",
            style: {
              borderRightColor: "right" === badgePos ? badgeBack : "transparent",
              borderTopColor: "left" === badgePos ? badgeBack : "transparent",
              borderBottomWidth: badgeSize + "px",
              borderRightWidth: badgeSize + "px",
              borderTopWidth: "left" === badgePos ? badgeSize + "px" : "none",
              borderLeftWidth: "right" === badgePos ? badgeSize + "px" : "none"
            }
          },
          wp.element.createElement(
            "span",
            {
              style: {
                fontSize: badgeTextSize + "px",
                color: badgeColor,
                fontWeight: badgeWeight,
                textTransform: badgeUpper ? "uppercase" : "none",
                letterSpacing: badgeLetter + "px",
                fontStyle: badgeStyle,
                width: badgeWidth + "px",
                top: badgeTop + "px",
                left: "left" === badgePos ? badgeHorizontal + "px" : "auto",
                right: "right" === badgePos ? badgeHorizontal + "px" : "auto"
              }
            },
            badgeText
          )
        )
      ),
      titleChecked && wp.element.createElement(
        "div",
        {
          className: className + "__title_wrap",
          style: {
            paddingTop: titleMarginT + "px",
            paddingBottom: titleMarginB + "px"
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: className + "__title",
          value: title,
          style: {
            color: titleColor,
            background: titleBack,
            fontSize: titleSize + "px",
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            lineHeight: titleLine + "px",
            marginBottom: titleMarginB + "px",
            padding: titlePadding + "px",
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor
          }
        })
      ),
      priceChecked && wp.element.createElement(
        "div",
        {
          className: className + "__price_wrap",
          style: {
            background: priceBack,
            marginTop: priceMarginT + "px",
            marginBottom: priceMarginB + "px",
            padding: pricePadding + "px",
            justifyContent: contentAlign
          }
        },
        slashPrice && wp.element.createElement(
          "strike",
          {
            className: className + "__slash",
            style: {
              color: slashColor,
              fontSize: slashSize + "px",
              fontWeight: slashWeight,
              alignSelf: slashV
            }
          },
          slashPrice
        ),
        currPrice && wp.element.createElement(
          "span",
          {
            className: className + "__currency",
            style: {
              color: currColor,
              fontSize: currSize + "px",
              fontWeight: currWeight,
              alignSelf: currV
            }
          },
          currPrice
        ),
        valPrice && wp.element.createElement(
          "span",
          {
            className: className + "__val",
            style: {
              color: valColor,
              fontSize: valSize + "px",
              fontWeight: valWeight,
              alignSelf: valV
            }
          },
          valPrice
        ),
        divPrice && wp.element.createElement(
          "span",
          {
            className: className + "__divider",
            style: {
              color: divColor,
              fontSize: divSize + "px",
              fontWeight: divWeight,
              alignSelf: divV
            }
          },
          divPrice
        ),
        durPrice && wp.element.createElement(
          "span",
          {
            className: className + "__dur",
            style: {
              color: durColor,
              fontSize: durSize + "px",
              fontWeight: durWeight,
              alignSelf: durV
            }
          },
          durPrice
        )
      ),
      listChecked && wp.element.createElement(
        "div",
        {
          className: className + "__list_wrap",
          style: {
            marginTop: listMarginT + "px",
            marginBottom: listMarginB + "px"
          }
        },
        wp.element.createElement(
          "ul",
          {
            className: className + "__list list-" + listStyle,
            style: {
              color: listColor,
              fontSize: listSize + "px",
              background: listBack,
              padding: listPadding + "px",
              listStyle: "check" !== listStyle ? listStyle : "none",
              listStylePosition: "inside",
              fontWeight: listWeight,
              letterSpacing: listLetter + "px",
              textTransform: listUpper ? "uppercase" : "none",
              fontStyle: listItemsStyle,
              lineHeight: listLine + "px"
            }
          },
          listItems
        )
      ),
      descChecked && wp.element.createElement(
        "div",
        { className: className + "__desc_wrap" },
        wp.element.createElement(RichText.Content, {
          tagName: "p",
          className: className + "__desc",
          value: desc,
          style: {
            color: descColor,
            background: descBack,
            fontSize: descSize + "px",
            fontWeight: descWeight,
            lineHeight: descLine + "px",
            letterSpacing: descLetter + "px",
            fontStyle: descStyle,
            marginTop: descMarginT + "px",
            marginBottom: descMarginB + "px",
            padding: descPadding + "px"
          }
        })
      ),
      btnChecked && wp.element.createElement(
        "div",
        {
          className: className + "__button",
          style: {
            width: btnWidth + "%"
          }
        },
        wp.element.createElement(
          "a",
          {
            "class": className + "__button_link",
            href: btnLink,
            target: btnTarget ? "_blank" : "_self",
            rel: "noopener noreferrer",
            style: {
              color: btnColor,
              background: btnBack ? btnBack : "transparent",
              fontSize: btnSize + "px",
              fontWeight: btnWeight,
              letterSpacing: btnLetter + "px",
              fontStyle: btnStyle,
              lineHeight: btnLine + "px",
              marginTop: btnMarginT,
              marginBottom: btnMarginB,
              padding: btnPadding + btnPaddingU,
              border: btnBorderType,
              borderWidth: btnBorderWidth + "px",
              borderRadius: btnBorderRadius + "px",
              borderColor: btnBorderColor
            }
          },
          wp.element.createElement(RichText.Content, {
            tagName: "span",
            onChange: function onChange(newText) {
              return setAttributes({ btnText: newText });
            },
            value: btnText,
            style: {
              textTransform: btnUpper ? "uppercase" : "none"
            }
          })
        ),
        wp.element.createElement("style", {
          dangerouslySetInnerHTML: {
            __html: ["#premium-pricing-table-" + id + " .premium-pricing-table__button_link:hover {", "color: " + btnHoverColor + " !important;", "background: " + btnHoverBack + " !important", "}"].join("\n")
          }
        })
      )
    );
  }
}, {
  attributes: pricingAttrs_1_6_3,
  migrate: function migrate(attributes) {
    return Object.assign(attributes, { btnPaddingU: "" });
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        contentAlign = _props$attributes2.contentAlign,
        tableBack = _props$attributes2.tableBack,
        borderType = _props$attributes2.borderType,
        borderWidth = _props$attributes2.borderWidth,
        borderRadius = _props$attributes2.borderRadius,
        borderColor = _props$attributes2.borderColor,
        tablePadding = _props$attributes2.tablePadding,
        titleChecked = _props$attributes2.titleChecked,
        title = _props$attributes2.title,
        titleTag = _props$attributes2.titleTag,
        titleColor = _props$attributes2.titleColor,
        titleSize = _props$attributes2.titleSize,
        titleLetter = _props$attributes2.titleLetter,
        titleUpper = _props$attributes2.titleUpper,
        titleStyle = _props$attributes2.titleStyle,
        titleLine = _props$attributes2.titleLine,
        titleWeight = _props$attributes2.titleWeight,
        titleBack = _props$attributes2.titleBack,
        titleShadowBlur = _props$attributes2.titleShadowBlur,
        titleShadowColor = _props$attributes2.titleShadowColor,
        titleShadowHorizontal = _props$attributes2.titleShadowHorizontal,
        titleShadowVertical = _props$attributes2.titleShadowVertical,
        titleMarginT = _props$attributes2.titleMarginT,
        titleMarginB = _props$attributes2.titleMarginB,
        titlePadding = _props$attributes2.titlePadding,
        descChecked = _props$attributes2.descChecked,
        desc = _props$attributes2.desc,
        descColor = _props$attributes2.descColor,
        descSize = _props$attributes2.descSize,
        descLine = _props$attributes2.descLine,
        descWeight = _props$attributes2.descWeight,
        descStyle = _props$attributes2.descStyle,
        descLetter = _props$attributes2.descLetter,
        descBack = _props$attributes2.descBack,
        descMarginT = _props$attributes2.descMarginT,
        descMarginB = _props$attributes2.descMarginB,
        descPadding = _props$attributes2.descPadding,
        priceChecked = _props$attributes2.priceChecked,
        priceBack = _props$attributes2.priceBack,
        priceMarginT = _props$attributes2.priceMarginT,
        priceMarginB = _props$attributes2.priceMarginB,
        pricePadding = _props$attributes2.pricePadding,
        slashPrice = _props$attributes2.slashPrice,
        slashColor = _props$attributes2.slashColor,
        slashSize = _props$attributes2.slashSize,
        slashWeight = _props$attributes2.slashWeight,
        slashV = _props$attributes2.slashV,
        currPrice = _props$attributes2.currPrice,
        currColor = _props$attributes2.currColor,
        currSize = _props$attributes2.currSize,
        currWeight = _props$attributes2.currWeight,
        currV = _props$attributes2.currV,
        valPrice = _props$attributes2.valPrice,
        valColor = _props$attributes2.valColor,
        valSize = _props$attributes2.valSize,
        valWeight = _props$attributes2.valWeight,
        valV = _props$attributes2.valV,
        divPrice = _props$attributes2.divPrice,
        divColor = _props$attributes2.divColor,
        divSize = _props$attributes2.divSize,
        divWeight = _props$attributes2.divWeight,
        divV = _props$attributes2.divV,
        durPrice = _props$attributes2.durPrice,
        durColor = _props$attributes2.durColor,
        durSize = _props$attributes2.durSize,
        durWeight = _props$attributes2.durWeight,
        durV = _props$attributes2.durV,
        btnChecked = _props$attributes2.btnChecked,
        btnText = _props$attributes2.btnText,
        btnLink = _props$attributes2.btnLink,
        btnTarget = _props$attributes2.btnTarget,
        btnColor = _props$attributes2.btnColor,
        btnHoverColor = _props$attributes2.btnHoverColor,
        btnSize = _props$attributes2.btnSize,
        btnWeight = _props$attributes2.btnWeight,
        btnLine = _props$attributes2.btnLine,
        btnLetter = _props$attributes2.btnLetter,
        btnUpper = _props$attributes2.btnUpper,
        btnStyle = _props$attributes2.btnStyle,
        btnBack = _props$attributes2.btnBack,
        btnHoverBack = _props$attributes2.btnHoverBack,
        btnMarginT = _props$attributes2.btnMarginT,
        btnMarginB = _props$attributes2.btnMarginB,
        btnPadding = _props$attributes2.btnPadding,
        btnWidth = _props$attributes2.btnWidth,
        btnBorderType = _props$attributes2.btnBorderType,
        btnBorderWidth = _props$attributes2.btnBorderWidth,
        btnBorderRadius = _props$attributes2.btnBorderRadius,
        btnBorderColor = _props$attributes2.btnBorderColor,
        badgeChecked = _props$attributes2.badgeChecked,
        badgePos = _props$attributes2.badgePos,
        badgeBack = _props$attributes2.badgeBack,
        badgeColor = _props$attributes2.badgeColor,
        badgeTop = _props$attributes2.badgeTop,
        badgeHorizontal = _props$attributes2.badgeHorizontal,
        badgeWidth = _props$attributes2.badgeWidth,
        badgeSize = _props$attributes2.badgeSize,
        badgeTextSize = _props$attributes2.badgeTextSize,
        badgeWeight = _props$attributes2.badgeWeight,
        badgeLetter = _props$attributes2.badgeLetter,
        badgeStyle = _props$attributes2.badgeStyle,
        badgeUpper = _props$attributes2.badgeUpper,
        badgeText = _props$attributes2.badgeText,
        listChecked = _props$attributes2.listChecked,
        listColor = _props$attributes2.listColor,
        listWeight = _props$attributes2.listWeight,
        listSize = _props$attributes2.listSize,
        listItemsStyle = _props$attributes2.listItemsStyle,
        listLine = _props$attributes2.listLine,
        listUpper = _props$attributes2.listUpper,
        listLetter = _props$attributes2.listLetter,
        listBack = _props$attributes2.listBack,
        listItems = _props$attributes2.listItems,
        listMarginB = _props$attributes2.listMarginB,
        listMarginT = _props$attributes2.listMarginT,
        listPadding = _props$attributes2.listPadding,
        listStyle = _props$attributes2.listStyle,
        id = _props$attributes2.id;

    return wp.element.createElement(
      "div",
      {
        id: className + "-" + id,
        className: "" + className,
        style: {
          textAlign: contentAlign,
          background: tableBack,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          padding: tablePadding + "px"
        }
      },
      badgeChecked && wp.element.createElement(
        "div",
        {
          className: className + "__badge_wrap " + className + "__badge_" + badgePos
        },
        wp.element.createElement(
          "div",
          {
            className: className + "__badge",
            style: {
              borderRightColor: "right" === badgePos ? badgeBack : "transparent",
              borderTopColor: "left" === badgePos ? badgeBack : "transparent",
              borderBottomWidth: badgeSize + "px",
              borderRightWidth: badgeSize + "px",
              borderTopWidth: "left" === badgePos ? badgeSize + "px" : "none",
              borderLeftWidth: "right" === badgePos ? badgeSize + "px" : "none"
            }
          },
          wp.element.createElement(
            "span",
            {
              style: {
                fontSize: badgeTextSize + "px",
                color: badgeColor,
                fontWeight: badgeWeight,
                textTransform: badgeUpper ? "uppercase" : "none",
                letterSpacing: badgeLetter + "px",
                fontStyle: badgeStyle,
                width: badgeWidth + "px",
                top: badgeTop + "px",
                left: "left" === badgePos ? badgeHorizontal + "px" : "auto",
                right: "right" === badgePos ? badgeHorizontal + "px" : "auto"
              }
            },
            badgeText
          )
        )
      ),
      titleChecked && wp.element.createElement(
        "div",
        {
          className: className + "__title_wrap",
          style: {
            paddingTop: titleMarginT + "px",
            paddingBottom: titleMarginB + "px"
          }
        },
        wp.element.createElement(RichText.Content, {
          tagName: titleTag.toLowerCase(),
          className: className + "__title",
          value: title,
          style: {
            color: titleColor,
            background: titleBack,
            fontSize: titleSize + "px",
            letterSpacing: titleLetter + "px",
            textTransform: titleUpper ? "uppercase" : "none",
            fontStyle: titleStyle,
            fontWeight: titleWeight,
            lineHeight: titleLine + "px",
            marginBottom: titleMarginB + "px",
            padding: titlePadding + "px",
            textShadow: titleShadowHorizontal + "px " + titleShadowVertical + "px " + titleShadowBlur + "px " + titleShadowColor
          }
        })
      ),
      priceChecked && wp.element.createElement(
        "div",
        {
          className: className + "__price_wrap",
          style: {
            background: priceBack,
            marginTop: priceMarginT + "px",
            marginBottom: priceMarginB + "px",
            padding: pricePadding + "px",
            justifyContent: contentAlign
          }
        },
        slashPrice && wp.element.createElement(
          "strike",
          {
            className: className + "__slash",
            style: {
              color: slashColor,
              fontSize: slashSize + "px",
              fontWeight: slashWeight,
              alignSelf: slashV
            }
          },
          slashPrice
        ),
        currPrice && wp.element.createElement(
          "span",
          {
            className: className + "__currency",
            style: {
              color: currColor,
              fontSize: currSize + "px",
              fontWeight: currWeight,
              alignSelf: currV
            }
          },
          currPrice
        ),
        valPrice && wp.element.createElement(
          "span",
          {
            className: className + "__val",
            style: {
              color: valColor,
              fontSize: valSize + "px",
              fontWeight: valWeight,
              alignSelf: valV
            }
          },
          valPrice
        ),
        divPrice && wp.element.createElement(
          "span",
          {
            className: className + "__divider",
            style: {
              color: divColor,
              fontSize: divSize + "px",
              fontWeight: divWeight,
              alignSelf: divV
            }
          },
          divPrice
        ),
        durPrice && wp.element.createElement(
          "span",
          {
            className: className + "__dur",
            style: {
              color: durColor,
              fontSize: durSize + "px",
              fontWeight: durWeight,
              alignSelf: durV
            }
          },
          durPrice
        )
      ),
      listChecked && wp.element.createElement(
        "div",
        {
          className: className + "__list_wrap",
          style: {
            marginTop: listMarginT + "px",
            marginBottom: listMarginB + "px"
          }
        },
        wp.element.createElement(
          "ul",
          {
            className: className + "__list list-" + listStyle,
            style: {
              color: listColor,
              fontSize: listSize + "px",
              background: listBack,
              padding: listPadding + "px",
              listStyle: "check" !== listStyle ? listStyle : "none",
              listStylePosition: "inside",
              fontWeight: listWeight,
              letterSpacing: listLetter + "px",
              textTransform: listUpper ? "uppercase" : "none",
              fontStyle: listItemsStyle,
              lineHeight: listLine + "px"
            }
          },
          listItems
        )
      ),
      descChecked && wp.element.createElement(
        "div",
        { className: className + "__desc_wrap" },
        wp.element.createElement(RichText.Content, {
          tagName: "p",
          className: className + "__desc",
          value: desc,
          style: {
            color: descColor,
            background: descBack,
            fontSize: descSize + "px",
            fontWeight: descWeight,
            lineHeight: descLine + "px",
            letterSpacing: descLetter + "px",
            fontStyle: descStyle,
            marginTop: descMarginT + "px",
            marginBottom: descMarginB + "px",
            padding: descPadding + "px"
          }
        })
      ),
      btnChecked && wp.element.createElement(
        "div",
        {
          className: className + "__button",
          style: {
            width: btnWidth + "%"
          }
        },
        wp.element.createElement(
          "a",
          {
            "class": className + "__button_link",
            href: btnLink,
            target: btnTarget ? "_blank" : "_self",
            style: {
              color: btnColor,
              background: btnBack ? btnBack : "transparent",
              fontSize: btnSize + "px",
              fontWeight: btnWeight,
              letterSpacing: btnLetter + "px",
              fontStyle: btnStyle,
              lineHeight: btnLine + "px",
              marginTop: btnMarginT,
              marginBottom: btnMarginB,
              padding: btnPadding,
              border: btnBorderType,
              borderWidth: btnBorderWidth + "px",
              borderRadius: btnBorderRadius + "px",
              borderColor: btnBorderColor
            }
          },
          wp.element.createElement(RichText.Content, {
            tagName: "span",
            onChange: function onChange(newText) {
              return setAttributes({ btnText: newText });
            },
            value: btnText,
            style: {
              textTransform: btnUpper ? "uppercase" : "none"
            }
          })
        ),
        wp.element.createElement("style", {
          dangerouslySetInnerHTML: {
            __html: ["#premium-pricing-table-" + id + " .premium-pricing-table__button_link:hover {", "color: " + btnHoverColor + " !important;", "background: " + btnHoverBack + " !important", "}"].join("\n")
          }
        })
      )
    );
  }
}];

/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 232 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__edit__ = __webpack_require__(233);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__save__ = __webpack_require__(234);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__deprecated__ = __webpack_require__(235);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__icons__ = __webpack_require__(3);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var containerAttrs = {
    stretchSection: {
        type: "boolean",
        default: false
    },
    innerWidthType: {
        type: "string",
        default: "boxed"
    },
    horAlign: {
        type: "string",
        default: "center"
    },
    height: {
        type: "string",
        default: "min"
    },
    innerWidth: {
        type: "number"
    },
    minHeight: {
        type: "number"
    },
    minHeightUnit: {
        type: "string"
    },
    vPos: {
        type: "string",
        default: "top"
    },
    color: {
        type: "string"
    },
    imageID: {
        type: "string"
    },
    imageURL: {
        type: "string"
    },
    backgroundRepeat: {
        type: "string",
        default: "no-repeat"
    },
    backgroundPosition: {
        type: "string",
        default: "top center"
    },
    backgroundSize: {
        type: "string",
        default: "auto"
    },
    fixed: {
        type: "boolean",
        default: false
    },
    borderType: {
        type: "string",
        default: "none"
    },
    borderWidth: {
        type: "number",
        default: "1"
    },
    borderRadius: {
        type: "number"
    },
    borderColor: {
        type: "string"
    },
    marginTop: {
        type: "number"
    },
    marginBottom: {
        type: "number"
    },
    marginLeft: {
        type: "number"
    },
    marginRight: {
        type: "number"
    },
    marginUnit: {
        type: "string"
    },
    paddingTop: {
        type: "number"
    },
    paddingRight: {
        type: "number"
    },
    paddingBottom: {
        type: "number"
    },
    paddingLeft: {
        type: "number"
    },
    paddingUnit: {
        type: "string"
    },
    shadowColor: {
        type: "string"
    },
    shadowBlur: {
        type: "number",
        default: "0"
    },
    shadowHorizontal: {
        type: "number",
        default: "0"
    },
    shadowVertical: {
        type: "number",
        default: "0"
    },
    shadowPosition: {
        type: "string",
        default: ""
    }
};
registerBlockType("premium/container", {
    title: __("Section"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__icons__["a" /* default */], { icon: "section" }),
    category: "premium-blocks",
    attributes: containerAttrs,
    supports: _defineProperty({
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["e" /* container */],
        align: true
    }, "align", ["center", "wide", "full"]),
    example: {
        attributes: {
            minHeight: 200
        }
    },
    edit: __WEBPACK_IMPORTED_MODULE_1__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_2__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_3__deprecated__["a" /* default */]
});

/***/ }),
/* 233 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_padding__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_margin__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_background__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_size_units__ = __webpack_require__(7);








var __ = wp.i18n.__;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    ToggleControl = _wp$components.ToggleControl,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl;
var Fragment = wp.element.Fragment;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    InnerBlocks = _wp$editor.InnerBlocks,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette;


var CONTENT = [["core/paragraph", { content: __("Insert your text or select a block ") }]];

var edit = function edit(props) {
    var isSelected = props.isSelected,
        className = props.className,
        setAttributes = props.setAttributes;
    var _props$attributes = props.attributes,
        stretchSection = _props$attributes.stretchSection,
        horAlign = _props$attributes.horAlign,
        innerWidthType = _props$attributes.innerWidthType,
        innerWidth = _props$attributes.innerWidth,
        minHeight = _props$attributes.minHeight,
        minHeightUnit = _props$attributes.minHeightUnit,
        vPos = _props$attributes.vPos,
        height = _props$attributes.height,
        color = _props$attributes.color,
        imageID = _props$attributes.imageID,
        imageURL = _props$attributes.imageURL,
        fixed = _props$attributes.fixed,
        backgroundRepeat = _props$attributes.backgroundRepeat,
        backgroundPosition = _props$attributes.backgroundPosition,
        backgroundSize = _props$attributes.backgroundSize,
        borderType = _props$attributes.borderType,
        borderWidth = _props$attributes.borderWidth,
        borderColor = _props$attributes.borderColor,
        borderRadius = _props$attributes.borderRadius,
        marginTop = _props$attributes.marginTop,
        marginBottom = _props$attributes.marginBottom,
        marginLeft = _props$attributes.marginLeft,
        marginRight = _props$attributes.marginRight,
        marginUnit = _props$attributes.marginUnit,
        paddingTop = _props$attributes.paddingTop,
        paddingRight = _props$attributes.paddingRight,
        paddingBottom = _props$attributes.paddingBottom,
        paddingLeft = _props$attributes.paddingLeft,
        paddingUnit = _props$attributes.paddingUnit,
        shadowBlur = _props$attributes.shadowBlur,
        shadowColor = _props$attributes.shadowColor,
        shadowHorizontal = _props$attributes.shadowHorizontal,
        shadowVertical = _props$attributes.shadowVertical,
        shadowPosition = _props$attributes.shadowPosition;

    var WIDTH = [{
        value: "boxed",
        label: __("Boxed")
    }, {
        value: "full",
        label: __("Full Width")
    }];
    var HEIGHT = [{
        value: "fit",
        label: __("Fit to Screen")
    }, {
        value: "min",
        label: __("Min Height")
    }];
    var VPOSITION = [{
        value: "top",
        label: __("Top")
    }, {
        value: "middle",
        label: __("Middle")
    }, {
        value: "bottom",
        label: __("Bottom")
    }];

    var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-container");

    return [isSelected && wp.element.createElement(
        BlockControls,
        { key: "controls" },
        wp.element.createElement(AlignmentToolbar, {
            value: horAlign,
            onChange: function onChange(newAlign) {
                return setAttributes({ horAlign: newAlign });
            }
        })
    ), isSelected && wp.element.createElement(
        InspectorControls,
        { key: "inspector" },
        wp.element.createElement(
            PanelBody,
            {
                title: __("General Settings"),
                className: "premium-panel-body premium-stretch-section",
                initialOpen: true
            },
            wp.element.createElement(ToggleControl, {
                label: __("Stretch Section"),
                checked: stretchSection,
                onChange: function onChange(check) {
                    return setAttributes({ stretchSection: check });
                },
                help: __("This option stretches the section to the full width of the page using JS. You will need to reload the page after you enable this option for the first time.")
            }),
            stretchSection && wp.element.createElement(SelectControl, {
                label: __("Content Width"),
                options: WIDTH,
                value: innerWidthType,
                onChange: function onChange(newValue) {
                    return setAttributes({ innerWidthType: newValue });
                }
            }),
            "boxed" === innerWidthType && stretchSection && wp.element.createElement(RangeControl, {
                label: __("Max Width (%)"),
                min: "1",
                max: "1600",
                value: innerWidth,
                onChange: function onChange(newValue) {
                    return setAttributes({ innerWidth: newValue });
                }
            }),
            wp.element.createElement(SelectControl, {
                label: __("Height"),
                options: HEIGHT,
                value: height,
                onChange: function onChange(newValue) {
                    return setAttributes({ height: newValue });
                }
            }),
            "min" === height && wp.element.createElement(
                Fragment,
                null,
                wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_size_units__["a" /* default */], {
                    units: ["px", "vh", "vw"],
                    onChangeSizeUnit: function onChangeSizeUnit(newValue) {
                        return setAttributes({ minHeightUnit: newValue });
                    }
                }),
                wp.element.createElement(RangeControl, {
                    label: __("Min Height"),
                    value: minHeight,
                    min: "1",
                    max: "800",
                    onChange: function onChange(newValue) {
                        return setAttributes({ minHeight: newValue });
                    }
                })
            ),
            wp.element.createElement(SelectControl, {
                label: __("Content Position"),
                help: __("If you have two or more inner columns then this option will work only on the preview page"),
                options: VPOSITION,
                value: vPos,
                onChange: function onChange(newValue) {
                    return setAttributes({ vPos: newValue });
                }
            })
        ),
        wp.element.createElement(
            PanelBody,
            {
                title: __("Background"),
                className: "premium-panel-body",
                initialOpen: false
            },
            wp.element.createElement(
                "p",
                null,
                __("Background Color")
            ),
            wp.element.createElement(ColorPalette, {
                value: color,
                onChange: function onChange(newValue) {
                    return setAttributes({
                        color: newValue
                    });
                },
                allowReset: true
            }),
            imageURL && wp.element.createElement("img", { src: imageURL, width: "100%", height: "auto" }),
            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_background__["a" /* default */], {
                imageID: imageID,
                imageURL: imageURL,
                backgroundPosition: backgroundPosition,
                backgroundRepeat: backgroundRepeat,
                backgroundSize: backgroundSize,
                fixed: fixed,
                onSelectMedia: function onSelectMedia(media) {
                    setAttributes({
                        imageID: media.id,
                        imageURL: media.url
                    });
                },
                onRemoveImage: function onRemoveImage(value) {
                    return setAttributes({ imageURL: "", imageID: "" });
                },
                onChangeBackPos: function onChangeBackPos(newValue) {
                    return setAttributes({ backgroundPosition: newValue });
                },
                onchangeBackRepeat: function onchangeBackRepeat(newValue) {
                    return setAttributes({ backgroundRepeat: newValue });
                },
                onChangeBackSize: function onChangeBackSize(newValue) {
                    return setAttributes({ backgroundSize: newValue });
                },
                onChangeFixed: function onChangeFixed(check) {
                    return setAttributes({ fixed: check });
                }
            })
        ),
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_border__["a" /* default */], {
            borderType: borderType,
            borderWidth: borderWidth,
            borderColor: borderColor,
            borderRadius: borderRadius,
            onChangeType: function onChangeType(newType) {
                return setAttributes({ borderType: newType });
            },
            onChangeWidth: function onChangeWidth(newWidth) {
                return setAttributes({ borderWidth: newWidth });
            },
            onChangeColor: function onChangeColor(colorValue) {
                return setAttributes({ borderColor: colorValue.hex });
            },
            onChangeRadius: function onChangeRadius(newrRadius) {
                return setAttributes({ borderRadius: newrRadius });
            }
        }),
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_box_shadow__["a" /* default */], {
            inner: false,
            color: shadowColor,
            blur: shadowBlur,
            horizontal: shadowHorizontal,
            vertical: shadowVertical,
            position: shadowPosition,
            onChangeColor: function onChangeColor(newColor) {
                return setAttributes({
                    shadowColor: newColor === undefined ? "transparent" : newColor.hex
                });
            },
            onChangeBlur: function onChangeBlur(newBlur) {
                return setAttributes({
                    shadowBlur: newBlur === undefined ? 0 : newBlur
                });
            },
            onChangehHorizontal: function onChangehHorizontal(newValue) {
                return setAttributes({
                    shadowHorizontal: newValue === undefined ? 0 : newValue
                });
            },
            onChangeVertical: function onChangeVertical(newValue) {
                return setAttributes({
                    shadowVertical: newValue === undefined ? 0 : newValue
                });
            },
            onChangePosition: function onChangePosition(newValue) {
                return setAttributes({
                    shadowPosition: newValue === undefined ? 0 : newValue
                });
            }
        }),
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_margin__["a" /* default */], {
            directions: ["all"],
            marginTop: marginTop,
            marginRight: marginRight,
            marginBottom: marginBottom,
            marginLeft: marginLeft,
            onChangeMarTop: function onChangeMarTop(value) {
                return setAttributes({
                    marginTop: value === undefined ? 0 : value
                });
            },
            onChangeMarRight: function onChangeMarRight(value) {
                return setAttributes({
                    marginRight: value === undefined ? 0 : value
                });
            },
            onChangeMarBottom: function onChangeMarBottom(value) {
                return setAttributes({
                    marginBottom: value === undefined ? 0 : value
                });
            },
            onChangeMarLeft: function onChangeMarLeft(value) {
                return setAttributes({
                    marginLeft: value === undefined ? 0 : value
                });
            },
            showUnits: true,
            onChangeMarSizeUnit: function onChangeMarSizeUnit(newvalue) {
                return setAttributes({ marginUnit: newvalue });
            }
        }),
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_padding__["a" /* default */], {
            paddingTop: paddingTop,
            paddingRight: paddingRight,
            paddingBottom: paddingBottom,
            paddingLeft: paddingLeft,
            onChangePadTop: function onChangePadTop(value) {
                return setAttributes({
                    paddingTop: value === undefined ? 0 : value
                });
            },
            onChangePadRight: function onChangePadRight(value) {
                return setAttributes({
                    paddingRight: value === undefined ? 0 : value
                });
            },
            onChangePadBottom: function onChangePadBottom(value) {
                return setAttributes({
                    paddingBottom: value === undefined ? 0 : value
                });
            },
            onChangePadLeft: function onChangePadLeft(value) {
                return setAttributes({
                    paddingLeft: value === undefined ? 0 : value
                });
            },
            showUnits: true,
            selectedUnit: paddingUnit,
            onChangePadSizeUnit: function onChangePadSizeUnit(newvalue) {
                return setAttributes({ paddingUnit: newvalue });
            }
        })
    ), wp.element.createElement(
        "div",
        {
            className: mainClasses + " premium-container__stretch_" + stretchSection + " premium-container__" + innerWidthType,
            style: {
                textAlign: horAlign,
                minHeight: "fit" === height ? "100vh" : minHeight + minHeightUnit,
                backgroundColor: color,
                border: borderType,
                borderWidth: borderWidth + "px",
                borderRadius: borderRadius + "px",
                borderColor: borderColor,
                backgroundImage: "url('" + imageURL + "')",
                backgroundRepeat: backgroundRepeat,
                backgroundPosition: backgroundPosition,
                backgroundSize: backgroundSize,
                backgroundAttachment: fixed ? "fixed" : "unset",
                marginTop: marginTop + marginUnit,
                marginBottom: marginBottom + marginUnit,
                marginLeft: marginLeft + marginUnit,
                marginRight: marginRight + marginUnit,
                paddingTop: paddingTop + paddingUnit,
                paddingBottom: paddingBottom + paddingUnit,
                paddingLeft: paddingLeft + paddingUnit,
                paddingRight: paddingRight + paddingUnit,
                boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
            }
        },
        wp.element.createElement(
            "div",
            {
                className: "premium-container__content_wrap premium-container__" + vPos,
                style: {
                    maxWidth: "boxed" == innerWidthType && stretchSection ? innerWidth ? innerWidth + "px" : "1140px" : "100%"
                }
            },
            wp.element.createElement(
                "div",
                { className: "premium-container__content_inner" },
                wp.element.createElement(InnerBlocks, { template: CONTENT })
            )
        )
    )];
};

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 234 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var InnerBlocks = wp.editor.InnerBlocks;


var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      stretchSection = _props$attributes.stretchSection,
      horAlign = _props$attributes.horAlign,
      innerWidthType = _props$attributes.innerWidthType,
      innerWidth = _props$attributes.innerWidth,
      height = _props$attributes.height,
      vPos = _props$attributes.vPos,
      minHeight = _props$attributes.minHeight,
      minHeightUnit = _props$attributes.minHeightUnit,
      color = _props$attributes.color,
      imageURL = _props$attributes.imageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderColor = _props$attributes.borderColor,
      borderRadius = _props$attributes.borderRadius,
      marginTop = _props$attributes.marginTop,
      marginBottom = _props$attributes.marginBottom,
      marginLeft = _props$attributes.marginLeft,
      marginRight = _props$attributes.marginRight,
      marginUnit = _props$attributes.marginUnit,
      paddingTop = _props$attributes.paddingTop,
      paddingRight = _props$attributes.paddingRight,
      paddingBottom = _props$attributes.paddingBottom,
      paddingLeft = _props$attributes.paddingLeft,
      paddingUnit = _props$attributes.paddingUnit,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      shadowPosition = _props$attributes.shadowPosition;


  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-container');

  return wp.element.createElement(
    'div',
    {
      className: mainClasses + ' premium-container__stretch_' + stretchSection + ' premium-container__' + innerWidthType,
      style: {
        textAlign: horAlign,
        minHeight: "fit" === height ? "100vh" : minHeight + minHeightUnit,
        backgroundColor: color,
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius + "px",
        borderColor: borderColor,
        backgroundImage: 'url(\'' + imageURL + '\')',
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset",
        marginTop: marginTop + marginUnit,
        marginBottom: marginBottom + marginUnit,
        marginLeft: marginLeft + marginUnit,
        marginRight: marginRight + marginUnit,
        paddingTop: paddingTop + paddingUnit,
        paddingBottom: paddingBottom + paddingUnit,
        paddingLeft: paddingLeft + paddingUnit,
        paddingRight: paddingRight + paddingUnit,
        boxShadow: shadowHorizontal + 'px ' + shadowVertical + 'px ' + shadowBlur + 'px ' + shadowColor + ' ' + shadowPosition
      }
    },
    wp.element.createElement(
      'div',
      {
        className: 'premium-container__content_wrap premium-container__' + vPos,
        style: {
          maxWidth: "boxed" == innerWidthType && stretchSection ? innerWidth ? innerWidth + "px" : "1140px" : "100%"
        }
      },
      wp.element.createElement(
        'div',
        { className: 'premium-container__content_inner' },
        wp.element.createElement(InnerBlocks.Content, null)
      )
    )
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 235 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var InnerBlocks = wp.editor.InnerBlocks;


var className = "premium-container";

var containerAttrs_1_0_1 = {
  stretchSection: {
    type: "boolean",
    default: false
  },
  innerWidthType: {
    type: "string",
    default: "boxed"
  },
  horAlign: {
    type: "string",
    default: "center"
  },
  height: {
    type: "string",
    default: "min"
  },
  innerWidth: {
    type: "number"
  },
  minHeight: {
    type: "number"
  },
  vPos: {
    type: "string",
    default: "top"
  },
  color: {
    type: "string"
  },
  imageID: {
    type: "string"
  },
  imageURL: {
    type: "string"
  },
  backgroundRepeat: {
    type: "string",
    default: "no-repeat"
  },
  backgroundPosition: {
    type: "string",
    default: "top center"
  },
  backgroundSize: {
    type: "string",
    default: "auto"
  },
  fixed: {
    type: "boolean",
    default: false
  },
  borderType: {
    type: "string",
    default: "none"
  },
  borderWidth: {
    type: "number",
    default: "1"
  },
  borderRadius: {
    type: "number"
  },
  borderColor: {
    type: "string"
  },
  marginTop: {
    type: "number"
  },
  marginBottom: {
    type: "number"
  },
  marginLeft: {
    type: "number"
  },
  marginRight: {
    type: "number"
  },
  paddingTop: {
    type: "number"
  },
  paddingRight: {
    type: "number"
  },
  paddingBottom: {
    type: "number"
  },
  paddingLeft: {
    type: "number"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  shadowPosition: {
    type: "string",
    default: ""
  }
};

var newAttributes_1_6_1 = {
  paddingUnit: {
    type: "string"
  }
};

var deprecated_attributes_1_6_1 = Object.assign(containerAttrs_1_0_1, newAttributes_1_6_1);

var newAttributes_1_6_2 = {
  marginUnit: {
    type: "string"
  }
};

var deprecated_attributes_1_6_2 = Object.assign(deprecated_attributes_1_6_1, newAttributes_1_6_2);

var deprecatedContent = [{
  attributes: deprecated_attributes_1_6_2,
  migrate: function migrate(attributes) {
    var newAttributes = {
      minHeightUnit: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        stretchSection = _props$attributes.stretchSection,
        horAlign = _props$attributes.horAlign,
        innerWidthType = _props$attributes.innerWidthType,
        innerWidth = _props$attributes.innerWidth,
        height = _props$attributes.height,
        vPos = _props$attributes.vPos,
        minHeight = _props$attributes.minHeight,
        color = _props$attributes.color,
        imageURL = _props$attributes.imageURL,
        fixed = _props$attributes.fixed,
        backgroundRepeat = _props$attributes.backgroundRepeat,
        backgroundPosition = _props$attributes.backgroundPosition,
        backgroundSize = _props$attributes.backgroundSize,
        borderType = _props$attributes.borderType,
        borderWidth = _props$attributes.borderWidth,
        borderColor = _props$attributes.borderColor,
        borderRadius = _props$attributes.borderRadius,
        marginTop = _props$attributes.marginTop,
        marginBottom = _props$attributes.marginBottom,
        marginLeft = _props$attributes.marginLeft,
        marginRight = _props$attributes.marginRight,
        marginUnit = _props$attributes.marginUnit,
        paddingTop = _props$attributes.paddingTop,
        paddingRight = _props$attributes.paddingRight,
        paddingBottom = _props$attributes.paddingBottom,
        paddingLeft = _props$attributes.paddingLeft,
        paddingUnit = _props$attributes.paddingUnit,
        shadowBlur = _props$attributes.shadowBlur,
        shadowColor = _props$attributes.shadowColor,
        shadowHorizontal = _props$attributes.shadowHorizontal,
        shadowVertical = _props$attributes.shadowVertical,
        shadowPosition = _props$attributes.shadowPosition;

    return wp.element.createElement(
      "div",
      {
        className: className + " " + className + "__stretch_" + stretchSection + " " + className + "__" + innerWidthType,
        style: {
          textAlign: horAlign,
          minHeight: "fit" === height ? "100vh" : minHeight,
          backgroundColor: color,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset",
          marginTop: marginTop + marginUnit,
          marginBottom: marginBottom + marginUnit,
          marginLeft: marginLeft + marginUnit,
          marginRight: marginRight + marginUnit,
          paddingTop: paddingTop + paddingUnit,
          paddingBottom: paddingBottom + paddingUnit,
          paddingLeft: paddingLeft + paddingUnit,
          paddingRight: paddingRight + paddingUnit,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      wp.element.createElement(
        "div",
        {
          className: className + "__content_wrap " + className + "__" + vPos,
          style: {
            maxWidth: "boxed" == innerWidthType && stretchSection ? innerWidth ? innerWidth + "px" : "1140px" : "100%"
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__content_inner" },
          wp.element.createElement(InnerBlocks.Content, null)
        )
      )
    );
  }
}, {
  attributes: deprecated_attributes_1_6_1,
  migrate: function migrate(attributes) {
    var newAttributes = {
      marginUnit: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        stretchSection = _props$attributes2.stretchSection,
        horAlign = _props$attributes2.horAlign,
        innerWidthType = _props$attributes2.innerWidthType,
        innerWidth = _props$attributes2.innerWidth,
        height = _props$attributes2.height,
        vPos = _props$attributes2.vPos,
        minHeight = _props$attributes2.minHeight,
        color = _props$attributes2.color,
        imageURL = _props$attributes2.imageURL,
        fixed = _props$attributes2.fixed,
        backgroundRepeat = _props$attributes2.backgroundRepeat,
        backgroundPosition = _props$attributes2.backgroundPosition,
        backgroundSize = _props$attributes2.backgroundSize,
        borderType = _props$attributes2.borderType,
        borderWidth = _props$attributes2.borderWidth,
        borderColor = _props$attributes2.borderColor,
        borderRadius = _props$attributes2.borderRadius,
        marginTop = _props$attributes2.marginTop,
        marginBottom = _props$attributes2.marginBottom,
        marginLeft = _props$attributes2.marginLeft,
        marginRight = _props$attributes2.marginRight,
        paddingTop = _props$attributes2.paddingTop,
        paddingRight = _props$attributes2.paddingRight,
        paddingBottom = _props$attributes2.paddingBottom,
        paddingLeft = _props$attributes2.paddingLeft,
        paddingUnit = _props$attributes2.paddingUnit,
        shadowBlur = _props$attributes2.shadowBlur,
        shadowColor = _props$attributes2.shadowColor,
        shadowHorizontal = _props$attributes2.shadowHorizontal,
        shadowVertical = _props$attributes2.shadowVertical,
        shadowPosition = _props$attributes2.shadowPosition;

    return wp.element.createElement(
      "div",
      {
        className: className + " " + className + "__stretch_" + stretchSection + " " + className + "__" + innerWidthType,
        style: {
          textAlign: horAlign,
          minHeight: "fit" === height ? "100vh" : minHeight,
          backgroundColor: color,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset",
          marginTop: marginTop + "px",
          marginBottom: marginBottom + "px",
          marginLeft: marginLeft + "px",
          marginRight: marginRight + "px",
          paddingTop: paddingTop + paddingUnit,
          paddingBottom: paddingBottom + paddingUnit,
          paddingLeft: paddingLeft + paddingUnit,
          paddingRight: paddingRight + paddingUnit,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      wp.element.createElement(
        "div",
        {
          className: className + "__content_wrap " + className + "__" + vPos,
          style: {
            maxWidth: "boxed" == innerWidthType && stretchSection ? innerWidth ? innerWidth + "px" : "1140px" : "100%"
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__content_inner" },
          wp.element.createElement(InnerBlocks.Content, null)
        )
      )
    );
  }
}, {
  attributes: containerAttrs_1_0_1,
  migrate: function migrate(attributes) {
    var newAttributes = {
      paddingUnit: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        stretchSection = _props$attributes3.stretchSection,
        horAlign = _props$attributes3.horAlign,
        innerWidthType = _props$attributes3.innerWidthType,
        innerWidth = _props$attributes3.innerWidth,
        height = _props$attributes3.height,
        vPos = _props$attributes3.vPos,
        minHeight = _props$attributes3.minHeight,
        color = _props$attributes3.color,
        imageURL = _props$attributes3.imageURL,
        fixed = _props$attributes3.fixed,
        backgroundRepeat = _props$attributes3.backgroundRepeat,
        backgroundPosition = _props$attributes3.backgroundPosition,
        backgroundSize = _props$attributes3.backgroundSize,
        borderType = _props$attributes3.borderType,
        borderWidth = _props$attributes3.borderWidth,
        borderColor = _props$attributes3.borderColor,
        borderRadius = _props$attributes3.borderRadius,
        marginTop = _props$attributes3.marginTop,
        marginBottom = _props$attributes3.marginBottom,
        marginLeft = _props$attributes3.marginLeft,
        marginRight = _props$attributes3.marginRight,
        paddingTop = _props$attributes3.paddingTop,
        paddingRight = _props$attributes3.paddingRight,
        paddingBottom = _props$attributes3.paddingBottom,
        paddingLeft = _props$attributes3.paddingLeft,
        shadowBlur = _props$attributes3.shadowBlur,
        shadowColor = _props$attributes3.shadowColor,
        shadowHorizontal = _props$attributes3.shadowHorizontal,
        shadowVertical = _props$attributes3.shadowVertical,
        shadowPosition = _props$attributes3.shadowPosition;

    return wp.element.createElement(
      "div",
      {
        className: className + " " + className + "__stretch_" + stretchSection + " " + className + "__" + innerWidthType,
        style: {
          textAlign: horAlign,
          minHeight: "fit" === height ? "100vh" : minHeight,
          backgroundColor: color,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset",
          marginTop: marginTop + "px",
          marginBottom: marginBottom + "px",
          paddingTop: paddingTop + "px",
          marginLeft: marginLeft + "px",
          marginRight: marginRight + "px",
          paddingBottom: paddingBottom + "px",
          paddingLeft: paddingLeft + "px",
          paddingRight: paddingRight + "px",
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      wp.element.createElement(
        "div",
        {
          className: className + "__content_wrap " + className + "__" + vPos,
          style: {
            maxWidth: "boxed" == innerWidthType && stretchSection ? innerWidth ? innerWidth + "px" : "1140px" : "100%"
          }
        },
        wp.element.createElement(
          "div",
          { className: className + "__content_inner" },
          wp.element.createElement(InnerBlocks.Content, null)
        )
      )
    );
  }
}, {
  attributes: containerAttrs_1_0_1,
  save: function save(props) {
    var _props$attributes4 = props.attributes,
        horAlign = _props$attributes4.horAlign,
        innerWidth = _props$attributes4.innerWidth,
        height = _props$attributes4.height,
        vPos = _props$attributes4.vPos,
        minHeight = _props$attributes4.minHeight,
        color = _props$attributes4.color,
        imageURL = _props$attributes4.imageURL,
        fixed = _props$attributes4.fixed,
        backgroundRepeat = _props$attributes4.backgroundRepeat,
        backgroundPosition = _props$attributes4.backgroundPosition,
        backgroundSize = _props$attributes4.backgroundSize,
        borderType = _props$attributes4.borderType,
        borderWidth = _props$attributes4.borderWidth,
        borderColor = _props$attributes4.borderColor,
        borderRadius = _props$attributes4.borderRadius,
        marginTop = _props$attributes4.marginTop,
        marginBottom = _props$attributes4.marginBottom,
        marginLeft = _props$attributes4.marginLeft,
        marginRight = _props$attributes4.marginRight,
        paddingTop = _props$attributes4.paddingTop,
        paddingRight = _props$attributes4.paddingRight,
        paddingBottom = _props$attributes4.paddingBottom,
        paddingLeft = _props$attributes4.paddingLeft,
        shadowBlur = _props$attributes4.shadowBlur,
        shadowColor = _props$attributes4.shadowColor,
        shadowHorizontal = _props$attributes4.shadowHorizontal,
        shadowVertical = _props$attributes4.shadowVertical,
        shadowPosition = _props$attributes4.shadowPosition;

    return wp.element.createElement(
      "div",
      {
        className: className,
        style: {
          textAlign: horAlign,
          height: "fit" === height ? "100vh" : minHeight,
          backgroundColor: color,
          border: borderType,
          borderWidth: borderWidth + "px",
          borderRadius: borderRadius + "px",
          borderColor: borderColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset",
          marginTop: marginTop + "px",
          marginBottom: marginBottom + "px",
          paddingTop: paddingTop + "px",
          marginLeft: marginLeft + "px",
          marginRight: marginRight + "px",
          paddingBottom: paddingBottom + "px",
          paddingLeft: paddingLeft + "px",
          paddingRight: paddingRight + "px",
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      wp.element.createElement(
        "div",
        {
          className: className + "__content_wrap " + className + "__" + vPos,
          style: { width: innerWidth ? innerWidth + "%" : "100%" }
        },
        wp.element.createElement(
          "div",
          { className: className + "__content_inner" },
          wp.element.createElement(InnerBlocks.Content, null)
        )
      )
    );
  }
}];

/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 236 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__edit__ = __webpack_require__(237);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__save__ = __webpack_require__(238);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__deprecated__ = __webpack_require__(239);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__icons__ = __webpack_require__(3);






var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var testimonialsAttrs = {
    align: {
        type: "string",
        default: "center"
    },
    authorImgId: {
        type: "string"
    },
    authorImgUrl: {
        type: "string"
    },
    imgRadius: {
        type: "string",
        default: "50%"
    },
    imgSize: {
        type: "number"
    },
    imgBorder: {
        type: "number",
        default: "1"
    },
    imgBorderColor: {
        type: "string"
    },
    author: {
        type: "array",
        source: "children",
        selector: ".premium-testimonial__author",
        default: "John Doe"
    },
    authorTag: {
        type: "string",
        default: "H3"
    },
    authorColor: {
        type: "string"
    },
    authorSize: {
        type: "number"
    },
    authorLetter: {
        type: "number"
    },
    authorStyle: {
        type: "string"
    },
    authorUpper: {
        type: "boolean"
    },
    authorWeight: {
        type: "number",
        default: 500
    },
    authorComTag: {
        type: "string",
        default: "H4"
    },
    text: {
        type: "array",
        source: "children",
        selector: ".premium-testimonial__text"
    },
    authorCom: {
        type: "array",
        source: "children",
        selector: ".premium-testimonial__author_comp",
        default: "Leap13"
    },
    authorComColor: {
        type: "string"
    },
    authorComSize: {
        type: "number"
    },
    urlCheck: {
        type: "boolean",
        default: false
    },
    urlText: {
        type: "string"
    },
    urlTarget: {
        type: "boolean",
        default: false
    },
    quotSize: {
        type: "number"
    },
    quotColor: {
        type: "string"
    },
    quotOpacity: {
        type: "number"
    },
    bodyColor: {
        type: "string"
    },
    bodySize: {
        type: "number"
    },
    bodyLine: {
        type: "number"
    },
    bodyTop: {
        type: "number"
    },
    bodyBottom: {
        type: "number"
    },
    dashColor: {
        type: "string"
    },
    shadowColor: {
        type: "string"
    },
    shadowBlur: {
        type: "number"
    },
    shadowHorizontal: {
        type: "number"
    },
    shadowVertical: {
        type: "number"
    },
    shadowPosition: {
        type: "string"
    },
    backColor: {
        type: "string"
    },
    imageID: {
        type: "string"
    },
    imageURL: {
        type: "string"
    },
    backgroundRepeat: {
        type: "string",
        default: "no-repeat"
    },
    backgroundPosition: {
        type: "string",
        default: "top center"
    },
    backgroundSize: {
        type: "string",
        default: "auto"
    },
    fixed: {
        type: "boolean",
        default: false
    },
    paddingTop: {
        type: "number"
    },
    paddingRight: {
        type: "number"
    },
    paddingBottom: {
        type: "number"
    },
    paddingLeft: {
        type: "number"
    },
    paddingUnit: {
        type: "string",
        default: "px"
    }
};

registerBlockType("premium/testimonial", {
    title: __("Testimonial"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__icons__["a" /* default */], { icon: "testimonials" }),
    category: "premium-blocks",
    attributes: testimonialsAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["p" /* testimonial */]
    },
    example: {},
    edit: __WEBPACK_IMPORTED_MODULE_1__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_2__save__["a" /* default */],
    deprecated: __WEBPACK_IMPORTED_MODULE_3__deprecated__["a" /* default */]
});

/***/ }),
/* 237 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_default_image__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_testimonials_upper_quote__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_testimonials_lower_quote__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_background__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_premium_padding__ = __webpack_require__(16);









var __ = wp.i18n.__;
var _wp$components = wp.components,
    IconButton = _wp$components.IconButton,
    Toolbar = _wp$components.Toolbar,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    InspectorControls = _wp$editor.InspectorControls,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    RichText = _wp$editor.RichText,
    MediaUpload = _wp$editor.MediaUpload,
    ColorPalette = _wp$editor.ColorPalette;
var Fragment = wp.element.Fragment;


var edit = function edit(props) {
  var isSelected = props.isSelected,
      className = props.className,
      setAttributes = props.setAttributes;
  var _props$attributes = props.attributes,
      align = _props$attributes.align,
      authorImgId = _props$attributes.authorImgId,
      authorImgUrl = _props$attributes.authorImgUrl,
      imgRadius = _props$attributes.imgRadius,
      imgSize = _props$attributes.imgSize,
      imgBorder = _props$attributes.imgBorder,
      imgBorderColor = _props$attributes.imgBorderColor,
      text = _props$attributes.text,
      authorTag = _props$attributes.authorTag,
      authorColor = _props$attributes.authorColor,
      authorSize = _props$attributes.authorSize,
      authorLetter = _props$attributes.authorLetter,
      authorStyle = _props$attributes.authorStyle,
      authorUpper = _props$attributes.authorUpper,
      authorWeight = _props$attributes.authorWeight,
      author = _props$attributes.author,
      authorComTag = _props$attributes.authorComTag,
      authorCom = _props$attributes.authorCom,
      authorComColor = _props$attributes.authorComColor,
      authorComSize = _props$attributes.authorComSize,
      urlCheck = _props$attributes.urlCheck,
      urlText = _props$attributes.urlText,
      urlTarget = _props$attributes.urlTarget,
      quotSize = _props$attributes.quotSize,
      quotColor = _props$attributes.quotColor,
      quotOpacity = _props$attributes.quotOpacity,
      bodyColor = _props$attributes.bodyColor,
      bodySize = _props$attributes.bodySize,
      bodyLine = _props$attributes.bodyLine,
      bodyTop = _props$attributes.bodyTop,
      bodyBottom = _props$attributes.bodyBottom,
      dashColor = _props$attributes.dashColor,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      shadowPosition = _props$attributes.shadowPosition,
      backColor = _props$attributes.backColor,
      imageID = _props$attributes.imageID,
      imageURL = _props$attributes.imageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      paddingTop = _props$attributes.paddingTop,
      paddingRight = _props$attributes.paddingRight,
      paddingBottom = _props$attributes.paddingBottom,
      paddingLeft = _props$attributes.paddingLeft,
      paddingUnit = _props$attributes.paddingUnit;


  var RADIUS = [{
    value: "0",
    label: __("Square")
  }, {
    value: "50%",
    label: __("Circle")
  }, {
    value: "15px",
    label: __("Rounded")
  }];

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-testimonial");

  return [isSelected && wp.element.createElement(
    BlockControls,
    { key: "controls" },
    wp.element.createElement(AlignmentToolbar, {
      value: align,
      onChange: function onChange(newAlign) {
        return setAttributes({ align: newAlign });
      }
    })
  ), isSelected && wp.element.createElement(
    InspectorControls,
    { key: "inspector" },
    wp.element.createElement(
      PanelBody,
      {
        title: __("Author"),
        className: "premium-panel-body",
        initialOpen: true
      },
      wp.element.createElement(
        PanelBody,
        {
          title: __("Image"),
          className: "premium-panel-body-inner",
          initialOpen: false
        },
        wp.element.createElement(
          "p",
          null,
          __("Author Image")
        ),
        authorImgUrl && wp.element.createElement("img", { src: authorImgUrl, width: "100%", height: "auto" }),
        !authorImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_default_image__["a" /* default */], null),
        wp.element.createElement(MediaUpload, {
          allowedTypes: ["image"],
          onSelect: function onSelect(media) {
            setAttributes({
              authorImgId: media.id,
              authorImgUrl: "undefined" === typeof media.sizes.thumbnail ? media.url : media.sizes.thumbnail.url
            });
          },
          type: "image",
          value: authorImgId,
          render: function render(_ref) {
            var open = _ref.open;
            return wp.element.createElement(
              IconButton,
              {
                label: __("Change Author Image"),
                icon: "edit",
                onClick: open
              },
              __("Change Author Image")
            );
          }
        }),
        authorImgUrl && wp.element.createElement(SelectControl, {
          label: __("Image Style"),
          options: RADIUS,
          value: imgRadius,
          onChange: function onChange(newWeight) {
            return setAttributes({ imgRadius: newWeight });
          }
        }),
        authorImgUrl && wp.element.createElement(RangeControl, {
          label: __("Size"),
          max: "200",
          value: imgSize,
          onChange: function onChange(newSize) {
            return setAttributes({ imgSize: newSize });
          }
        }),
        authorImgUrl && wp.element.createElement(RangeControl, {
          label: __("Border Width (PX)"),
          value: imgBorder,
          onChange: function onChange(newSize) {
            return setAttributes({ imgBorder: newSize });
          }
        }),
        authorImgUrl && wp.element.createElement(
          Fragment,
          null,
          wp.element.createElement(
            "p",
            null,
            __("Border Color")
          ),
          wp.element.createElement(ColorPalette, {
            value: imgBorderColor,
            onChange: function onChange(newValue) {
              return setAttributes({
                imgBorderColor: newValue
              });
            },
            allowReset: true
          })
        )
      ),
      wp.element.createElement(
        "p",
        null,
        __("Author HTML Tag")
      ),
      wp.element.createElement(Toolbar, {
        controls: "123456".split("").map(function (tag) {
          return {
            icon: "heading",
            isActive: "H" + tag === authorTag,
            onClick: function onClick() {
              return setAttributes({ authorTag: "H" + tag });
            },
            subscript: tag
          };
        })
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_typo__["a" /* default */], {
        components: ["size", "weight", "style", "upper", "spacing"],
        size: authorSize,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ authorSize: newSize });
        },
        weight: authorWeight,
        style: authorStyle,
        spacing: authorLetter,
        upper: authorUpper,
        onChangeWeight: function onChangeWeight(newWeight) {
          return setAttributes({ authorWeight: newWeight });
        },
        onChangeStyle: function onChangeStyle(newStyle) {
          return setAttributes({ authorStyle: newStyle });
        },
        onChangeSpacing: function onChangeSpacing(newValue) {
          return setAttributes({ authorLetter: newValue });
        },
        onChangeUpper: function onChangeUpper(check) {
          return setAttributes({ authorUpper: check });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Color")
      ),
      wp.element.createElement(ColorPalette, {
        value: authorColor,
        onChange: function onChange(newValue) {
          return setAttributes({
            authorColor: newValue
          });
        },
        allowReset: true
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Content"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_typo__["a" /* default */], {
        components: ["size", "line"],
        size: bodySize,
        line: bodyLine,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ bodySize: newSize });
        },
        onChangeLine: function onChangeLine(newWeight) {
          return setAttributes({ bodyLine: newWeight });
        }
      }),
      wp.element.createElement(
        "p",
        null,
        __("Color")
      ),
      wp.element.createElement(ColorPalette, {
        value: bodyColor,
        onChange: function onChange(newValue) {
          return setAttributes({
            bodyColor: newValue
          });
        },
        allowReset: true
      }),
      wp.element.createElement(RangeControl, {
        label: __("Margin Top (PX)"),
        value: bodyTop,
        onChange: function onChange(newSize) {
          return setAttributes({ bodyTop: newSize });
        }
      }),
      wp.element.createElement(RangeControl, {
        label: __("Margin Bottom (PX)"),
        value: bodyBottom,
        onChange: function onChange(newSize) {
          return setAttributes({ bodyBottom: newSize });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Company"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        "p",
        null,
        __("HTML Tag")
      ),
      wp.element.createElement(Toolbar, {
        controls: "123456".split("").map(function (tag) {
          return {
            icon: "heading",
            isActive: "H" + tag === authorComTag,
            onClick: function onClick() {
              return setAttributes({ authorComTag: "H" + tag });
            },
            subscript: tag
          };
        })
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_typo__["a" /* default */], {
        components: ["size"],
        size: authorComSize,
        onChangeSize: function onChangeSize(newSize) {
          return setAttributes({ authorComSize: newSize });
        }
      }),
      wp.element.createElement(
        "div",
        { className: "premium-control-toggle" },
        wp.element.createElement(
          "strong",
          null,
          __("Colors")
        ),
        wp.element.createElement(Dropdown, {
          className: "premium-control-toggle-btn",
          contentClassName: "premium-control-toggle-content",
          position: "bottom right",
          renderToggle: function renderToggle(_ref2) {
            var isOpen = _ref2.isOpen,
                onToggle = _ref2.onToggle;
            return wp.element.createElement(
              Button,
              { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
              wp.element.createElement("i", { className: "dashicons dashicons-edit" })
            );
          },
          renderContent: function renderContent() {
            return wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(
                "p",
                null,
                __("Text Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: authorComColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    authorComColor: newValue
                  });
                },
                allowReset: true
              }),
              wp.element.createElement(
                "p",
                null,
                __("Dash Color")
              ),
              wp.element.createElement(ColorPalette, {
                value: dashColor,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    dashColor: newValue
                  });
                },
                allowReset: true
              })
            );
          }
        })
      ),
      wp.element.createElement(ToggleControl, {
        label: __("URL"),
        checked: urlCheck,
        onChange: function onChange(newCheck) {
          return setAttributes({ urlCheck: newCheck });
        }
      }),
      urlCheck && wp.element.createElement(TextControl, {
        label: __("URL"),
        value: urlText,
        onChange: function onChange(newURL) {
          return setAttributes({ urlText: newURL });
        }
      }),
      urlCheck && wp.element.createElement(ToggleControl, {
        label: __("Open Link in a New Tab"),
        checked: urlTarget,
        onChange: function onChange(newCheck) {
          return setAttributes({ urlTarget: newCheck });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Quotations"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(RangeControl, {
        label: __("Size (EM)"),
        value: quotSize,
        min: "1",
        max: "12",
        onChange: function onChange(newSize) {
          return setAttributes({ quotSize: newSize });
        }
      }),
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Quotations Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: quotColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              quotColor: newValue
            });
          },
          allowReset: true
        })
      ),
      wp.element.createElement(RangeControl, {
        label: __("Opacity"),
        min: "0",
        max: "100",
        value: quotOpacity,
        onChange: function onChange(newValue) {
          return setAttributes({ quotOpacity: newValue });
        }
      })
    ),
    wp.element.createElement(
      PanelBody,
      {
        title: __("Container"),
        className: "premium-panel-body",
        initialOpen: false
      },
      wp.element.createElement(
        Fragment,
        null,
        wp.element.createElement(
          "p",
          null,
          __("Background Color")
        ),
        wp.element.createElement(ColorPalette, {
          value: backColor,
          onChange: function onChange(newValue) {
            return setAttributes({
              backColor: newValue
            });
          },
          allowReset: true
        }),
        imageURL && wp.element.createElement("img", { src: imageURL, width: "100%", height: "auto" }),
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_background__["a" /* default */], {
          imageID: imageID,
          imageURL: imageURL,
          backgroundPosition: backgroundPosition,
          backgroundRepeat: backgroundRepeat,
          backgroundSize: backgroundSize,
          fixed: fixed,
          onSelectMedia: function onSelectMedia(media) {
            setAttributes({
              imageID: media.id,
              imageURL: media.url
            });
          },
          onRemoveImage: function onRemoveImage(value) {
            return setAttributes({ imageURL: "", imageID: "" });
          },
          onChangeBackPos: function onChangeBackPos(newValue) {
            return setAttributes({ backgroundPosition: newValue });
          },
          onchangeBackRepeat: function onchangeBackRepeat(newValue) {
            return setAttributes({ backgroundRepeat: newValue });
          },
          onChangeBackSize: function onChangeBackSize(newValue) {
            return setAttributes({ backgroundSize: newValue });
          },
          onChangeFixed: function onChangeFixed(check) {
            return setAttributes({ fixed: check });
          }
        })
      ),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_box_shadow__["a" /* default */], {
        inner: true,
        color: shadowColor,
        blur: shadowBlur,
        horizontal: shadowHorizontal,
        vertical: shadowVertical,
        position: shadowPosition,
        onChangeColor: function onChangeColor(newColor) {
          return setAttributes({
            shadowColor: newColor.hex
          });
        },
        onChangeBlur: function onChangeBlur(newBlur) {
          return setAttributes({
            shadowBlur: newBlur
          });
        },
        onChangehHorizontal: function onChangehHorizontal(newValue) {
          return setAttributes({
            shadowHorizontal: newValue
          });
        },
        onChangeVertical: function onChangeVertical(newValue) {
          return setAttributes({
            shadowVertical: newValue
          });
        },
        onChangePosition: function onChangePosition(newValue) {
          return setAttributes({
            shadowPosition: newValue
          });
        }
      }),
      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_premium_padding__["a" /* default */], {
        paddingTop: paddingTop,
        paddingRight: paddingRight,
        paddingBottom: paddingBottom,
        paddingLeft: paddingLeft,
        onChangePadTop: function onChangePadTop(value) {
          return setAttributes({
            paddingTop: value
          });
        },
        onChangePadRight: function onChangePadRight(value) {
          return setAttributes({
            paddingRight: value
          });
        },
        onChangePadBottom: function onChangePadBottom(value) {
          return setAttributes({
            paddingBottom: value
          });
        },
        onChangePadLeft: function onChangePadLeft(value) {
          return setAttributes({
            paddingLeft: value
          });
        },
        showUnits: true,
        selectedUnit: paddingUnit,
        onChangePadSizeUnit: function onChangePadSizeUnit(newvalue) {
          return setAttributes({ paddingUnit: newvalue });
        }
      })
    )
  ), wp.element.createElement(
    "div",
    {
      className: mainClasses + "__wrap",
      style: {
        boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
        backgroundColor: backColor,
        backgroundImage: "url('" + imageURL + "')",
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset",
        paddingTop: paddingTop + paddingUnit,
        paddingBottom: paddingBottom + paddingUnit,
        paddingLeft: paddingLeft + paddingUnit,
        paddingRight: paddingRight + paddingUnit
      }
    },
    wp.element.createElement(
      "div",
      { className: "premium-testimonial__container" },
      wp.element.createElement(
        "span",
        { className: "premium-testimonial__upper" },
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_testimonials_upper_quote__["a" /* default */], {
          size: quotSize,
          color: quotColor,
          opacity: quotOpacity
        })
      ),
      wp.element.createElement(
        "div",
        {
          className: "premium-testimonial__content",
          style: {
            textAlign: align
          }
        },
        wp.element.createElement(
          "div",
          { className: "premium-testimonial__img_wrap" },
          authorImgUrl && wp.element.createElement("img", {
            className: "premium-testimonial__img",
            src: "" + authorImgUrl,
            alt: "Author",
            style: {
              borderWidth: imgBorder + "px",
              borderRadius: imgRadius,
              borderColor: imgBorderColor,
              width: imgSize + "px",
              height: imgSize + "px"
            }
          }),
          !authorImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_default_image__["a" /* default */], { className: className })
        ),
        wp.element.createElement(
          "div",
          { className: "premium-testimonial__text_wrap" },
          wp.element.createElement(
            "div",
            null,
            wp.element.createElement(RichText, {
              tagName: "p",
              className: "premium-testimonial__text",
              value: text,
              isSelected: false,
              placeholder: "Donec id elit non mi porta gravida at eget metus. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Cras mattis consectetur purus sit amet fermentum. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus.",
              onChange: function onChange(newText) {
                return setAttributes({ text: newText });
              },
              style: {
                color: bodyColor,
                fontSize: bodySize + "px",
                lineHeight: bodyLine + "px",
                marginTop: bodyTop + "px",
                marginBottom: bodyBottom + "px"
              },
              keepPlaceholderOnFocus: true
            })
          )
        ),
        wp.element.createElement(
          "div",
          {
            className: "premium-testimonial__info",
            style: { justifyContent: align }
          },
          wp.element.createElement(RichText, {
            tagName: authorTag.toLowerCase(),
            className: "premium-testimonial__author",
            value: author,
            isSelected: false,
            onChange: function onChange(newText) {
              return setAttributes({ author: newText });
            },
            style: {
              color: authorColor,
              fontSize: authorSize + "px",
              letterSpacing: authorLetter + "px",
              textTransform: authorUpper ? "uppercase" : "none",
              fontStyle: authorStyle,
              fontWeight: authorWeight
            }
          }),
          wp.element.createElement(
            "span",
            {
              className: "premium-testimonial__sep",
              style: {
                color: dashColor
              }
            },
            "\xA0-\xA0"
          ),
          wp.element.createElement(RichText, {
            tagName: authorComTag.toLowerCase(),
            className: "premium-testimonial__author_comp",
            onChange: function onChange(newText) {
              return setAttributes({ authorCom: newText });
            },
            value: authorCom,
            isSelected: false,
            style: {
              color: authorComColor,
              fontSize: authorComSize + "px"
            }
          })
        )
      ),
      wp.element.createElement(
        "span",
        { className: "premium-testimonial__lower" },
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_testimonials_lower_quote__["a" /* default */], {
          size: quotSize,
          color: quotColor,
          opacity: quotOpacity
        })
      )
    )
  )];
};

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 238 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_default_image__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_testimonials_upper_quote__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_testimonials_lower_quote__ = __webpack_require__(63);





var RichText = wp.editor.RichText;


var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      align = _props$attributes.align,
      authorImgUrl = _props$attributes.authorImgUrl,
      imgRadius = _props$attributes.imgRadius,
      imgBorder = _props$attributes.imgBorder,
      imgBorderColor = _props$attributes.imgBorderColor,
      imgSize = _props$attributes.imgSize,
      text = _props$attributes.text,
      authorTag = _props$attributes.authorTag,
      authorColor = _props$attributes.authorColor,
      authorSize = _props$attributes.authorSize,
      authorLetter = _props$attributes.authorLetter,
      authorStyle = _props$attributes.authorStyle,
      authorUpper = _props$attributes.authorUpper,
      authorWeight = _props$attributes.authorWeight,
      author = _props$attributes.author,
      authorComTag = _props$attributes.authorComTag,
      authorComColor = _props$attributes.authorComColor,
      authorComSize = _props$attributes.authorComSize,
      authorCom = _props$attributes.authorCom,
      quotSize = _props$attributes.quotSize,
      quotColor = _props$attributes.quotColor,
      quotOpacity = _props$attributes.quotOpacity,
      bodyColor = _props$attributes.bodyColor,
      bodySize = _props$attributes.bodySize,
      bodyLine = _props$attributes.bodyLine,
      bodyTop = _props$attributes.bodyTop,
      bodyBottom = _props$attributes.bodyBottom,
      dashColor = _props$attributes.dashColor,
      urlCheck = _props$attributes.urlCheck,
      urlText = _props$attributes.urlText,
      urlTarget = _props$attributes.urlTarget,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      shadowPosition = _props$attributes.shadowPosition,
      backColor = _props$attributes.backColor,
      imageURL = _props$attributes.imageURL,
      fixed = _props$attributes.fixed,
      backgroundRepeat = _props$attributes.backgroundRepeat,
      backgroundPosition = _props$attributes.backgroundPosition,
      backgroundSize = _props$attributes.backgroundSize,
      paddingTop = _props$attributes.paddingTop,
      paddingRight = _props$attributes.paddingRight,
      paddingBottom = _props$attributes.paddingBottom,
      paddingLeft = _props$attributes.paddingLeft,
      paddingUnit = _props$attributes.paddingUnit;


  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-testimonial');

  return wp.element.createElement(
    "div",
    {
      className: mainClasses + "__wrap",
      style: {
        boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
        backgroundColor: backColor,
        backgroundImage: "url('" + imageURL + "')",
        backgroundRepeat: backgroundRepeat,
        backgroundPosition: backgroundPosition,
        backgroundSize: backgroundSize,
        backgroundAttachment: fixed ? "fixed" : "unset",
        paddingTop: paddingTop + paddingUnit,
        paddingBottom: paddingBottom + paddingUnit,
        paddingLeft: paddingLeft + paddingUnit,
        paddingRight: paddingRight + paddingUnit
      }
    },
    wp.element.createElement(
      "div",
      { className: "premium-testimonial__container" },
      wp.element.createElement(
        "span",
        { className: "premium-testimonial__upper" },
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_testimonials_upper_quote__["a" /* default */], {
          size: quotSize,
          color: quotColor,
          opacity: quotOpacity
        })
      ),
      wp.element.createElement(
        "div",
        {
          className: "premium-testimonial__content",
          style: {
            textAlign: align
          }
        },
        wp.element.createElement(
          "div",
          { className: "premium-testimonial__img_wrap" },
          authorImgUrl && wp.element.createElement("img", {
            className: "premium-testimonial__img",
            src: "" + authorImgUrl,
            alt: "Author",
            style: {
              borderWidth: imgBorder + "px",
              borderRadius: imgRadius,
              borderColor: imgBorderColor,
              width: imgSize + "px",
              height: imgSize + "px"
            }
          }),
          !authorImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_default_image__["a" /* default */], { className: className })
        ),
        wp.element.createElement(
          "div",
          { className: "premium-testimonial__text_wrap" },
          wp.element.createElement(
            "div",
            null,
            wp.element.createElement(RichText.Content, {
              tagName: "p",
              className: "premium-testimonial__text",
              value: text,
              style: {
                color: bodyColor,
                fontSize: bodySize + "px",
                lineHeight: bodyLine + "px",
                marginTop: bodyTop + "px",
                marginBottom: bodyBottom + "px"
              }
            })
          )
        ),
        wp.element.createElement(
          "div",
          { className: "premium-testimonial__info" },
          wp.element.createElement(RichText.Content, {
            tagName: authorTag.toLowerCase(),
            className: "premium-testimonial__author",
            value: author,
            style: {
              color: authorColor,
              fontSize: authorSize + "px",
              letterSpacing: authorLetter + "px",
              textTransform: authorUpper ? "uppercase" : "none",
              fontStyle: authorStyle,
              fontWeight: authorWeight
            }
          }),
          wp.element.createElement(
            "span",
            {
              className: "premium-testimonial__sep",
              style: {
                color: dashColor
              }
            },
            "\xA0-\xA0"
          ),
          wp.element.createElement(
            "div",
            { className: "premium-testimonial__link_wrap" },
            wp.element.createElement(RichText.Content, {
              tagName: authorComTag.toLowerCase(),
              className: "premium-testimonial__author_comp",
              value: authorCom,
              style: {
                color: authorComColor,
                fontSize: authorComSize + "px"
              }
            }),
            urlCheck && wp.element.createElement("a", {
              rel: "noopener noreferrer",
              href: urlText,
              target: urlTarget ? "_blank" : ""
            })
          )
        )
      ),
      wp.element.createElement(
        "span",
        { className: "premium-testimonial__lower" },
        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_testimonials_lower_quote__["a" /* default */], {
          color: quotColor,
          size: quotSize,
          opacity: quotOpacity
        })
      )
    )
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 239 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_default_image__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_testimonials_upper_quote__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_testimonials_lower_quote__ = __webpack_require__(63);




var className = "premium-testimonial";

var RichText = wp.editor.RichText;


var newAttributes_1_6_5 = {
  backColor: {
    type: "string"
  },
  imageID: {
    type: "string"
  },
  imageURL: {
    type: "string"
  },
  backgroundRepeat: {
    type: "string",
    default: "no-repeat"
  },
  backgroundPosition: {
    type: "string",
    default: "top center"
  },
  backgroundSize: {
    type: "string",
    default: "auto"
  },
  fixed: {
    type: "boolean",
    default: false
  }
};

var newAttributes_1_3_9 = {
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number"
  },
  shadowHorizontal: {
    type: "number"
  },
  shadowVertical: {
    type: "number"
  },
  shadowPosition: {
    type: "string"
  }
};

var testimonialsAttrs_1_0_1 = {
  align: {
    type: "string",
    default: "center"
  },
  authorImgId: {
    type: "string"
  },
  authorImgUrl: {
    type: "string"
  },
  imgRadius: {
    type: "string",
    default: "50%"
  },
  imgSize: {
    type: "number"
  },
  imgBorder: {
    type: "number",
    default: "1"
  },
  imgBorderColor: {
    type: "string"
  },
  author: {
    type: "array",
    source: "children",
    selector: ".premium-testimonial__author",
    default: "John Doe"
  },
  authorTag: {
    type: "string",
    default: "H3"
  },
  authorColor: {
    type: "string"
  },
  authorSize: {
    type: "number"
  },
  authorLetter: {
    type: "number"
  },
  authorStyle: {
    type: "string"
  },
  authorUpper: {
    type: "boolean"
  },
  authorWeight: {
    type: "number",
    default: 500
  },
  authorComTag: {
    type: "string",
    default: "H4"
  },
  text: {
    type: "array",
    source: "children",
    selector: ".premium-testimonial__text"
  },
  authorCom: {
    type: "array",
    source: "children",
    selector: ".premium-testimonial__author_comp",
    default: "Leap13"
  },
  authorComColor: {
    type: "string"
  },
  authorComSize: {
    type: "number"
  },
  urlCheck: {
    type: "boolean",
    default: false
  },
  urlText: {
    type: "string"
  },
  urlTarget: {
    type: "boolean",
    default: false
  },
  quotSize: {
    type: "number"
  },
  quotColor: {
    type: "string"
  },
  quotOpacity: {
    type: "number"
  },
  bodyColor: {
    type: "string"
  },
  bodySize: {
    type: "number"
  },
  bodyLine: {
    type: "number"
  },
  bodyTop: {
    type: "number"
  },
  bodyBottom: {
    type: "number"
  },
  dashColor: {
    type: "string"
  }
};

var testimonialsAttrs_1_3_9 = Object.assign(testimonialsAttrs_1_0_1, newAttributes_1_3_9);

var testimonialsAttrs_1_6_5 = Object.assign(testimonialsAttrs_1_3_9, newAttributes_1_6_5);

var deprecatedContent = [{
  attributes: testimonialsAttrs_1_6_5,
  migrate: function migrate(attributes) {
    var newAttributes = {
      paddingTop: "",
      paddingRight: "",
      paddingBottom: "",
      paddingLeft: "",
      paddingUnit: "px"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        align = _props$attributes.align,
        authorImgUrl = _props$attributes.authorImgUrl,
        imgRadius = _props$attributes.imgRadius,
        imgBorder = _props$attributes.imgBorder,
        imgBorderColor = _props$attributes.imgBorderColor,
        imgSize = _props$attributes.imgSize,
        text = _props$attributes.text,
        authorTag = _props$attributes.authorTag,
        authorColor = _props$attributes.authorColor,
        authorSize = _props$attributes.authorSize,
        authorLetter = _props$attributes.authorLetter,
        authorStyle = _props$attributes.authorStyle,
        authorUpper = _props$attributes.authorUpper,
        authorWeight = _props$attributes.authorWeight,
        author = _props$attributes.author,
        authorComTag = _props$attributes.authorComTag,
        authorComColor = _props$attributes.authorComColor,
        authorComSize = _props$attributes.authorComSize,
        authorCom = _props$attributes.authorCom,
        quotSize = _props$attributes.quotSize,
        quotColor = _props$attributes.quotColor,
        quotOpacity = _props$attributes.quotOpacity,
        bodyColor = _props$attributes.bodyColor,
        bodySize = _props$attributes.bodySize,
        bodyLine = _props$attributes.bodyLine,
        bodyTop = _props$attributes.bodyTop,
        bodyBottom = _props$attributes.bodyBottom,
        dashColor = _props$attributes.dashColor,
        urlCheck = _props$attributes.urlCheck,
        urlText = _props$attributes.urlText,
        urlTarget = _props$attributes.urlTarget,
        shadowBlur = _props$attributes.shadowBlur,
        shadowColor = _props$attributes.shadowColor,
        shadowHorizontal = _props$attributes.shadowHorizontal,
        shadowVertical = _props$attributes.shadowVertical,
        shadowPosition = _props$attributes.shadowPosition,
        backColor = _props$attributes.backColor,
        imageURL = _props$attributes.imageURL,
        fixed = _props$attributes.fixed,
        backgroundRepeat = _props$attributes.backgroundRepeat,
        backgroundPosition = _props$attributes.backgroundPosition,
        backgroundSize = _props$attributes.backgroundSize;


    return wp.element.createElement(
      "div",
      {
        className: className + "__wrap",
        style: {
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition,
          backgroundColor: backColor,
          backgroundImage: "url('" + imageURL + "')",
          backgroundRepeat: backgroundRepeat,
          backgroundPosition: backgroundPosition,
          backgroundSize: backgroundSize,
          backgroundAttachment: fixed ? "fixed" : "unset"
        }
      },
      wp.element.createElement(
        "div",
        { className: className + "__container" },
        wp.element.createElement(
          "span",
          { className: className + "__upper" },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_testimonials_upper_quote__["a" /* default */], {
            size: quotSize,
            color: quotColor,
            opacity: quotOpacity
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              textAlign: align
            }
          },
          wp.element.createElement(
            "div",
            { className: className + "__img_wrap" },
            authorImgUrl && wp.element.createElement("img", {
              className: className + "__img",
              src: "" + authorImgUrl,
              alt: "Author",
              style: {
                borderWidth: imgBorder + "px",
                borderRadius: imgRadius,
                borderColor: imgBorderColor,
                width: imgSize + "px",
                height: imgSize + "px"
              }
            }),
            !authorImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__components_default_image__["a" /* default */], { className: className })
          ),
          wp.element.createElement(
            "div",
            { className: className + "__text_wrap" },
            wp.element.createElement(
              "div",
              null,
              wp.element.createElement(RichText.Content, {
                tagName: "p",
                className: className + "__text",
                value: text,
                style: {
                  color: bodyColor,
                  fontSize: bodySize + "px",
                  lineHeight: bodyLine + "px",
                  marginTop: bodyTop + "px",
                  marginBottom: bodyBottom + "px"
                }
              })
            )
          ),
          wp.element.createElement(
            "div",
            { className: className + "__info" },
            wp.element.createElement(RichText.Content, {
              tagName: authorTag.toLowerCase(),
              className: className + "__author",
              value: author,
              style: {
                color: authorColor,
                fontSize: authorSize + "px",
                letterSpacing: authorLetter + "px",
                textTransform: authorUpper ? "uppercase" : "none",
                fontStyle: authorStyle,
                fontWeight: authorWeight
              }
            }),
            wp.element.createElement(
              "span",
              {
                className: className + "__sep",
                style: {
                  color: dashColor
                }
              },
              "\xA0-\xA0"
            ),
            wp.element.createElement(
              "div",
              { className: className + "__link_wrap" },
              wp.element.createElement(RichText.Content, {
                tagName: authorComTag.toLowerCase(),
                className: className + "__author_comp",
                value: authorCom,
                style: {
                  color: authorComColor,
                  fontSize: authorComSize + "px"
                }
              }),
              urlCheck && wp.element.createElement("a", {
                rel: "noopener noreferrer",
                href: urlText,
                target: urlTarget ? "_blank" : ""
              })
            )
          )
        ),
        wp.element.createElement(
          "span",
          { className: className + "__lower" },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_testimonials_lower_quote__["a" /* default */], {
            color: quotColor,
            size: quotSize,
            opacity: quotOpacity
          })
        )
      )
    );
  }
}, {
  attributes: testimonialsAttrs_1_3_9,
  migrate: function migrate(attributes) {
    var newAttributes = {
      backColor: "",
      imageID: "",
      imageURL: "",
      fixed: false,
      backgroundRepeat: "no-repeat",
      backgroundPosition: "top center",
      backgroundSize: "auto"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        align = _props$attributes2.align,
        authorImgUrl = _props$attributes2.authorImgUrl,
        imgRadius = _props$attributes2.imgRadius,
        imgBorder = _props$attributes2.imgBorder,
        imgBorderColor = _props$attributes2.imgBorderColor,
        imgSize = _props$attributes2.imgSize,
        text = _props$attributes2.text,
        authorTag = _props$attributes2.authorTag,
        authorColor = _props$attributes2.authorColor,
        authorSize = _props$attributes2.authorSize,
        authorLetter = _props$attributes2.authorLetter,
        authorStyle = _props$attributes2.authorStyle,
        authorUpper = _props$attributes2.authorUpper,
        authorWeight = _props$attributes2.authorWeight,
        author = _props$attributes2.author,
        authorComTag = _props$attributes2.authorComTag,
        authorComColor = _props$attributes2.authorComColor,
        authorComSize = _props$attributes2.authorComSize,
        authorCom = _props$attributes2.authorCom,
        quotSize = _props$attributes2.quotSize,
        quotColor = _props$attributes2.quotColor,
        quotOpacity = _props$attributes2.quotOpacity,
        bodyColor = _props$attributes2.bodyColor,
        bodySize = _props$attributes2.bodySize,
        bodyLine = _props$attributes2.bodyLine,
        bodyTop = _props$attributes2.bodyTop,
        bodyBottom = _props$attributes2.bodyBottom,
        dashColor = _props$attributes2.dashColor,
        urlCheck = _props$attributes2.urlCheck,
        urlText = _props$attributes2.urlText,
        urlTarget = _props$attributes2.urlTarget,
        shadowBlur = _props$attributes2.shadowBlur,
        shadowColor = _props$attributes2.shadowColor,
        shadowHorizontal = _props$attributes2.shadowHorizontal,
        shadowVertical = _props$attributes2.shadowVertical,
        shadowPosition = _props$attributes2.shadowPosition;


    return wp.element.createElement(
      "div",
      {
        className: className + "__wrap",
        style: {
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      wp.element.createElement(
        "div",
        { className: className + "__container" },
        wp.element.createElement(
          "span",
          { className: className + "__upper" },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_testimonials_upper_quote__["a" /* default */], {
            size: quotSize,
            color: quotColor,
            opacity: quotOpacity
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              textAlign: align
            }
          },
          wp.element.createElement(
            "div",
            { className: className + "__img_wrap" },
            authorImgUrl && wp.element.createElement("img", {
              className: className + "__img",
              src: "" + authorImgUrl,
              alt: "Author",
              style: {
                borderWidth: imgBorder + "px",
                borderRadius: imgRadius,
                borderColor: imgBorderColor,
                width: imgSize + "px",
                height: imgSize + "px"
              }
            }),
            !authorImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__components_default_image__["a" /* default */], { className: className })
          ),
          wp.element.createElement(
            "div",
            { className: className + "__text_wrap" },
            wp.element.createElement(
              "div",
              null,
              wp.element.createElement(RichText.Content, {
                tagName: "p",
                className: className + "__text",
                value: text,
                style: {
                  color: bodyColor,
                  fontSize: bodySize + "px",
                  lineHeight: bodyLine + "px",
                  marginTop: bodyTop + "px",
                  marginBottom: bodyBottom + "px"
                }
              })
            )
          ),
          wp.element.createElement(
            "div",
            { className: className + "__info" },
            wp.element.createElement(RichText.Content, {
              tagName: authorTag.toLowerCase(),
              className: className + "__author",
              value: author,
              style: {
                color: authorColor,
                fontSize: authorSize + "px",
                letterSpacing: authorLetter + "px",
                textTransform: authorUpper ? "uppercase" : "none",
                fontStyle: authorStyle,
                fontWeight: authorWeight
              }
            }),
            wp.element.createElement(
              "span",
              {
                className: className + "__sep",
                style: {
                  color: dashColor
                }
              },
              "\xA0-\xA0"
            ),
            wp.element.createElement(
              "div",
              { className: className + "__link_wrap" },
              wp.element.createElement(RichText.Content, {
                tagName: authorComTag.toLowerCase(),
                className: className + "__author_comp",
                value: authorCom,
                style: {
                  color: authorComColor,
                  fontSize: authorComSize + "px"
                }
              }),
              urlCheck && wp.element.createElement("a", { href: urlText, target: urlTarget ? "_blank" : "" })
            )
          )
        ),
        wp.element.createElement(
          "span",
          { className: className + "__lower" },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_testimonials_lower_quote__["a" /* default */], {
            color: quotColor,
            size: quotSize,
            opacity: quotOpacity
          })
        )
      )
    );
  }
}, {
  attributes: testimonialsAttrs_1_0_1,
  migrate: function migrate(attributes) {
    var newAttributes = {
      shadowColor: "",
      shadowBlur: "",
      shadowHorizontal: "",
      shadowVertical: "",
      shadowPosition: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        align = _props$attributes3.align,
        authorImgUrl = _props$attributes3.authorImgUrl,
        imgRadius = _props$attributes3.imgRadius,
        imgBorder = _props$attributes3.imgBorder,
        imgBorderColor = _props$attributes3.imgBorderColor,
        imgSize = _props$attributes3.imgSize,
        text = _props$attributes3.text,
        authorTag = _props$attributes3.authorTag,
        authorColor = _props$attributes3.authorColor,
        authorSize = _props$attributes3.authorSize,
        authorLetter = _props$attributes3.authorLetter,
        authorStyle = _props$attributes3.authorStyle,
        authorUpper = _props$attributes3.authorUpper,
        authorWeight = _props$attributes3.authorWeight,
        author = _props$attributes3.author,
        authorComTag = _props$attributes3.authorComTag,
        authorComColor = _props$attributes3.authorComColor,
        authorComSize = _props$attributes3.authorComSize,
        authorCom = _props$attributes3.authorCom,
        quotSize = _props$attributes3.quotSize,
        quotColor = _props$attributes3.quotColor,
        quotOpacity = _props$attributes3.quotOpacity,
        bodyColor = _props$attributes3.bodyColor,
        bodySize = _props$attributes3.bodySize,
        bodyLine = _props$attributes3.bodyLine,
        bodyTop = _props$attributes3.bodyTop,
        bodyBottom = _props$attributes3.bodyBottom,
        dashColor = _props$attributes3.dashColor,
        urlCheck = _props$attributes3.urlCheck,
        urlText = _props$attributes3.urlText,
        urlTarget = _props$attributes3.urlTarget;


    return wp.element.createElement(
      "div",
      { className: className + "__wrap" },
      wp.element.createElement(
        "div",
        { className: className + "__container" },
        wp.element.createElement(
          "span",
          { className: className + "__upper" },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_testimonials_upper_quote__["a" /* default */], {
            size: quotSize,
            color: quotColor,
            opacity: quotOpacity
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              textAlign: align
            }
          },
          wp.element.createElement(
            "div",
            { className: className + "__img_wrap" },
            authorImgUrl && wp.element.createElement("img", {
              className: className + "__img",
              src: "" + authorImgUrl,
              alt: "Author",
              style: {
                borderWidth: imgBorder + "px",
                borderRadius: imgRadius,
                borderColor: imgBorderColor,
                width: imgSize + "px",
                height: imgSize + "px"
              }
            }),
            !authorImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__components_default_image__["a" /* default */], { className: className })
          ),
          wp.element.createElement(
            "div",
            { className: className + "__text_wrap" },
            wp.element.createElement(
              "div",
              null,
              wp.element.createElement(RichText.Content, {
                tagName: "p",
                className: className + "__text",
                value: text,
                style: {
                  color: bodyColor,
                  fontSize: bodySize + "px",
                  lineHeight: bodyLine + "px",
                  marginTop: bodyTop + "px",
                  marginBottom: bodyBottom + "px"
                }
              })
            )
          ),
          wp.element.createElement(
            "div",
            { className: className + "__info" },
            wp.element.createElement(RichText.Content, {
              tagName: authorTag.toLowerCase(),
              className: className + "__author",
              value: author,
              style: {
                color: authorColor,
                fontSize: authorSize + "px",
                letterSpacing: authorLetter + "px",
                textTransform: authorUpper ? "uppercase" : "none",
                fontStyle: authorStyle,
                fontWeight: authorWeight
              }
            }),
            wp.element.createElement(
              "span",
              {
                className: className + "__sep",
                style: {
                  color: dashColor
                }
              },
              "\xA0-\xA0"
            ),
            wp.element.createElement(
              "div",
              { className: className + "__link_wrap" },
              wp.element.createElement(RichText.Content, {
                tagName: authorComTag.toLowerCase(),
                className: className + "__author_comp",
                value: authorCom,
                style: {
                  color: authorComColor,
                  fontSize: authorComSize + "px"
                }
              }),
              urlCheck && wp.element.createElement("a", { href: urlText, target: urlTarget ? "_blank" : "" })
            )
          )
        ),
        wp.element.createElement(
          "span",
          { className: className + "__lower" },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_testimonials_lower_quote__["a" /* default */], {
            color: quotColor,
            size: quotSize,
            opacity: quotOpacity
          })
        )
      )
    );
  }
}, {
  attributes: testimonialsAttrs_1_0_1,
  save: function save(props) {
    var _props$attributes4 = props.attributes,
        align = _props$attributes4.align,
        authorImgUrl = _props$attributes4.authorImgUrl,
        imgRadius = _props$attributes4.imgRadius,
        imgBorder = _props$attributes4.imgBorder,
        imgBorderColor = _props$attributes4.imgBorderColor,
        imgSize = _props$attributes4.imgSize,
        text = _props$attributes4.text,
        authorTag = _props$attributes4.authorTag,
        authorColor = _props$attributes4.authorColor,
        authorSize = _props$attributes4.authorSize,
        author = _props$attributes4.author,
        authorComTag = _props$attributes4.authorComTag,
        authorComColor = _props$attributes4.authorComColor,
        authorComSize = _props$attributes4.authorComSize,
        authorCom = _props$attributes4.authorCom,
        quotSize = _props$attributes4.quotSize,
        quotColor = _props$attributes4.quotColor,
        quotOpacity = _props$attributes4.quotOpacity,
        bodyColor = _props$attributes4.bodyColor,
        bodySize = _props$attributes4.bodySize,
        bodyLine = _props$attributes4.bodyLine,
        bodyTop = _props$attributes4.bodyTop,
        bodyBottom = _props$attributes4.bodyBottom,
        dashColor = _props$attributes4.dashColor,
        urlCheck = _props$attributes4.urlCheck,
        urlText = _props$attributes4.urlText,
        urlTarget = _props$attributes4.urlTarget;


    return wp.element.createElement(
      "div",
      { className: className + "__wrap" },
      wp.element.createElement(
        "div",
        { className: className + "__container" },
        wp.element.createElement(
          "span",
          { className: className + "__upper" },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_testimonials_upper_quote__["a" /* default */], {
            size: quotSize,
            color: quotColor,
            opacity: quotOpacity
          })
        ),
        wp.element.createElement(
          "div",
          {
            className: className + "__content",
            style: {
              textAlign: align
            }
          },
          wp.element.createElement(
            "div",
            { className: className + "__img_wrap" },
            authorImgUrl && wp.element.createElement("img", {
              className: className + "__img",
              src: "" + authorImgUrl,
              alt: "Author",
              style: {
                borderWidth: imgBorder + "px",
                borderRadius: imgRadius,
                borderColor: imgBorderColor,
                width: imgSize + "px",
                height: imgSize + "px"
              }
            }),
            !authorImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__components_default_image__["a" /* default */], { className: className })
          ),
          wp.element.createElement(
            "div",
            { className: className + "__text_wrap" },
            wp.element.createElement(
              "div",
              null,
              wp.element.createElement(RichText.Content, {
                tagName: "p",
                className: className + "__text",
                value: text,
                style: {
                  color: bodyColor,
                  fontSize: bodySize + "px",
                  lineHeight: bodyLine + "px",
                  marginTop: bodyTop + "px",
                  marginBottom: bodyBottom + "px"
                }
              })
            )
          ),
          wp.element.createElement(
            "div",
            { className: className + "__info" },
            wp.element.createElement(RichText.Content, {
              tagName: authorTag.toLowerCase(),
              className: className + "__author",
              value: author,
              style: {
                color: authorColor,
                fontSize: authorSize + "px"
              }
            }),
            wp.element.createElement(
              "span",
              {
                className: className + "__sep",
                style: {
                  color: dashColor
                }
              },
              "\xA0-\xA0"
            ),
            wp.element.createElement(
              "div",
              { className: className + "__link_wrap" },
              wp.element.createElement(RichText.Content, {
                tagName: authorComTag.toLowerCase(),
                className: className + "__author_comp",
                value: authorCom,
                style: {
                  color: authorComColor,
                  fontSize: authorComSize + "px"
                }
              }),
              urlCheck && wp.element.createElement("a", { href: urlText, target: urlTarget ? "_blank" : "" })
            )
          )
        ),
        wp.element.createElement(
          "span",
          { className: className + "__lower" },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_testimonials_lower_quote__["a" /* default */], {
            color: quotColor,
            size: quotSize,
            opacity: quotOpacity
          })
        )
      )
    );
  }
}];

/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 240 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_filters__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__index__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_premium_fonts__ = __webpack_require__(21);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var _wp$components = wp.components,
    IconButton = _wp$components.IconButton,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    TextControl = _wp$components.TextControl,
    TextareaControl = _wp$components.TextareaControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    MediaUpload = _wp$editor.MediaUpload,
    ColorPalette = _wp$editor.ColorPalette;
var __ = wp.i18n.__;


var isBoxUpdated = null;

var edit = function (_Component) {
  _inherits(edit, _Component);

  function edit() {
    _classCallCheck(this, edit);

    var _this = _possibleConstructorReturn(this, (edit.__proto__ || Object.getPrototypeOf(edit)).apply(this, arguments));

    _this.initVideoBox = _this.initVideoBox.bind(_this);
    return _this;
  }

  _createClass(edit, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _props = this.props,
          attributes = _props.attributes,
          setAttributes = _props.setAttributes,
          clientId = _props.clientId;


      if (!attributes.videoBoxId) {
        setAttributes({ videoBoxId: "premium-video-box-" + clientId });
      }
      this.initVideoBox();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      clearTimeout(isBoxUpdated);
      isBoxUpdated = setTimeout(this.initVideoBox, 500);
    }
  }, {
    key: "initVideoBox",
    value: function initVideoBox() {
      var videoBoxId = this.props.attributes.videoBoxId;

      if (!videoBoxId) return null;
      var videoBox = document.getElementById(videoBoxId);
      var video = void 0,
          src = void 0;
      //videoBox.classList.remove("video-overlay-false");
      videoBox.addEventListener("click", function () {
        videoBox.classList.add("video-overlay-false");
        var type = videoBox.getAttribute("data-type");
        if ("self" !== type) {
          video = videoBox.getElementsByTagName("iframe")[0];
          src = video.getAttribute("src");
        } else {
          video = videoBox.getElementsByTagName("video")[0];
        }

        setTimeout(function () {
          if ("self" !== type) {
            video.setAttribute("src", src.replace("autoplay=0", "autoplay=1"));
          } else {
            videoBox.getElementsByClassName("premium-video-box__overlay")[0].remove();
            video.play();
          }
        }, 300);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          isSelected = _props2.isSelected,
          setAttributes = _props2.setAttributes,
          className = _props2.className;
      var _props$attributes = this.props.attributes,
          videoBoxId = _props$attributes.videoBoxId,
          videoType = _props$attributes.videoType,
          videoURL = _props$attributes.videoURL,
          videoID = _props$attributes.videoID,
          autoPlay = _props$attributes.autoPlay,
          loop = _props$attributes.loop,
          controls = _props$attributes.controls,
          relatedVideos = _props$attributes.relatedVideos,
          mute = _props$attributes.mute,
          overlay = _props$attributes.overlay,
          overlayImgID = _props$attributes.overlayImgID,
          overlayImgURL = _props$attributes.overlayImgURL,
          blur = _props$attributes.blur,
          bright = _props$attributes.bright,
          contrast = _props$attributes.contrast,
          saturation = _props$attributes.saturation,
          hue = _props$attributes.hue,
          playLeft = _props$attributes.playLeft,
          playTop = _props$attributes.playTop,
          playIcon = _props$attributes.playIcon,
          playColor = _props$attributes.playColor,
          playHoverColor = _props$attributes.playHoverColor,
          playHoverBackColor = _props$attributes.playHoverBackColor,
          playSize = _props$attributes.playSize,
          playPadding = _props$attributes.playPadding,
          playBack = _props$attributes.playBack,
          playBorderColor = _props$attributes.playBorderColor,
          playBorderWidth = _props$attributes.playBorderWidth,
          playBorderRadius = _props$attributes.playBorderRadius,
          playBorderType = _props$attributes.playBorderType,
          videoDesc = _props$attributes.videoDesc,
          descTop = _props$attributes.descTop,
          descLeft = _props$attributes.descLeft,
          videoDescText = _props$attributes.videoDescText,
          videoDescColor = _props$attributes.videoDescColor,
          videoDescBack = _props$attributes.videoDescBack,
          videoDescPadding = _props$attributes.videoDescPadding,
          videoDescSize = _props$attributes.videoDescSize,
          videoDescFamily = _props$attributes.videoDescFamily,
          videoDescWeight = _props$attributes.videoDescWeight,
          videoDescLetter = _props$attributes.videoDescLetter,
          videoDescStyle = _props$attributes.videoDescStyle,
          videoDescUpper = _props$attributes.videoDescUpper,
          videoDescBorderRadius = _props$attributes.videoDescBorderRadius,
          descShadowBlur = _props$attributes.descShadowBlur,
          descShadowColor = _props$attributes.descShadowColor,
          descShadowHorizontal = _props$attributes.descShadowHorizontal,
          descShadowVertical = _props$attributes.descShadowVertical,
          boxBorderColor = _props$attributes.boxBorderColor,
          boxBorderWidth = _props$attributes.boxBorderWidth,
          boxBorderRadius = _props$attributes.boxBorderRadius,
          boxBorderType = _props$attributes.boxBorderType,
          shadowBlur = _props$attributes.shadowBlur,
          shadowColor = _props$attributes.shadowColor,
          shadowHorizontal = _props$attributes.shadowHorizontal,
          shadowVertical = _props$attributes.shadowVertical,
          shadowPosition = _props$attributes.shadowPosition;


      var TYPE = [{
        value: "youtube",
        label: __("Youtube")
      }, {
        value: "vimeo",
        label: __("Vimeo")
      }, {
        value: "daily",
        label: __("Daily Motion")
      }, {
        value: "self",
        label: __("Self Hosted")
      }];
      var loopVideo = function loopVideo() {
        if ("youtube" === videoType) {
          if (videoURL.startsWith("http")) {
            return loop ? "1&playlist=" + videoURL.replace("https://www.youtube.com/embed/", "") : "0";
          } else {
            return loop ? "1&playlist=" + videoURL : "0";
          }
        } else {
          return loop ? "1" : "0";
        }
      };
      var getHelp = function getHelp(Type) {
        switch (Type) {
          case "youtube":
            return __("Enter video ID, for example: z1hQgVpfTKU or Embed URL, for example: https://www.youtube.com/embed/07d2dXHYb94");
          case "vimeo":
            return __("Enter video ID, for example: 243244233 or Embed URL, for example: https://player.vimeo.com/video/243244233");
          case "daily":
            return __("Enter video ID, for example: x5gifqg or Embed URL, for example: https://dailymotion.com/embed/video/x5gifqg");
        }
      };

      var addFontToHead = function addFontToHead(fontFamily) {
        var head = document.head;
        var link = document.createElement("link");
        link.type = "text/css";
        link.rel = "stylesheet";
        link.href = "https://fonts.googleapis.com/css?family=" + fontFamily.replace(/\s+/g, "+") + ":" + "regular";
        head.appendChild(link);
      };

      var onChangeDescFamily = function onChangeDescFamily(fontFamily) {
        setAttributes({ videoDescFamily: fontFamily });
        if (!fontFamily) {
          return;
        }

        addFontToHead(fontFamily);
      };

      var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-video-box");

      return [isSelected && wp.element.createElement(
        InspectorControls,
        { key: "inspector" },
        wp.element.createElement(
          PanelBody,
          {
            title: __("Video"),
            className: "premium-panel-body",
            initialOpen: true
          },
          wp.element.createElement(SelectControl, {
            label: __("Video Type"),
            options: TYPE,
            value: videoType,
            onChange: function onChange(newValue) {
              return setAttributes({ videoType: newValue });
            }
          }),
          "self" !== videoType && wp.element.createElement(TextControl, {
            className: "premium-text-control",
            label: __("Video URL"),
            value: videoURL,
            placeholder: __("Enter Video ID, Embed URL or Video URL"),
            onChange: function onChange(newURL) {
              return setAttributes({ videoURL: newURL });
            },
            help: getHelp(videoType)
          }),
          "self" === videoType && wp.element.createElement(MediaUpload, {
            allowedTypes: ["video"],
            onSelect: function onSelect(media) {
              setAttributes({
                videoID: media.id,
                videoURL: media.url
              });
            },
            type: "video",
            value: videoID,
            render: function render(_ref) {
              var open = _ref.open;
              return wp.element.createElement(
                IconButton,
                {
                  label: __("Change Video"),
                  icon: "edit",
                  onClick: open
                },
                __("Change Video")
              );
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Autoplay"),
            checked: autoPlay,
            onChange: function onChange(newCheck) {
              return setAttributes({ autoPlay: newCheck });
            },
            help: __("This option effect works when Overlay Image option is disabled")
          }),
          "daily" !== videoType && wp.element.createElement(ToggleControl, {
            label: __("Loop"),
            checked: loop,
            onChange: function onChange(newCheck) {
              return setAttributes({ loop: newCheck });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Mute"),
            checked: mute,
            onChange: function onChange(newCheck) {
              return setAttributes({ mute: newCheck });
            }
          }),
          "vimeo" !== videoType && wp.element.createElement(ToggleControl, {
            label: __("Player Controls"),
            checked: controls,
            onChange: function onChange(newCheck) {
              return setAttributes({ controls: newCheck });
            }
          }),
          "youtube" === videoType && wp.element.createElement(ToggleControl, {
            label: __("Show Related Videos"),
            checked: relatedVideos,
            onChange: function onChange(newCheck) {
              return setAttributes({ relatedVideos: newCheck });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Overlay Image"),
            checked: overlay,
            onChange: function onChange(newCheck) {
              return setAttributes({ overlay: newCheck });
            }
          })
        ),
        overlay && wp.element.createElement(
          PanelBody,
          {
            title: __("Overlay"),
            className: "premium-panel-body",
            initialOpen: false
          },
          overlayImgURL && wp.element.createElement("img", { src: overlayImgURL, width: "100%", height: "auto" }),
          wp.element.createElement(MediaUpload, {
            allowedTypes: ["image"],
            onSelect: function onSelect(media) {
              setAttributes({
                overlayImgID: media.id,
                overlayImgURL: media.url
              });
            },
            type: "image",
            value: overlayImgID,
            render: function render(_ref2) {
              var open = _ref2.open;
              return wp.element.createElement(
                IconButton,
                {
                  className: "premium-media-uplpad-btn",
                  label: __("Change Image"),
                  icon: "edit",
                  onClick: open
                },
                __("Change Image")
              );
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_filters__["a" /* default */], {
            blur: blur,
            bright: bright,
            contrast: contrast,
            saturation: saturation,
            hue: hue,
            onChangeBlur: function onChangeBlur(value) {
              return setAttributes({ blur: value === undefined ? 0 : value });
            },
            onChangeBright: function onChangeBright(value) {
              return setAttributes({
                bright: value === undefined ? 100 : value
              });
            },
            onChangeContrast: function onChangeContrast(value) {
              return setAttributes({
                contrast: value === undefined ? 100 : value
              });
            },
            onChangeSat: function onChangeSat(value) {
              return setAttributes({
                saturation: value === undefined ? 100 : value
              });
            },
            onChangeHue: function onChangeHue(value) {
              return setAttributes({ hue: value === undefined ? 100 : value });
            }
          })
        ),
        overlay && wp.element.createElement(
          Fragment,
          null,
          wp.element.createElement(
            PanelBody,
            {
              title: __("Play Icon"),
              className: "premium-panel-body",
              initialOpen: false
            },
            wp.element.createElement(ToggleControl, {
              label: __("Enable Play Icon"),
              checked: playIcon,
              onChange: function onChange(newCheck) {
                return setAttributes({ playIcon: newCheck });
              }
            }),
            playIcon && wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(RangeControl, {
                label: __("Size (PX)"),
                value: playSize,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    playSize: newValue === undefined ? 20 : newValue
                  });
                }
              }),
              wp.element.createElement(RangeControl, {
                label: __("Vertical Offset (%)"),
                value: playTop,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    playTop: newValue === undefined ? 50 : newValue
                  });
                }
              }),
              wp.element.createElement(
                "div",
                { className: "premium-control-toggle" },
                wp.element.createElement(
                  "strong",
                  null,
                  __("Colors")
                ),
                wp.element.createElement(Dropdown, {
                  className: "premium-control-toggle-btn",
                  contentClassName: "premium-control-toggle-content",
                  position: "bottom right",
                  renderToggle: function renderToggle(_ref3) {
                    var isOpen = _ref3.isOpen,
                        onToggle = _ref3.onToggle;
                    return wp.element.createElement(
                      Button,
                      {
                        isSmall: true,
                        onClick: onToggle,
                        "aria-expanded": isOpen
                      },
                      wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                    );
                  },
                  renderContent: function renderContent() {
                    return wp.element.createElement(
                      Fragment,
                      null,
                      wp.element.createElement(
                        "p",
                        null,
                        __("Icon Color")
                      ),
                      wp.element.createElement(ColorPalette, {
                        value: playColor,
                        onChange: function onChange(newValue) {
                          return setAttributes({
                            playColor: newValue
                          });
                        },
                        allowReset: true
                      }),
                      wp.element.createElement(
                        "p",
                        null,
                        __("Icon Background Color")
                      ),
                      wp.element.createElement(ColorPalette, {
                        value: playBack,
                        onChange: function onChange(newValue) {
                          return setAttributes({
                            playBack: newValue
                          });
                        },
                        allowReset: true
                      }),
                      wp.element.createElement(
                        "p",
                        null,
                        __("Icon Hover Color")
                      ),
                      wp.element.createElement(ColorPalette, {
                        value: playHoverColor,
                        onChange: function onChange(newValue) {
                          return setAttributes({
                            playHoverColor: newValue
                          });
                        },
                        allowReset: true
                      }),
                      wp.element.createElement(
                        "p",
                        null,
                        __("Icon Hover Background Color")
                      ),
                      wp.element.createElement(ColorPalette, {
                        value: playHoverBackColor,
                        onChange: function onChange(newValue) {
                          return setAttributes({
                            playHoverBackColor: newValue
                          });
                        },
                        allowReset: true
                      })
                    );
                  }
                })
              ),
              wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_border__["a" /* default */], {
                borderType: playBorderType,
                borderWidth: playBorderWidth,
                borderColor: playBorderColor,
                borderRadius: playBorderRadius,
                onChangeType: function onChangeType(newType) {
                  return setAttributes({ playBorderType: newType });
                },
                onChangeWidth: function onChangeWidth(newWidth) {
                  return setAttributes({ playBorderWidth: newWidth });
                },
                onChangeColor: function onChangeColor(colorValue) {
                  return setAttributes({ playBorderColor: colorValue.hex });
                },
                onChangeRadius: function onChangeRadius(newrRadius) {
                  return setAttributes({ playBorderRadius: newrRadius });
                }
              }),
              wp.element.createElement(RangeControl, {
                label: __("Padding (PX)"),
                value: playPadding,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    playPadding: newValue === undefined ? 20 : newValue
                  });
                }
              })
            )
          ),
          wp.element.createElement(
            PanelBody,
            {
              title: __("Video Description"),
              className: "premium-panel-body",
              initialOpen: false
            },
            wp.element.createElement(ToggleControl, {
              label: __("Enable Video Description"),
              checked: videoDesc,
              onChange: function onChange(newCheck) {
                return setAttributes({ videoDesc: newCheck });
              }
            }),
            videoDesc && wp.element.createElement(
              Fragment,
              null,
              wp.element.createElement(TextareaControl, {
                label: __("Description Text"),
                value: videoDescText,
                onChange: function onChange(newText) {
                  return setAttributes({ videoDescText: newText });
                }
              }),
              wp.element.createElement(SelectControl, {
                label: __("Font Family"),
                value: videoDescFamily,
                options: __WEBPACK_IMPORTED_MODULE_7__components_premium_fonts__["a" /* default */],
                onChange: onChangeDescFamily
              }),
              wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_typo__["a" /* default */], {
                components: ["size", "weight", "style", "upper", "spacing"],
                size: videoDescSize,
                weight: videoDescWeight,
                onChangeSize: function onChangeSize(newSize) {
                  return setAttributes({ videoDescSize: newSize });
                },
                onChangeWeight: function onChangeWeight(newWeight) {
                  return setAttributes({ videoDescWeight: newWeight });
                },
                style: videoDescStyle,
                spacing: videoDescLetter,
                upper: videoDescUpper,
                onChangeStyle: function onChangeStyle(newStyle) {
                  return setAttributes({ videoDescStyle: newStyle });
                },
                onChangeSpacing: function onChangeSpacing(newValue) {
                  return setAttributes({ videoDescLetter: newValue });
                },
                onChangeUpper: function onChangeUpper(check) {
                  return setAttributes({ videoDescUpper: check });
                }
              }),
              wp.element.createElement(RangeControl, {
                label: __("Vertical Offset (%)"),
                value: descTop,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    descTop: newValue === undefined ? 50 : newValue
                  });
                }
              }),
              wp.element.createElement(
                "div",
                { className: "premium-control-toggle" },
                wp.element.createElement(
                  "strong",
                  null,
                  __("Colors")
                ),
                wp.element.createElement(Dropdown, {
                  className: "premium-control-toggle-btn",
                  contentClassName: "premium-control-toggle-content",
                  position: "bottom right",
                  renderToggle: function renderToggle(_ref4) {
                    var isOpen = _ref4.isOpen,
                        onToggle = _ref4.onToggle;
                    return wp.element.createElement(
                      Button,
                      {
                        isSmall: true,
                        onClick: onToggle,
                        "aria-expanded": isOpen
                      },
                      wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                    );
                  },
                  renderContent: function renderContent() {
                    return wp.element.createElement(
                      Fragment,
                      null,
                      wp.element.createElement(
                        "p",
                        null,
                        __("Text Color")
                      ),
                      wp.element.createElement(ColorPalette, {
                        value: videoDescColor,
                        onChange: function onChange(newValue) {
                          return setAttributes({
                            videoDescColor: newValue
                          });
                        },
                        allowReset: true
                      }),
                      wp.element.createElement(
                        "p",
                        null,
                        __("Text Background Color")
                      ),
                      wp.element.createElement(ColorPalette, {
                        value: videoDescBack,
                        onChange: function onChange(newValue) {
                          return setAttributes({
                            videoDescBack: newValue
                          });
                        },
                        allowReset: true
                      })
                    );
                  }
                })
              ),
              wp.element.createElement(RangeControl, {
                label: __("Border Radius (px)"),
                value: videoDescBorderRadius,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    videoDescBorderRadius: newValue === undefined ? 0 : newValue
                  });
                }
              }),
              wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
                color: descShadowColor,
                blur: descShadowBlur,
                horizontal: descShadowHorizontal,
                vertical: descShadowVertical,
                onChangeColor: function onChangeColor(newColor) {
                  return setAttributes({
                    descShadowColor: newColor.hex || "transparent"
                  });
                },
                onChangeBlur: function onChangeBlur(newBlur) {
                  return setAttributes({ descShadowBlur: newBlur || "0" });
                },
                onChangehHorizontal: function onChangehHorizontal(newValue) {
                  return setAttributes({
                    descShadowHorizontal: newValue || "0"
                  });
                },
                onChangeVertical: function onChangeVertical(newValue) {
                  return setAttributes({ descShadowVertical: newValue || "0" });
                }
              }),
              wp.element.createElement(RangeControl, {
                label: __("Padding (PX)"),
                value: videoDescPadding,
                onChange: function onChange(newValue) {
                  return setAttributes({
                    videoDescPadding: newValue === undefined ? 20 : newValue
                  });
                }
              })
            )
          )
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Box Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_border__["a" /* default */], {
            borderType: boxBorderType,
            borderWidth: boxBorderWidth,
            borderColor: boxBorderColor,
            borderRadius: boxBorderRadius,
            onChangeType: function onChangeType(newType) {
              return setAttributes({ boxBorderType: newType });
            },
            onChangeWidth: function onChangeWidth(newWidth) {
              return setAttributes({ boxBorderWidth: newWidth });
            },
            onChangeColor: function onChangeColor(colorValue) {
              return setAttributes({ boxBorderColor: colorValue.hex });
            },
            onChangeRadius: function onChangeRadius(newrRadius) {
              return setAttributes({ boxBorderRadius: newrRadius });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_box_shadow__["a" /* default */], {
            inner: true,
            color: shadowColor,
            blur: shadowBlur,
            horizontal: shadowHorizontal,
            vertical: shadowVertical,
            position: shadowPosition,
            onChangeColor: function onChangeColor(newColor) {
              return setAttributes({
                shadowColor: newColor === undefined ? "transparent" : newColor.hex
              });
            },
            onChangeBlur: function onChangeBlur(newBlur) {
              return setAttributes({
                shadowBlur: newBlur === undefined ? 0 : newBlur
              });
            },
            onChangehHorizontal: function onChangehHorizontal(newValue) {
              return setAttributes({
                shadowHorizontal: newValue === undefined ? 0 : newValue
              });
            },
            onChangeVertical: function onChangeVertical(newValue) {
              return setAttributes({
                shadowVertical: newValue === undefined ? 0 : newValue
              });
            },
            onChangePosition: function onChangePosition(newValue) {
              return setAttributes({
                shadowPosition: newValue === undefined ? 0 : newValue
              });
            }
          })
        )
      ), wp.element.createElement(
        "div",
        {
          id: videoBoxId,
          className: mainClasses + " video-overlay-" + overlay,
          "data-type": videoType,
          style: {
            border: boxBorderType,
            borderWidth: boxBorderWidth + "px",
            borderRadius: boxBorderRadius + "px",
            borderColor: boxBorderColor,
            boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
          }
        },
        wp.element.createElement("style", {
          dangerouslySetInnerHTML: {
            __html: ["#" + videoBoxId + " .premium-video-box__play:hover {", "color: " + playHoverColor + " !important;", "background-color: " + playHoverBackColor + " !important;", "}"].join("\n")
          }
        }),
        wp.element.createElement(
          "div",
          { className: "premium-video-box__container" },
          "self" !== videoType && wp.element.createElement("iframe", {
            src: Object(__WEBPACK_IMPORTED_MODULE_6__index__["a" /* default */])(videoType, videoURL) + "?autoplay=" + (overlay ? 0 : autoPlay) + "&loop=" + loopVideo() + "&mute" + ("vimeo" == videoType ? "d" : "") + "=" + mute + "&rel=" + (relatedVideos ? "1" : "0") + "&controls=" + (controls ? "1" : "0"),
            frameborder: "0",
            gesture: "media",
            allow: "encrypted-media",
            allowfullscreen: true
          }),
          "self" === videoType && wp.element.createElement("video", {
            src: videoURL,
            loop: loop ? true : false,
            muted: mute ? true : false,
            autoplay: overlay ? false : autoPlay,
            controls: controls ? true : false
          })
        ),
        overlay && overlayImgURL && wp.element.createElement("div", {
          className: "premium-video-box__overlay",
          style: {
            backgroundImage: "url('" + overlayImgURL + "')",
            filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
          }
        }),
        overlay && playIcon && wp.element.createElement(
          "div",
          {
            className: "premium-video-box__play",
            style: {
              top: playTop + "%",
              left: playLeft + "%",
              color: playColor,
              backgroundColor: playBack,
              border: playBorderType,
              borderWidth: playBorderWidth + "px",
              borderRadius: playBorderRadius + "px",
              borderColor: playBorderColor,
              padding: playPadding + "px"
            }
          },
          wp.element.createElement("i", {
            className: "premium-video-box__play_icon dashicons dashicons-controls-play",
            style: {
              fontSize: playSize + "px"
            }
          })
        ),
        overlay && videoDesc && wp.element.createElement(
          "div",
          {
            className: "premium-video-box__desc",
            style: {
              color: videoDescColor,
              backgroundColor: videoDescBack,
              padding: videoDescPadding,
              borderRadius: videoDescBorderRadius,
              top: descTop + "%",
              left: descLeft + "%"
            }
          },
          wp.element.createElement(
            "p",
            {
              className: "premium-video-box__desc_text",
              style: {
                fontSize: videoDescSize + "px",
                fontFamily: videoDescFamily,
                fontWeight: videoDescWeight,
                letterSpacing: videoDescLetter + "px",
                textTransform: videoDescUpper ? "uppercase" : "none",
                textShadow: descShadowHorizontal + "px " + descShadowVertical + "px " + descShadowBlur + "px " + descShadowColor,
                fontStyle: videoDescStyle
              }
            },
            wp.element.createElement(
              "span",
              null,
              videoDescText
            )
          )
        )
      )];
    }
  }]);

  return edit;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 241 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(44);



var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      videoBoxId = _props$attributes.videoBoxId,
      videoType = _props$attributes.videoType,
      videoURL = _props$attributes.videoURL,
      autoPlay = _props$attributes.autoPlay,
      loop = _props$attributes.loop,
      mute = _props$attributes.mute,
      relatedVideos = _props$attributes.relatedVideos,
      controls = _props$attributes.controls,
      overlay = _props$attributes.overlay,
      overlayImgURL = _props$attributes.overlayImgURL,
      blur = _props$attributes.blur,
      contrast = _props$attributes.contrast,
      saturation = _props$attributes.saturation,
      bright = _props$attributes.bright,
      hue = _props$attributes.hue,
      playTop = _props$attributes.playTop,
      playLeft = _props$attributes.playLeft,
      playIcon = _props$attributes.playIcon,
      playColor = _props$attributes.playColor,
      playHoverColor = _props$attributes.playHoverColor,
      playHoverBackColor = _props$attributes.playHoverBackColor,
      playSize = _props$attributes.playSize,
      playPadding = _props$attributes.playPadding,
      playBack = _props$attributes.playBack,
      playBorderColor = _props$attributes.playBorderColor,
      playBorderWidth = _props$attributes.playBorderWidth,
      playBorderRadius = _props$attributes.playBorderRadius,
      playBorderType = _props$attributes.playBorderType,
      videoDesc = _props$attributes.videoDesc,
      descTop = _props$attributes.descTop,
      descLeft = _props$attributes.descLeft,
      videoDescText = _props$attributes.videoDescText,
      videoDescColor = _props$attributes.videoDescColor,
      videoDescBack = _props$attributes.videoDescBack,
      videoDescPadding = _props$attributes.videoDescPadding,
      videoDescSize = _props$attributes.videoDescSize,
      videoDescFamily = _props$attributes.videoDescFamily,
      videoDescWeight = _props$attributes.videoDescWeight,
      videoDescLetter = _props$attributes.videoDescLetter,
      videoDescStyle = _props$attributes.videoDescStyle,
      videoDescUpper = _props$attributes.videoDescUpper,
      videoDescBorderRadius = _props$attributes.videoDescBorderRadius,
      descShadowBlur = _props$attributes.descShadowBlur,
      descShadowColor = _props$attributes.descShadowColor,
      descShadowHorizontal = _props$attributes.descShadowHorizontal,
      descShadowVertical = _props$attributes.descShadowVertical,
      boxBorderColor = _props$attributes.boxBorderColor,
      boxBorderWidth = _props$attributes.boxBorderWidth,
      boxBorderRadius = _props$attributes.boxBorderRadius,
      boxBorderType = _props$attributes.boxBorderType,
      shadowBlur = _props$attributes.shadowBlur,
      shadowColor = _props$attributes.shadowColor,
      shadowHorizontal = _props$attributes.shadowHorizontal,
      shadowVertical = _props$attributes.shadowVertical,
      shadowPosition = _props$attributes.shadowPosition;

  var loopVideo = function loopVideo() {
    if ("youtube" === videoType) {
      if (videoURL.startsWith("http")) {
        return loop ? "1&playlist=" + videoURL.replace("https://www.youtube.com/embed/", "") : "0";
      } else {
        return loop ? "1&playlist=" + videoURL : "0";
      }
    } else {
      return loop ? "1" : "0";
    }
  };

  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-video-box');

  return wp.element.createElement(
    "div",
    {
      id: videoBoxId,
      className: mainClasses + " video-overlay-" + overlay,
      "data-type": videoType,
      style: {
        border: boxBorderType,
        borderWidth: boxBorderWidth + "px",
        borderRadius: boxBorderRadius + "px",
        borderColor: boxBorderColor,
        boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
      }
    },
    wp.element.createElement("style", {
      dangerouslySetInnerHTML: {
        __html: ["#" + videoBoxId + " .premium-video-box__play:hover {", "color: " + playHoverColor + " !important;", "background-color: " + playHoverBackColor + " !important;", "}"].join("\n")
      }
    }),
    wp.element.createElement(
      "div",
      { className: "premium-video-box__container" },
      "self" !== videoType && wp.element.createElement("iframe", {
        src: Object(__WEBPACK_IMPORTED_MODULE_1__index__["a" /* default */])(videoType, videoURL) + "?autoplay=" + (overlay ? 0 : autoPlay) + "&loop=" + loopVideo() + "&mute" + ("vimeo" == videoType ? "d" : "") + "=" + mute + "&rel=" + (relatedVideos ? "1" : "0") + "&controls=" + (controls ? "1" : "0"),
        frameborder: "0",
        gesture: "media",
        allow: "encrypted-media",
        allowfullscreen: true
      }),
      "self" === videoType && wp.element.createElement("video", {
        src: videoURL,
        loop: loop ? true : false,
        muted: mute ? true : false,
        controls: controls ? true : false,
        autoplay: overlay ? false : autoPlay
      })
    ),
    overlay && overlayImgURL && wp.element.createElement("div", {
      className: "premium-video-box__overlay",
      style: {
        backgroundImage: "url('" + overlayImgURL + "')",
        filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
      }
    }),
    overlay && playIcon && wp.element.createElement(
      "div",
      {
        className: "premium-video-box__play",
        style: {
          top: playTop + "%",
          left: playLeft + "%",
          color: playColor,
          backgroundColor: playBack,
          border: playBorderType,
          borderWidth: playBorderWidth + "px",
          borderRadius: playBorderRadius + "px",
          borderColor: playBorderColor,
          padding: playPadding + "px"
        }
      },
      wp.element.createElement("i", {
        className: "premium-video-box__play_icon dashicons dashicons-controls-play",
        style: {
          fontSize: playSize + "px"
        }
      })
    ),
    overlay && videoDesc && wp.element.createElement(
      "div",
      {
        className: "premium-video-box__desc",
        style: {
          color: videoDescColor,
          backgroundColor: videoDescBack,
          padding: videoDescPadding,
          borderRadius: videoDescBorderRadius,
          top: descTop + "%",
          left: descLeft + "%"
        }
      },
      wp.element.createElement(
        "p",
        {
          className: "premium-video-box__desc_text",
          style: {
            fontSize: videoDescSize + "px",
            fontFamily: videoDescFamily,
            fontWeight: videoDescWeight,
            letterSpacing: videoDescLetter + "px",
            textShadow: descShadowHorizontal + "px " + descShadowVertical + "px " + descShadowBlur + "px " + descShadowColor,
            textTransform: videoDescUpper ? "uppercase" : "none",
            fontStyle: videoDescStyle
          }
        },
        wp.element.createElement(
          "span",
          null,
          videoDescText
        )
      )
    )
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 242 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(44);


var className = "premium-video-box";

var videoBoxAttrs_1_2_7 = {
  videoBoxId: {
    type: "string"
  },
  videoType: {
    type: "string",
    default: "youtube"
  },
  videoURL: {
    type: "string",
    default: "07d2dXHYb94"
  },
  videoID: {
    type: "string"
  },
  autoPlay: {
    type: "boolean",
    default: false
  },
  loop: {
    type: "boolean",
    default: false
  },
  controls: {
    type: "boolean",
    default: true
  },
  relatedVideos: {
    type: "boolean",
    default: false
  },
  mute: {
    type: "boolean",
    default: false
  },
  overlay: {
    type: "boolean",
    default: false
  },
  overlayImgID: {
    type: "string"
  },
  overlayImgURL: {
    type: "string"
  },
  blur: {
    type: "number",
    default: 0
  },
  bright: {
    type: "number",
    default: 100
  },
  contrast: {
    type: "number",
    default: 100
  },
  saturation: {
    type: "number",
    default: 100
  },
  hue: {
    type: "number",
    default: 0
  },
  playTop: {
    type: "number"
  },
  playIcon: {
    type: "boolean",
    default: true
  },
  playSize: {
    type: "number"
  },
  playColor: {
    type: "string"
  },
  playBack: {
    type: "string"
  },
  playHoverColor: {
    type: "string"
  },
  playHoverBackColor: {
    type: "string"
  },
  playPadding: {
    type: "number"
  },
  playBorderType: {
    type: "string",
    default: "none"
  },
  playBorderWidth: {
    type: "number",
    default: "1"
  },
  playBorderRadius: {
    type: "number"
  },
  playBorderColor: {
    type: "string"
  },
  videoDescText: {
    type: "string"
  },
  videoDesc: {
    type: "boolean"
  },
  descLeft: {
    type: "number"
  },
  descTop: {
    type: "number"
  },
  videoDescSize: {
    type: "number"
  },
  videoDescWeight: {
    type: "number"
  },
  videoDescLetter: {
    type: "number"
  },
  videoDescStyle: {
    type: "string"
  },
  videoDescUpper: {
    type: "boolean"
  },
  videoDescColor: {
    type: "string"
  },
  videoDescBack: {
    type: "string"
  },
  videoDescPadding: {
    type: "number"
  },
  videoDescBorderRadius: {
    type: "number"
  },
  boxBorderType: {
    type: "string",
    default: "none"
  },
  boxBorderWidth: {
    type: "number",
    default: "1"
  },
  boxBorderRadius: {
    type: "number"
  },
  boxBorderColor: {
    type: "string"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  shadowPosition: {
    type: "string",
    default: ""
  },

  // Old props
  playLeft: {
    type: "number"
  }
};

var videoBoxAttrs_1_5_4 = {
  videoBoxId: {
    type: "string"
  },
  videoType: {
    type: "string",
    default: "youtube"
  },
  videoURL: {
    type: "string",
    default: "07d2dXHYb94"
  },
  videoID: {
    type: "string"
  },
  autoPlay: {
    type: "boolean",
    default: false
  },
  loop: {
    type: "boolean",
    default: false
  },
  controls: {
    type: "boolean",
    default: true
  },
  relatedVideos: {
    type: "boolean",
    default: false
  },
  mute: {
    type: "boolean",
    default: false
  },
  overlay: {
    type: "boolean",
    default: false
  },
  overlayImgID: {
    type: "string"
  },
  overlayImgURL: {
    type: "string"
  },
  blur: {
    type: "number",
    default: 0
  },
  bright: {
    type: "number",
    default: 100
  },
  contrast: {
    type: "number",
    default: 100
  },
  saturation: {
    type: "number",
    default: 100
  },
  hue: {
    type: "number",
    default: 0
  },
  playTop: {
    type: "number"
  },
  playIcon: {
    type: "boolean",
    default: true
  },
  playSize: {
    type: "number"
  },
  playColor: {
    type: "string"
  },
  playBack: {
    type: "string"
  },
  playHoverColor: {
    type: "string"
  },
  playHoverBackColor: {
    type: "string"
  },
  playPadding: {
    type: "number"
  },
  playBorderType: {
    type: "string",
    default: "none"
  },
  playBorderWidth: {
    type: "number",
    default: "1"
  },
  playBorderRadius: {
    type: "number"
  },
  playBorderColor: {
    type: "string"
  },
  videoDescText: {
    type: "string"
  },
  videoDesc: {
    type: "boolean"
  },
  descLeft: {
    type: "number"
  },
  descTop: {
    type: "number"
  },
  videoDescSize: {
    type: "number"
  },
  videoDescFamily: {
    type: "string"
  },
  videoDescWeight: {
    type: "number"
  },
  videoDescLetter: {
    type: "number"
  },
  videoDescStyle: {
    type: "string"
  },
  videoDescUpper: {
    type: "boolean"
  },
  videoDescColor: {
    type: "string"
  },
  videoDescBack: {
    type: "string"
  },
  videoDescPadding: {
    type: "number"
  },
  videoDescBorderRadius: {
    type: "number"
  },
  boxBorderType: {
    type: "string",
    default: "none"
  },
  boxBorderWidth: {
    type: "number",
    default: "1"
  },
  boxBorderRadius: {
    type: "number"
  },
  boxBorderColor: {
    type: "string"
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  shadowPosition: {
    type: "string",
    default: ""
  },

  // Old props
  playLeft: {
    type: "number"
  }
};

var deprecatedContent = [{
  attributes: videoBoxAttrs_1_5_4,
  migrate: function migrate(attributes) {
    var newAttributes = {
      descShadowBlur: "0",
      descShadowColor: "",
      descShadowHorizontal: "0",
      descShadowVertical: "0"
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        videoBoxId = _props$attributes.videoBoxId,
        videoType = _props$attributes.videoType,
        videoURL = _props$attributes.videoURL,
        autoPlay = _props$attributes.autoPlay,
        loop = _props$attributes.loop,
        mute = _props$attributes.mute,
        relatedVideos = _props$attributes.relatedVideos,
        controls = _props$attributes.controls,
        overlay = _props$attributes.overlay,
        overlayImgURL = _props$attributes.overlayImgURL,
        blur = _props$attributes.blur,
        contrast = _props$attributes.contrast,
        saturation = _props$attributes.saturation,
        bright = _props$attributes.bright,
        hue = _props$attributes.hue,
        playTop = _props$attributes.playTop,
        playLeft = _props$attributes.playLeft,
        playIcon = _props$attributes.playIcon,
        playColor = _props$attributes.playColor,
        playHoverColor = _props$attributes.playHoverColor,
        playHoverBackColor = _props$attributes.playHoverBackColor,
        playSize = _props$attributes.playSize,
        playPadding = _props$attributes.playPadding,
        playBack = _props$attributes.playBack,
        playBorderColor = _props$attributes.playBorderColor,
        playBorderWidth = _props$attributes.playBorderWidth,
        playBorderRadius = _props$attributes.playBorderRadius,
        playBorderType = _props$attributes.playBorderType,
        videoDesc = _props$attributes.videoDesc,
        descTop = _props$attributes.descTop,
        descLeft = _props$attributes.descLeft,
        videoDescText = _props$attributes.videoDescText,
        videoDescColor = _props$attributes.videoDescColor,
        videoDescBack = _props$attributes.videoDescBack,
        videoDescPadding = _props$attributes.videoDescPadding,
        videoDescSize = _props$attributes.videoDescSize,
        videoDescFamily = _props$attributes.videoDescFamily,
        videoDescWeight = _props$attributes.videoDescWeight,
        videoDescLetter = _props$attributes.videoDescLetter,
        videoDescStyle = _props$attributes.videoDescStyle,
        videoDescUpper = _props$attributes.videoDescUpper,
        videoDescBorderRadius = _props$attributes.videoDescBorderRadius,
        boxBorderColor = _props$attributes.boxBorderColor,
        boxBorderWidth = _props$attributes.boxBorderWidth,
        boxBorderRadius = _props$attributes.boxBorderRadius,
        boxBorderType = _props$attributes.boxBorderType,
        shadowBlur = _props$attributes.shadowBlur,
        shadowColor = _props$attributes.shadowColor,
        shadowHorizontal = _props$attributes.shadowHorizontal,
        shadowVertical = _props$attributes.shadowVertical,
        shadowPosition = _props$attributes.shadowPosition;

    var loopVideo = function loopVideo() {
      if ("youtube" === videoType) {
        if (videoURL.startsWith("http")) {
          return loop ? "1&playlist=" + videoURL.replace("https://www.youtube.com/embed/", "") : "0";
        } else {
          return loop ? "1&playlist=" + videoURL : "0";
        }
      } else {
        return loop ? "1" : "0";
      }
    };
    return wp.element.createElement(
      "div",
      {
        id: videoBoxId,
        className: className + " video-overlay-" + overlay,
        "data-type": videoType,
        style: {
          border: boxBorderType,
          borderWidth: boxBorderWidth + "px",
          borderRadius: boxBorderRadius + "px",
          borderColor: boxBorderColor,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#" + videoBoxId + " ." + className + "__play:hover {", "color: " + playHoverColor + " !important;", "background-color: " + playHoverBackColor + " !important;", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        { className: className + "__container" },
        "self" !== videoType && wp.element.createElement("iframe", {
          src: Object(__WEBPACK_IMPORTED_MODULE_0__index__["a" /* default */])(videoType, videoURL) + "?autoplay=" + (overlay ? 0 : autoPlay) + "&loop=" + loopVideo() + "&mute" + ("vimeo" == videoType ? "d" : "") + "=" + mute + "&rel=" + (relatedVideos ? "1" : "0") + "&controls=" + (controls ? "1" : "0"),
          frameborder: "0",
          gesture: "media",
          allow: "encrypted-media",
          allowfullscreen: true
        }),
        "self" === videoType && wp.element.createElement("video", {
          src: videoURL,
          loop: loop ? true : false,
          muted: mute ? true : false,
          controls: controls ? true : false,
          autoplay: overlay ? false : autoPlay
        })
      ),
      overlay && overlayImgURL && wp.element.createElement("div", {
        className: className + "__overlay",
        style: {
          backgroundImage: "url('" + overlayImgURL + "')",
          filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
        }
      }),
      overlay && playIcon && wp.element.createElement(
        "div",
        {
          className: className + "__play",
          style: {
            top: playTop + "%",
            left: playLeft + "%",
            color: playColor,
            backgroundColor: playBack,
            border: playBorderType,
            borderWidth: playBorderWidth + "px",
            borderRadius: playBorderRadius + "px",
            borderColor: playBorderColor,
            padding: playPadding + "px"
          }
        },
        wp.element.createElement("i", {
          className: className + "__play_icon dashicons dashicons-controls-play",
          style: {
            fontSize: playSize + "px"
          }
        })
      ),
      overlay && videoDesc && wp.element.createElement(
        "div",
        {
          className: className + "__desc",
          style: {
            color: videoDescColor,
            backgroundColor: videoDescBack,
            padding: videoDescPadding,
            borderRadius: videoDescBorderRadius,
            top: descTop + "%",
            left: descLeft + "%"
          }
        },
        wp.element.createElement(
          "p",
          {
            className: className + "__desc_text",
            style: {
              fontSize: videoDescSize + "px",
              fontFamily: videoDescFamily,
              fontWeight: videoDescWeight,
              letterSpacing: videoDescLetter + "px",
              textTransform: videoDescUpper ? "uppercase" : "none",
              fontStyle: videoDescStyle
            }
          },
          wp.element.createElement(
            "span",
            null,
            videoDescText
          )
        )
      )
    );
  }
}, {
  attributes: videoBoxAttrs_1_2_7,
  migrate: function migrate(attributes) {
    var newAttributes = {
      videoDescFamily: ""
    };
    return Object.assign(attributes, newAttributes);
  },
  save: function save(props) {
    var _props$attributes2 = props.attributes,
        videoBoxId = _props$attributes2.videoBoxId,
        videoType = _props$attributes2.videoType,
        videoURL = _props$attributes2.videoURL,
        autoPlay = _props$attributes2.autoPlay,
        loop = _props$attributes2.loop,
        mute = _props$attributes2.mute,
        relatedVideos = _props$attributes2.relatedVideos,
        controls = _props$attributes2.controls,
        overlay = _props$attributes2.overlay,
        overlayImgURL = _props$attributes2.overlayImgURL,
        blur = _props$attributes2.blur,
        contrast = _props$attributes2.contrast,
        saturation = _props$attributes2.saturation,
        bright = _props$attributes2.bright,
        hue = _props$attributes2.hue,
        playTop = _props$attributes2.playTop,
        playLeft = _props$attributes2.playLeft,
        playIcon = _props$attributes2.playIcon,
        playColor = _props$attributes2.playColor,
        playHoverColor = _props$attributes2.playHoverColor,
        playHoverBackColor = _props$attributes2.playHoverBackColor,
        playSize = _props$attributes2.playSize,
        playPadding = _props$attributes2.playPadding,
        playBack = _props$attributes2.playBack,
        playBorderColor = _props$attributes2.playBorderColor,
        playBorderWidth = _props$attributes2.playBorderWidth,
        playBorderRadius = _props$attributes2.playBorderRadius,
        playBorderType = _props$attributes2.playBorderType,
        videoDesc = _props$attributes2.videoDesc,
        descTop = _props$attributes2.descTop,
        descLeft = _props$attributes2.descLeft,
        videoDescText = _props$attributes2.videoDescText,
        videoDescColor = _props$attributes2.videoDescColor,
        videoDescBack = _props$attributes2.videoDescBack,
        videoDescPadding = _props$attributes2.videoDescPadding,
        videoDescSize = _props$attributes2.videoDescSize,
        videoDescWeight = _props$attributes2.videoDescWeight,
        videoDescLetter = _props$attributes2.videoDescLetter,
        videoDescStyle = _props$attributes2.videoDescStyle,
        videoDescUpper = _props$attributes2.videoDescUpper,
        videoDescBorderRadius = _props$attributes2.videoDescBorderRadius,
        boxBorderColor = _props$attributes2.boxBorderColor,
        boxBorderWidth = _props$attributes2.boxBorderWidth,
        boxBorderRadius = _props$attributes2.boxBorderRadius,
        boxBorderType = _props$attributes2.boxBorderType,
        shadowBlur = _props$attributes2.shadowBlur,
        shadowColor = _props$attributes2.shadowColor,
        shadowHorizontal = _props$attributes2.shadowHorizontal,
        shadowVertical = _props$attributes2.shadowVertical,
        shadowPosition = _props$attributes2.shadowPosition;

    var loopVideo = function loopVideo() {
      if ("youtube" === videoType) {
        if (videoURL.startsWith("http")) {
          return loop ? "1&playlist=" + videoURL.replace("https://www.youtube.com/embed/", "") : "0";
        } else {
          return loop ? "1&playlist=" + videoURL : "0";
        }
      } else {
        return loop ? "1" : "0";
      }
    };
    return wp.element.createElement(
      "div",
      {
        id: videoBoxId,
        className: className + " video-overlay-" + overlay,
        "data-type": videoType,
        style: {
          border: boxBorderType,
          borderWidth: boxBorderWidth + "px",
          borderRadius: boxBorderRadius + "px",
          borderColor: boxBorderColor,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#" + videoBoxId + " ." + className + "__play:hover {", "color: " + playHoverColor + " !important;", "background-color: " + playHoverBackColor + " !important;", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        { className: className + "__container" },
        "self" !== videoType && wp.element.createElement("iframe", {
          src: Object(__WEBPACK_IMPORTED_MODULE_0__index__["a" /* default */])(videoType, videoURL) + "?autoplay=" + (overlay ? 0 : autoPlay) + "&loop=" + loopVideo() + "&mute" + ("vimeo" == videoType ? "d" : "") + "=" + mute + "&rel=" + (relatedVideos ? "1" : "0") + "&controls=" + (controls ? "1" : "0"),
          frameborder: "0",
          gesture: "media",
          allow: "encrypted-media",
          allowfullscreen: true
        }),
        "self" === videoType && wp.element.createElement("video", {
          src: videoURL,
          loop: loop ? true : false,
          muted: mute ? true : false,
          controls: controls ? true : false,
          autoplay: overlay ? false : autoPlay
        })
      ),
      overlay && overlayImgURL && wp.element.createElement("div", {
        className: className + "__overlay",
        style: {
          backgroundImage: "url('" + overlayImgURL + "')",
          filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
        }
      }),
      overlay && playIcon && wp.element.createElement(
        "div",
        {
          className: className + "__play",
          style: {
            top: playTop + "%",
            left: playLeft + "%",
            color: playColor,
            backgroundColor: playBack,
            border: playBorderType,
            borderWidth: playBorderWidth + "px",
            borderRadius: playBorderRadius + "px",
            borderColor: playBorderColor,
            padding: playPadding + "px"
          }
        },
        wp.element.createElement("i", {
          className: className + "__play_icon dashicons dashicons-controls-play",
          style: {
            fontSize: playSize + "px"
          }
        })
      ),
      overlay && videoDesc && wp.element.createElement(
        "div",
        {
          className: className + "__desc",
          style: {
            color: videoDescColor,
            backgroundColor: videoDescBack,
            padding: videoDescPadding,
            borderRadius: videoDescBorderRadius,
            top: descTop + "%",
            left: descLeft + "%"
          }
        },
        wp.element.createElement(
          "p",
          {
            className: className + "__desc_text",
            style: {
              fontSize: videoDescSize + "px",
              fontWeight: videoDescWeight,
              letterSpacing: videoDescLetter + "px",
              textTransform: videoDescUpper ? "uppercase" : "none",
              fontStyle: videoDescStyle
            }
          },
          wp.element.createElement(
            "span",
            null,
            videoDescText
          )
        )
      )
    );
  }
}, {
  attributes: videoBoxAttrs_1_2_7,
  save: function save(props) {
    var _props$attributes3 = props.attributes,
        videoBoxId = _props$attributes3.videoBoxId,
        videoType = _props$attributes3.videoType,
        videoURL = _props$attributes3.videoURL,
        autoPlay = _props$attributes3.autoPlay,
        loop = _props$attributes3.loop,
        mute = _props$attributes3.mute,
        controls = _props$attributes3.controls,
        overlay = _props$attributes3.overlay,
        overlayImgURL = _props$attributes3.overlayImgURL,
        blur = _props$attributes3.blur,
        contrast = _props$attributes3.contrast,
        saturation = _props$attributes3.saturation,
        bright = _props$attributes3.bright,
        hue = _props$attributes3.hue,
        playTop = _props$attributes3.playTop,
        playLeft = _props$attributes3.playLeft,
        playIcon = _props$attributes3.playIcon,
        playColor = _props$attributes3.playColor,
        playHoverColor = _props$attributes3.playHoverColor,
        playHoverBackColor = _props$attributes3.playHoverBackColor,
        playSize = _props$attributes3.playSize,
        playPadding = _props$attributes3.playPadding,
        playBack = _props$attributes3.playBack,
        playBorderColor = _props$attributes3.playBorderColor,
        playBorderWidth = _props$attributes3.playBorderWidth,
        playBorderRadius = _props$attributes3.playBorderRadius,
        playBorderType = _props$attributes3.playBorderType,
        videoDesc = _props$attributes3.videoDesc,
        descTop = _props$attributes3.descTop,
        descLeft = _props$attributes3.descLeft,
        videoDescText = _props$attributes3.videoDescText,
        videoDescColor = _props$attributes3.videoDescColor,
        videoDescBack = _props$attributes3.videoDescBack,
        videoDescPadding = _props$attributes3.videoDescPadding,
        videoDescSize = _props$attributes3.videoDescSize,
        videoDescWeight = _props$attributes3.videoDescWeight,
        videoDescLetter = _props$attributes3.videoDescLetter,
        videoDescStyle = _props$attributes3.videoDescStyle,
        videoDescUpper = _props$attributes3.videoDescUpper,
        videoDescBorderRadius = _props$attributes3.videoDescBorderRadius,
        boxBorderColor = _props$attributes3.boxBorderColor,
        boxBorderWidth = _props$attributes3.boxBorderWidth,
        boxBorderRadius = _props$attributes3.boxBorderRadius,
        boxBorderType = _props$attributes3.boxBorderType,
        shadowBlur = _props$attributes3.shadowBlur,
        shadowColor = _props$attributes3.shadowColor,
        shadowHorizontal = _props$attributes3.shadowHorizontal,
        shadowVertical = _props$attributes3.shadowVertical,
        shadowPosition = _props$attributes3.shadowPosition;

    var loopVideo = function loopVideo() {
      if ("youtube" === videoType) {
        if (videoURL.startsWith("http")) {
          return loop ? "1&playlist=" + videoURL.replace("https://www.youtube.com/embed/", "") : "0";
        } else {
          return loop ? "1&playlist=" + videoURL : "0";
        }
      } else {
        return loop ? "1" : "0";
      }
    };
    return wp.element.createElement(
      "div",
      {
        id: videoBoxId,
        className: className + " video-overlay-" + overlay,
        "data-type": videoType,
        style: {
          border: boxBorderType,
          borderWidth: boxBorderWidth + "px",
          borderRadius: boxBorderRadius + "px",
          borderColor: boxBorderColor,
          boxShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor + " " + shadowPosition
        }
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: ["#" + videoBoxId + " ." + className + "__play:hover {", "color: " + playHoverColor + " !important;", "background-color: " + playHoverBackColor + " !important;", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        { className: className + "__container" },
        "self" !== videoType && wp.element.createElement("iframe", {
          src: Object(__WEBPACK_IMPORTED_MODULE_0__index__["a" /* default */])(videoType, videoURL) + "?autoplay=" + (overlay ? 0 : autoPlay) + "&loop=" + loopVideo() + "&mute" + ("vimeo" == videoType ? "d" : "") + "=" + mute + "&controls=" + (controls ? "1" : "0"),
          frameborder: "0",
          gesture: "media",
          allow: "encrypted-media",
          allowfullscreen: true
        }),
        "self" === videoType && wp.element.createElement("video", {
          src: videoURL,
          loop: loop ? true : false,
          muted: mute ? true : false,
          controls: controls ? true : false,
          autoplay: overlay ? false : autoPlay
        })
      ),
      overlay && overlayImgURL && wp.element.createElement("div", {
        className: className + "__overlay",
        style: {
          backgroundImage: "url('" + overlayImgURL + "')",
          filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
        }
      }),
      overlay && playIcon && wp.element.createElement(
        "div",
        {
          className: className + "__play",
          style: {
            top: playTop + "%",
            left: playLeft + "%",
            color: playColor,
            backgroundColor: playBack,
            border: playBorderType,
            borderWidth: playBorderWidth + "px",
            borderRadius: playBorderRadius + "px",
            borderColor: playBorderColor,
            padding: playPadding + "px"
          }
        },
        wp.element.createElement("i", {
          className: className + "__play_icon dashicons dashicons-controls-play",
          style: {
            fontSize: playSize + "px"
          }
        })
      ),
      overlay && videoDesc && wp.element.createElement(
        "div",
        {
          className: className + "__desc",
          style: {
            color: videoDescColor,
            backgroundColor: videoDescBack,
            padding: videoDescPadding,
            borderRadius: videoDescBorderRadius,
            top: descTop + "%",
            left: descLeft + "%"
          }
        },
        wp.element.createElement(
          "p",
          {
            className: className + "__desc_text",
            style: {
              fontSize: videoDescSize + "px",
              fontWeight: videoDescWeight,
              letterSpacing: videoDescLetter + "px",
              textTransform: videoDescUpper ? "uppercase" : "none",
              fontStyle: videoDescStyle
            }
          },
          wp.element.createElement(
            "span",
            null,
            videoDescText
          )
        )
      )
    );
  }
}];

/* harmony default export */ __webpack_exports__["a"] = (deprecatedContent);

/***/ }),
/* 243 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__save__ = __webpack_require__(244);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(245);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__icons__ = __webpack_require__(3);
var _personAttrs;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var personAttrs = (_personAttrs = {
    personSize: {
        type: "string",
        default: "md"
    },
    personAlign: {
        type: "string",
        default: "center"
    },
    personImgId: {
        type: "string"
    },
    imgSize: {
        type: "number"
    },
    imgBorder: {
        type: "number",
        default: "1"
    },
    imgBorderColor: {
        type: "string"
    },
    nameColor: {
        type: "string",
        default: "rgb(110, 193, 228)"
    },
    nameSize: {
        type: "number",
        default: 20
    },
    nameLetter: {
        type: "number"
    },
    titleColor: {
        type: "string"
    },
    titleSize: {
        type: "number",
        default: 20
    },
    titleWeight: {
        type: "number"
    },
    titleTag: {
        type: "string",
        default: "p"
    },
    titleLetter: {
        type: "number"
    },
    descColor: {
        type: "string"
    },
    descSize: {
        type: "number",
        default: 20
    },
    descWeight: {
        type: "number"
    },
    descLetter: {
        type: "number"
    },
    descStyle: {
        type: "string"
    },
    descUpper: {
        type: "boolean"
    },
    descLine: {
        type: "number"
    },
    descshadowColor: {
        type: "string"
    },
    descshadowBlur: {
        type: "number",
        default: "0"
    },
    descshadowHorizontal: {
        type: "number",
        default: "0"
    },
    descshadowVertical: {
        type: "number",
        default: "0"
    },
    socialIconSize: {
        type: "number",
        default: 20
    },
    iconSizeUnit: {
        type: "string",
        default: "px"
    },
    socialIconColor: {
        type: "string"
    },
    socialIconHoverColor: {
        type: "string"
    },
    socialIconBackgroundColor: {
        type: "string"
    },
    defaultIconColor: {
        type: "boolean",
        default: false
    },
    borderTypeIcon: {
        type: "string",
        default: "none"
    },
    borderWidthIcon: {
        type: "number",
        default: "1"
    },
    borderRadiusIcon: {
        type: "number",
        default: "0"
    },
    borderColorIcon: {
        type: "string"
    },
    iconMarginL: {
        type: "number",
        default: "1"
    },
    iconMarginR: {
        type: "number",
        default: "1"
    },
    effect: {
        type: "string",
        default: "none"
    },
    effectDir: {
        type: "string",
        default: "top"
    }
}, _defineProperty(_personAttrs, "descColor", {
    type: "string",
    default: "#000"
}), _defineProperty(_personAttrs, "multiPersonChecked", {
    type: "number",
    default: 1
}), _defineProperty(_personAttrs, "nameStyle", {
    type: "string"
}), _defineProperty(_personAttrs, "nameUpper", {
    type: "boolean"
}), _defineProperty(_personAttrs, "titleStyle", {
    type: "string"
}), _defineProperty(_personAttrs, "titleUpper", {
    type: "boolean"
}), _defineProperty(_personAttrs, "nameWeight", {
    type: "number",
    default: 500
}), _defineProperty(_personAttrs, "nameLine", {
    type: "number"
}), _defineProperty(_personAttrs, "titleLine", {
    type: "number"
}), _defineProperty(_personAttrs, "borderType", {
    type: "string",
    default: "none"
}), _defineProperty(_personAttrs, "borderWidth", {
    type: "number",
    default: "1"
}), _defineProperty(_personAttrs, "borderRadius", {
    type: "number"
}), _defineProperty(_personAttrs, "borderColor", {
    type: "string"
}), _defineProperty(_personAttrs, "borderHoverColor", {
    type: "string"
}), _defineProperty(_personAttrs, "nameshadowColor", {
    type: "string"
}), _defineProperty(_personAttrs, "nameshadowBlur", {
    type: "number",
    default: "0"
}), _defineProperty(_personAttrs, "nameshadowHorizontal", {
    type: "number",
    default: "0"
}), _defineProperty(_personAttrs, "nameshadowVertical", {
    type: "number",
    default: "0"
}), _defineProperty(_personAttrs, "titleshadowColor", {
    type: "string"
}), _defineProperty(_personAttrs, "titleshadowBlur", {
    type: "number",
    default: "0"
}), _defineProperty(_personAttrs, "titleshadowHorizontal", {
    type: "number",
    default: "0"
}), _defineProperty(_personAttrs, "titleshadowVertical", {
    type: "number",
    default: "0"
}), _defineProperty(_personAttrs, "personShadowPosition", {
    type: "string",
    default: ""
}), _defineProperty(_personAttrs, "id", {
    type: "string"
}), _defineProperty(_personAttrs, "hoverEffectPerson", {
    type: "string",
    default: "none"
}), _defineProperty(_personAttrs, "selectedSocialMediaIcon", {
    type: "string"
}), _defineProperty(_personAttrs, "effectPersonStyle", {
    type: "string",
    default: "effect1"
}), _defineProperty(_personAttrs, "rowPerson", {
    type: "string",
    default: "column1"
}), _defineProperty(_personAttrs, "multiPersonContent", {
    type: "array",
    default: [{
        id: 1,
        personImgUrl: "",
        name: "John Doe",
        title: "Senior Developer",
        desc: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ullamcorper nulla non metus auctor fringilla",
        socialIcon: false,
        items: [{ label: 'facebook', link: false, value: "#", changeinput: "#" }, { label: 'twitter', link: false, value: "#", changeinput: "#" }, { label: 'instagram', link: false, value: "#", changeinput: "#" }, { label: 'youtube', link: false, value: "#", changeinput: "#" }]
    }]
}), _defineProperty(_personAttrs, "socialIconPadding", {
    type: "number"
}), _defineProperty(_personAttrs, "socialIconPaddingU", {
    type: "number"
}), _defineProperty(_personAttrs, "change", {
    type: "boolean",
    default: false
}), _defineProperty(_personAttrs, "blur", {
    type: "number",
    default: "0"
}), _defineProperty(_personAttrs, "bright", {
    type: "number",
    default: "100"
}), _defineProperty(_personAttrs, "contrast", {
    type: "number",
    default: "100"
}), _defineProperty(_personAttrs, "saturation", {
    type: "number",
    default: "100"
}), _defineProperty(_personAttrs, "hue", {
    type: "number",
    default: "0"
}), _personAttrs);

registerBlockType("premium/person", {
    title: __("person"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__icons__["a" /* default */], { icon: "button" }),
    category: "premium-blocks",
    attributes: personAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["m" /* person */]
    },
    edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_1__save__["a" /* default */]
});

/***/ }),
/* 244 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_default_image__ = __webpack_require__(28);



var save = function save(props) {
    var className = props.className;
    var _props$attributes = props.attributes,
        id = _props$attributes.id,
        personAlign = _props$attributes.personAlign,
        imgBorder = _props$attributes.imgBorder,
        imgBorderColor = _props$attributes.imgBorderColor,
        imgSize = _props$attributes.imgSize,
        nameColor = _props$attributes.nameColor,
        nameSize = _props$attributes.nameSize,
        nameWeight = _props$attributes.nameWeight,
        nameV = _props$attributes.nameV,
        titleColor = _props$attributes.titleColor,
        titleSize = _props$attributes.titleSize,
        titleWeight = _props$attributes.titleWeight,
        titleV = _props$attributes.titleV,
        descColor = _props$attributes.descColor,
        descSize = _props$attributes.descSize,
        descWeight = _props$attributes.descWeight,
        descV = _props$attributes.descV,
        descLine = _props$attributes.descLine,
        descLetter = _props$attributes.descLetter,
        descStyle = _props$attributes.descStyle,
        descUpper = _props$attributes.descUpper,
        descshadowBlur = _props$attributes.descshadowBlur,
        descshadowColor = _props$attributes.descshadowColor,
        descshadowHorizontal = _props$attributes.descshadowHorizontal,
        descshadowVertical = _props$attributes.descshadowVertical,
        iconSizeUnit = _props$attributes.iconSizeUnit,
        socialIconSize = _props$attributes.socialIconSize,
        socialIconColor = _props$attributes.socialIconColor,
        socialIconHoverColor = _props$attributes.socialIconHoverColor,
        defaultIconColor = _props$attributes.defaultIconColor,
        iconMarginL = _props$attributes.iconMarginL,
        iconMarginR = _props$attributes.iconMarginR,
        effect = _props$attributes.effect,
        effectDir = _props$attributes.effectDir,
        nameLine = _props$attributes.nameLine,
        nameLetter = _props$attributes.nameLetter,
        titleLine = _props$attributes.titleLine,
        titleLetter = _props$attributes.titleLetter,
        multiPersonChecked = _props$attributes.multiPersonChecked,
        nameStyle = _props$attributes.nameStyle,
        nameUpper = _props$attributes.nameUpper,
        titleStyle = _props$attributes.titleStyle,
        titleUpper = _props$attributes.titleUpper,
        borderTypeIcon = _props$attributes.borderTypeIcon,
        borderWidthIcon = _props$attributes.borderWidthIcon,
        borderRadiusIcon = _props$attributes.borderRadiusIcon,
        borderColorIcon = _props$attributes.borderColorIcon,
        borderHoverColor = _props$attributes.borderHoverColor,
        nameshadowBlur = _props$attributes.nameshadowBlur,
        nameshadowColor = _props$attributes.nameshadowColor,
        nameshadowHorizontal = _props$attributes.nameshadowHorizontal,
        nameshadowVertical = _props$attributes.nameshadowVertical,
        titleshadowBlur = _props$attributes.titleshadowBlur,
        titleshadowColor = _props$attributes.titleshadowColor,
        titleshadowHorizontal = _props$attributes.titleshadowHorizontal,
        titleshadowVertical = _props$attributes.titleshadowVertical,
        hoverEffectPerson = _props$attributes.hoverEffectPerson,
        effectPersonStyle = _props$attributes.effectPersonStyle,
        multiPersonContent = _props$attributes.multiPersonContent,
        socialIconPadding = _props$attributes.socialIconPadding,
        socialIconPaddingU = _props$attributes.socialIconPaddingU,
        socialIconBackgroundColor = _props$attributes.socialIconBackgroundColor,
        rowPerson = _props$attributes.rowPerson,
        change = _props$attributes.change,
        blur = _props$attributes.blur,
        bright = _props$attributes.bright,
        contrast = _props$attributes.contrast,
        saturation = _props$attributes.saturation,
        hue = _props$attributes.hue;


    var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, 'premium-person');

    var socialIconfn = function socialIconfn(v) {
        return wp.element.createElement(
            'ul',
            { className: 'premium-person__social-List' },
            v.map(function (value) {
                return wp.element.createElement(
                    'li',
                    null,
                    wp.element.createElement(
                        'a',
                        { className: 'premium-person__socialIcon__link_content ' + (defaultIconColor ? value.label : ""), href: '' + value.value, style: {
                                padding: socialIconPadding + socialIconPaddingU,
                                borderStyle: borderTypeIcon,
                                borderWidth: borderWidthIcon + "px",
                                borderRadius: borderRadiusIcon || 100 + "px",
                                borderColor: borderColorIcon,
                                marginLeft: iconMarginL + "px",
                                marginRight: iconMarginR + "px",
                                background: socialIconBackgroundColor
                            } },
                        wp.element.createElement('i', { className: 'premium-person__socialIcon ' + (value.label == "youtube" ? "fa fa-youtube-play" : 'fa fa-' + value.label) + ' premium-person__' + socialIconHoverColor,
                            style: {
                                color: socialIconColor,
                                fontSize: (socialIconSize || 50) + iconSizeUnit
                            }
                        })
                    )
                );
            })
        );
    };
    var content = function content() {
        return wp.element.createElement(
            'div',
            { className: '' + (multiPersonChecked > 1 ? 'premium-person__' + rowPerson : "")
            },
            ' ',
            multiPersonContent.map(function (value) {
                return wp.element.createElement(
                    'div',
                    { key: value.id, className: 'premium-person__inner premium-persson__min premium-person__' + effectPersonStyle + ' premium-person__' + hoverEffectPerson },
                    wp.element.createElement(
                        'div',
                        { className: 'premium-person__img__container' },
                        wp.element.createElement(
                            'div',
                            {
                                className: 'premium-person__img_wrap'
                            },
                            value.personImgUrl && wp.element.createElement('img', {
                                className: 'premium-person__img',
                                src: '' + value.personImgUrl,
                                alt: 'Person',
                                style: {

                                    borderWidth: imgBorder + "px",
                                    borderColor: imgBorderColor,
                                    width: imgSize + "px",
                                    height: imgSize + "px",
                                    filter: '' + (change ? 'brightness( ' + bright + '% ) contrast( ' + contrast + '% ) saturate( ' + saturation + '% ) blur( ' + blur + 'px ) hue-rotate( ' + hue + 'deg )' : "")
                                }
                            }),
                            !value.personImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_default_image__["a" /* default */], { className: className })
                        ),
                        effectPersonStyle === 'effect2' ? wp.element.createElement(
                            'div',
                            { className: 'premium-person__socialEffect2' },
                            value.socialIcon && socialIconfn(value.items)
                        ) : ""
                    ),
                    wp.element.createElement(
                        'div',
                        {
                            className: 'premium-person__info'
                        },
                        wp.element.createElement(
                            'div',
                            { className: 'premium-person__name_wrap' },
                            value.name && wp.element.createElement(
                                'span',
                                {
                                    className: 'premium-person__name',
                                    style: {
                                        color: nameColor,
                                        fontSize: nameSize + "px",
                                        fontWeight: nameWeight,
                                        alignSelf: nameV,
                                        letterSpacing: nameLetter + "px",
                                        lineHeight: nameLine + "px",
                                        fontStyle: nameStyle,
                                        textTransform: nameUpper ? "uppercase" : "none",
                                        textShadow: nameshadowHorizontal + 'px ' + nameshadowVertical + 'px ' + nameshadowBlur + 'px ' + nameshadowColor
                                    }
                                },
                                value.name
                            )
                        ),
                        wp.element.createElement(
                            'div',
                            { className: 'premium-person__title_wrap' },
                            value.title && wp.element.createElement(
                                'span',
                                {
                                    className: 'premium-person__title',
                                    style: {
                                        color: titleColor,
                                        fontSize: titleSize + "px",
                                        fontWeight: titleWeight,
                                        alignSelf: titleV,
                                        letterSpacing: titleLetter + "px",
                                        lineHeight: titleLine + "px",
                                        fontStyle: titleStyle,
                                        textTransform: titleUpper ? "uppercase" : "none",
                                        textShadow: titleshadowHorizontal + 'px ' + titleshadowVertical + 'px ' + titleshadowBlur + 'px ' + titleshadowColor
                                    }
                                },
                                value.title
                            )
                        ),
                        wp.element.createElement(
                            'div',
                            { className: 'premium-person__desc_wrap' },
                            value.desc && wp.element.createElement(
                                'span',
                                {
                                    className: 'premium-person__desc',
                                    style: {
                                        color: descColor,
                                        fontSize: descSize + "px",
                                        fontWeight: descWeight,
                                        alignSelf: descV,
                                        letterSpacing: descLetter + "px",
                                        lineHeight: descLine + "px",
                                        fontStyle: descStyle,
                                        textTransform: descUpper ? "uppercase" : "none",
                                        textShadow: descshadowHorizontal + 'px ' + descshadowVertical + 'px ' + descshadowBlur + 'px ' + descshadowColor
                                    }
                                },
                                value.desc
                            )
                        ),
                        effectPersonStyle == 'effect1' ? wp.element.createElement(
                            'div',
                            null,
                            value.socialIcon && socialIconfn(value.items)
                        ) : ""
                    )
                );
            })
        );
    };

    return wp.element.createElement(
        'div',
        {
            id: 'premium-person-' + id,
            className: mainClasses + ' premium-person__' + effect + ' premium-person__' + effectDir,
            style: { textAlign: personAlign }
        },
        wp.element.createElement('style', {
            dangerouslySetInnerHTML: {
                __html: ['#premium-person-' + id + ' .premium-person:hover {', 'border-color: ' + borderHoverColor + ' !important;', "}", '.premium-person__social-List li:hover i{', 'color: ' + socialIconHoverColor + ' !important;', '-webkit-transition: all .2s ease-in-out;', 'transition: all .2s ease-in-out;', "}"].join("\n")
            }
        }),
        content()
    );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_default_image__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_filters__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_margin__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__fonticonpicker_react_fonticonpicker__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_premium_size_units__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_sortable_hoc__ = __webpack_require__(246);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    IconButton = _wp$components.IconButton,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    ToggleControl = _wp$components.ToggleControl,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button,
    TextControl = _wp$components.TextControl,
    TextareaControl = _wp$components.TextareaControl;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    MediaUpload = _wp$editor.MediaUpload;


var SortableItem = Object(__WEBPACK_IMPORTED_MODULE_9_react_sortable_hoc__["b" /* SortableElement */])(function (_ref) {
    var onRemove = _ref.onRemove,
        saveLink = _ref.saveLink,
        changeLinkValue = _ref.changeLinkValue,
        value = _ref.value,
        addLink = _ref.addLink,
        personIndex = _ref.personIndex;
    return wp.element.createElement(
        "li",
        { tabIndex: 0 },
        wp.element.createElement(
            "span",
            { className: "premium-person__socialIcon__container" },
            wp.element.createElement("span", { className: "premium-person__socialIcon__dragHandle" }),
            wp.element.createElement(
                "div",
                { className: "premium-person__socialIcon__content", onClick: function onClick() {
                        return addLink(value);
                    } },
                wp.element.createElement("span", { className: "premium-person__socialIcon__iconvalue fa fa-" + value.label }),
                value.label
            ),
            wp.element.createElement("button", { className: "premium-person__socialIcon__trashicon fa fa-trash", onClick: function onClick() {
                    return onRemove(value.label);
                } })
        ),
        value.link && wp.element.createElement(
            "div",
            { className: "premium-person__socialIcon__link" },
            wp.element.createElement(TextControl, {
                placeholder: __("Enter " + value.label + " link"),
                value: value.changeinput,
                onChange: function onChange(val) {
                    return changeLinkValue(val, value, personIndex);
                },
                className: "premium-person__socialIcon__textInput"
            }),
            wp.element.createElement(
                "button",
                { className: "premium-person__socialIcon__saveButton", onClick: function onClick() {
                        return saveLink(value.changeinput, value, personIndex);
                    } },
                "Save"
            )
        )
    );
});

var SortableList = Object(__WEBPACK_IMPORTED_MODULE_9_react_sortable_hoc__["a" /* SortableContainer */])(function (_ref2) {
    var items = _ref2.items,
        onRemove = _ref2.onRemove,
        saveLink = _ref2.saveLink,
        changeLinkValue = _ref2.changeLinkValue,
        addLink = _ref2.addLink,
        personIndex = _ref2.personIndex;

    return wp.element.createElement(
        "ul",
        null,
        items.map(function (value, index) {
            return wp.element.createElement(SortableItem, { key: "item-" + value, index: index, newIndex: index, personIndex: personIndex, value: value, onRemove: onRemove, saveLink: saveLink, addLink: addLink, changeLinkValue: changeLinkValue });
        })
    );
});

var PremiumPerson = function (_Component) {
    _inherits(PremiumPerson, _Component);

    function PremiumPerson() {
        _classCallCheck(this, PremiumPerson);

        return _possibleConstructorReturn(this, (PremiumPerson.__proto__ || Object.getPrototypeOf(PremiumPerson)).apply(this, arguments));
    }

    _createClass(PremiumPerson, [{
        key: "render",
        value: function render() {
            var _wp$element$createEle, _wp$element$createEle2, _wp$element$createEle3;

            var _props = this.props,
                isSelected = _props.isSelected,
                setAttributes = _props.setAttributes,
                className = _props.className,
                blockId = _props.clientId;
            var _props$attributes = this.props.attributes,
                id = _props$attributes.id,
                personSize = _props$attributes.personSize,
                personAlign = _props$attributes.personAlign,
                personImgId = _props$attributes.personImgId,
                imgSize = _props$attributes.imgSize,
                imgBorder = _props$attributes.imgBorder,
                imgBorderColor = _props$attributes.imgBorderColor,
                nameColor = _props$attributes.nameColor,
                nameSize = _props$attributes.nameSize,
                nameWeight = _props$attributes.nameWeight,
                nameV = _props$attributes.nameV,
                titleColor = _props$attributes.titleColor,
                titleSize = _props$attributes.titleSize,
                titleWeight = _props$attributes.titleWeight,
                titleV = _props$attributes.titleV,
                descSize = _props$attributes.descSize,
                descWeight = _props$attributes.descWeight,
                descV = _props$attributes.descV,
                descLine = _props$attributes.descLine,
                descLetter = _props$attributes.descLetter,
                descStyle = _props$attributes.descStyle,
                descUpper = _props$attributes.descUpper,
                descshadowBlur = _props$attributes.descshadowBlur,
                descshadowColor = _props$attributes.descshadowColor,
                descshadowHorizontal = _props$attributes.descshadowHorizontal,
                descshadowVertical = _props$attributes.descshadowVertical,
                socialIconSize = _props$attributes.socialIconSize,
                socialIconColor = _props$attributes.socialIconColor,
                socialIconHoverColor = _props$attributes.socialIconHoverColor,
                iconSizeUnit = _props$attributes.iconSizeUnit,
                defaultIconColor = _props$attributes.defaultIconColor,
                socialIconBackgroundColor = _props$attributes.socialIconBackgroundColor,
                iconMarginL = _props$attributes.iconMarginL,
                iconMarginR = _props$attributes.iconMarginR,
                effect = _props$attributes.effect,
                effectDir = _props$attributes.effectDir,
                descColor = _props$attributes.descColor,
                nameLetter = _props$attributes.nameLetter,
                titleLetter = _props$attributes.titleLetter,
                multiPersonChecked = _props$attributes.multiPersonChecked,
                nameUpper = _props$attributes.nameUpper,
                nameLine = _props$attributes.nameLine,
                nameStyle = _props$attributes.nameStyle,
                titleUpper = _props$attributes.titleUpper,
                titleLine = _props$attributes.titleLine,
                titleStyle = _props$attributes.titleStyle,
                borderTypeIcon = _props$attributes.borderTypeIcon,
                borderWidthIcon = _props$attributes.borderWidthIcon,
                borderRadiusIcon = _props$attributes.borderRadiusIcon,
                borderColorIcon = _props$attributes.borderColorIcon,
                borderHoverColor = _props$attributes.borderHoverColor,
                nameshadowBlur = _props$attributes.nameshadowBlur,
                nameshadowColor = _props$attributes.nameshadowColor,
                nameshadowHorizontal = _props$attributes.nameshadowHorizontal,
                nameshadowVertical = _props$attributes.nameshadowVertical,
                titleshadowBlur = _props$attributes.titleshadowBlur,
                titleshadowColor = _props$attributes.titleshadowColor,
                titleshadowHorizontal = _props$attributes.titleshadowHorizontal,
                titleshadowVertical = _props$attributes.titleshadowVertical,
                hoverEffectPerson = _props$attributes.hoverEffectPerson,
                effectPersonStyle = _props$attributes.effectPersonStyle,
                rowPerson = _props$attributes.rowPerson,
                multiPersonContent = _props$attributes.multiPersonContent,
                socialIconPadding = _props$attributes.socialIconPadding,
                socialIconPaddingU = _props$attributes.socialIconPaddingU,
                change = _props$attributes.change,
                blur = _props$attributes.blur,
                bright = _props$attributes.bright,
                contrast = _props$attributes.contrast,
                saturation = _props$attributes.saturation,
                hue = _props$attributes.hue;


            var HOVER = [{
                value: "none",
                label: __("None")
            }, {
                value: "zoomin",
                label: __("Zoom In")
            }, {
                value: "zoomout",
                label: "Zoom Out"
            }, {
                value: "scale",
                label: __("Scale")
            }, {
                value: "gray",
                label: __("Gray Scale")
            }, {
                value: "blur",
                label: __("Blur")
            }, {
                value: "bright",
                label: __("Bright")
            }, {
                value: "sepia",
                label: __("Sepia")
            }, {
                value: "translate",
                label: __("Translate")
            }];

            var EFFECTS = [{
                value: "effect1",
                label: __("Style 1")
            }, {
                value: "effect2",
                label: __("Style 2")
            }];
            var ROWS = [{
                value: "column1",
                label: __("1 Column")
            }, {
                value: "column2",
                label: __("2 Columns")
            }, {
                value: "column3",
                label: __("3 Columns")
            }, {
                value: "column4",
                label: __("4 Columns")
            }, {
                value: "column5",
                label: __("5 Columns")
            }, {
                value: "column6",
                label: __("6 Columns")
            }];

            var iconsList = [{
                value: "fab fa-facebook-f",
                label: __("facebook")
            }, {
                value: "fab fa-twitter",
                label: __("twitter")
            }, {
                value: "fab fa-instagram",
                label: __("instagram")
            }, {
                value: "fab fa-youtube",
                label: __("youtube")
            }, {
                value: "fab fa-linkedin",
                label: __("linkedin")
            }, {
                value: "fab fa-flickr",
                label: __("flickr")
            }, {
                value: "fab fa-github",
                label: __("github")
            }, {
                value: "fab fa-google-plus",
                label: __("google-plus")
            }, {
                value: "fab fa-pinterest",
                label: __("pinterest")
            }, {
                value: "fab fa-reddit",
                label: __("reddit")
            }, {
                value: "fab fa-skype",
                label: __("skype")
            }, {
                value: "fab fa-stack-overflow",
                label: __("stack-overflow")
            }, {
                value: "fab fa-whatsapp",
                label: __("whatsapp")
            }, {
                value: "fab fa-vimeo-v",
                label: __("vimeo-v")
            }, {
                value: "fab fa-tumblr",
                label: __("tumblr")
            }, {
                value: "fab fa-dribbble",
                label: __("dribbble")
            }, {
                value: "fab fa-quora",
                label: __("quora")
            }, {
                value: "fab fa-foursquare",
                label: __("foursquare")
            }, {
                value: "fab fa-wordpress",
                label: __("wordpress")
            }, {
                value: "fab fa-stumbleupon",
                label: __("stumbleupon")
            }, {
                value: "fab fa-yahoo",
                label: __("yahoo")
            }, {
                value: "fab fa-soundcloud",
                label: __("soundcloud")
            }];

            setAttributes({ id: blockId });

            var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-person");

            var shouldCancelStart = function shouldCancelStart(e) {
                // Prevent sorting from being triggered if target is input or button
                if (['div', 'button', 'input'].indexOf(e.target.tagName.toLowerCase()) !== -1) {
                    return true; // Return true to cancel sorting
                }
            };
            var _addLink = function _addLink(value, i) {
                if (i > 0) {
                    value.link = !value.link;
                    value.link == false ? value.changeinput = value.value : value.changeinput;
                    var array = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == i;
                    });
                    var newData = array[0].items.filter(function (b) {
                        return b;
                    });
                    array[0].items = newData;
                    multiPersonContent[i - 1] = array[0];
                    setAttributes(multiPersonContent[i - 1] = array[0]);
                } else {
                    value.link = !value.link;
                    value.link == false ? value.changeinput = value.value : value.changeinput;
                    var arrayItem = multiPersonContent.map(function (cont) {
                        return cont;
                    });
                    var _newData = arrayItem[0].items.filter(function (b) {
                        return b;
                    });
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: arrayItem[0].personImgUrl, name: arrayItem[0].name, title: arrayItem[0].title, desc: arrayItem[0].desc, socialIcon: arrayItem[0].socialIcon, items: _newData }] });
                }
            };
            var _saveLink = function _saveLink(value, i, personIndex) {
                if (personIndex > 0) {
                    i.value = value;
                    var arrayItem = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == personIndex;
                    });
                    i.link = false;
                    var newData = arrayItem[0].items.filter(function (b) {
                        return b;
                    });
                    arrayItem[0].items = newData;
                    multiPersonContent[personIndex - 1] = arrayItem[0];
                    setAttributes(multiPersonContent[personIndex - 1] = arrayItem[0]);
                } else {
                    i.value = value;
                    var _arrayItem = multiPersonContent.map(function (cont) {
                        return cont;
                    });
                    i.link = false;
                    var _newData2 = _arrayItem[0].items.filter(function (b) {
                        return b;
                    });
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _arrayItem[0].personImgUrl, name: _arrayItem[0].name, title: _arrayItem[0].title, desc: _arrayItem[0].desc, socialIcon: _arrayItem[0].socialIcon, items: _newData2 }] });
                }
            };
            var _changeLinkValue = function _changeLinkValue(value, i, personIndex) {
                if (personIndex > 0) {
                    i.changeinput = value;
                    var arrayItem = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == personIndex;
                    });
                    var newData = arrayItem[0].items.filter(function (b) {
                        return b;
                    });
                    arrayItem[0].items = newData;
                    multiPersonContent[personIndex - 1] = arrayItem[0];
                    setAttributes(multiPersonContent[personIndex - 1] = arrayItem[0]);
                } else {
                    i.changeinput = value;
                    var _arrayItem2 = multiPersonContent.map(function (cont) {
                        return cont;
                    });
                    var _newData3 = _arrayItem2[0].items.filter(function (b) {
                        return b;
                    });
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _arrayItem2[0].personImgUrl, name: _arrayItem2[0].name, title: _arrayItem2[0].title, desc: _arrayItem2[0].desc, socialIcon: _arrayItem2[0].socialIcon, items: _newData3 }] });
                }
            };
            var _onRemove = function _onRemove(value, i) {
                if (i > 0) {
                    var array = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == i;
                    });
                    var newData = array[0].items.filter(function (b) {
                        return b.label != value;
                    });
                    array[0].items = newData;
                    multiPersonContent[i - 1] = array[0];
                    setAttributes(multiPersonContent[i - 1] = array[0]);
                } else {
                    var arrayItem = multiPersonContent.map(function (cont) {
                        return cont;
                    });
                    var _newData4 = arrayItem[0].items.filter(function (b) {
                        return b.label != value;
                    });
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: arrayItem[0].personImgUrl, name: arrayItem[0].name, title: arrayItem[0].title, desc: arrayItem[0].desc, socialIcon: arrayItem[0].socialIcon, items: _newData4 }] });
                }
            };
            var socialIconfn = function socialIconfn(v) {
                return wp.element.createElement(
                    "ul",
                    { className: "premium-person__social-List" },
                    v.map(function (value) {
                        return wp.element.createElement(
                            "li",
                            null,
                            wp.element.createElement(
                                "a",
                                { className: "premium-person__socialIcon__link_content " + (defaultIconColor ? value.label : ""), href: "" + value.value, style: {
                                        padding: socialIconPadding + socialIconPaddingU,
                                        borderStyle: borderTypeIcon,
                                        borderWidth: borderWidthIcon + "px",
                                        borderRadius: borderRadiusIcon || 100 + "px",
                                        borderColor: borderColorIcon,
                                        marginLeft: iconMarginL + "px",
                                        marginRight: iconMarginR + "px",
                                        background: socialIconBackgroundColor
                                    } },
                                wp.element.createElement("i", { className: "premium-person__socialIcon " + (value.label == "youtube" ? "fa fa-youtube-play" : "fa fa-" + value.label) + " premium-person__" + socialIconHoverColor,
                                    style: {
                                        color: socialIconColor,
                                        fontSize: (socialIconSize || 50) + iconSizeUnit
                                    }
                                })
                            )
                        );
                    })
                );
            };
            var content = function content() {
                return wp.element.createElement(
                    "div",
                    { className: "" + (multiPersonChecked > 1 ? "premium-person__" + rowPerson : "")
                    },
                    " ",
                    multiPersonContent.map(function (value) {
                        return wp.element.createElement(
                            "div",
                            { key: value.id, className: "premium-person__inner premium-persson__min premium-person__" + effectPersonStyle + " premium-person__" + hoverEffectPerson },
                            wp.element.createElement(
                                "div",
                                { className: "premium-person__img__container" },
                                wp.element.createElement(
                                    "div",
                                    {
                                        className: "premium-person__img_wrap"
                                    },
                                    value.personImgUrl && wp.element.createElement("img", {
                                        className: "premium-person__img",
                                        src: "" + value.personImgUrl,
                                        alt: "Person",
                                        style: {

                                            borderWidth: imgBorder + "px",
                                            borderColor: imgBorderColor,
                                            width: imgSize + "px",
                                            height: imgSize + "px",
                                            filter: "" + (change ? "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )" : "")
                                        }
                                    }),
                                    !value.personImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_default_image__["a" /* default */], { className: className })
                                ),
                                effectPersonStyle === 'effect2' ? wp.element.createElement(
                                    "div",
                                    { className: "premium-person__socialEffect2" },
                                    value.socialIcon && socialIconfn(value.items)
                                ) : ""
                            ),
                            wp.element.createElement(
                                "div",
                                {
                                    className: "premium-person__info"
                                },
                                wp.element.createElement(
                                    "div",
                                    { className: "premium-person__name_wrap" },
                                    value.name && wp.element.createElement(
                                        "span",
                                        {
                                            className: "premium-person__name",
                                            style: {
                                                color: nameColor,
                                                fontSize: nameSize + "px",
                                                fontWeight: nameWeight,
                                                alignSelf: nameV,
                                                letterSpacing: nameLetter + "px",
                                                lineHeight: nameLine + "px",
                                                fontStyle: nameStyle,
                                                textTransform: nameUpper ? "uppercase" : "none",
                                                textShadow: nameshadowHorizontal + "px " + nameshadowVertical + "px " + nameshadowBlur + "px " + nameshadowColor
                                            }
                                        },
                                        value.name
                                    )
                                ),
                                wp.element.createElement(
                                    "div",
                                    { className: "premium-person__title_wrap" },
                                    value.title && wp.element.createElement(
                                        "span",
                                        {
                                            className: "premium-person__title",
                                            style: {
                                                color: titleColor,
                                                fontSize: titleSize + "px",
                                                fontWeight: titleWeight,
                                                alignSelf: titleV,
                                                letterSpacing: titleLetter + "px",
                                                lineHeight: titleLine + "px",
                                                fontStyle: titleStyle,
                                                textTransform: titleUpper ? "uppercase" : "none",
                                                textShadow: titleshadowHorizontal + "px " + titleshadowVertical + "px " + titleshadowBlur + "px " + titleshadowColor
                                            }
                                        },
                                        value.title
                                    )
                                ),
                                wp.element.createElement(
                                    "div",
                                    { className: "premium-person__desc_wrap" },
                                    value.desc && wp.element.createElement(
                                        "span",
                                        {
                                            className: "premium-person__desc",
                                            style: {
                                                color: descColor,
                                                fontSize: descSize + "px",
                                                fontWeight: descWeight,
                                                alignSelf: descV,
                                                letterSpacing: descLetter + "px",
                                                lineHeight: descLine + "px",
                                                fontStyle: descStyle,
                                                textTransform: descUpper ? "uppercase" : "none",
                                                textShadow: descshadowHorizontal + "px " + descshadowVertical + "px " + descshadowBlur + "px " + descshadowColor
                                            }
                                        },
                                        value.desc
                                    )
                                ),
                                effectPersonStyle == 'effect1' ? wp.element.createElement(
                                    "div",
                                    null,
                                    value.socialIcon && socialIconfn(value.items)
                                ) : ""
                            )
                        );
                    })
                );
            };
            var onSortEndSingle = function onSortEndSingle(_ref3) {
                var oldIndex = _ref3.oldIndex,
                    newIndex = _ref3.newIndex;

                var arrayItem = multiPersonContent.map(function (cont) {
                    return cont;
                });
                var array = Object(__WEBPACK_IMPORTED_MODULE_9_react_sortable_hoc__["c" /* arrayMove */])(arrayItem[0].items, oldIndex, newIndex);
                setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: arrayItem[0].personImgUrl, name: arrayItem[0].name, title: arrayItem[0].title, desc: arrayItem[0].desc, socialIcon: arrayItem[0].socialIcon, items: array }] });
            };
            var addSocialIcon = function addSocialIcon(newsocial, index) {
                if (index > 0) {
                    var array = iconsList.map(function (i) {
                        return i;
                    }).filter(function (f) {
                        return f.value == newsocial;
                    });
                    if (array[0] != undefined) {
                        newsocial = array[0];
                        setAttributes({ selectedSocialMediaIcon: newsocial.label });
                        var newicon = newsocial.label;
                        var arrayItem = multiPersonContent.map(function (cont) {
                            return cont;
                        }).filter(function (f) {
                            return f.id == index;
                        });

                        var repeat = arrayItem[0].items.filter(function (d) {
                            return d.label == newicon;
                        });
                        if (repeat[0] != undefined) {
                            arrayItem[0].items.filter(function (d) {
                                return d.label != newicon;
                            });
                            multiPersonContent[index - 1] = arrayItem[0];
                            setAttributes(multiPersonContent[index - 1] = arrayItem[0]);
                        } else {
                            arrayItem[0].items.push({ label: newicon, link: false, value: "", changeinput: "#" });
                            arrayItem[0].items.filter(function (d) {
                                return d.label != newicon;
                            });
                            multiPersonContent[index - 1] = arrayItem[0];
                            setAttributes(multiPersonContent[index - 1] = arrayItem[0]);
                        }
                    }
                } else {
                    var _array = iconsList.map(function (i) {
                        return i;
                    }).filter(function (f) {
                        return f.value == newsocial;
                    });
                    if (_array[0] != undefined) {
                        newsocial = _array[0];
                        setAttributes({ selectedSocialMediaIcon: newsocial.label });
                        var _newicon = newsocial.label;
                        var _arrayItem3 = multiPersonContent.map(function (cont) {
                            return cont;
                        });
                        var _repeat = _arrayItem3[0].items.filter(function (d) {
                            return d.label == _newicon;
                        });
                        if (_repeat[0] != undefined) {
                            _arrayItem3[0].items.filter(function (d) {
                                return d.label != _newicon;
                            });
                            setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _arrayItem3[0].personImgUrl, name: _arrayItem3[0].name, title: _arrayItem3[0].title, desc: _arrayItem3[0].desc, socialIcon: _arrayItem3[0].socialIcon, items: _arrayItem3[0].items }] });
                        } else {
                            _arrayItem3[0].items.push({ label: _newicon, link: false, value: "", changeinput: "#" });
                            _arrayItem3[0].items.filter(function (d) {
                                return d.label != _newicon;
                            });
                            setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _arrayItem3[0].personImgUrl, name: _arrayItem3[0].name, title: _arrayItem3[0].title, desc: _arrayItem3[0].desc, socialIcon: _arrayItem3[0].socialIcon, items: _arrayItem3[0].items }] });
                        }
                    }
                }
            };
            var addMultiPerson = function addMultiPerson(newP) {
                setAttributes({ multiPersonChecked: newP });
                if (newP < multiPersonChecked) {
                    for (var i = multiPersonChecked; i > newP; i--) {
                        multiPersonContent.splice(i - 1, 1);
                    }
                } else {
                    for (var _i = multiPersonChecked + 1; _i <= newP; _i++) {
                        multiPersonContent.push({
                            id: _i,
                            personImgUrl: "",
                            name: "John Doe",
                            title: "Senior Developer",
                            desc: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ullamcorper nulla non metus auctor fringilla",
                            socialIcon: false,
                            items: [{ label: 'facebook', link: false, value: "#", changeinput: "#" }, { label: 'twitter', link: false, value: "#", changeinput: "#" }, { label: 'instagram', link: false, value: "#", changeinput: "#" }, { label: 'youtube', link: false, value: "#", changeinput: "#" }]
                        });
                    }
                }
            };

            var onSortEndMulti = function onSortEndMulti(i, _ref4) {
                var oldIndex = _ref4.oldIndex,
                    newIndex = _ref4.newIndex;

                var arrayItem = multiPersonContent.map(function (cont) {
                    return cont;
                }).filter(function (f) {
                    return f.id == i;
                });
                var array = Object(__WEBPACK_IMPORTED_MODULE_9_react_sortable_hoc__["c" /* arrayMove */])(arrayItem[0].items, oldIndex, newIndex);
                arrayItem[0].items = array;
                multiPersonContent[i - 1] = arrayItem[0];
                setAttributes(multiPersonContent[i - 1] = arrayItem[0]);
            };
            var PersonImage = function PersonImage(media, i) {
                if (i > 0) {
                    var array = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == i;
                    });
                    array[0].personImgUrl = "undefined" === typeof media.sizes.thumbnail ? media.url : media.sizes.thumbnail.url;
                    multiPersonContent[i - 1] = array[0];
                    setAttributes(multiPersonContent[i - 1] = array[0]);
                    setAttributes({
                        personImgId: media.id
                    });
                } else {
                    var _array2 = multiPersonContent.map(function (content) {
                        return content;
                    });
                    _array2[0].personImgUrl = "undefined" === typeof media.sizes.thumbnail ? media.url : media.sizes.thumbnail.url;
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _array2[0].personImgUrl, name: _array2[0].name, title: _array2[0].title, desc: _array2[0].desc, socialIcon: _array2[0].socialIcon, items: _array2[0].items }] });
                    setAttributes({
                        personImgId: media.id
                    });
                }
            };
            var Name = function Name(value, i) {
                if (i > 0) {
                    var array = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == i;
                    });
                    array[0].name = value;
                    multiPersonContent[i - 1] = array[0];
                    setAttributes(multiPersonContent[i - 1] = array[0]);
                } else {
                    var _array3 = multiPersonContent.map(function (content) {
                        return content;
                    });
                    _array3[0].name = value;
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _array3[0].personImgUrl, name: _array3[0].name, title: _array3[0].title, desc: _array3[0].desc, socialIcon: _array3[0].socialIcon, items: _array3[0].items }] });
                }
            };
            var Title = function Title(value, i) {
                if (i > 0) {
                    var array = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == i;
                    });
                    array[0].title = value;
                    multiPersonContent[i - 1] = array[0];
                    setAttributes(multiPersonContent[i - 1] = array[0]);
                } else {
                    var _array4 = multiPersonContent.map(function (content) {
                        return content;
                    });
                    _array4[0].title = value;
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _array4[0].personImgUrl, name: _array4[0].name, title: _array4[0].title, desc: _array4[0].desc, socialIcon: _array4[0].socialIcon, items: _array4[0].items }] });
                }
            };
            var Desc = function Desc(value, i) {
                if (i > 0) {
                    var array = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == i;
                    });
                    array[0].desc = value;
                    multiPersonContent[i - 1] = array[0];
                    setAttributes(multiPersonContent[i - 1] = array[0]);
                } else {
                    var _array5 = multiPersonContent.map(function (content) {
                        return content;
                    });
                    _array5[0].desc = value;
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _array5[0].personImgUrl, name: _array5[0].name, title: _array5[0].title, desc: _array5[0].desc, socialIcon: _array5[0].socialIcon, items: _array5[0].items }] });
                }
            };
            var SocialIcon = function SocialIcon(value, i) {
                if (i > 0) {
                    var array = multiPersonContent.map(function (cont) {
                        return cont;
                    }).filter(function (f) {
                        return f.id == i;
                    });
                    array[0].socialIcon = value;
                    multiPersonContent[i - 1] = array[0];
                    setAttributes(multiPersonContent[i - 1] = array[0]);
                } else {
                    var _array6 = multiPersonContent.map(function (content) {
                        return content;
                    });
                    _array6[0].socialIcon = value;
                    setAttributes({ multiPersonContent: [{ id: 1, personImgUrl: _array6[0].personImgUrl, name: _array6[0].name, title: _array6[0].title, desc: _array6[0].desc, socialIcon: _array6[0].socialIcon, items: _array6[0].items }] });
                }
            };

            var MultiPersonSetting = function MultiPersonSetting() {
                return multiPersonContent.map(function (content) {
                    return wp.element.createElement(
                        PanelBody,
                        { key: content.id, title: __("Person #" + content.id + " Setting"),
                            initialOpen: false },
                        wp.element.createElement(
                            "p",
                            null,
                            __("Image")
                        ),
                        content.personImgUrl && wp.element.createElement("img", { src: content.personImgUrl, width: "100%", height: "auto" }),
                        !content.personImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_default_image__["a" /* default */], null),
                        wp.element.createElement(MediaUpload, {
                            allowedTypes: ["image"],
                            onSelect: function onSelect(media) {
                                return PersonImage(media, content.id);
                            },
                            type: "image",
                            value: personImgId,
                            render: function render(_ref5) {
                                var open = _ref5.open;
                                return wp.element.createElement(
                                    IconButton,
                                    {
                                        label: __("Change Image"),
                                        icon: "edit",
                                        onClick: open
                                    },
                                    __("Change Image")
                                );
                            }
                        }),
                        wp.element.createElement(TextControl, {
                            label: __("Name"),
                            value: content.name,
                            onChange: function onChange(value) {
                                return Name(value, content.id);
                            }
                        }),
                        wp.element.createElement(TextControl, {
                            label: __("Title"),
                            value: content.title,
                            onChange: function onChange(value) {
                                return Title(value, content.id);
                            }
                        }),
                        wp.element.createElement(TextareaControl, {
                            label: __("Description"),
                            value: content.desc,
                            onChange: function onChange(value) {
                                return Desc(value, content.id);
                            }
                        }),
                        wp.element.createElement(ToggleControl, {
                            label: __("Enable Social Icons"),
                            checked: content.socialIcon,
                            onChange: function onChange(value) {
                                return SocialIcon(value, content.id);
                            }
                        }),
                        content.socialIcon && wp.element.createElement(
                            "div",
                            null,
                            wp.element.createElement(
                                "label",
                                { className: "premium-person-paragraph" },
                                __("Social Media")
                            ),
                            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__fonticonpicker_react_fonticonpicker___default.a, {
                                icons: iconsList.map(function (i) {
                                    return i.value;
                                }),
                                onChange: function onChange(value) {
                                    return addSocialIcon(value, content.id);
                                },
                                isMulti: false,
                                appendTo: "body",
                                closeOnSelect: false,
                                iconsPerPage: "25",
                                noSelectedPlaceholder: __("Select Icon")
                            }),
                            wp.element.createElement(SortableList, { items: content.items, personIndex: content.id, onSortEnd: function onSortEnd(o, n) {
                                    return onSortEndMulti(content.id, o, n);
                                }, onRemove: function onRemove(value) {
                                    return _onRemove(value, content.id);
                                }, saveLink: function saveLink(value, i) {
                                    return _saveLink(value, i, content.id);
                                }, changeLinkValue: function changeLinkValue(value, i) {
                                    return _changeLinkValue(value, i, content.id);
                                }, addLink: function addLink(value) {
                                    return _addLink(value, content.id);
                                }, shouldCancelStart: shouldCancelStart, helperClass: "premium-person__sortableHelper" })
                        )
                    );
                });
            };

            return [isSelected && "block" != personSize && wp.element.createElement(
                BlockControls,
                { key: "controls" },
                wp.element.createElement(AlignmentToolbar, {
                    value: personAlign,
                    onChange: function onChange(newAlign) {
                        return setAttributes({ personAlign: newAlign });
                    }
                })
            ), isSelected && wp.element.createElement(
                InspectorControls,
                { key: "inspector" },
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("General Settings"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(RangeControl, {
                        label: __("Person Number"),
                        value: multiPersonChecked,
                        min: "1",
                        onChange: function onChange(value) {
                            return addMultiPerson(value);
                        }
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Enable this option if you need to add multiple persons")
                    ),
                    multiPersonChecked > 1 ? wp.element.createElement(SelectControl, {
                        label: __("Persons/Row"),
                        value: rowPerson,
                        onChange: function onChange(newColumn) {
                            return setAttributes({ rowPerson: newColumn });
                        },
                        options: ROWS
                    }) : "",
                    wp.element.createElement(SelectControl, {
                        label: __("Style"),
                        value: effectPersonStyle,
                        onChange: function onChange(newEffect) {
                            return setAttributes({ effectPersonStyle: newEffect });
                        },
                        options: EFFECTS
                    }),
                    wp.element.createElement(SelectControl, {
                        label: __("Image Hover Effect"),
                        options: HOVER,
                        value: hoverEffectPerson,
                        onChange: function onChange(newEffect) {
                            return setAttributes({ hoverEffectPerson: newEffect });
                        }
                    })
                ),
                multiPersonChecked > 1 ? wp.element.createElement(
                    Fragment,
                    null,
                    MultiPersonSetting()
                ) : wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Single Person Settings"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(
                        "p",
                        null,
                        __("Image")
                    ),
                    multiPersonContent[0].personImgUrl && wp.element.createElement("img", { src: multiPersonContent[0].personImgUrl, width: "100%", height: "auto" }),
                    !multiPersonContent[0].personImgUrl && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_default_image__["a" /* default */], null),
                    wp.element.createElement(MediaUpload, {
                        allowedTypes: ["image"],
                        onSelect: function onSelect(media) {
                            return PersonImage(media);
                        },
                        type: "image",
                        value: personImgId,
                        render: function render(_ref6) {
                            var open = _ref6.open;
                            return wp.element.createElement(
                                IconButton,
                                {
                                    label: __("Change Image"),
                                    icon: "edit",
                                    onClick: open
                                },
                                __("Change Image")
                            );
                        }
                    }),
                    wp.element.createElement(TextControl, {
                        label: __("Name"),
                        value: multiPersonContent[0].name,
                        onChange: function onChange(value) {
                            return Name(value);
                        }
                    }),
                    wp.element.createElement(TextControl, {
                        label: __("Title"),
                        value: multiPersonContent[0].title,
                        onChange: function onChange(value) {
                            return Title(value);
                        }
                    }),
                    wp.element.createElement(TextareaControl, {
                        label: __("Description"),
                        value: multiPersonContent[0].desc,
                        onChange: function onChange(value) {
                            return Desc(value);
                        }
                    }),
                    wp.element.createElement(ToggleControl, {
                        label: __("Enable Social Icons"),
                        checked: multiPersonContent[0].socialIcon,
                        onChange: function onChange(value) {
                            return SocialIcon(value);
                        }
                    }),
                    multiPersonContent[0].socialIcon && wp.element.createElement(
                        "div",
                        null,
                        wp.element.createElement(
                            "label",
                            { className: "premium-person-paragraph" },
                            __("Social Media")
                        ),
                        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__fonticonpicker_react_fonticonpicker___default.a, {
                            icons: iconsList.map(function (i) {
                                return i.value;
                            }),
                            onChange: function onChange(value) {
                                return addSocialIcon(value);
                            },
                            isMulti: false,
                            appendTo: "body",
                            closeOnSelect: false,
                            iconsPerPage: "25",
                            noSelectedPlaceholder: __("Select Icon")
                        }),
                        wp.element.createElement(SortableList, { items: multiPersonContent[0].items, onSortEnd: function onSortEnd(o, n) {
                                return onSortEndSingle(o, n);
                            }, onRemove: function onRemove(value) {
                                return _onRemove(value);
                            }, saveLink: function saveLink(value, i) {
                                return _saveLink(value, i);
                            }, changeLinkValue: function changeLinkValue(value, i) {
                                return _changeLinkValue(value, i);
                            }, addLink: function addLink(value) {
                                return _addLink(value);
                            }, shouldCancelStart: shouldCancelStart, helperClass: "premium-person__sortableHelper" })
                    )
                ),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Image Style"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_filters__["a" /* default */], {
                        blur: blur,
                        bright: bright,
                        contrast: contrast,
                        saturation: saturation,
                        hue: hue,
                        onChangeBlur: function onChangeBlur(newSize) {
                            return setAttributes({ blur: newSize, change: true });
                        },
                        onChangeBright: function onChangeBright(newSize) {
                            return setAttributes({ bright: newSize, change: true });
                        },
                        onChangeContrast: function onChangeContrast(newSize) {
                            return setAttributes({ contrast: newSize, change: true });
                        },
                        onChangeSat: function onChangeSat(newSize) {
                            return setAttributes({ saturation: newSize, change: true });
                        },
                        onChangeHue: function onChangeHue(newSize) {
                            return setAttributes({ hue: newSize, change: true });
                        }
                    })
                ),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Name"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_typo__["a" /* default */], (_wp$element$createEle = {
                        components: ["size", "weight", "line", "style", "upper", "spacing"],
                        size: nameSize,
                        weight: nameWeight,
                        style: nameStyle,
                        spacing: nameLetter,
                        upper: nameUpper,
                        line: nameLine,
                        onChangeSize: function onChangeSize(newSize) {
                            return setAttributes({ nameSize: newSize });
                        },
                        onChangeWeight: function onChangeWeight(newWeight) {
                            return setAttributes({ nameWeight: newWeight });
                        },
                        onChangeLine: function onChangeLine(newValue) {
                            return setAttributes({ nameLine: newValue });
                        }
                    }, _defineProperty(_wp$element$createEle, "onChangeSize", function onChangeSize(newSize) {
                        return setAttributes({ nameSize: newSize });
                    }), _defineProperty(_wp$element$createEle, "onChangeStyle", function onChangeStyle(newStyle) {
                        return setAttributes({ nameStyle: newStyle });
                    }), _defineProperty(_wp$element$createEle, "onChangeSpacing", function onChangeSpacing(newValue) {
                        return setAttributes({ nameLetter: newValue });
                    }), _defineProperty(_wp$element$createEle, "onChangeUpper", function onChangeUpper(check) {
                        return setAttributes({ nameUpper: check });
                    }), _wp$element$createEle)),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(
                            "strong",
                            null,
                            __("Colors")
                        ),
                        wp.element.createElement(Dropdown, {
                            className: "premium-control-toggle-person",
                            contentClassName: "premium-control-toggle-content",
                            position: "bottom right",
                            renderToggle: function renderToggle(_ref7) {
                                var isOpen = _ref7.isOpen,
                                    onToggle = _ref7.onToggle;
                                return wp.element.createElement(
                                    Button,
                                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                                );
                            },
                            renderContent: function renderContent() {
                                return wp.element.createElement(
                                    Fragment,
                                    null,
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Name Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: nameColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                nameColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    })
                                );
                            }
                        })
                    ),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
                        color: nameshadowColor,
                        blur: nameshadowBlur,
                        horizontal: nameshadowHorizontal,
                        vertical: nameshadowVertical,
                        onChangeColor: function onChangeColor(newColor) {
                            return setAttributes({ nameshadowColor: newColor.hex });
                        },
                        onChangeBlur: function onChangeBlur(newBlur) {
                            return setAttributes({ nameshadowBlur: newBlur });
                        },
                        onChangehHorizontal: function onChangehHorizontal(newValue) {
                            return setAttributes({ nameshadowHorizontal: newValue });
                        },
                        onChangeVertical: function onChangeVertical(newValue) {
                            return setAttributes({ nameshadowVertical: newValue });
                        }
                    })
                ),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Title"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_typo__["a" /* default */], (_wp$element$createEle2 = {
                        components: ["size", "weight", "line", "style", "upper", "spacing"],
                        size: titleSize,
                        weight: titleWeight,
                        style: titleStyle,
                        spacing: titleLetter,
                        upper: titleUpper,
                        line: titleLine,
                        onChangeSize: function onChangeSize(newSize) {
                            return setAttributes({ titleSize: newSize });
                        },
                        onChangeWeight: function onChangeWeight(newWeight) {
                            return setAttributes({ titleWeight: newWeight });
                        },
                        onChangeLine: function onChangeLine(newValue) {
                            return setAttributes({ titleLine: newValue });
                        }
                    }, _defineProperty(_wp$element$createEle2, "onChangeSize", function onChangeSize(newSize) {
                        return setAttributes({ titleSize: newSize });
                    }), _defineProperty(_wp$element$createEle2, "onChangeStyle", function onChangeStyle(newStyle) {
                        return setAttributes({ titleStyle: newStyle });
                    }), _defineProperty(_wp$element$createEle2, "onChangeSpacing", function onChangeSpacing(newValue) {
                        return setAttributes({ titleLetter: newValue });
                    }), _defineProperty(_wp$element$createEle2, "onChangeUpper", function onChangeUpper(check) {
                        return setAttributes({ titleUpper: check });
                    }), _wp$element$createEle2)),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(
                            "strong",
                            null,
                            __("Colors")
                        ),
                        wp.element.createElement(Dropdown, {
                            className: "premium-control-toggle-person",
                            contentClassName: "premium-control-toggle-content",
                            position: "bottom right",
                            renderToggle: function renderToggle(_ref8) {
                                var isOpen = _ref8.isOpen,
                                    onToggle = _ref8.onToggle;
                                return wp.element.createElement(
                                    Button,
                                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                                );
                            },
                            renderContent: function renderContent() {
                                return wp.element.createElement(
                                    Fragment,
                                    null,
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Title Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: titleColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                titleColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    })
                                );
                            }
                        })
                    ),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
                        color: titleshadowColor,
                        blur: titleshadowBlur,
                        horizontal: titleshadowHorizontal,
                        vertical: titleshadowVertical,
                        onChangeColor: function onChangeColor(newColor) {
                            return setAttributes({ titleshadowColor: newColor.hex });
                        },
                        onChangeBlur: function onChangeBlur(newBlur) {
                            return setAttributes({ titleshadowBlur: newBlur });
                        },
                        onChangehHorizontal: function onChangehHorizontal(newValue) {
                            return setAttributes({ titleshadowHorizontal: newValue });
                        },
                        onChangeVertical: function onChangeVertical(newValue) {
                            return setAttributes({ titleshadowVertical: newValue });
                        }
                    })
                ),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Description"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_typo__["a" /* default */], (_wp$element$createEle3 = {
                        components: ["size", "weight", "line", "style", "upper", "spacing"],
                        size: descSize,
                        weight: descWeight,
                        style: descStyle,
                        spacing: descLetter,
                        upper: descUpper,
                        line: descLine,
                        onChangeSize: function onChangeSize(newSize) {
                            return setAttributes({ descSize: newSize });
                        },
                        onChangeWeight: function onChangeWeight(newWeight) {
                            return setAttributes({ descWeight: newWeight });
                        },
                        onChangeLine: function onChangeLine(newValue) {
                            return setAttributes({ descLine: newValue });
                        }
                    }, _defineProperty(_wp$element$createEle3, "onChangeSize", function onChangeSize(newSize) {
                        return setAttributes({ descSize: newSize });
                    }), _defineProperty(_wp$element$createEle3, "onChangeStyle", function onChangeStyle(newStyle) {
                        return setAttributes({ descStyle: newStyle });
                    }), _defineProperty(_wp$element$createEle3, "onChangeSpacing", function onChangeSpacing(newValue) {
                        return setAttributes({ descLetter: newValue });
                    }), _defineProperty(_wp$element$createEle3, "onChangeUpper", function onChangeUpper(check) {
                        return setAttributes({ descUpper: check });
                    }), _wp$element$createEle3)),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(
                            "strong",
                            null,
                            __("Colors")
                        ),
                        wp.element.createElement(Dropdown, {
                            className: "premium-control-toggle-person",
                            contentClassName: "premium-control-toggle-content",
                            position: "bottom right",
                            renderToggle: function renderToggle(_ref9) {
                                var isOpen = _ref9.isOpen,
                                    onToggle = _ref9.onToggle;
                                return wp.element.createElement(
                                    Button,
                                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                                );
                            },
                            renderContent: function renderContent() {
                                return wp.element.createElement(
                                    Fragment,
                                    null,
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Desc Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: descColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                descColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    })
                                );
                            }
                        })
                    ),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_text_shadow__["a" /* default */], {
                        color: descshadowColor,
                        blur: descshadowBlur,
                        horizontal: descshadowHorizontal,
                        vertical: descshadowVertical,
                        onChangeColor: function onChangeColor(newColor) {
                            return setAttributes({ descshadowColor: newColor.hex });
                        },
                        onChangeBlur: function onChangeBlur(newBlur) {
                            return setAttributes({ descshadowBlur: newBlur });
                        },
                        onChangehHorizontal: function onChangehHorizontal(newValue) {
                            return setAttributes({ descshadowHorizontal: newValue });
                        },
                        onChangeVertical: function onChangeVertical(newValue) {
                            return setAttributes({ descshadowVertical: newValue });
                        }
                    })
                ),
                multiPersonChecked > 1 ? multiPersonContent.map(function (i) {
                    return i.socialIcon;
                }) && wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Social Icon"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(RangeControl, {
                        label: __("Size "),
                        value: socialIconSize,
                        onChange: function onChange(newValue) {
                            return setAttributes({ socialIconSize: newValue });
                        }
                    }),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(
                            "strong",
                            null,
                            __("Colors")
                        ),
                        wp.element.createElement(Dropdown, {
                            className: "premium-control-toggle-person",
                            contentClassName: "premium-control-toggle-content",
                            position: "bottom right",
                            renderToggle: function renderToggle(_ref10) {
                                var isOpen = _ref10.isOpen,
                                    onToggle = _ref10.onToggle;
                                return wp.element.createElement(
                                    Button,
                                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                                );
                            },
                            renderContent: function renderContent() {
                                return wp.element.createElement(
                                    Fragment,
                                    null,
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Social Icon Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: socialIconColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                socialIconColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    }),
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Social Icon Hover Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: socialIconHoverColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                socialIconHoverColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    })
                                );
                            }
                        })
                    ),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(
                            "strong",
                            null,
                            __("Background Color")
                        ),
                        wp.element.createElement(Dropdown, {
                            className: "premium-control-toggle-person",
                            contentClassName: "premium-control-toggle-content",
                            position: "bottom right",
                            renderToggle: function renderToggle(_ref11) {
                                var isOpen = _ref11.isOpen,
                                    onToggle = _ref11.onToggle;
                                return wp.element.createElement(
                                    Button,
                                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                                );
                            },
                            renderContent: function renderContent() {
                                return wp.element.createElement(
                                    Fragment,
                                    null,
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Social Icon Background Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: socialIconBackgroundColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                socialIconBackgroundColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    })
                                );
                            }
                        })
                    ),
                    wp.element.createElement(ToggleControl, {
                        label: __("Brands Default Colors"),
                        checked: defaultIconColor,
                        onChange: function onChange(newCheck) {
                            return setAttributes({ defaultIconColor: newCheck });
                        }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_border__["a" /* default */], {
                        borderType: borderTypeIcon,
                        borderWidth: borderWidthIcon,
                        borderColor: borderColorIcon,
                        borderRadius: borderRadiusIcon,
                        onChangeType: function onChangeType(newType) {
                            return setAttributes({ borderTypeIcon: newType });
                        },
                        onChangeWidth: function onChangeWidth(newWidth) {
                            return setAttributes({ borderWidthIcon: newWidth });
                        },
                        onChangeColor: function onChangeColor(colorValue) {
                            return setAttributes({ borderColorIcon: colorValue.hex });
                        },
                        onChangeRadius: function onChangeRadius(newrRadius) {
                            return setAttributes({ borderRadiusIcon: newrRadius });
                        }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_premium_size_units__["a" /* default */], {
                        onChangeSizeUnit: function onChangeSizeUnit(newValue) {
                            return setAttributes({ socialIconPaddingU: newValue });
                        }
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Padding"),
                        value: socialIconPadding,
                        onChange: function onChange(newValue) {
                            return setAttributes({ socialIconPadding: newValue });
                        }
                    }),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_margin__["a" /* default */], {
                            directions: ["left", "right"],
                            marginLeft: iconMarginL,
                            marginRight: iconMarginR,
                            onChangeMarLeft: function onChangeMarLeft(value) {
                                return setAttributes({
                                    iconMarginL: value || 1
                                });
                            },
                            onChangeMarRight: function onChangeMarRight(value) {
                                return setAttributes({
                                    iconMarginR: value || 1
                                });
                            }
                        })
                    )
                ) : multiPersonContent[0].socialIcon && wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Social Icon"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(RangeControl, {
                        label: __("Size "),
                        value: socialIconSize,
                        onChange: function onChange(newValue) {
                            return setAttributes({ socialIconSize: newValue });
                        }
                    }),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(
                            "strong",
                            null,
                            __("Colors")
                        ),
                        wp.element.createElement(Dropdown, {
                            className: "premium-control-toggle-person",
                            contentClassName: "premium-control-toggle-content",
                            position: "bottom right",
                            renderToggle: function renderToggle(_ref12) {
                                var isOpen = _ref12.isOpen,
                                    onToggle = _ref12.onToggle;
                                return wp.element.createElement(
                                    Button,
                                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                                );
                            },
                            renderContent: function renderContent() {
                                return wp.element.createElement(
                                    Fragment,
                                    null,
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Social Icon Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: socialIconColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                socialIconColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    }),
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Social Icon Hover Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: socialIconHoverColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                socialIconHoverColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    })
                                );
                            }
                        })
                    ),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(
                            "strong",
                            null,
                            __("Background Color")
                        ),
                        wp.element.createElement(Dropdown, {
                            className: "premium-control-toggle-person",
                            contentClassName: "premium-control-toggle-content",
                            position: "bottom right",
                            renderToggle: function renderToggle(_ref13) {
                                var isOpen = _ref13.isOpen,
                                    onToggle = _ref13.onToggle;
                                return wp.element.createElement(
                                    Button,
                                    { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                                    wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                                );
                            },
                            renderContent: function renderContent() {
                                return wp.element.createElement(
                                    Fragment,
                                    null,
                                    wp.element.createElement(
                                        "p",
                                        null,
                                        __("Social Icon Background Color")
                                    ),
                                    wp.element.createElement(ColorPalette, {
                                        value: socialIconBackgroundColor,
                                        onChange: function onChange(newValue) {
                                            return setAttributes({
                                                socialIconBackgroundColor: newValue
                                            });
                                        },
                                        allowReset: true
                                    })
                                );
                            }
                        })
                    ),
                    wp.element.createElement(ToggleControl, {
                        label: __("Brands Default Colors"),
                        checked: defaultIconColor,
                        onChange: function onChange(newCheck) {
                            return setAttributes({ defaultIconColor: newCheck });
                        }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_border__["a" /* default */], {
                        borderType: borderTypeIcon,
                        borderWidth: borderWidthIcon,
                        borderColor: borderColorIcon,
                        borderRadius: borderRadiusIcon,
                        onChangeType: function onChangeType(newType) {
                            return setAttributes({ borderTypeIcon: newType });
                        },
                        onChangeWidth: function onChangeWidth(newWidth) {
                            return setAttributes({ borderWidthIcon: newWidth });
                        },
                        onChangeColor: function onChangeColor(colorValue) {
                            return setAttributes({ borderColorIcon: colorValue.hex });
                        },
                        onChangeRadius: function onChangeRadius(newrRadius) {
                            return setAttributes({ borderRadiusIcon: newrRadius });
                        }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_premium_size_units__["a" /* default */], {
                        onChangeSizeUnit: function onChangeSizeUnit(newValue) {
                            return setAttributes({ socialIconPaddingU: newValue });
                        }
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Padding"),
                        value: socialIconPadding,
                        onChange: function onChange(newValue) {
                            return setAttributes({ socialIconPadding: newValue });
                        }
                    }),
                    wp.element.createElement(
                        "div",
                        { className: "premium-control-toggle" },
                        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_margin__["a" /* default */], {
                            directions: ["left", "right"],
                            marginLeft: iconMarginL,
                            marginRight: iconMarginR,
                            onChangeMarLeft: function onChangeMarLeft(value) {
                                return setAttributes({
                                    iconMarginL: value || 1
                                });
                            },
                            onChangeMarRight: function onChangeMarRight(value) {
                                return setAttributes({
                                    iconMarginR: value || 1
                                });
                            }
                        })
                    )
                )
            ), wp.element.createElement(
                "div",
                {
                    id: "premium-person-" + id,
                    className: mainClasses + " premium-person__" + effect + " premium-person__" + effectDir,
                    style: { textAlign: personAlign }
                },
                wp.element.createElement("style", {
                    dangerouslySetInnerHTML: {
                        __html: ["#premium-person-" + id + " .premium-person:hover {", "border-color: " + borderHoverColor + " !important;", "}", ".premium-person__social-List li:hover i{", "color: " + socialIconHoverColor + " !important;", "-webkit-transition: all .2s ease-in-out;", "transition: all .2s ease-in-out;", "}"].join("\n")
                    }
                }),
                content()
            )];
        }
    }]);

    return PremiumPerson;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumPerson);

/***/ }),
/* 246 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return sortableContainer; });
/* unused harmony export sortableContainer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return sortableElement; });
/* unused harmony export sortableElement */
/* unused harmony export SortableHandle */
/* unused harmony export sortableHandle */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return arrayMove; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__ = __webpack_require__(247);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_slicedToArray__ = __webpack_require__(248);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_esm_objectSpread__ = __webpack_require__(252);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_esm_classCallCheck__ = __webpack_require__(253);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__babel_runtime_helpers_esm_createClass__ = __webpack_require__(254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__babel_runtime_helpers_esm_possibleConstructorReturn__ = __webpack_require__(255);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_getPrototypeOf__ = __webpack_require__(257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_inherits__ = __webpack_require__(258);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__ = __webpack_require__(98);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_prop_types__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_react_dom__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_react_dom__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_invariant__ = __webpack_require__(260);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__babel_runtime_helpers_esm_toConsumableArray__ = __webpack_require__(261);
















var Manager = function () {
  function Manager() {
    Object(__WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_esm_classCallCheck__["a" /* default */])(this, Manager);

    Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(this, "refs", {});
  }

  Object(__WEBPACK_IMPORTED_MODULE_4__babel_runtime_helpers_esm_createClass__["a" /* default */])(Manager, [{
    key: "add",
    value: function add(collection, ref) {
      if (!this.refs[collection]) {
        this.refs[collection] = [];
      }

      this.refs[collection].push(ref);
    }
  }, {
    key: "remove",
    value: function remove(collection, ref) {
      var index = this.getIndex(collection, ref);

      if (index !== -1) {
        this.refs[collection].splice(index, 1);
      }
    }
  }, {
    key: "isActive",
    value: function isActive() {
      return this.active;
    }
  }, {
    key: "getActive",
    value: function getActive() {
      var _this = this;

      return this.refs[this.active.collection].find(function (_ref) {
        var node = _ref.node;
        return node.sortableInfo.index == _this.active.index;
      });
    }
  }, {
    key: "getIndex",
    value: function getIndex(collection, ref) {
      return this.refs[collection].indexOf(ref);
    }
  }, {
    key: "getOrderedRefs",
    value: function getOrderedRefs() {
      var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.active.collection;
      return this.refs[collection].sort(sortByIndex);
    }
  }]);

  return Manager;
}();

function sortByIndex(_ref2, _ref3) {
  var index1 = _ref2.node.sortableInfo.index;
  var index2 = _ref3.node.sortableInfo.index;
  return index1 - index2;
}

function arrayMove(array, from, to) {
  if (process.env.NODE_ENV !== 'production') {
    if (typeof console !== 'undefined') {
      console.warn("Deprecation warning: arrayMove will no longer be exported by 'react-sortable-hoc' in the next major release. Please install the `array-move` package locally instead. https://www.npmjs.com/package/array-move");
    }
  }

  array = array.slice();
  array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);
  return array;
}
function omit(obj, keysToOmit) {
  return Object.keys(obj).reduce(function (acc, key) {
    if (keysToOmit.indexOf(key) === -1) {
      acc[key] = obj[key];
    }

    return acc;
  }, {});
}
var events = {
  end: ['touchend', 'touchcancel', 'mouseup'],
  move: ['touchmove', 'mousemove'],
  start: ['touchstart', 'mousedown']
};
var vendorPrefix = function () {
  if (typeof window === 'undefined' || typeof document === 'undefined') {
    return '';
  }

  var styles = window.getComputedStyle(document.documentElement, '') || ['-moz-hidden-iframe'];
  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];

  switch (pre) {
    case 'ms':
      return 'ms';

    default:
      return pre && pre.length ? pre[0].toUpperCase() + pre.substr(1) : '';
  }
}();
function setInlineStyles(node, styles) {
  Object.keys(styles).forEach(function (key) {
    node.style[key] = styles[key];
  });
}
function setTranslate3d(node, translate) {
  node.style["".concat(vendorPrefix, "Transform")] = translate == null ? '' : "translate3d(".concat(translate.x, "px,").concat(translate.y, "px,0)");
}
function setTransitionDuration(node, duration) {
  node.style["".concat(vendorPrefix, "TransitionDuration")] = duration == null ? '' : "".concat(duration, "ms");
}
function closest(el, fn) {
  while (el) {
    if (fn(el)) {
      return el;
    }

    el = el.parentNode;
  }

  return null;
}
function limit(min, max, value) {
  return Math.max(min, Math.min(value, max));
}

function getPixelValue(stringValue) {
  if (stringValue.substr(-2) === 'px') {
    return parseFloat(stringValue);
  }

  return 0;
}

function getElementMargin(element) {
  var style = window.getComputedStyle(element);
  return {
    bottom: getPixelValue(style.marginBottom),
    left: getPixelValue(style.marginLeft),
    right: getPixelValue(style.marginRight),
    top: getPixelValue(style.marginTop)
  };
}
function provideDisplayName(prefix, Component$$1) {
  var componentName = Component$$1.displayName || Component$$1.name;
  return componentName ? "".concat(prefix, "(").concat(componentName, ")") : prefix;
}
function getScrollAdjustedBoundingClientRect(node, scrollDelta) {
  var boundingClientRect = node.getBoundingClientRect();
  return {
    top: boundingClientRect.top + scrollDelta.top,
    left: boundingClientRect.left + scrollDelta.left
  };
}
function getPosition(event) {
  if (event.touches && event.touches.length) {
    return {
      x: event.touches[0].pageX,
      y: event.touches[0].pageY
    };
  } else if (event.changedTouches && event.changedTouches.length) {
    return {
      x: event.changedTouches[0].pageX,
      y: event.changedTouches[0].pageY
    };
  } else {
    return {
      x: event.pageX,
      y: event.pageY
    };
  }
}
function isTouchEvent(event) {
  return event.touches && event.touches.length || event.changedTouches && event.changedTouches.length;
}
function getEdgeOffset(node, parent) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    left: 0,
    top: 0
  };

  if (!node) {
    return undefined;
  }

  var nodeOffset = {
    left: offset.left + node.offsetLeft,
    top: offset.top + node.offsetTop
  };

  if (node.parentNode === parent) {
    return nodeOffset;
  }

  return getEdgeOffset(node.parentNode, parent, nodeOffset);
}
function getTargetIndex(newIndex, prevIndex, oldIndex) {
  if (newIndex < oldIndex && newIndex > prevIndex) {
    return newIndex - 1;
  } else if (newIndex > oldIndex && newIndex < prevIndex) {
    return newIndex + 1;
  } else {
    return newIndex;
  }
}
function getLockPixelOffset(_ref) {
  var lockOffset = _ref.lockOffset,
      width = _ref.width,
      height = _ref.height;
  var offsetX = lockOffset;
  var offsetY = lockOffset;
  var unit = 'px';

  if (typeof lockOffset === 'string') {
    var match = /^[+-]?\d*(?:\.\d*)?(px|%)$/.exec(lockOffset);
    __WEBPACK_IMPORTED_MODULE_13_invariant___default()(match !== null, 'lockOffset value should be a number or a string of a ' + 'number followed by "px" or "%". Given %s', lockOffset);
    offsetX = parseFloat(lockOffset);
    offsetY = parseFloat(lockOffset);
    unit = match[1];
  }

  __WEBPACK_IMPORTED_MODULE_13_invariant___default()(isFinite(offsetX) && isFinite(offsetY), 'lockOffset value should be a finite. Given %s', lockOffset);

  if (unit === '%') {
    offsetX = offsetX * width / 100;
    offsetY = offsetY * height / 100;
  }

  return {
    x: offsetX,
    y: offsetY
  };
}
function getLockPixelOffsets(_ref2) {
  var height = _ref2.height,
      width = _ref2.width,
      lockOffset = _ref2.lockOffset;
  var offsets = Array.isArray(lockOffset) ? lockOffset : [lockOffset, lockOffset];
  __WEBPACK_IMPORTED_MODULE_13_invariant___default()(offsets.length === 2, 'lockOffset prop of SortableContainer should be a single ' + 'value or an array of exactly two values. Given %s', lockOffset);

  var _offsets = Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_slicedToArray__["a" /* default */])(offsets, 2),
      minLockOffset = _offsets[0],
      maxLockOffset = _offsets[1];

  return [getLockPixelOffset({
    height: height,
    lockOffset: minLockOffset,
    width: width
  }), getLockPixelOffset({
    height: height,
    lockOffset: maxLockOffset,
    width: width
  })];
}

function isScrollable(el) {
  var computedStyle = window.getComputedStyle(el);
  var overflowRegex = /(auto|scroll)/;
  var properties = ['overflow', 'overflowX', 'overflowY'];
  return properties.find(function (property) {
    return overflowRegex.test(computedStyle[property]);
  });
}

function getScrollingParent(el) {
  if (!(el instanceof HTMLElement)) {
    return null;
  } else if (isScrollable(el)) {
    return el;
  } else {
    return getScrollingParent(el.parentNode);
  }
}
function getContainerGridGap(element) {
  var style = window.getComputedStyle(element);

  if (style.display === 'grid') {
    return {
      x: getPixelValue(style.gridColumnGap),
      y: getPixelValue(style.gridRowGap)
    };
  }

  return {
    x: 0,
    y: 0
  };
}
var KEYCODE = {
  TAB: 9,
  ESC: 27,
  SPACE: 32,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40
};
var NodeType = {
  Anchor: 'A',
  Button: 'BUTTON',
  Canvas: 'CANVAS',
  Input: 'INPUT',
  Option: 'OPTION',
  Textarea: 'TEXTAREA',
  Select: 'SELECT'
};
function cloneNode(node) {
  var selector = 'input, textarea, select, canvas, [contenteditable]';
  var fields = node.querySelectorAll(selector);
  var clonedNode = node.cloneNode(true);

  var clonedFields = Object(__WEBPACK_IMPORTED_MODULE_14__babel_runtime_helpers_esm_toConsumableArray__["a" /* default */])(clonedNode.querySelectorAll(selector));

  clonedFields.forEach(function (field, i) {
    if (field.type !== 'file') {
      field.value = fields[i].value;
    }

    if (field.type === 'radio' && field.name) {
      field.name = "__sortableClone__".concat(field.name);
    }

    if (field.tagName === NodeType.Canvas && fields[i].width > 0 && fields[i].height > 0) {
      var destCtx = field.getContext('2d');
      destCtx.drawImage(fields[i], 0, 0);
    }
  });
  return clonedNode;
}

function sortableHandle(WrappedComponent) {
  var _class, _temp;

  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    withRef: false
  };
  return _temp = _class = function (_React$Component) {
    Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_inherits__["a" /* default */])(WithSortableHandle, _React$Component);

    function WithSortableHandle() {
      Object(__WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_esm_classCallCheck__["a" /* default */])(this, WithSortableHandle);

      return Object(__WEBPACK_IMPORTED_MODULE_5__babel_runtime_helpers_esm_possibleConstructorReturn__["a" /* default */])(this, Object(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_getPrototypeOf__["a" /* default */])(WithSortableHandle).apply(this, arguments));
    }

    Object(__WEBPACK_IMPORTED_MODULE_4__babel_runtime_helpers_esm_createClass__["a" /* default */])(WithSortableHandle, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var node = Object(__WEBPACK_IMPORTED_MODULE_12_react_dom__["findDOMNode"])(this);
        node.sortableHandle = true;
      }
    }, {
      key: "getWrappedInstance",
      value: function getWrappedInstance() {
        __WEBPACK_IMPORTED_MODULE_13_invariant___default()(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call');
        return this.refs.wrappedInstance;
      }
    }, {
      key: "render",
      value: function render() {
        var ref = config.withRef ? 'wrappedInstance' : null;
        return Object(__WEBPACK_IMPORTED_MODULE_10_react__["createElement"])(WrappedComponent, Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])({
          ref: ref
        }, this.props));
      }
    }]);

    return WithSortableHandle;
  }(__WEBPACK_IMPORTED_MODULE_10_react__["Component"]), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "displayName", provideDisplayName('sortableHandle', WrappedComponent)), _temp;
}
function isSortableHandle(node) {
  return node.sortableHandle != null;
}

var AutoScroller = function () {
  function AutoScroller(container, onScrollCallback) {
    Object(__WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_esm_classCallCheck__["a" /* default */])(this, AutoScroller);

    this.container = container;
    this.onScrollCallback = onScrollCallback;
  }

  Object(__WEBPACK_IMPORTED_MODULE_4__babel_runtime_helpers_esm_createClass__["a" /* default */])(AutoScroller, [{
    key: "clear",
    value: function clear() {
      if (this.interval == null) {
        return;
      }

      clearInterval(this.interval);
      this.interval = null;
    }
  }, {
    key: "update",
    value: function update(_ref) {
      var _this = this;

      var translate = _ref.translate,
          minTranslate = _ref.minTranslate,
          maxTranslate = _ref.maxTranslate,
          width = _ref.width,
          height = _ref.height;
      var direction = {
        x: 0,
        y: 0
      };
      var speed = {
        x: 1,
        y: 1
      };
      var acceleration = {
        x: 10,
        y: 10
      };
      var _this$container = this.container,
          scrollTop = _this$container.scrollTop,
          scrollLeft = _this$container.scrollLeft,
          scrollHeight = _this$container.scrollHeight,
          scrollWidth = _this$container.scrollWidth,
          clientHeight = _this$container.clientHeight,
          clientWidth = _this$container.clientWidth;
      var isTop = scrollTop === 0;
      var isBottom = scrollHeight - scrollTop - clientHeight === 0;
      var isLeft = scrollLeft === 0;
      var isRight = scrollWidth - scrollLeft - clientWidth === 0;

      if (translate.y >= maxTranslate.y - height / 2 && !isBottom) {
        direction.y = 1;
        speed.y = acceleration.y * Math.abs((maxTranslate.y - height / 2 - translate.y) / height);
      } else if (translate.x >= maxTranslate.x - width / 2 && !isRight) {
        direction.x = 1;
        speed.x = acceleration.x * Math.abs((maxTranslate.x - width / 2 - translate.x) / width);
      } else if (translate.y <= minTranslate.y + height / 2 && !isTop) {
        direction.y = -1;
        speed.y = acceleration.y * Math.abs((translate.y - height / 2 - minTranslate.y) / height);
      } else if (translate.x <= minTranslate.x + width / 2 && !isLeft) {
        direction.x = -1;
        speed.x = acceleration.x * Math.abs((translate.x - width / 2 - minTranslate.x) / width);
      }

      if (this.interval) {
        this.clear();
        this.isAutoScrolling = false;
      }

      if (direction.x !== 0 || direction.y !== 0) {
        this.interval = setInterval(function () {
          _this.isAutoScrolling = true;
          var offset = {
            left: speed.x * direction.x,
            top: speed.y * direction.y
          };
          _this.container.scrollTop += offset.top;
          _this.container.scrollLeft += offset.left;

          _this.onScrollCallback(offset);
        }, 5);
      }
    }
  }]);

  return AutoScroller;
}();

function defaultGetHelperDimensions(_ref) {
  var node = _ref.node;
  return {
    height: node.offsetHeight,
    width: node.offsetWidth
  };
}

function defaultShouldCancelStart(event) {
  var interactiveElements = [NodeType.Input, NodeType.Textarea, NodeType.Select, NodeType.Option, NodeType.Button];

  if (interactiveElements.indexOf(event.target.tagName) !== -1) {
    return true;
  }

  if (closest(event.target, function (el) {
    return el.contentEditable === 'true';
  })) {
    return true;
  }

  return false;
}

var propTypes = {
  axis: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.oneOf(['x', 'y', 'xy']),
  contentWindow: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.any,
  disableAutoscroll: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.bool,
  distance: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number,
  getContainer: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func,
  getHelperDimensions: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func,
  helperClass: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.string,
  helperContainer: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func, typeof HTMLElement === 'undefined' ? __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.any : __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.instanceOf(HTMLElement)]),
  hideSortableGhost: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.bool,
  keyboardSortingTransitionDuration: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number,
  lockAxis: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.string,
  lockOffset: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number, __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number, __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.string]))]),
  lockToContainerEdges: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.bool,
  onSortEnd: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func,
  onSortMove: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func,
  onSortOver: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func,
  onSortStart: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func,
  pressDelay: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number,
  pressThreshold: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number,
  keyCodes: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.shape({
    lift: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number),
    drop: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number),
    cancel: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number),
    up: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number),
    down: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number)
  }),
  shouldCancelStart: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func,
  transitionDuration: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number,
  updateBeforeSortStart: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.func,
  useDragHandle: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.bool,
  useWindowAsScrollContainer: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.bool
};
var defaultKeyCodes = {
  lift: [KEYCODE.SPACE],
  drop: [KEYCODE.SPACE],
  cancel: [KEYCODE.ESC],
  up: [KEYCODE.UP, KEYCODE.LEFT],
  down: [KEYCODE.DOWN, KEYCODE.RIGHT]
};
var defaultProps = {
  axis: 'y',
  disableAutoscroll: false,
  distance: 0,
  getHelperDimensions: defaultGetHelperDimensions,
  hideSortableGhost: true,
  lockOffset: '50%',
  lockToContainerEdges: false,
  pressDelay: 0,
  pressThreshold: 5,
  keyCodes: defaultKeyCodes,
  shouldCancelStart: defaultShouldCancelStart,
  transitionDuration: 300,
  useWindowAsScrollContainer: false
};
var omittedProps = Object.keys(propTypes);
function validateProps(props) {
  __WEBPACK_IMPORTED_MODULE_13_invariant___default()(!(props.distance && props.pressDelay), 'Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.');
}

function _finallyRethrows(body, finalizer) {
  try {
    var result = body();
  } catch (e) {
    return finalizer(true, e);
  }

  if (result && result.then) {
    return result.then(finalizer.bind(null, false), finalizer.bind(null, true));
  }

  return finalizer(false, value);
}
function sortableContainer(WrappedComponent) {
  var _class, _temp;

  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    withRef: false
  };
  return _temp = _class = function (_React$Component) {
    Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_inherits__["a" /* default */])(WithSortableContainer, _React$Component);

    function WithSortableContainer(props) {
      var _this;

      Object(__WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_esm_classCallCheck__["a" /* default */])(this, WithSortableContainer);

      _this = Object(__WEBPACK_IMPORTED_MODULE_5__babel_runtime_helpers_esm_possibleConstructorReturn__["a" /* default */])(this, Object(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_getPrototypeOf__["a" /* default */])(WithSortableContainer).call(this, props));

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "state", {});

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "handleStart", function (event) {
        var _this$props = _this.props,
            distance = _this$props.distance,
            shouldCancelStart = _this$props.shouldCancelStart;

        if (event.button === 2 || shouldCancelStart(event)) {
          return;
        }

        _this.touched = true;
        _this.position = getPosition(event);
        var node = closest(event.target, function (el) {
          return el.sortableInfo != null;
        });

        if (node && node.sortableInfo && _this.nodeIsChild(node) && !_this.state.sorting) {
          var useDragHandle = _this.props.useDragHandle;
          var _node$sortableInfo = node.sortableInfo,
              index = _node$sortableInfo.index,
              collection = _node$sortableInfo.collection,
              disabled = _node$sortableInfo.disabled;

          if (disabled) {
            return;
          }

          if (useDragHandle && !closest(event.target, isSortableHandle)) {
            return;
          }

          _this.manager.active = {
            collection: collection,
            index: index
          };

          if (!isTouchEvent(event) && event.target.tagName === NodeType.Anchor) {
            event.preventDefault();
          }

          if (!distance) {
            if (_this.props.pressDelay === 0) {
              _this.handlePress(event);
            } else {
              _this.pressTimer = setTimeout(function () {
                return _this.handlePress(event);
              }, _this.props.pressDelay);
            }
          }
        }
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "nodeIsChild", function (node) {
        return node.sortableInfo.manager === _this.manager;
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "handleMove", function (event) {
        var _this$props2 = _this.props,
            distance = _this$props2.distance,
            pressThreshold = _this$props2.pressThreshold;

        if (!_this.state.sorting && _this.touched && !_this._awaitingUpdateBeforeSortStart) {
          var position = getPosition(event);
          var delta = {
            x: _this.position.x - position.x,
            y: _this.position.y - position.y
          };
          var combinedDelta = Math.abs(delta.x) + Math.abs(delta.y);
          _this.delta = delta;

          if (!distance && (!pressThreshold || combinedDelta >= pressThreshold)) {
            clearTimeout(_this.cancelTimer);
            _this.cancelTimer = setTimeout(_this.cancel, 0);
          } else if (distance && combinedDelta >= distance && _this.manager.isActive()) {
            _this.handlePress(event);
          }
        }
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "handleEnd", function () {
        _this.touched = false;

        _this.cancel();
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "cancel", function () {
        var distance = _this.props.distance;
        var sorting = _this.state.sorting;

        if (!sorting) {
          if (!distance) {
            clearTimeout(_this.pressTimer);
          }

          _this.manager.active = null;
        }
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "handlePress", function (event) {
        try {
          var active = _this.manager.getActive();

          var _temp6 = function () {
            if (active) {
              var _temp7 = function _temp7() {
                var index = _node.sortableInfo.index;
                var margin = getElementMargin(_node);
                var gridGap = getContainerGridGap(_this.container);

                var containerBoundingRect = _this.scrollContainer.getBoundingClientRect();

                var dimensions = _getHelperDimensions({
                  index: index,
                  node: _node,
                  collection: _collection
                });

                _this.node = _node;
                _this.margin = margin;
                _this.gridGap = gridGap;
                _this.width = dimensions.width;
                _this.height = dimensions.height;
                _this.marginOffset = {
                  x: _this.margin.left + _this.margin.right + _this.gridGap.x,
                  y: Math.max(_this.margin.top, _this.margin.bottom, _this.gridGap.y)
                };
                _this.boundingClientRect = _node.getBoundingClientRect();
                _this.containerBoundingRect = containerBoundingRect;
                _this.index = index;
                _this.newIndex = index;
                _this.axis = {
                  x: _axis.indexOf('x') >= 0,
                  y: _axis.indexOf('y') >= 0
                };
                _this.offsetEdge = getEdgeOffset(_node, _this.container);

                if (_isKeySorting) {
                  _this.initialOffset = getPosition(Object(__WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_esm_objectSpread__["a" /* default */])({}, event, {
                    pageX: _this.boundingClientRect.left,
                    pageY: _this.boundingClientRect.top
                  }));
                } else {
                  _this.initialOffset = getPosition(event);
                }

                _this.initialScroll = {
                  left: _this.scrollContainer.scrollLeft,
                  top: _this.scrollContainer.scrollTop
                };
                _this.initialWindowScroll = {
                  left: window.pageXOffset,
                  top: window.pageYOffset
                };
                _this.helper = _this.helperContainer.appendChild(cloneNode(_node));
                setInlineStyles(_this.helper, {
                  boxSizing: 'border-box',
                  height: "".concat(_this.height, "px"),
                  left: "".concat(_this.boundingClientRect.left - margin.left, "px"),
                  pointerEvents: 'none',
                  position: 'fixed',
                  top: "".concat(_this.boundingClientRect.top - margin.top, "px"),
                  width: "".concat(_this.width, "px")
                });

                if (_isKeySorting) {
                  _this.helper.focus();
                }

                if (_hideSortableGhost) {
                  _this.sortableGhost = _node;
                  setInlineStyles(_node, {
                    opacity: 0,
                    visibility: 'hidden'
                  });
                }

                _this.minTranslate = {};
                _this.maxTranslate = {};

                if (_isKeySorting) {
                  var _ref = _useWindowAsScrollContainer ? {
                    top: 0,
                    left: 0,
                    width: _this.contentWindow.innerWidth,
                    height: _this.contentWindow.innerHeight
                  } : _this.containerBoundingRect,
                      containerTop = _ref.top,
                      containerLeft = _ref.left,
                      containerWidth = _ref.width,
                      containerHeight = _ref.height;

                  var containerBottom = containerTop + containerHeight;
                  var containerRight = containerLeft + containerWidth;

                  if (_this.axis.x) {
                    _this.minTranslate.x = containerLeft - _this.boundingClientRect.left;
                    _this.maxTranslate.x = containerRight - (_this.boundingClientRect.left + _this.width);
                  }

                  if (_this.axis.y) {
                    _this.minTranslate.y = containerTop - _this.boundingClientRect.top;
                    _this.maxTranslate.y = containerBottom - (_this.boundingClientRect.top + _this.height);
                  }
                } else {
                  if (_this.axis.x) {
                    _this.minTranslate.x = (_useWindowAsScrollContainer ? 0 : containerBoundingRect.left) - _this.boundingClientRect.left - _this.width / 2;
                    _this.maxTranslate.x = (_useWindowAsScrollContainer ? _this.contentWindow.innerWidth : containerBoundingRect.left + containerBoundingRect.width) - _this.boundingClientRect.left - _this.width / 2;
                  }

                  if (_this.axis.y) {
                    _this.minTranslate.y = (_useWindowAsScrollContainer ? 0 : containerBoundingRect.top) - _this.boundingClientRect.top - _this.height / 2;
                    _this.maxTranslate.y = (_useWindowAsScrollContainer ? _this.contentWindow.innerHeight : containerBoundingRect.top + containerBoundingRect.height) - _this.boundingClientRect.top - _this.height / 2;
                  }
                }

                if (_helperClass) {
                  _helperClass.split(' ').forEach(function (className) {
                    return _this.helper.classList.add(className);
                  });
                }

                _this.listenerNode = event.touches ? _node : _this.contentWindow;

                if (_isKeySorting) {
                  _this.listenerNode.addEventListener('wheel', _this.handleKeyEnd, true);

                  _this.listenerNode.addEventListener('mousedown', _this.handleKeyEnd, true);

                  _this.listenerNode.addEventListener('keydown', _this.handleKeyDown);
                } else {
                  events.move.forEach(function (eventName) {
                    return _this.listenerNode.addEventListener(eventName, _this.handleSortMove, false);
                  });
                  events.end.forEach(function (eventName) {
                    return _this.listenerNode.addEventListener(eventName, _this.handleSortEnd, false);
                  });
                }

                _this.setState({
                  sorting: true,
                  sortingIndex: index
                });

                if (_onSortStart) {
                  _onSortStart({
                    node: _node,
                    index: index,
                    collection: _collection,
                    isKeySorting: _isKeySorting,
                    nodes: _this.manager.getOrderedRefs(),
                    helper: _this.helper
                  }, event);
                }

                if (_isKeySorting) {
                  _this.keyMove(0);
                }
              };

              var _this$props3 = _this.props,
                  _axis = _this$props3.axis,
                  _getHelperDimensions = _this$props3.getHelperDimensions,
                  _helperClass = _this$props3.helperClass,
                  _hideSortableGhost = _this$props3.hideSortableGhost,
                  updateBeforeSortStart = _this$props3.updateBeforeSortStart,
                  _onSortStart = _this$props3.onSortStart,
                  _useWindowAsScrollContainer = _this$props3.useWindowAsScrollContainer;
              var _node = active.node,
                  _collection = active.collection;
              var _isKeySorting = _this.manager.isKeySorting;

              var _temp8 = function () {
                if (typeof updateBeforeSortStart === 'function') {
                  _this._awaitingUpdateBeforeSortStart = true;

                  var _temp9 = _finallyRethrows(function () {
                    var index = _node.sortableInfo.index;
                    return Promise.resolve(updateBeforeSortStart({
                      collection: _collection,
                      index: index,
                      node: _node,
                      isKeySorting: _isKeySorting
                    }, event)).then(function () {});
                  }, function (_wasThrown, _result) {
                    _this._awaitingUpdateBeforeSortStart = false;
                    if (_wasThrown) throw _result;
                    return _result;
                  });

                  if (_temp9 && _temp9.then) return _temp9.then(function () {});
                }
              }();

              return _temp8 && _temp8.then ? _temp8.then(_temp7) : _temp7(_temp8);
            }
          }();

          return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(function () {}) : void 0);
        } catch (e) {
          return Promise.reject(e);
        }
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "handleSortMove", function (event) {
        var onSortMove = _this.props.onSortMove;

        if (typeof event.preventDefault === 'function') {
          event.preventDefault();
        }

        _this.updateHelperPosition(event);

        _this.animateNodes();

        _this.autoscroll();

        if (onSortMove) {
          onSortMove(event);
        }
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "handleSortEnd", function (event) {
        var _this$props4 = _this.props,
            hideSortableGhost = _this$props4.hideSortableGhost,
            onSortEnd = _this$props4.onSortEnd;
        var _this$manager = _this.manager,
            collection = _this$manager.active.collection,
            isKeySorting = _this$manager.isKeySorting;

        var nodes = _this.manager.getOrderedRefs();

        if (_this.listenerNode) {
          if (isKeySorting) {
            _this.listenerNode.removeEventListener('wheel', _this.handleKeyEnd, true);

            _this.listenerNode.removeEventListener('mousedown', _this.handleKeyEnd, true);

            _this.listenerNode.removeEventListener('keydown', _this.handleKeyDown);
          } else {
            events.move.forEach(function (eventName) {
              return _this.listenerNode.removeEventListener(eventName, _this.handleSortMove);
            });
            events.end.forEach(function (eventName) {
              return _this.listenerNode.removeEventListener(eventName, _this.handleSortEnd);
            });
          }
        }

        _this.helper.parentNode.removeChild(_this.helper);

        if (hideSortableGhost && _this.sortableGhost) {
          setInlineStyles(_this.sortableGhost, {
            opacity: '',
            visibility: ''
          });
        }

        for (var i = 0, len = nodes.length; i < len; i++) {
          var _node2 = nodes[i];
          var el = _node2.node;
          _node2.edgeOffset = null;
          _node2.boundingClientRect = null;
          setTranslate3d(el, null);
          setTransitionDuration(el, null);
          _node2.translate = null;
        }

        _this.autoScroller.clear();

        _this.manager.active = null;
        _this.manager.isKeySorting = false;

        _this.setState({
          sorting: false,
          sortingIndex: null
        });

        if (typeof onSortEnd === 'function') {
          onSortEnd({
            collection: collection,
            newIndex: _this.newIndex,
            oldIndex: _this.index,
            isKeySorting: isKeySorting,
            nodes: nodes
          }, event);
        }

        _this.touched = false;
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "autoscroll", function () {
        var disableAutoscroll = _this.props.disableAutoscroll;
        var isKeySorting = _this.manager.isKeySorting;

        if (disableAutoscroll) {
          _this.autoScroller.clear();

          return;
        }

        if (isKeySorting) {
          var translate = Object(__WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_esm_objectSpread__["a" /* default */])({}, _this.translate);

          var scrollX = 0;
          var scrollY = 0;

          if (_this.axis.x) {
            translate.x = Math.min(_this.maxTranslate.x, Math.max(_this.minTranslate.x, _this.translate.x));
            scrollX = _this.translate.x - translate.x;
          }

          if (_this.axis.y) {
            translate.y = Math.min(_this.maxTranslate.y, Math.max(_this.minTranslate.y, _this.translate.y));
            scrollY = _this.translate.y - translate.y;
          }

          _this.translate = translate;
          setTranslate3d(_this.helper, _this.translate);
          _this.scrollContainer.scrollLeft += scrollX;
          _this.scrollContainer.scrollTop += scrollY;
          return;
        }

        _this.autoScroller.update({
          height: _this.height,
          maxTranslate: _this.maxTranslate,
          minTranslate: _this.minTranslate,
          translate: _this.translate,
          width: _this.width
        });
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "onAutoScroll", function (offset) {
        _this.translate.x += offset.left;
        _this.translate.y += offset.top;

        _this.animateNodes();
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "handleKeyDown", function (event) {
        var keyCode = event.keyCode;
        var _this$props5 = _this.props,
            shouldCancelStart = _this$props5.shouldCancelStart,
            _this$props5$keyCodes = _this$props5.keyCodes,
            customKeyCodes = _this$props5$keyCodes === void 0 ? {} : _this$props5$keyCodes;

        var keyCodes = Object(__WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_esm_objectSpread__["a" /* default */])({}, defaultKeyCodes, customKeyCodes);

        if (_this.manager.active && !_this.manager.isKeySorting || !_this.manager.active && (!keyCodes.lift.includes(keyCode) || shouldCancelStart(event) || !_this.isValidSortingTarget(event))) {
          return;
        }

        event.stopPropagation();
        event.preventDefault();

        if (keyCodes.lift.includes(keyCode) && !_this.manager.active) {
          _this.keyLift(event);
        } else if (keyCodes.drop.includes(keyCode) && _this.manager.active) {
          _this.keyDrop(event);
        } else if (keyCodes.cancel.includes(keyCode)) {
          _this.newIndex = _this.manager.active.index;

          _this.keyDrop(event);
        } else if (keyCodes.up.includes(keyCode)) {
          _this.keyMove(-1);
        } else if (keyCodes.down.includes(keyCode)) {
          _this.keyMove(1);
        }
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "keyLift", function (event) {
        var target = event.target;
        var node = closest(target, function (el) {
          return el.sortableInfo != null;
        });
        var _node$sortableInfo2 = node.sortableInfo,
            index = _node$sortableInfo2.index,
            collection = _node$sortableInfo2.collection;
        _this.initialFocusedNode = target;
        _this.manager.isKeySorting = true;
        _this.manager.active = {
          index: index,
          collection: collection
        };

        _this.handlePress(event);
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "keyMove", function (shift) {
        var nodes = _this.manager.getOrderedRefs();

        var lastIndex = nodes[nodes.length - 1].node.sortableInfo.index;
        var newIndex = _this.newIndex + shift;
        var prevIndex = _this.newIndex;

        if (newIndex < 0 || newIndex > lastIndex) {
          return;
        }

        _this.prevIndex = prevIndex;
        _this.newIndex = newIndex;
        var targetIndex = getTargetIndex(_this.newIndex, _this.prevIndex, _this.index);
        var target = nodes.find(function (_ref2) {
          var node = _ref2.node;
          return node.sortableInfo.index === targetIndex;
        });
        var targetNode = target.node;
        var scrollDelta = _this.containerScrollDelta;
        var targetBoundingClientRect = target.boundingClientRect || getScrollAdjustedBoundingClientRect(targetNode, scrollDelta);
        var targetTranslate = target.translate || {
          x: 0,
          y: 0
        };
        var targetPosition = {
          top: targetBoundingClientRect.top + targetTranslate.y - scrollDelta.top,
          left: targetBoundingClientRect.left + targetTranslate.x - scrollDelta.left
        };
        var shouldAdjustForSize = prevIndex < newIndex;
        var sizeAdjustment = {
          x: shouldAdjustForSize && _this.axis.x ? targetNode.offsetWidth - _this.width : 0,
          y: shouldAdjustForSize && _this.axis.y ? targetNode.offsetHeight - _this.height : 0
        };

        _this.handleSortMove({
          pageX: targetPosition.left + sizeAdjustment.x,
          pageY: targetPosition.top + sizeAdjustment.y,
          ignoreTransition: shift === 0
        });
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "keyDrop", function (event) {
        _this.handleSortEnd(event);

        if (_this.initialFocusedNode) {
          _this.initialFocusedNode.focus();
        }
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "handleKeyEnd", function (event) {
        if (_this.manager.active) {
          _this.keyDrop(event);
        }
      });

      Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_8__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)), "isValidSortingTarget", function (event) {
        var useDragHandle = _this.props.useDragHandle;
        var target = event.target;
        var node = closest(target, function (el) {
          return el.sortableInfo != null;
        });
        return node && node.sortableInfo && !node.sortableInfo.disabled && (useDragHandle ? isSortableHandle(target) : target.sortableInfo);
      });

      validateProps(props);
      _this.manager = new Manager();
      _this.events = {
        end: _this.handleEnd,
        move: _this.handleMove,
        start: _this.handleStart
      };
      return _this;
    }

    Object(__WEBPACK_IMPORTED_MODULE_4__babel_runtime_helpers_esm_createClass__["a" /* default */])(WithSortableContainer, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          manager: this.manager
        };
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var useWindowAsScrollContainer = this.props.useWindowAsScrollContainer;
        var container = this.getContainer();
        Promise.resolve(container).then(function (containerNode) {
          _this2.container = containerNode;
          _this2.document = _this2.container.ownerDocument || document;
          var contentWindow = _this2.props.contentWindow || _this2.document.defaultView || window;
          _this2.contentWindow = typeof contentWindow === 'function' ? contentWindow() : contentWindow;
          _this2.scrollContainer = useWindowAsScrollContainer ? _this2.document.scrollingElement || _this2.document.documentElement : getScrollingParent(_this2.container) || _this2.container;
          _this2.autoScroller = new AutoScroller(_this2.scrollContainer, _this2.onAutoScroll);
          Object.keys(_this2.events).forEach(function (key) {
            return events[key].forEach(function (eventName) {
              return _this2.container.addEventListener(eventName, _this2.events[key], false);
            });
          });

          _this2.container.addEventListener('keydown', _this2.handleKeyDown);
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        var _this3 = this;

        if (this.helper && this.helper.parentNode) {
          this.helper.parentNode.removeChild(this.helper);
        }

        if (!this.container) {
          return;
        }

        Object.keys(this.events).forEach(function (key) {
          return events[key].forEach(function (eventName) {
            return _this3.container.removeEventListener(eventName, _this3.events[key]);
          });
        });
        this.container.removeEventListener('keydown', this.handleKeyDown);
      }
    }, {
      key: "updateHelperPosition",
      value: function updateHelperPosition(event) {
        var _this$props6 = this.props,
            lockAxis = _this$props6.lockAxis,
            lockOffset = _this$props6.lockOffset,
            lockToContainerEdges = _this$props6.lockToContainerEdges,
            transitionDuration = _this$props6.transitionDuration,
            _this$props6$keyboard = _this$props6.keyboardSortingTransitionDuration,
            keyboardSortingTransitionDuration = _this$props6$keyboard === void 0 ? transitionDuration : _this$props6$keyboard;
        var isKeySorting = this.manager.isKeySorting;
        var ignoreTransition = event.ignoreTransition;
        var offset = getPosition(event);
        var translate = {
          x: offset.x - this.initialOffset.x,
          y: offset.y - this.initialOffset.y
        };
        translate.y -= window.pageYOffset - this.initialWindowScroll.top;
        translate.x -= window.pageXOffset - this.initialWindowScroll.left;
        this.translate = translate;

        if (lockToContainerEdges) {
          var _getLockPixelOffsets = getLockPixelOffsets({
            height: this.height,
            lockOffset: lockOffset,
            width: this.width
          }),
              _getLockPixelOffsets2 = Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_slicedToArray__["a" /* default */])(_getLockPixelOffsets, 2),
              minLockOffset = _getLockPixelOffsets2[0],
              maxLockOffset = _getLockPixelOffsets2[1];

          var minOffset = {
            x: this.width / 2 - minLockOffset.x,
            y: this.height / 2 - minLockOffset.y
          };
          var maxOffset = {
            x: this.width / 2 - maxLockOffset.x,
            y: this.height / 2 - maxLockOffset.y
          };
          translate.x = limit(this.minTranslate.x + minOffset.x, this.maxTranslate.x - maxOffset.x, translate.x);
          translate.y = limit(this.minTranslate.y + minOffset.y, this.maxTranslate.y - maxOffset.y, translate.y);
        }

        if (lockAxis === 'x') {
          translate.y = 0;
        } else if (lockAxis === 'y') {
          translate.x = 0;
        }

        if (isKeySorting && keyboardSortingTransitionDuration && !ignoreTransition) {
          setTransitionDuration(this.helper, keyboardSortingTransitionDuration);
        }

        setTranslate3d(this.helper, translate);
      }
    }, {
      key: "animateNodes",
      value: function animateNodes() {
        var _this$props7 = this.props,
            transitionDuration = _this$props7.transitionDuration,
            hideSortableGhost = _this$props7.hideSortableGhost,
            onSortOver = _this$props7.onSortOver;
        var containerScrollDelta = this.containerScrollDelta,
            windowScrollDelta = this.windowScrollDelta;
        var nodes = this.manager.getOrderedRefs();
        var sortingOffset = {
          left: this.offsetEdge.left + this.translate.x + containerScrollDelta.left,
          top: this.offsetEdge.top + this.translate.y + containerScrollDelta.top
        };
        var isKeySorting = this.manager.isKeySorting;
        var prevIndex = this.newIndex;
        this.newIndex = null;

        for (var i = 0, len = nodes.length; i < len; i++) {
          var _node3 = nodes[i].node;
          var index = _node3.sortableInfo.index;
          var width = _node3.offsetWidth;
          var height = _node3.offsetHeight;
          var offset = {
            height: this.height > height ? height / 2 : this.height / 2,
            width: this.width > width ? width / 2 : this.width / 2
          };
          var mustShiftBackward = isKeySorting && index > this.index && index <= prevIndex;
          var mustShiftForward = isKeySorting && index < this.index && index >= prevIndex;
          var translate = {
            x: 0,
            y: 0
          };
          var edgeOffset = nodes[i].edgeOffset;

          if (!edgeOffset) {
            edgeOffset = getEdgeOffset(_node3, this.container);
            nodes[i].edgeOffset = edgeOffset;

            if (isKeySorting) {
              nodes[i].boundingClientRect = getScrollAdjustedBoundingClientRect(_node3, containerScrollDelta);
            }
          }

          var nextNode = i < nodes.length - 1 && nodes[i + 1];
          var prevNode = i > 0 && nodes[i - 1];

          if (nextNode && !nextNode.edgeOffset) {
            nextNode.edgeOffset = getEdgeOffset(nextNode.node, this.container);

            if (isKeySorting) {
              nextNode.boundingClientRect = getScrollAdjustedBoundingClientRect(nextNode.node, containerScrollDelta);
            }
          }

          if (index === this.index) {
            if (hideSortableGhost) {
              this.sortableGhost = _node3;
              setInlineStyles(_node3, {
                opacity: 0,
                visibility: 'hidden'
              });
            }

            continue;
          }

          if (transitionDuration) {
            setTransitionDuration(_node3, transitionDuration);
          }

          if (this.axis.x) {
            if (this.axis.y) {
              if (mustShiftForward || index < this.index && (sortingOffset.left + windowScrollDelta.left - offset.width <= edgeOffset.left && sortingOffset.top + windowScrollDelta.top <= edgeOffset.top + offset.height || sortingOffset.top + windowScrollDelta.top + offset.height <= edgeOffset.top)) {
                translate.x = this.width + this.marginOffset.x;

                if (edgeOffset.left + translate.x > this.containerBoundingRect.width - offset.width) {
                  if (nextNode) {
                    translate.x = nextNode.edgeOffset.left - edgeOffset.left;
                    translate.y = nextNode.edgeOffset.top - edgeOffset.top;
                  }
                }

                if (this.newIndex === null) {
                  this.newIndex = index;
                }
              } else if (mustShiftBackward || index > this.index && (sortingOffset.left + windowScrollDelta.left + offset.width >= edgeOffset.left && sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top || sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top + height)) {
                translate.x = -(this.width + this.marginOffset.x);

                if (edgeOffset.left + translate.x < this.containerBoundingRect.left + offset.width) {
                  if (prevNode) {
                    translate.x = prevNode.edgeOffset.left - edgeOffset.left;
                    translate.y = prevNode.edgeOffset.top - edgeOffset.top;
                  }
                }

                this.newIndex = index;
              }
            } else {
              if (mustShiftBackward || index > this.index && sortingOffset.left + windowScrollDelta.left + offset.width >= edgeOffset.left) {
                translate.x = -(this.width + this.marginOffset.x);
                this.newIndex = index;
              } else if (mustShiftForward || index < this.index && sortingOffset.left + windowScrollDelta.left <= edgeOffset.left + offset.width) {
                translate.x = this.width + this.marginOffset.x;

                if (this.newIndex == null) {
                  this.newIndex = index;
                }
              }
            }
          } else if (this.axis.y) {
            if (mustShiftBackward || index > this.index && sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top) {
              translate.y = -(this.height + this.marginOffset.y);
              this.newIndex = index;
            } else if (mustShiftForward || index < this.index && sortingOffset.top + windowScrollDelta.top <= edgeOffset.top + offset.height) {
              translate.y = this.height + this.marginOffset.y;

              if (this.newIndex == null) {
                this.newIndex = index;
              }
            }
          }

          setTranslate3d(_node3, translate);
          nodes[i].translate = translate;
        }

        if (this.newIndex == null) {
          this.newIndex = this.index;
        }

        if (isKeySorting) {
          this.newIndex = prevIndex;
        }

        var oldIndex = isKeySorting ? this.prevIndex : prevIndex;

        if (onSortOver && this.newIndex !== oldIndex) {
          onSortOver({
            collection: this.manager.active.collection,
            index: this.index,
            newIndex: this.newIndex,
            oldIndex: oldIndex,
            isKeySorting: isKeySorting,
            nodes: nodes,
            helper: this.helper
          });
        }
      }
    }, {
      key: "getWrappedInstance",
      value: function getWrappedInstance() {
        __WEBPACK_IMPORTED_MODULE_13_invariant___default()(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call');
        return this.refs.wrappedInstance;
      }
    }, {
      key: "getContainer",
      value: function getContainer() {
        var getContainer = this.props.getContainer;

        if (typeof getContainer !== 'function') {
          return Object(__WEBPACK_IMPORTED_MODULE_12_react_dom__["findDOMNode"])(this);
        }

        return getContainer(config.withRef ? this.getWrappedInstance() : undefined);
      }
    }, {
      key: "render",
      value: function render() {
        var ref = config.withRef ? 'wrappedInstance' : null;
        return Object(__WEBPACK_IMPORTED_MODULE_10_react__["createElement"])(WrappedComponent, Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])({
          ref: ref
        }, omit(this.props, omittedProps)));
      }
    }, {
      key: "helperContainer",
      get: function get() {
        var helperContainer = this.props.helperContainer;

        if (typeof helperContainer === 'function') {
          return helperContainer();
        }

        return this.props.helperContainer || this.document.body;
      }
    }, {
      key: "containerScrollDelta",
      get: function get() {
        var useWindowAsScrollContainer = this.props.useWindowAsScrollContainer;

        if (useWindowAsScrollContainer) {
          return {
            left: 0,
            top: 0
          };
        }

        return {
          left: this.scrollContainer.scrollLeft - this.initialScroll.left,
          top: this.scrollContainer.scrollTop - this.initialScroll.top
        };
      }
    }, {
      key: "windowScrollDelta",
      get: function get() {
        return {
          left: this.contentWindow.pageXOffset - this.initialWindowScroll.left,
          top: this.contentWindow.pageYOffset - this.initialWindowScroll.top
        };
      }
    }]);

    return WithSortableContainer;
  }(__WEBPACK_IMPORTED_MODULE_10_react__["Component"]), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "displayName", provideDisplayName('sortableList', WrappedComponent)), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "defaultProps", defaultProps), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "propTypes", propTypes), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "childContextTypes", {
    manager: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.object.isRequired
  }), _temp;
}

var propTypes$1 = {
  index: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number.isRequired,
  collection: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.number, __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.string]),
  disabled: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.bool
};
var omittedProps$1 = Object.keys(propTypes$1);
function sortableElement(WrappedComponent) {
  var _class, _temp;

  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    withRef: false
  };
  return _temp = _class = function (_React$Component) {
    Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_inherits__["a" /* default */])(WithSortableElement, _React$Component);

    function WithSortableElement() {
      Object(__WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_esm_classCallCheck__["a" /* default */])(this, WithSortableElement);

      return Object(__WEBPACK_IMPORTED_MODULE_5__babel_runtime_helpers_esm_possibleConstructorReturn__["a" /* default */])(this, Object(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_getPrototypeOf__["a" /* default */])(WithSortableElement).apply(this, arguments));
    }

    Object(__WEBPACK_IMPORTED_MODULE_4__babel_runtime_helpers_esm_createClass__["a" /* default */])(WithSortableElement, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.register();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (this.node) {
          if (prevProps.index !== this.props.index) {
            this.node.sortableInfo.index = this.props.index;
          }

          if (prevProps.disabled !== this.props.disabled) {
            this.node.sortableInfo.disabled = this.props.disabled;
          }
        }

        if (prevProps.collection !== this.props.collection) {
          this.unregister(prevProps.collection);
          this.register();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.unregister();
      }
    }, {
      key: "register",
      value: function register() {
        var _this$props = this.props,
            collection = _this$props.collection,
            disabled = _this$props.disabled,
            index = _this$props.index;
        var node = Object(__WEBPACK_IMPORTED_MODULE_12_react_dom__["findDOMNode"])(this);
        node.sortableInfo = {
          collection: collection,
          disabled: disabled,
          index: index,
          manager: this.context.manager
        };
        this.node = node;
        this.ref = {
          node: node
        };
        this.context.manager.add(collection, this.ref);
      }
    }, {
      key: "unregister",
      value: function unregister() {
        var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.collection;
        this.context.manager.remove(collection, this.ref);
      }
    }, {
      key: "getWrappedInstance",
      value: function getWrappedInstance() {
        __WEBPACK_IMPORTED_MODULE_13_invariant___default()(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call');
        return this.refs.wrappedInstance;
      }
    }, {
      key: "render",
      value: function render() {
        var ref = config.withRef ? 'wrappedInstance' : null;
        return Object(__WEBPACK_IMPORTED_MODULE_10_react__["createElement"])(WrappedComponent, Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])({
          ref: ref
        }, omit(this.props, omittedProps$1)));
      }
    }]);

    return WithSortableElement;
  }(__WEBPACK_IMPORTED_MODULE_10_react__["Component"]), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "displayName", provideDisplayName('sortableElement', WrappedComponent)), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "contextTypes", {
    manager: __WEBPACK_IMPORTED_MODULE_11_prop_types___default.a.object.isRequired
  }), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "propTypes", propTypes$1), Object(__WEBPACK_IMPORTED_MODULE_9__babel_runtime_helpers_esm_defineProperty__["a" /* default */])(_class, "defaultProps", {
    collection: 0
  }), _temp;
}


/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 247 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _extends;
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),
/* 248 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _slicedToArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__arrayWithHoles__ = __webpack_require__(249);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__iterableToArrayLimit__ = __webpack_require__(250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__nonIterableRest__ = __webpack_require__(251);



function _slicedToArray(arr, i) {
  return Object(__WEBPACK_IMPORTED_MODULE_0__arrayWithHoles__["a" /* default */])(arr) || Object(__WEBPACK_IMPORTED_MODULE_1__iterableToArrayLimit__["a" /* default */])(arr, i) || Object(__WEBPACK_IMPORTED_MODULE_2__nonIterableRest__["a" /* default */])();
}

/***/ }),
/* 249 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _arrayWithHoles;
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

/***/ }),
/* 250 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _iterableToArrayLimit;
function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

/***/ }),
/* 251 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _nonIterableRest;
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

/***/ }),
/* 252 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _objectSpread;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__defineProperty__ = __webpack_require__(98);

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      Object(__WEBPACK_IMPORTED_MODULE_0__defineProperty__["a" /* default */])(target, key, source[key]);
    });
  }

  return target;
}

/***/ }),
/* 253 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _classCallCheck;
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),
/* 254 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _createClass;
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/***/ }),
/* 255 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _possibleConstructorReturn;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers_esm_typeof__ = __webpack_require__(256);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__assertThisInitialized__ = __webpack_require__(99);


function _possibleConstructorReturn(self, call) {
  if (call && (Object(__WEBPACK_IMPORTED_MODULE_0__helpers_esm_typeof__["a" /* default */])(call) === "object" || typeof call === "function")) {
    return call;
  }

  return Object(__WEBPACK_IMPORTED_MODULE_1__assertThisInitialized__["a" /* default */])(self);
}

/***/ }),
/* 256 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _typeof;
var _typeof3 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _typeof2(obj) {
  if (typeof Symbol === "function" && _typeof3(Symbol.iterator) === "symbol") {
    _typeof2 = function _typeof2(obj) {
      return typeof obj === "undefined" ? "undefined" : _typeof3(obj);
    };
  } else {
    _typeof2 = function _typeof2(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof3(obj);
    };
  }return _typeof2(obj);
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

/***/ }),
/* 257 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _getPrototypeOf;
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),
/* 258 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _inherits;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setPrototypeOf__ = __webpack_require__(259);

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object(__WEBPACK_IMPORTED_MODULE_0__setPrototypeOf__["a" /* default */])(subClass, superClass);
}

/***/ }),
/* 259 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _setPrototypeOf;
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function invariant(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _toConsumableArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__arrayWithoutHoles__ = __webpack_require__(262);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__iterableToArray__ = __webpack_require__(263);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__nonIterableSpread__ = __webpack_require__(264);



function _toConsumableArray(arr) {
  return Object(__WEBPACK_IMPORTED_MODULE_0__arrayWithoutHoles__["a" /* default */])(arr) || Object(__WEBPACK_IMPORTED_MODULE_1__iterableToArray__["a" /* default */])(arr) || Object(__WEBPACK_IMPORTED_MODULE_2__nonIterableSpread__["a" /* default */])();
}

/***/ }),
/* 262 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _arrayWithoutHoles;
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

/***/ }),
/* 263 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _iterableToArray;
function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

/***/ }),
/* 264 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _nonIterableSpread;
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

/***/ }),
/* 265 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__save__ = __webpack_require__(266);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(267);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__icons__ = __webpack_require__(3);






var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var iconListAttrs = {
    block_id: {
        type: "string"
    },
    align: {
        type: "string",
        default: "left"
    },
    multiTitleCount: {
        type: "number",
        default: 1
    },
    icons: {
        type: "array",
        default: [{
            id: 1,
            label: "Title #" + 1,
            image_icon: "icon",
            icon: "fa fa-arrow-circle-right",
            image: "",
            icon_color: "#3a3a3a",
            label_color: "",
            icon_hover_color: "",
            label_hover_color: "",
            icon_bg_color: "",
            icon_bg_hover_color: "",
            item_bg_color: "",
            item_bg_hover_color: "",
            link: "#",
            target: false,
            disableLink: false
        }]
    },
    classMigrate: {
        type: "boolean",
        default: false
    },
    layoutPos: {
        type: "string",
        default: "block"
    },
    iconPosition: {
        type: "string",
        default: "left"
    },
    linkTarget: {
        type: "boolean",
        default: false
    },
    sizeType: {
        type: "string",
        default: "px"
    },
    size: {
        type: "number",
        default: 20
    },
    sizeMobile: {
        type: "number",
        default: 20
    },
    sizeTablet: {
        type: "number",
        default: 20
    },
    fontSize: {
        type: "number",
        default: 20
    },
    fontSizeType: {
        type: "string",
        default: "px"
    },
    fontSizeMobile: {
        type: "number",
        default: 20
    },
    fontSizeTablet: {
        type: "number",
        default: 20
    },
    titleLetter: {
        type: "number"
    },
    titleStyle: {
        type: "string"
    },
    titleUpper: {
        type: "string"
    },
    titleWeight: {
        type: "number",
        default: 500
    },
    titleFont: {
        type: "string"
    },
    borderType: {
        type: "string",
        default: "none"
    },
    borderWidth: {
        type: "number",
        default: "1"
    },
    borderRadius: {
        type: "number",
        default: 0
    },
    borderColor: {
        type: "string"
    },
    iconSpacing: {
        type: "number",
        default: 10
    },
    iconSpacingMobile: {
        type: "number",
        default: 10
    },
    iconSpacingTablet: {
        type: "number",
        default: 10
    },
    iconSpacingType: {
        type: "string",
        default: "px"
    },
    titlePadding: {
        type: "number",
        default: 10
    },
    titlePaddingMobile: {
        type: "number",
        default: 10
    },
    titlePaddingTablet: {
        type: "number",
        default: 10
    },
    titlePaddingType: {
        type: "string",
        default: "px"
    },
    iconPaddingType: {
        type: "string",
        default: "px"
    },
    iconPadding: {
        type: "number",
        default: 0
    },
    iconPaddingMobile: {
        type: "number",
        default: 0
    },
    iconPaddingTablet: {
        type: "number",
        default: 0
    },
    marginTop: {
        type: "number",
        default: 0
    },
    marginTopType: {
        type: "string",
        default: "px"
    },
    marginTopMobile: {
        type: "number",
        default: 0
    },
    marginTopTablet: {
        type: "number",
        default: 0
    },
    marginRight: {
        type: "number",
        default: 0
    },
    marginRightType: {
        type: "string",
        default: "px"
    },
    marginRightMobile: {
        type: "number",
        default: 0
    },
    marginRightTablet: {
        type: "number",
        default: 0
    },
    marginBottom: {
        type: "number",
        default: 0
    },
    marginBottomType: {
        type: "string",
        default: "px"
    },
    marginBottomMobile: {
        type: "number",
        default: 0
    },
    marginBottomTablet: {
        type: "number",
        default: 0
    },
    marginLeft: {
        type: "number",
        default: 0
    },
    marginLeftType: {
        type: "string",
        default: "px"
    },
    marginLeftMobile: {
        type: "number",
        default: 0
    },
    marginLeftTablet: {
        type: "number",
        default: 0
    }
};

registerBlockType("premium/icon-list", {
    title: __("Icon List"),
    icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__icons__["a" /* default */], { icon: "icon-list" }),
    category: "premium-blocks",
    attributes: iconListAttrs,
    supports: {
        inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["k" /* iconList */]
    },
    edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
    save: __WEBPACK_IMPORTED_MODULE_1__save__["a" /* default */]
});

/***/ }),
/* 266 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = save;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var RichText = wp.blockEditor.RichText;


function save(props) {
    var attributes = props.attributes,
        className = props.className;
    var block_id = attributes.block_id,
        icons = attributes.icons,
        multiTitleCount = attributes.multiTitleCount,
        layoutPos = attributes.layoutPos,
        linkTarget = attributes.linkTarget,
        align = attributes.align,
        titleLetter = attributes.titleLetter,
        titleStyle = attributes.titleStyle,
        titleUpper = attributes.titleUpper,
        titleWeight = attributes.titleWeight,
        titleFont = attributes.titleFont,
        borderType = attributes.borderType,
        borderWidth = attributes.borderWidth,
        borderRadius = attributes.borderRadius,
        borderColor = attributes.borderColor,
        iconPosition = attributes.iconPosition;


    return wp.element.createElement(
        "div",
        { className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-block-" + block_id),
            id: "premium-block-" + block_id,
            style: {
                textAlign: align
            } },
        wp.element.createElement(
            "div",
            { className: "premium-icon-list-" + layoutPos,
                style: {
                    textAlign: align,
                    justifyContent: align == "right" ? "flex-end" : align
                } },
            icons.map(function (icon, index) {

                if (multiTitleCount <= index) {
                    return;
                }
                var image_icon_html = "";
                if (icon.image_icon == "icon") {
                    if (icon.icon) {
                        image_icon_html = wp.element.createElement(
                            "span",
                            { className: "premium-icon-list__content-icon" },
                            wp.element.createElement("i", { className: "" + icon.icon })
                        );
                    }
                } else {
                    if (icon.image) {
                        image_icon_html = wp.element.createElement("img", { src: icon.image.url });
                    }
                }

                var target = linkTarget ? "_blank" : "_self";
                var link_url = icon.disableLink ? icon.link : "/";

                if (!icon.disableLink) {
                    return wp.element.createElement(
                        "div",
                        {
                            className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("premium-icon-list-content" + index, "premium-icon-list__wrapper"),
                            key: index
                        },
                        wp.element.createElement(
                            "div",
                            { className: "premium-icon-list__content-wrap", style: {
                                    justifyContent: align == "right" ? align : align,
                                    display: iconPosition == "left" ? "flex" : "inline-flex",
                                    flexDirection: iconPosition == "top" ? align == "right" ? "column" : "column" : iconPosition == "right" ? align == "right" ? "row-reverse" : "row-reverse" : align == "right" ? "row-reverse" : ""
                                } },
                            wp.element.createElement(
                                "span",
                                { className: "premium-icon-list__icon-wrap",
                                    style: {
                                        borderStyle: borderType,
                                        borderWidth: borderWidth + "px",
                                        borderRadius: borderRadius || 0 + "px",
                                        borderColor: borderColor,
                                        overflow: icons[index].image_icon == 'image' ? "hidden" : ""
                                    }
                                },
                                image_icon_html
                            ),
                            wp.element.createElement(
                                "div",
                                { className: "premium-icon-list__label-wrap" },
                                wp.element.createElement(RichText.Content, {
                                    tagName: "span",
                                    value: icons[index].label,
                                    className: "premium-icon-list__label",
                                    style: {
                                        fontFamily: titleFont,
                                        letterSpacing: titleLetter + "px",
                                        textTransform: titleUpper ? "uppercase" : "none",
                                        fontStyle: titleStyle,
                                        fontWeight: titleWeight
                                    } })
                            )
                        )
                    );
                } else {

                    return wp.element.createElement(
                        "a",
                        {
                            className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("premium-icon-list-content" + index, "premium-icon-list__wrapper"),
                            key: index,
                            target: target,
                            rel: "noopener noreferrer",
                            href: link_url
                        },
                        wp.element.createElement(
                            "div",
                            { className: "premium-icon-list__content-wrap", style: {
                                    justifyContent: align == "right" ? align : align,
                                    display: iconPosition == "left" ? "flex" : "inline-flex",
                                    flexDirection: iconPosition == "top" ? align == "right" ? "column" : "column" : iconPosition == "right" ? align == "right" ? "row-reverse" : "row-reverse" : align == "right" ? "row-reverse" : ""
                                } },
                            wp.element.createElement(
                                "span",
                                { className: "premium-icon-list__icon-wrap",
                                    style: {
                                        borderStyle: borderType,
                                        borderWidth: borderWidth + "px",
                                        borderRadius: borderRadius || 0 + "px",
                                        borderColor: borderColor,
                                        overflow: icons[index].image_icon == 'image' ? "hidden" : ""
                                    }
                                },
                                image_icon_html
                            ),
                            wp.element.createElement(
                                "div",
                                { className: "premium-icon-list__label-wrap" },
                                wp.element.createElement(RichText.Content, {
                                    tagName: "span",
                                    value: icons[index].label,
                                    className: "premium-icon-list__label",
                                    style: {
                                        fontFamily: titleFont,
                                        letterSpacing: titleLetter + "px",
                                        textTransform: titleUpper ? "uppercase" : "none",
                                        fontStyle: titleStyle,
                                        fontWeight: titleWeight
                                    } })
                            )
                        )
                    );
                }
            })
        )
    );
}

/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times__ = __webpack_require__(268);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__styling__ = __webpack_require__(272);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_icons_list__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_premium_margin_responsive__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_premium_range_responsive__ = __webpack_require__(64);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$blockEditor = wp.blockEditor,
    BlockControls = _wp$blockEditor.BlockControls,
    AlignmentToolbar = _wp$blockEditor.AlignmentToolbar,
    InspectorControls = _wp$blockEditor.InspectorControls,
    MediaUpload = _wp$blockEditor.MediaUpload,
    ColorPalette = _wp$blockEditor.ColorPalette,
    RichText = _wp$blockEditor.RichText;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Button = _wp$components.Button,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl,
    TabPanel = _wp$components.TabPanel;

var edit = function (_Component) {
    _inherits(edit, _Component);

    function edit() {
        _classCallCheck(this, edit);

        return _possibleConstructorReturn(this, (edit.__proto__ || Object.getPrototypeOf(edit)).apply(this, arguments));
    }

    _createClass(edit, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            // Assigning id in the attribute.
            this.props.setAttributes({ block_id: this.props.clientId });
            this.props.setAttributes({ classMigrate: true });
            // Pushing Style tag for this block css.
            var $style = document.createElement("style");
            $style.setAttribute("id", "premium-style-icon-list-" + this.props.clientId);
            document.head.appendChild($style);
        }
    }, {
        key: "saveIcons",
        value: function saveIcons(value, index) {
            var _props = this.props,
                attributes = _props.attributes,
                setAttributes = _props.setAttributes;
            var icons = attributes.icons;

            var newItems = icons.map(function (item, thisIndex) {
                if (index === thisIndex) {
                    item = _extends({}, item, value);
                }
                return item;
            });
            setAttributes({
                icons: newItems
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                attributes = _props2.attributes,
                setAttributes = _props2.setAttributes,
                isSelected = _props2.isSelected;
            var multiTitleCount = attributes.multiTitleCount,
                layoutPos = attributes.layoutPos,
                iconPosition = attributes.iconPosition,
                linkTarget = attributes.linkTarget,
                align = attributes.align,
                className = attributes.className,
                icons = attributes.icons,
                sizeType = attributes.sizeType,
                size = attributes.size,
                sizeMobile = attributes.sizeMobile,
                sizeTablet = attributes.sizeTablet,
                titleLetter = attributes.titleLetter,
                titleStyle = attributes.titleStyle,
                titleUpper = attributes.titleUpper,
                titleWeight = attributes.titleWeight,
                titleFont = attributes.titleFont,
                borderType = attributes.borderType,
                borderWidth = attributes.borderWidth,
                borderRadius = attributes.borderRadius,
                borderColor = attributes.borderColor,
                iconSpacing = attributes.iconSpacing,
                iconSpacingType = attributes.iconSpacingType,
                iconSpacingMobile = attributes.iconSpacingMobile,
                iconSpacingTablet = attributes.iconSpacingTablet,
                titlePadding = attributes.titlePadding,
                titlePaddingMobile = attributes.titlePaddingMobile,
                titlePaddingTablet = attributes.titlePaddingTablet,
                titlePaddingType = attributes.titlePaddingType,
                iconPaddingType = attributes.iconPaddingType,
                iconPadding = attributes.iconPadding,
                iconPaddingTablet = attributes.iconPaddingTablet,
                iconPaddingMobile = attributes.iconPaddingMobile,
                fontSize = attributes.fontSize,
                fontSizeType = attributes.fontSizeType,
                fontSizeMobile = attributes.fontSizeMobile,
                fontSizeTablet = attributes.fontSizeTablet,
                marginTop = attributes.marginTop,
                marginTopType = attributes.marginTopType,
                marginTopMobile = attributes.marginTopMobile,
                marginTopTablet = attributes.marginTopTablet,
                marginBottom = attributes.marginBottom,
                marginBottomType = attributes.marginBottomType,
                marginBottomMobile = attributes.marginBottomMobile,
                marginBottomTablet = attributes.marginBottomTablet,
                marginRight = attributes.marginRight,
                marginRightType = attributes.marginRightType,
                marginRightMobile = attributes.marginRightMobile,
                marginRightTablet = attributes.marginRightTablet,
                marginLeft = attributes.marginLeft,
                marginLeftType = attributes.marginLeftType,
                marginLeftMobile = attributes.marginLeftMobile,
                marginLeftTablet = attributes.marginLeftTablet;


            var LAYOUT = [{
                label: __("Block"),
                value: "block"
            }, {
                label: __("Inline"),
                value: "inline"
            }];
            var POSITION = [{
                label: __("Left"),
                value: "left"
            }, {
                label: __("Right"),
                value: "right"
            }, {
                label: __("Top"),
                value: "top"
            }];
            var ICONTYPE = [{
                label: __("Icon"),
                value: "icon"
            }, {
                label: __("Image"),
                value: "image"
            }];
            var COLORTAB = [{
                name: "normal",
                title: __("Normal")
            }, {
                name: "hover",
                title: __("Hover")
            }];

            var addmultiTitleCount = function addmultiTitleCount(newCount) {
                var cloneIcons = [].concat(_toConsumableArray(icons));
                if (cloneIcons.length < newCount) {
                    var incAmount = Math.abs(newCount - cloneIcons.length);
                    {
                        __WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(incAmount, function (n) {
                            cloneIcons.push({
                                id: cloneIcons.length + 1,
                                label: "Title #" + (cloneIcons.length + 1),
                                image_icon: cloneIcons[0].image_icon,
                                icon: cloneIcons[0].icon,
                                image: cloneIcons[0].image,
                                icon_color: cloneIcons[0].icon_color,
                                icon_hover_color: cloneIcons[0].icon_hover_color,
                                icon_bg_color: cloneIcons[0].icon_bg_color,
                                icon_bg_hover_color: cloneIcons[0].icon_bg_hover_color,
                                item_bg_color: cloneIcons[0].item_bg_color,
                                item_bg_hover_color: cloneIcons[0].item_bg_hover_color,
                                link: cloneIcons[0].link,
                                disableLink: cloneIcons[0].disableLink
                            });
                        });
                    }
                    setAttributes({ icons: cloneIcons });
                } else {
                    for (var i = multiTitleCount; i > newCount; i--) {
                        icons.splice(i - 1, 1);
                    }
                }
                setAttributes({ multiTitleCount: newCount });
            };
            var iconControls = function iconControls(index) {
                var color_control = "";
                var color_control_hover = "";
                if ("image" == icons[index].image_icon) {
                    color_control = wp.element.createElement(
                        Fragment,
                        null,
                        wp.element.createElement(
                            "p",
                            null,
                            __("Label Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].label_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].label_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ label_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Image Background Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].icon_bg_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].icon_bg_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ icon_bg_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Item Background Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].item_bg_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].item_bg_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ item_bg_color: value }, index);
                            },
                            allowReset: true
                        })
                    );
                    color_control_hover = wp.element.createElement(
                        Fragment,
                        null,
                        wp.element.createElement(
                            "p",
                            null,
                            __("Label Hover Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].label_hover_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].label_hover_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ label_hover_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Image Background Hover Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].icon_bg_hover_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].icon_bg_hover_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ icon_bg_hover_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Item Background Hover Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].item_bg_hover_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].item_bg_hover_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ item_bg_hover_color: value }, index);
                            },
                            allowReset: true
                        })
                    );
                } else {
                    color_control = wp.element.createElement(
                        Fragment,
                        null,
                        wp.element.createElement(
                            "p",
                            null,
                            __("Label Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].label_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].label_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ label_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Icon Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].icon_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].icon_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ icon_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Icon Background Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].icon_bg_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].icon_bg_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ icon_bg_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Item Background Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].item_bg_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].item_bg_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ item_bg_color: value }, index);
                            },
                            allowReset: true
                        })
                    );
                    color_control_hover = wp.element.createElement(
                        Fragment,
                        null,
                        wp.element.createElement(
                            "p",
                            null,
                            __("Label Hover Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].label_hover_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].label_hover_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ label_hover_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Icon Hover Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].icon_hover_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].icon_hover_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ icon_hover_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Icon Background Hover Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].icon_bg_hover_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].icon_bg_hover_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ icon_bg_hover_color: value }, index);
                            },
                            allowReset: true
                        }),
                        wp.element.createElement(
                            "p",
                            null,
                            __("Item Background Hover Color"),
                            wp.element.createElement(
                                "span",
                                { className: "components-base-control__label" },
                                wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: icons[index].item_bg_hover_color } })
                            )
                        ),
                        wp.element.createElement(ColorPalette, {
                            value: icons[index].item_bg_hover_color,
                            onChange: function onChange(value) {
                                return _this2.saveIcons({ item_bg_hover_color: value }, index);
                            },
                            allowReset: true
                        })
                    );
                }
                return wp.element.createElement(
                    PanelBody,
                    {
                        key: index,
                        title: __("Icon #") + " " + (index + 1) + " " + __("Settings"),
                        initialOpen: false
                    },
                    wp.element.createElement(SelectControl, {
                        label: __("Icon Type"),
                        options: ICONTYPE,
                        value: icons[index].image_icon,
                        onChange: function onChange(value) {
                            return _this2.saveIcons({ image_icon: value }, index);
                        }
                    }),
                    "icon" == icons[index].image_icon && wp.element.createElement(
                        Fragment,
                        null,
                        wp.element.createElement(
                            "p",
                            null,
                            __("Icon")
                        ),
                        wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, {
                            icons: __WEBPACK_IMPORTED_MODULE_4__components_premium_icons_list__["a" /* default */],
                            value: icons[index].icon,
                            onChange: function onChange(value) {
                                _this2.saveIcons({ icon: value }, index);
                            },
                            isMulti: false,
                            appendTo: "body",
                            noSelectedPlaceholder: __("Select Icon")
                        })
                    ),
                    "image" == icons[index].image_icon && wp.element.createElement(
                        Fragment,
                        null,
                        icons[index].image ? wp.element.createElement("img", { src: icons[index].image.url, width: "100%", height: "auto" }) : "",
                        wp.element.createElement(MediaUpload, {
                            title: __("Select Image"),
                            onSelect: function onSelect(value) {
                                _this2.saveIcons({ image: value }, index);
                            },
                            allowedTypes: ["image"],
                            value: icons[index].image,
                            render: function render(_ref) {
                                var open = _ref.open;
                                return wp.element.createElement(
                                    Button,
                                    { isDefault: true, onClick: open },
                                    !icons[index].image ? __("Select Image") : __("Replace image")
                                );
                            }
                        }),
                        icons[index].image && wp.element.createElement(
                            Button,
                            {
                                onClick: function onClick(value) {
                                    _this2.saveIcons({ image: "" }, index);
                                },
                                isLink: true, isDestructive: true },
                            __("Remove Image")
                        )
                    ),
                    wp.element.createElement("hr", null),
                    wp.element.createElement(ToggleControl, {
                        label: __("Link"),
                        checked: icons[index].disableLink,
                        onChange: function onChange(value) {
                            _this2.saveIcons({ disableLink: value }, index);
                        }
                    }),
                    icons[index].disableLink && wp.element.createElement(
                        Fragment,
                        null,
                        wp.element.createElement(
                            "p",
                            null,
                            __("URL")
                        ),
                        wp.element.createElement(TextControl, {
                            value: icons[index].link,
                            onChange: function onChange(value) {
                                _this2.saveIcons({ link: value }, index);
                            },
                            placeholder: __("Enter URL")
                        })
                    ),
                    wp.element.createElement("hr", null),
                    wp.element.createElement(
                        "h2",
                        null,
                        __(" Color Settings")
                    ),
                    wp.element.createElement(
                        TabPanel,
                        {
                            className: "premium-icon-list-tab-panel",
                            activeClass: "active-tab",
                            tabs: COLORTAB },
                        function (tabName) {
                            var color_tab = void 0;
                            if ("normal" === tabName.name) {
                                color_tab = color_control;
                            } else {
                                color_tab = color_control_hover;
                            }
                            return wp.element.createElement(
                                "div",
                                null,
                                color_tab
                            );
                        }
                    )
                );
            };

            var element = document.getElementById("premium-style-icon-list-" + this.props.clientId);

            if (null != element && "undefined" != typeof element) {
                element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_3__styling__["a" /* default */])(this.props);
            }

            var addFontToHead = function addFontToHead(fontFamily) {
                var head = document.head;
                var link = document.createElement("link");
                link.type = "text/css";
                link.rel = "stylesheet";
                link.href = "https://fonts.googleapis.com/css?family=" + fontFamily.replace(/\s+/g, "+") + ":" + "regular";
                head.appendChild(link);
            };

            var onChangeTitleFamily = function onChangeTitleFamily(fontFamily) {
                setAttributes({ titleFont: fontFamily });
                if (!fontFamily) {
                    return;
                }
                addFontToHead(fontFamily);
            };
            var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-icon-list");
            return [isSelected && wp.element.createElement(
                BlockControls,
                null,
                wp.element.createElement(AlignmentToolbar, {
                    value: align,
                    onChange: function onChange(value) {
                        setAttributes({ align: value });
                    }
                })
            ), isSelected && wp.element.createElement(
                InspectorControls,
                null,
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("General Settings"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(RangeControl, {
                        label: __("Number of Items"),
                        value: multiTitleCount,
                        min: "1",
                        max: "10",
                        onChange: function onChange(value) {
                            return addmultiTitleCount(value);
                        }
                    }),
                    wp.element.createElement(SelectControl, {
                        label: __("Layout"),
                        options: LAYOUT,
                        value: layoutPos,
                        onChange: function onChange(newValue) {
                            return setAttributes({ layoutPos: newValue });
                        }
                    }),
                    wp.element.createElement(SelectControl, {
                        label: __("Icon Position"),
                        options: POSITION,
                        value: iconPosition,
                        onChange: function onChange(newValue) {
                            return setAttributes({ iconPosition: newValue });
                        }
                    }),
                    wp.element.createElement(ToggleControl, {
                        label: __("Open links in new tab"),
                        checked: linkTarget,
                        onChange: function onChange(newValue) {
                            return setAttributes({ linkTarget: newValue });
                        }
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(multiTitleCount, function (n) {
                    return iconControls(n);
                }),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Icon Style"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: sizeType, label: __("sizeType") },
                        range: { value: size, label: __("size") },
                        rangeMobile: { value: sizeMobile, label: __("sizeMobile") },
                        rangeTablet: { value: sizeTablet, label: __("sizeTablet") },
                        rangeLabel: __("Icon Size ")
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_premium_border__["a" /* default */], {
                        borderType: borderType,
                        borderWidth: borderWidth,
                        borderColor: borderColor,
                        borderRadius: borderRadius,
                        onChangeType: function onChangeType(newType) {
                            return setAttributes({ borderType: newType });
                        },
                        onChangeWidth: function onChangeWidth(newWidth) {
                            return setAttributes({ borderWidth: newWidth });
                        },
                        onChangeColor: function onChangeColor(colorValue) {
                            return setAttributes({ borderColor: colorValue.hex });
                        },
                        onChangeRadius: function onChangeRadius(newrRadius) {
                            return setAttributes({ borderRadius: newrRadius });
                        }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: iconSpacingType, label: __("iconSpacingType") },
                        range: { value: iconSpacing, label: __("iconSpacing") },
                        rangeMobile: { value: iconSpacingMobile, label: __("iconSpacingMobile") },
                        rangeTablet: { value: iconSpacingTablet, label: __("iconSpacingTablet") },
                        rangeLabel: __("Icons Spacing ")
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: iconPaddingType, label: __("iconPaddingType") },
                        range: { value: iconPadding, label: __("iconPadding") },
                        rangeMobile: { value: iconPaddingMobile, label: __("iconPaddingMobile") },
                        rangeTablet: { value: iconPaddingTablet, label: __("iconPaddingTablet") },
                        rangeLabel: __("Icon Padding ")
                    })
                ),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Item Style"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_typo__["a" /* default */], {
                        components: ["responsiveSize", "weight", "style", "upper", "spacing"],
                        setAttributes: setAttributes,
                        fontSizeType: { value: fontSizeType, label: __("fontSizeType") },
                        fontSize: { value: fontSize, label: __("fontSize") },
                        fontSizeMobile: { value: fontSizeMobile, label: __("fontSizeMobile") },
                        fontSizeTablet: { value: fontSizeTablet, label: __("fontSizeTablet") },
                        weight: titleWeight,
                        style: titleStyle,
                        spacing: titleLetter,
                        upper: titleUpper,
                        onChangeresponsiveSize: function onChangeresponsiveSize(newSize) {
                            return setAttributes({ titleSize: newSize });
                        },
                        onChangeWeight: function onChangeWeight(newWeight) {
                            return setAttributes({ titleWeight: newWeight || 500 });
                        },
                        onChangeStyle: function onChangeStyle(newStyle) {
                            return setAttributes({ titleStyle: newStyle });
                        },
                        onChangeSpacing: function onChangeSpacing(newValue) {
                            return setAttributes({ titleLetter: newValue });
                        },
                        onChangeUpper: function onChangeUpper(check) {
                            return setAttributes({ titleUpper: check });
                        }
                    }),
                    wp.element.createElement(SelectControl, {
                        label: __("Font Family"),
                        value: titleFont,
                        options: __WEBPACK_IMPORTED_MODULE_6__components_premium_fonts__["a" /* default */],
                        onChange: onChangeTitleFamily
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: titlePaddingType, label: __("titlePaddingType") },
                        range: { value: titlePadding, label: __("titlePadding") },
                        rangeMobile: { value: titlePaddingMobile, label: __("titlePaddingMobile") },
                        rangeTablet: { value: titlePaddingTablet, label: __("titlePaddingTablet") },
                        rangeLabel: __("Item Padding ")

                    }),
                    layoutPos == "block" ? wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_premium_margin_responsive__["a" /* default */], {
                        directions: ["top", "bottom"],
                        setAttributes: setAttributes,
                        marginTopType: { value: marginTopType, label: __("marginTopType") },
                        marginTop: { value: marginTop, label: __("marginTop") },
                        marginTopMobile: { value: marginTopMobile, label: __("marginTopMobile") },
                        marginTopTablet: { value: marginTopTablet, label: __("marginTopTablet") },
                        marginBottomType: { value: marginBottomType, label: __("marginBottomType") },
                        marginBottom: { value: marginBottom, label: __("marginBottom") },
                        marginBottomMobile: { value: marginBottomMobile, label: __("marginBottomMobile") },
                        marginBottomTablet: { value: marginBottomTablet, label: __("marginBottomTablet") }
                    }) : wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_premium_margin_responsive__["a" /* default */], {
                        directions: ["left", "right"],
                        setAttributes: setAttributes,
                        marginLeftType: { value: marginLeftType, label: __("marginLeftType") },
                        marginLeft: { value: marginLeft, label: __("marginLeft") },
                        marginLeftMobile: { value: marginLeftMobile, label: __("marginLeftMobile") },
                        marginLeftTablet: { value: marginLeftTablet, label: __("marginLeftTablet") },
                        marginRightType: { value: marginRightType, label: __("marginRightType") },
                        marginRight: { value: marginRight, label: __("marginRight") },
                        marginRightMobile: { value: marginRightMobile, label: __("marginRightMobile") },
                        marginRightTablet: { value: marginRightTablet, label: __("marginRightTablet") }
                    })
                )
            ), wp.element.createElement(
                "div",
                { className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-block-" + this.props.clientId), style: {
                        textAlign: align
                    }, id: mainClasses + "-wrap-" + this.props.clientId },
                wp.element.createElement(
                    "div",
                    { className: "premium-icon-list-" + layoutPos,
                        style: {
                            textAlign: align,
                            justifyContent: align == "right" ? "flex-end" : align
                        } },
                    icons.map(function (icon, index) {
                        var _wp$element$createEle;

                        if (multiTitleCount <= index) {
                            return;
                        }

                        var image_icon_html = "";

                        if (icon.image_icon == "icon") {
                            if (icon.icon) {
                                image_icon_html = wp.element.createElement(
                                    "span",
                                    { className: "premium-icon-list__content-icon" },
                                    wp.element.createElement("i", { className: "" + icon.icon })
                                );
                            }
                        } else {
                            if (icon.image) {
                                image_icon_html = wp.element.createElement("img", { src: icon.image.url });
                            }
                        }

                        var target = linkTarget ? "_blank" : "_self";

                        return wp.element.createElement(
                            "div",
                            {
                                className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("premium-icon-list-content" + index, "premium-icon-list__wrapper"),
                                key: index,
                                target: target,
                                rel: "noopener noreferrer"
                            },
                            wp.element.createElement(
                                "div",
                                { className: "premium-icon-list__content-wrap", style: {
                                        justifyContent: align == "right" ? align : align,
                                        display: iconPosition == "left" ? "flex" : "inline-flex",
                                        flexDirection: iconPosition == "top" ? align == "right" ? "column" : "column" : iconPosition == "right" ? align == "right" ? "row-reverse" : "row-reverse" : align == "right" ? "row-reverse" : ""
                                    } },
                                wp.element.createElement(
                                    "span",
                                    { className: "premium-icon-list__icon-wrap",
                                        style: {
                                            borderStyle: borderType,
                                            borderWidth: borderWidth + "px",
                                            borderRadius: borderRadius || 0 + "px",
                                            borderColor: borderColor,
                                            overflow: "hidden"
                                        }
                                    },
                                    image_icon_html
                                ),
                                wp.element.createElement(
                                    "div",
                                    { className: "premium-icon-list__label-wrap" },
                                    wp.element.createElement(RichText, (_wp$element$createEle = {
                                        tagName: "div",
                                        placeholder: __("Title Name"),
                                        value: icons[index].label,
                                        className: "premium-icon-list__label",
                                        onChange: function onChange(value) {
                                            _this2.saveIcons({ label: value }, index);
                                        }
                                    }, _defineProperty(_wp$element$createEle, "placeholder", __("Title")), _defineProperty(_wp$element$createEle, "multiline", false), _defineProperty(_wp$element$createEle, "style", {
                                        fontFamily: titleFont,
                                        letterSpacing: titleLetter + "px",
                                        textTransform: titleUpper ? "uppercase" : "none",
                                        fontStyle: titleStyle,
                                        fontWeight: titleWeight
                                    }), _wp$element$createEle))
                                )
                            )
                        );
                    })
                )
            )];
        }
    }]);

    return edit;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(87),
    castFunction = __webpack_require__(269),
    toInteger = __webpack_require__(270);

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Invokes the iteratee `n` times, returning an array of the results of
 * each invocation. The iteratee is invoked with one argument; (index).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.times(3, String);
 * // => ['0', '1', '2']
 *
 *  _.times(4, _.constant(0));
 * // => [0, 0, 0, 0]
 */
function times(n, iteratee) {
  n = toInteger(n);
  if (n < 1 || n > MAX_SAFE_INTEGER) {
    return [];
  }
  var index = MAX_ARRAY_LENGTH,
      length = nativeMin(n, MAX_ARRAY_LENGTH);

  iteratee = castFunction(iteratee);
  n -= MAX_ARRAY_LENGTH;

  var result = baseTimes(length, iteratee);
  while (++index < n) {
    iteratee(index);
  }
  return result;
}

module.exports = times;

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(41);

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

module.exports = castFunction;

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

var toFinite = __webpack_require__(271);

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? remainder ? result - remainder : result : 0;
}

module.exports = toInteger;

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__(100);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;

/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__generateCss__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__generateCssUnit__ = __webpack_require__(102);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function styling(props) {
  var _props$attributes = props.attributes,
      multiTitleCount = _props$attributes.multiTitleCount,
      classMigrate = _props$attributes.classMigrate,
      icons = _props$attributes.icons,
      sizeType = _props$attributes.sizeType,
      size = _props$attributes.size,
      sizeTablet = _props$attributes.sizeTablet,
      sizeMobile = _props$attributes.sizeMobile,
      fontSize = _props$attributes.fontSize,
      fontSizeType = _props$attributes.fontSizeType,
      fontSizeMobile = _props$attributes.fontSizeMobile,
      fontSizeTablet = _props$attributes.fontSizeTablet,
      iconPaddingType = _props$attributes.iconPaddingType,
      iconPadding = _props$attributes.iconPadding,
      iconPaddingTablet = _props$attributes.iconPaddingTablet,
      iconPaddingMobile = _props$attributes.iconPaddingMobile,
      titlePadding = _props$attributes.titlePadding,
      titlePaddingMobile = _props$attributes.titlePaddingMobile,
      titlePaddingTablet = _props$attributes.titlePaddingTablet,
      titlePaddingType = _props$attributes.titlePaddingType,
      layoutPos = _props$attributes.layoutPos,
      marginTop = _props$attributes.marginTop,
      marginTopMobile = _props$attributes.marginTopMobile,
      marginTopTablet = _props$attributes.marginTopTablet,
      marginTopType = _props$attributes.marginTopType,
      marginBottom = _props$attributes.marginBottom,
      marginBottomMobile = _props$attributes.marginBottomMobile,
      marginBottomTablet = _props$attributes.marginBottomTablet,
      marginBottomType = _props$attributes.marginBottomType,
      marginLeft = _props$attributes.marginLeft,
      marginLeftMobile = _props$attributes.marginLeftMobile,
      marginLeftType = _props$attributes.marginLeftType,
      marginLeftTablet = _props$attributes.marginLeftTablet,
      marginRightTablet = _props$attributes.marginRightTablet,
      marginRight = _props$attributes.marginRight,
      marginRightMobile = _props$attributes.marginRightMobile,
      marginRightType = _props$attributes.marginRightType,
      iconSpacing = _props$attributes.iconSpacing,
      iconSpacingType = _props$attributes.iconSpacingType,
      iconSpacingMobile = _props$attributes.iconSpacingMobile,
      iconSpacingTablet = _props$attributes.iconSpacingTablet,
      iconPosition = _props$attributes.iconPosition;


  var selectors = {};
  var tablet_selectors = {};
  var mobile_selectors = {};

  selectors = {
    " .premium-icon-list__icon-wrap img": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType)
    },
    " .premium-icon-list__icon-wrap": {
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconPadding, iconPaddingType),
      "margin-right": iconPosition == "left" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacing, iconSpacingType) : "",
      "margin-left": iconPosition == "right" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacing, iconSpacingType) : "",
      "margin-bottom": iconPosition == "top" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacing, iconSpacingType) : ""
    },
    " .premium-icon-list__content-icon": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType)
    },
    " .premium-icon-list__content-icon i": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType)
    },
    " .premium-icon-list__content-icon:before": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(size, sizeType)
    }
  };

  mobile_selectors = {
    " .premium-icon-list__icon-wrap img": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType)
    },
    " .premium-icon-list__icon-wrap": {
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconPaddingMobile, iconPaddingType),
      "margin-right": iconPosition == "left" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacingMobile, iconSpacingType) : "",
      "margin-left": iconPosition == "right" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacingMobile, iconSpacingType) : "",
      "margin-bottom": iconPosition == "top" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacingMobile, iconSpacingType) : ""
    },
    " .premium-icon-list__content-icon": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType)
    },
    " .premium-icon-list__content-icon i": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType)
    },
    " .premium-icon-list__content-icon:before": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeMobile, sizeType)
    }
  };

  tablet_selectors = {
    " .premium-icon-list__icon-wrap img": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType)
    },
    " .premium-icon-list__icon-wrap": {
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconPaddingTablet, iconPaddingType),
      "margin-right": iconPosition == "left" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacingTablet, iconSpacingType) : "",
      "margin-left": iconPosition == "right" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacingTablet, iconSpacingType) : "",
      "margin-bottom": iconPosition == "top" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(iconSpacingTablet, iconSpacingType) : ""
    },
    " .premium-icon-list__content-icon": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType)
    },
    " .premium-icon-list__content-icon i": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType)
    },
    " .premium-icon-list__content-icon:before": {
      width: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType),
      height: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(sizeTablet, sizeType)
    }
  };

  icons.map(function (icon, index) {
    var _mobile_selectors, _tablet_selectors;

    if (multiTitleCount <= index) {
      return;
    }

    selectors[" .premium-icon-list-content" + index + " .premium-icon-list__content-icon"] = {
      color: icon.icon_color
    };

    selectors[" .premium-icon-list-content" + index + " .premium-icon-list__content-icon i"] = {
      fill: icon.icon_color
    };

    selectors[" .premium-icon-list-content" + index + ":hover .premium-icon-list__content-icon"] = {
      color: icon.icon_hover_color
    };

    selectors[" .premium-icon-list-content" + index + ":hover .premium-icon-list__content-icon i"] = {
      fill: icon.icon_hover_color
    };

    selectors[" .premium-icon-list-content" + index + " .premium-icon-list__label"] = {
      color: icon.label_color,
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(fontSize, fontSizeType)
    };

    selectors[" .premium-icon-list-content" + index + ":hover .premium-icon-list__label"] = {
      color: icon.label_hover_color
    };

    selectors[" .premium-icon-list-content" + index + ":hover .premium-icon-list__content-wrap"] = {
      background: icon.item_bg_hover_color
    };

    selectors[" .premium-icon-list-content" + index + " .premium-icon-list__icon-wrap"] = {
      background: icon.icon_bg_color
    };

    selectors[" .premium-icon-list-content" + index + ":hover .premium-icon-list__icon-wrap"] = {
      background: icon.icon_bg_hover_color
    };
    // item Padding
    selectors[" .premium-icon-list-content" + index] = {
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(titlePadding, titlePaddingType)
    };

    mobile_selectors[" .premium-icon-list-content" + index] = {
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(titlePaddingMobile, titlePaddingType)
    };

    tablet_selectors[" .premium-icon-list-content" + index] = {
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(titlePaddingTablet, titlePaddingType)
    };

    mobile_selectors[" .premium-icon-list-content" + index + " .premium-icon-list__label"] = {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(fontSizeMobile, fontSizeType)
    };

    tablet_selectors[" .premium-icon-list-content" + index + " .premium-icon-list__label"] = {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(fontSizeTablet, fontSizeType)
    };
    //margins for Items
    selectors[" .premium-icon-list-content" + index + " .premium-icon-list__content-wrap"] = {
      background: icon.item_bg_color,
      "margin-top": layoutPos == "block" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginTop, marginTopType) : "",
      "margin-bottom": layoutPos == "block" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginBottom, marginBottomType) : "",
      "margin-right": layoutPos == "block" ? "" : Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginRight, marginRightType),
      "margin-left": layoutPos == "block" ? "" : Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginLeft, marginLeftType)
    };

    mobile_selectors[" .premium-icon-list-content" + index + " .premium-icon-list__content-wrap"] = (_mobile_selectors = {
      "margin-top": layoutPos == "block" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginTopMobile, marginTopType) : ""
    }, _defineProperty(_mobile_selectors, "margin-top", layoutPos == "block" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginBottomMobile, marginBottomType) : ""), _defineProperty(_mobile_selectors, "margin-right", layoutPos == "block" ? "" : Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginRightMobile, marginRightType)), _defineProperty(_mobile_selectors, "margin-left", layoutPos == "block" ? "" : Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginLeftMobile, marginLeftType)), _mobile_selectors);

    tablet_selectors[" .premium-icon-list-content" + index + " .premium-icon-list__content-wrap"] = (_tablet_selectors = {
      "margin-top": layoutPos == "block" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginTopTablet, marginTopType) : ""
    }, _defineProperty(_tablet_selectors, "margin-top", layoutPos == "block" ? Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginBottomTablet, marginBottomType) : ""), _defineProperty(_tablet_selectors, "margin-right", layoutPos == "block" ? "" : Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginRightTablet, marginRightType)), _defineProperty(_tablet_selectors, "margin-left", layoutPos == "block" ? "" : Object(__WEBPACK_IMPORTED_MODULE_1__generateCssUnit__["a" /* default */])(marginLeftTablet, marginLeftType)), _tablet_selectors);
  });

  var styling_css = "";
  var id = "#premium-icon-list-" + props.clientId;
  if (classMigrate) {
    id = ".premium-block-" + props.clientId;
  }

  styling_css = Object(__WEBPACK_IMPORTED_MODULE_0__generateCss__["a" /* default */])(selectors, id);
  styling_css += Object(__WEBPACK_IMPORTED_MODULE_0__generateCss__["a" /* default */])(tablet_selectors, id, true, "tablet");

  styling_css += Object(__WEBPACK_IMPORTED_MODULE_0__generateCss__["a" /* default */])(mobile_selectors, id, true, "mobile");

  return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 273 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__save__ = __webpack_require__(274);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(275);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__icons__ = __webpack_require__(3);






var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;


var contentSwitcherAttrs = {
  block_id: {
    type: "string"
  },
  classMigrate: {
    type: "boolean",
    default: false
  },
  align: {
    type: "string",
    default: "center"
  },
  showLabel: {
    type: "boolean",
    default: true
  },
  firstLabel: {
    type: "string",
    default: "Content #1"
  },
  secondLabel: {
    type: "string",
    default: "Content #2"
  },
  display: {
    type: "string",
    default: "inline"
  },
  firstContent: {
    type: "string",
    default: "Donec id elit non mi porta gravida at eget metus. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Cras mattis consectetur purus sit amet fermentum. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus."
  },
  secondContent: {
    type: "string",
    default: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
  },
  switchCheck: {
    type: "boolean",
    default: false
  },
  firstcontentlign: {
    type: "string",
    default: "center"
  },
  secondcontentlign: {
    type: "string",
    default: "center"
  },
  switchSizeType: {
    type: "string",
    default: "px"
  },
  switchSize: {
    type: "number",
    default: 15
  },
  switchSizeMobile: {
    type: "number",
    default: 15
  },
  switchSizeTablet: {
    type: "number",
    default: 15
  },
  bottomSpacingType: {
    type: "string",
    default: "px"
  },
  bottomSpacing: {
    type: "number",
    default: 1
  },
  bottomSpacingMobile: {
    type: "number",
    default: 1
  },
  bottomSpacingTablet: {
    type: "number",
    default: 1
  },
  firstStateColor: {
    type: "string",
    default: "#6ec1e4"
  },
  secondStateColor: {
    type: "string",
    default: "#6ec1e4"
  },
  switcherBGColor: {
    type: "string",
    default: "#f2f2f2"
  },
  switchRadius: {
    type: "number",
    default: 50
  },
  switchRadiusType: {
    type: "string",
    default: "px"
  },
  labelSpacingType: {
    type: "string",
    default: "px"
  },
  labelSpacing: {
    type: "number",
    default: 15
  },
  labelSpacingMobile: {
    type: "number",
    default: 15
  },
  labelSpacingTablet: {
    type: "number",
    default: 15
  },
  firstLabelColor: {
    type: "string",
    default: "#54595f"
  },
  firstLabelLetter: {
    type: "number"
  },
  firstLabelStyle: {
    type: "string"
  },
  firstLabelUpper: {
    type: "boolean",
    default: false
  },
  firstLabelWeight: {
    type: "number",
    default: 500
  },
  firstLabelfontSize: {
    type: "number",
    default: 20
  },
  firstLabelfontSizeType: {
    type: "string",
    default: "px"
  },
  firstLabelfontSizeMobile: {
    type: "number",
    default: 20
  },
  firstLabelfontSizeTablet: {
    type: "number",
    default: 20
  },
  secondLabelColor: {
    type: "string",
    default: "#54595f"
  },
  secondLabelLetter: {
    type: "number"
  },
  secondLabelStyle: {
    type: "string"
  },
  secondLabelUpper: {
    type: "boolean",
    default: false
  },
  secondLabelWeight: {
    type: "number",
    default: 500
  },
  secondLabelfontSize: {
    type: "number",
    default: 20
  },
  secondLabelfontSizeType: {
    type: "string",
    default: "px"
  },
  secondLabelfontSizeMobile: {
    type: "number",
    default: 20
  },
  secondLabelfontSizeTablet: {
    type: "number",
    default: 20
  },
  shadowColor: {
    type: "string"
  },
  shadowBlur: {
    type: "number",
    default: "0"
  },
  shadowHorizontal: {
    type: "number",
    default: "0"
  },
  shadowVertical: {
    type: "number",
    default: "0"
  },
  firstContentHeight: {
    type: "number",
    default: 50
  },
  firstContentHeightType: {
    type: "string",
    default: "px"
  },
  firstContentHeightMobile: {
    type: "number",
    default: 50
  },
  firstContentHeightTablet: {
    type: "number",
    default: 50
  },
  firstContentColor: {
    type: "string",
    default: "#54595f"
  },
  firstContentBGColor: {
    type: "string"
  },
  secondContentHeightType: {
    type: "string",
    default: "px"
  },
  secondContentHeight: {
    type: "number",
    default: 50
  },
  secondContentHeightMobile: {
    type: "number",
    default: 50
  },
  secondContentHeightTablet: {
    type: "number",
    default: 50
  },
  secondContentColor: {
    type: "string",
    default: "#54595f"
  },
  secondContentBGColor: {
    type: "string"
  },
  firstpaddingTop: {
    type: "number",
    default: 0
  },
  firstpaddingTopType: {
    type: "string",
    default: "px"
  },
  firstpaddingTopMobile: {
    type: "number",
    default: 0
  },
  firstpaddingTopTablet: {
    type: "number",
    default: 0
  },
  firstpaddingRight: {
    type: "number",
    default: 0
  },
  firstpaddingRightType: {
    type: "string",
    default: "px"
  },
  firstpaddingRightMobile: {
    type: "number",
    default: 0
  },
  firstpaddingRightTablet: {
    type: "number",
    default: 0
  },
  firstpaddingBottom: {
    type: "number",
    default: 0
  },
  firstpaddingBottomType: {
    type: "string",
    default: "px"
  },
  firstpaddingBottomMobile: {
    type: "number",
    default: 0
  },
  firstpaddingBottomTablet: {
    type: "number",
    default: 0
  },
  firstpaddingLeft: {
    type: "number",
    default: 0
  },
  firstpaddingLeftType: {
    type: "string",
    default: "px"
  },
  firstpaddingLeftMobile: {
    type: "number",
    default: 0
  },
  firstpaddingLeftTablet: {
    type: "number",
    default: 0
  },
  secondpaddingTop: {
    type: "number",
    default: 0
  },
  secondpaddingTopType: {
    type: "string",
    default: "px"
  },
  secondpaddingTopMobile: {
    type: "number",
    default: 0
  },
  secondpaddingTopTablet: {
    type: "number",
    default: 0
  },
  secondpaddingRight: {
    type: "number",
    default: 0
  },
  secondpaddingRightType: {
    type: "string",
    default: "px"
  },
  secondpaddingRightMobile: {
    type: "number",
    default: 0
  },
  secondpaddingRightTablet: {
    type: "number",
    default: 0
  },
  secondpaddingBottom: {
    type: "number",
    default: 0
  },
  secondpaddingBottomType: {
    type: "string",
    default: "px"
  },
  secondpaddingBottomMobile: {
    type: "number",
    default: 0
  },
  secondpaddingBottomTablet: {
    type: "number",
    default: 0
  },
  secondpaddingLeft: {
    type: "number",
    default: 0
  },
  secondpaddingLeftType: {
    type: "string",
    default: "px"
  },
  secondpaddingLeftMobile: {
    type: "number",
    default: 0
  },
  secondpaddingLeftTablet: {
    type: "number",
    default: 0
  },
  effect: {
    type: "string",
    default: "fade"
  },
  slide: {
    type: "string",
    default: "top"
  },
  firstContentLetter: {
    type: "number"
  },
  firstContentStyle: {
    type: "string"
  },
  firstContentUpper: {
    type: "boolean",
    default: false
  },
  firstContentWeight: {
    type: "number",
    default: 500
  },
  firstContentfontSize: {
    type: "number",
    default: 15
  },
  firstContentfontSizeType: {
    type: "string",
    default: "px"
  },
  firstContentfontSizeMobile: {
    type: "number",
    default: 15
  },
  firstContentfontSizeTablet: {
    type: "number",
    default: 15
  },
  firstContentborderType: {
    type: "string",
    default: "none"
  },
  firstContentborderWidth: {
    type: "number",
    default: "1"
  },
  firstContentborderRadius: {
    type: "number",
    default: 0
  },
  firstContentborderColor: {
    type: "string"
  },
  secondContentLetter: {
    type: "number"
  },
  secondContentStyle: {
    type: "string"
  },
  secondContentUpper: {
    type: "boolean",
    default: false
  },
  secondContentWeight: {
    type: "number",
    default: 500
  },
  secondContentfontSize: {
    type: "number",
    default: 15
  },
  secondContentfontSizeType: {
    type: "string",
    default: "px"
  },
  secondContentfontSizeMobile: {
    type: "number",
    default: 15
  },
  secondContentfontSizeTablet: {
    type: "number",
    default: 15
  },
  secondContentborderType: {
    type: "string",
    default: "none"
  },
  secondContentborderWidth: {
    type: "number",
    default: "1"
  },
  secondContentborderRadius: {
    type: "number",
    default: 0
  },
  secondContentborderColor: {
    type: "string"
  }
};

registerBlockType("premium/content-switcher", {
  title: __("Content Switcher"),
  icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__icons__["a" /* default */], { icon: "content-switcher" }),
  category: "premium-blocks",
  attributes: contentSwitcherAttrs,
  supports: {
    inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["f" /* contentSwitcher */]
  },
  edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
  save: __WEBPACK_IMPORTED_MODULE_1__save__["a" /* default */]
});

/***/ }),
/* 274 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = save;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);


var RichText = wp.editor.RichText;


function save(props) {
    var attributes = props.attributes,
        className = props.className;
    var block_id = attributes.block_id,
        align = attributes.align,
        showLabel = attributes.showLabel,
        firstLabel = attributes.firstLabel,
        secondLabel = attributes.secondLabel,
        display = attributes.display,
        firstContent = attributes.firstContent,
        secondContent = attributes.secondContent,
        switchCheck = attributes.switchCheck,
        firstcontentlign = attributes.firstcontentlign,
        secondcontentlign = attributes.secondcontentlign,
        switchRadius = attributes.switchRadius,
        firstLabelColor = attributes.firstLabelColor,
        firstLabelWeight = attributes.firstLabelWeight,
        firstLabelLetter = attributes.firstLabelLetter,
        firstLabelUpper = attributes.firstLabelUpper,
        firstLabelStyle = attributes.firstLabelStyle,
        secondLabelColor = attributes.secondLabelColor,
        secondLabelWeight = attributes.secondLabelWeight,
        secondLabelLetter = attributes.secondLabelLetter,
        secondLabelUpper = attributes.secondLabelUpper,
        secondLabelStyle = attributes.secondLabelStyle,
        shadowColor = attributes.shadowColor,
        shadowBlur = attributes.shadowBlur,
        shadowHorizontal = attributes.shadowHorizontal,
        shadowVertical = attributes.shadowVertical,
        firstContentColor = attributes.firstContentColor,
        firstContentBGColor = attributes.firstContentBGColor,
        secondContentColor = attributes.secondContentColor,
        secondContentBGColor = attributes.secondContentBGColor,
        effect = attributes.effect,
        slide = attributes.slide,
        firstContentborderType = attributes.firstContentborderType,
        firstContentborderWidth = attributes.firstContentborderWidth,
        firstContentborderColor = attributes.firstContentborderColor,
        firstContentborderRadius = attributes.firstContentborderRadius,
        secondContentborderColor = attributes.secondContentborderColor,
        secondContentborderRadius = attributes.secondContentborderRadius,
        secondContentborderWidth = attributes.secondContentborderWidth,
        secondContentborderType = attributes.secondContentborderType;


    return wp.element.createElement(
        "div",
        { className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-block-" + block_id),
            style: {
                textAlign: align
            } },
        wp.element.createElement(
            "div",
            { className: "premium-content-switcher",
                style: {
                    textAlign: align
                } },
            wp.element.createElement(
                "div",
                { className: "premium-content-switcher-toggle-" + display,
                    style: {
                        textAlign: align,
                        justifyContent: align == "right" ? "flex-end" : align,
                        alignItems: align
                    } },
                showLabel && wp.element.createElement(
                    "div",
                    { className: "premium-content-switcher-first-label" },
                    wp.element.createElement(
                        "h3",
                        { style: {
                                color: firstLabelColor,
                                letterSpacing: firstLabelLetter + "px",
                                textTransform: firstLabelUpper ? "uppercase" : "none",
                                fontStyle: firstLabelStyle,
                                fontWeight: firstLabelWeight,
                                textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
                            } },
                        firstLabel
                    )
                ),
                wp.element.createElement(
                    "div",
                    { className: "premium-content-switcher-toggle-switch" },
                    wp.element.createElement(
                        "label",
                        { className: "premium-content-switcher-toggle-switch-label" },
                        wp.element.createElement("input", { type: "checkbox", className: "premium-content-switcher-toggle-switch-input " + block_id }),
                        wp.element.createElement("span", { className: "premium-content-switcher-toggle-switch-slider round",
                            style: {
                                borderRadius: switchRadius + "px"
                            } })
                    )
                ),
                showLabel && wp.element.createElement(
                    "div",
                    { className: "premium-content-switcher-second-label" },
                    wp.element.createElement(
                        "h3",
                        { style: {
                                color: secondLabelColor,
                                letterSpacing: secondLabelLetter + "px",
                                textTransform: secondLabelUpper ? "uppercase" : "none",
                                fontStyle: secondLabelStyle,
                                fontWeight: secondLabelWeight,
                                textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
                            } },
                        secondLabel
                    )
                )
            ),
            wp.element.createElement(
                "div",
                { className: "premium-content-switcher-list " + (effect == 'slide' ? "slide-" + slide : "") },
                wp.element.createElement(
                    "ul",
                    { className: "premium-content-switcher-two-content" },
                    wp.element.createElement(
                        "li",
                        { className: "premium-content-switcher-is-visible premium-content-switcher-first-list " + block_id,
                            style: {
                                background: firstContentBGColor,
                                borderStyle: firstContentborderType,
                                borderWidth: firstContentborderWidth + "px",
                                borderRadius: firstContentborderRadius || 0 + "px",
                                borderColor: firstContentborderColor
                            } },
                        wp.element.createElement(RichText.Content, {
                            tagName: "p",
                            className: "premium-content-switcher-first-content",
                            value: firstContent,
                            style: {
                                textAlign: firstcontentlign,
                                justifyContent: firstcontentlign,
                                color: firstContentColor
                                // letterSpacing: firstContentLetter + "px",
                                // textTransform: firstContentUpper ? "uppercase" : "none",
                                // fontStyle: firstContentStyle,
                                // fontWeight: firstContentWeight,
                            }
                        })
                    ),
                    wp.element.createElement(
                        "li",
                        { className: "premium-content-switcher-is-hidden premium-content-switcher-second-list " + block_id,
                            style: {
                                background: secondContentBGColor,
                                borderStyle: secondContentborderType,
                                borderWidth: secondContentborderWidth + "px",
                                borderRadius: secondContentborderRadius || 0 + "px",
                                borderColor: secondContentborderColor
                            } },
                        wp.element.createElement(RichText.Content, {
                            tagName: "p",
                            className: "premium-content-switcher-second-content",
                            value: secondContent,
                            style: {
                                textAlign: secondcontentlign,
                                justifyContent: secondcontentlign,
                                color: secondContentColor
                                // letterSpacing: secondContentLetter + "px",
                                // textTransform: secondContentUpper ? "uppercase" : "none",
                                // fontStyle: secondContentStyle,
                                // fontWeight: secondContentWeight,
                            }
                        })
                    )
                )
            )
        )
    );
}

/***/ }),
/* 275 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__styling__ = __webpack_require__(276);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_range_responsive__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_text_shadow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_premium_padding_responsive__ = __webpack_require__(277);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_border__ = __webpack_require__(4);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var __ = wp.i18n.__;


var isBoxUpdated = null;

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette,
    RichText = _wp$editor.RichText;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Toolbar = _wp$components.Toolbar,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl;

var edit = function (_Component) {
    _inherits(edit, _Component);

    function edit() {
        _classCallCheck(this, edit);

        var _this = _possibleConstructorReturn(this, (edit.__proto__ || Object.getPrototypeOf(edit)).apply(this, arguments));

        _this.initToggleBox = _this.initToggleBox.bind(_this);
        return _this;
    }

    _createClass(edit, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            // Assigning id in the attribute.
            this.props.setAttributes({ block_id: this.props.clientId });
            this.props.setAttributes({ classMigrate: true });
            // Pushing Style tag for this block css.
            var $style = document.createElement("style");
            $style.setAttribute("id", "premium-style-content-switcher-" + this.props.clientId);
            document.head.appendChild($style);
            this.props.setAttributes({ switchCheck: false });
            setTimeout(this.initToggleBox, 10);
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            clearTimeout(isBoxUpdated);
            isBoxUpdated = setTimeout(this.initToggleBox, 10);
        }
    }, {
        key: "initToggleBox",
        value: function initToggleBox() {
            var _this2 = this;

            var _props$attributes = this.props.attributes,
                block_id = _props$attributes.block_id,
                switchCheck = _props$attributes.switchCheck;

            if (!block_id) return null;

            var toggleBox = document.getElementsByClassName("premium-content-switcher-toggle-switch-input " + block_id);
            setTimeout(toggleBox[0].addEventListener("click", function () {
                _this2.props.setAttributes({ switchCheck: !switchCheck });
                console.log(switchCheck);

                if (!switchCheck) {
                    var switchToggle = document.getElementsByClassName("premium-content-switcher-first-list " + block_id);
                    switchToggle[0].classList.remove("premium-content-switcher-is-visible");
                    switchToggle[0].classList.add("premium-content-switcher-is-hidden");
                    var switchTogglesecond = document.getElementsByClassName("premium-content-switcher-second-list " + block_id);
                    switchTogglesecond[0].classList.remove("premium-content-switcher-is-hidden");
                    switchTogglesecond[0].classList.add("premium-content-switcher-is-visible");
                } else {
                    var _switchToggle = document.getElementsByClassName("premium-content-switcher-second-list " + block_id);
                    _switchToggle[0].classList.remove("premium-content-switcher-is-visible");
                    _switchToggle[0].classList.add("premium-content-switcher-is-hidden");

                    var _switchTogglesecond = document.getElementsByClassName("premium-content-switcher-first-list " + block_id);
                    _switchTogglesecond[0].classList.remove("premium-content-switcher-is-hidden");
                    _switchTogglesecond[0].classList.add("premium-content-switcher-is-visible");
                }
            }), 10);
        }
    }, {
        key: "render",
        value: function render() {
            var _props = this.props,
                attributes = _props.attributes,
                setAttributes = _props.setAttributes,
                isSelected = _props.isSelected;
            var align = attributes.align,
                className = attributes.className,
                showLabel = attributes.showLabel,
                firstLabel = attributes.firstLabel,
                secondLabel = attributes.secondLabel,
                display = attributes.display,
                firstContent = attributes.firstContent,
                secondContent = attributes.secondContent,
                switchCheck = attributes.switchCheck,
                firstcontentlign = attributes.firstcontentlign,
                secondcontentlign = attributes.secondcontentlign,
                switchSize = attributes.switchSize,
                switchSizeTablet = attributes.switchSizeTablet,
                switchSizeType = attributes.switchSizeType,
                switchSizeMobile = attributes.switchSizeMobile,
                bottomSpacing = attributes.bottomSpacing,
                bottomSpacingTablet = attributes.bottomSpacingTablet,
                bottomSpacingMobile = attributes.bottomSpacingMobile,
                bottomSpacingType = attributes.bottomSpacingType,
                secondStateColor = attributes.secondStateColor,
                firstStateColor = attributes.firstStateColor,
                switcherBGColor = attributes.switcherBGColor,
                switchRadius = attributes.switchRadius,
                labelSpacing = attributes.labelSpacing,
                labelSpacingTablet = attributes.labelSpacingTablet,
                labelSpacingMobile = attributes.labelSpacingMobile,
                labelSpacingType = attributes.labelSpacingType,
                firstLabelColor = attributes.firstLabelColor,
                firstLabelWeight = attributes.firstLabelWeight,
                firstLabelLetter = attributes.firstLabelLetter,
                firstLabelUpper = attributes.firstLabelUpper,
                firstLabelStyle = attributes.firstLabelStyle,
                firstLabelfontSize = attributes.firstLabelfontSize,
                firstLabelfontSizeMobile = attributes.firstLabelfontSizeMobile,
                firstLabelfontSizeTablet = attributes.firstLabelfontSizeTablet,
                firstLabelfontSizeType = attributes.firstLabelfontSizeType,
                secondLabelColor = attributes.secondLabelColor,
                secondLabelWeight = attributes.secondLabelWeight,
                secondLabelLetter = attributes.secondLabelLetter,
                secondLabelUpper = attributes.secondLabelUpper,
                secondLabelStyle = attributes.secondLabelStyle,
                secondLabelfontSize = attributes.secondLabelfontSize,
                secondLabelfontSizeMobile = attributes.secondLabelfontSizeMobile,
                secondLabelfontSizeTablet = attributes.secondLabelfontSizeTablet,
                secondLabelfontSizeType = attributes.secondLabelfontSizeType,
                shadowColor = attributes.shadowColor,
                shadowBlur = attributes.shadowBlur,
                shadowHorizontal = attributes.shadowHorizontal,
                shadowVertical = attributes.shadowVertical,
                firstContentHeight = attributes.firstContentHeight,
                firstContentHeightTablet = attributes.firstContentHeightTablet,
                firstContentHeightType = attributes.firstContentHeightType,
                firstContentHeightMobile = attributes.firstContentHeightMobile,
                firstContentColor = attributes.firstContentColor,
                firstContentBGColor = attributes.firstContentBGColor,
                secondContentHeight = attributes.secondContentHeight,
                secondContentHeightTablet = attributes.secondContentHeightTablet,
                secondContentHeightType = attributes.secondContentHeightType,
                secondContentHeightMobile = attributes.secondContentHeightMobile,
                secondContentColor = attributes.secondContentColor,
                secondContentBGColor = attributes.secondContentBGColor,
                firstpaddingTop = attributes.firstpaddingTop,
                firstpaddingTopMobile = attributes.firstpaddingTopMobile,
                firstpaddingTopTablet = attributes.firstpaddingTopTablet,
                firstpaddingTopType = attributes.firstpaddingTopType,
                firstpaddingLeft = attributes.firstpaddingLeft,
                firstpaddingLeftMobile = attributes.firstpaddingLeftMobile,
                firstpaddingLeftTablet = attributes.firstpaddingLeftTablet,
                firstpaddingLeftType = attributes.firstpaddingLeftType,
                firstpaddingRight = attributes.firstpaddingRight,
                firstpaddingRightMobile = attributes.firstpaddingRightMobile,
                firstpaddingRightTablet = attributes.firstpaddingRightTablet,
                firstpaddingRightType = attributes.firstpaddingRightType,
                firstpaddingBottom = attributes.firstpaddingBottom,
                firstpaddingBottomMobile = attributes.firstpaddingBottomMobile,
                firstpaddingBottomTablet = attributes.firstpaddingBottomTablet,
                firstpaddingBottomType = attributes.firstpaddingBottomType,
                secondpaddingTop = attributes.secondpaddingTop,
                secondpaddingTopMobile = attributes.secondpaddingTopMobile,
                secondpaddingTopTablet = attributes.secondpaddingTopTablet,
                secondpaddingTopType = attributes.secondpaddingTopType,
                secondpaddingLeft = attributes.secondpaddingLeft,
                secondpaddingLeftMobile = attributes.secondpaddingLeftMobile,
                secondpaddingLeftTablet = attributes.secondpaddingLeftTablet,
                secondpaddingLeftType = attributes.secondpaddingLeftType,
                secondpaddingRight = attributes.secondpaddingRight,
                secondpaddingRightMobile = attributes.secondpaddingRightMobile,
                secondpaddingRightTablet = attributes.secondpaddingRightTablet,
                secondpaddingRightType = attributes.secondpaddingRightType,
                secondpaddingBottom = attributes.secondpaddingBottom,
                secondpaddingBottomMobile = attributes.secondpaddingBottomMobile,
                secondpaddingBottomTablet = attributes.secondpaddingBottomTablet,
                secondpaddingBottomType = attributes.secondpaddingBottomType,
                effect = attributes.effect,
                slide = attributes.slide,
                firstContentfontSize = attributes.firstContentfontSize,
                firstContentfontSizeMobile = attributes.firstContentfontSizeMobile,
                firstContentfontSizeTablet = attributes.firstContentfontSizeTablet,
                firstContentfontSizeType = attributes.firstContentfontSizeType,
                firstContentWeight = attributes.firstContentWeight,
                firstContentLetter = attributes.firstContentLetter,
                firstContentUpper = attributes.firstContentUpper,
                firstContentStyle = attributes.firstContentStyle,
                firstContentborderType = attributes.firstContentborderType,
                firstContentborderWidth = attributes.firstContentborderWidth,
                firstContentborderColor = attributes.firstContentborderColor,
                firstContentborderRadius = attributes.firstContentborderRadius,
                secondContentfontSize = attributes.secondContentfontSize,
                secondContentfontSizeType = attributes.secondContentfontSizeType,
                secondContentfontSizeMobile = attributes.secondContentfontSizeMobile,
                secondContentfontSizeTablet = attributes.secondContentfontSizeTablet,
                secondContentLetter = attributes.secondContentLetter,
                secondContentStyle = attributes.secondContentStyle,
                secondContentWeight = attributes.secondContentWeight,
                secondContentUpper = attributes.secondContentUpper,
                secondContentborderType = attributes.secondContentborderType,
                secondContentborderWidth = attributes.secondContentborderWidth,
                secondContentborderColor = attributes.secondContentborderColor,
                secondContentborderRadius = attributes.secondContentborderRadius;


            var DISPLAY = [{
                label: __("Block"),
                value: "block"
            }, {
                label: __("Inline"),
                value: "inline"
            }];
            var ALIGNS = ["left", "center", "right"];

            var EFFECTS = [{
                label: __("Fade"),
                value: "fade"
            }, {
                label: __("Slide"),
                value: "slide"
            }];
            var SLIDE = [{
                label: __("Top"),
                value: "top"
            }, {
                label: __("Left"),
                value: "left"
            }, {
                label: __("Bottom"),
                value: "bottom"
            }, {
                label: __("Right"),
                value: "right"
            }];

            var element = document.getElementById("premium-style-content-switcher-" + this.props.clientId);

            if (null != element && "undefined" != typeof element) {
                element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_1__styling__["a" /* default */])(this.props);
            }

            var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-content-switcher");
            return [isSelected && wp.element.createElement(
                BlockControls,
                null,
                wp.element.createElement(AlignmentToolbar, {
                    value: align,
                    onChange: function onChange(value) {
                        setAttributes({ align: value });
                    }
                })
            ), isSelected && wp.element.createElement(
                InspectorControls,
                null,
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("General Settings"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(ToggleControl, {
                        label: __("Show Labels"),
                        checked: showLabel,
                        onChange: function onChange(newCheck) {
                            return setAttributes({ showLabel: newCheck });
                        }
                    }),
                    showLabel && wp.element.createElement(
                        Fragment,
                        null,
                        wp.element.createElement(TextControl, {
                            label: __("First Label"),
                            value: firstLabel,
                            onChange: function onChange(value) {
                                return setAttributes({ firstLabel: value });
                            }
                        }),
                        wp.element.createElement(TextControl, {
                            label: __("Second Label"),
                            value: secondLabel,
                            onChange: function onChange(value) {
                                return setAttributes({ secondLabel: value });
                            }
                        }),
                        wp.element.createElement(SelectControl, {
                            label: __("Display"),
                            options: DISPLAY,
                            value: display,
                            onChange: function onChange(newValue) {
                                return setAttributes({ display: newValue });
                            }
                        })
                    ),
                    wp.element.createElement(
                        "p",
                        null,
                        __("First Content Alignment")
                    ),
                    wp.element.createElement(Toolbar, {
                        controls: ALIGNS.map(function (contentAlign) {
                            return {
                                icon: "editor-align" + contentAlign,
                                isActive: contentAlign === firstcontentlign,
                                onClick: function onClick() {
                                    return setAttributes({ firstcontentlign: contentAlign });
                                }
                            };
                        })
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Second Content Alignment")
                    ),
                    wp.element.createElement(Toolbar, {
                        controls: ALIGNS.map(function (contentAlign) {
                            return {
                                icon: "editor-align" + contentAlign,
                                isActive: contentAlign === secondcontentlign,
                                onClick: function onClick() {
                                    return setAttributes({ secondcontentlign: contentAlign });
                                }
                            };
                        })
                    }),
                    wp.element.createElement(SelectControl, {
                        label: __("Effect"),
                        options: EFFECTS,
                        value: effect,
                        onChange: function onChange(newEffect) {
                            return setAttributes({ effect: newEffect });
                        }
                    }),
                    effect == 'slide' && wp.element.createElement(SelectControl, {
                        label: __("Slide Direction"),
                        options: SLIDE,
                        value: slide,
                        onChange: function onChange(newEffect) {
                            return setAttributes({ slide: newEffect });
                        }
                    })
                ),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Switcher Style"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: switchSizeType, label: __("switchSizeType") },
                        range: { value: switchSize, label: __("switchSize") },
                        rangeMobile: { value: switchSizeMobile, label: __("switchSizeMobile") },
                        rangeTablet: { value: switchSizeTablet, label: __("switchSizeTablet") },
                        rangeLabel: __("Size")
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: bottomSpacingType, label: __("bottomSpacingType") },
                        range: { value: bottomSpacing, label: __("bottomSpacing") },
                        rangeMobile: { value: bottomSpacingMobile, label: __("bottomSpacingMobile") },
                        rangeTablet: { value: bottomSpacingTablet, label: __("bottomSpacingTablet") },
                        rangeLabel: __("Bottom Spacing")
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("First State Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: firstStateColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                firstStateColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Second State Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: secondStateColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                secondStateColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Background Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: switcherBGColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                switcherBGColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(RangeControl, {
                        label: __("Border Radius"),
                        value: switchRadius,
                        onChange: function onChange(newValue) {
                            return setAttributes({ switchRadius: newValue });
                        },
                        initialPosition: 50,
                        allowReset: true
                    })
                ),
                showLabel && wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Labels Style"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: labelSpacingType, label: __("labelSpacingType") },
                        range: { value: labelSpacing, label: __("labelSpacing") },
                        rangeMobile: { value: labelSpacingMobile, label: __("labelSpacingMobile") },
                        rangeTablet: { value: labelSpacingTablet, label: __("labelSpacingTablet") },
                        rangeLabel: __("Spacing")
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_text_shadow__["a" /* default */], {
                        color: shadowColor,
                        blur: shadowBlur,
                        horizontal: shadowHorizontal,
                        vertical: shadowVertical,
                        onChangeColor: function onChangeColor(newColor) {
                            return setAttributes({ shadowColor: newColor.hex });
                        },
                        onChangeBlur: function onChangeBlur(newBlur) {
                            return setAttributes({ shadowBlur: newBlur });
                        },
                        onChangehHorizontal: function onChangehHorizontal(newValue) {
                            return setAttributes({ shadowHorizontal: newValue });
                        },
                        onChangeVertical: function onChangeVertical(newValue) {
                            return setAttributes({ shadowVertical: newValue });
                        }
                    }),
                    wp.element.createElement("hr", null),
                    wp.element.createElement(
                        "h2",
                        { className: "premium-content-switcher-labels-style" },
                        __("First Label")
                    ),
                    wp.element.createElement(
                        "p",
                        null,
                        __("First Label Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: firstLabelColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                firstLabelColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_typo__["a" /* default */], {
                        components: ["responsiveSize", "weight", "style", "upper", "spacing"],
                        setAttributes: setAttributes,
                        fontSizeType: { value: firstLabelfontSizeType, label: __("firstLabelfontSizeType") },
                        fontSize: { value: firstLabelfontSize, label: __("firstLabelfontSize") },
                        fontSizeMobile: { value: firstLabelfontSizeMobile, label: __("firstLabelfontSizeMobile") },
                        fontSizeTablet: { value: firstLabelfontSizeTablet, label: __("firstLabelfontSizeTablet") },
                        weight: firstLabelWeight,
                        style: firstLabelStyle,
                        spacing: firstLabelLetter,
                        upper: firstLabelUpper,
                        onChangeWeight: function onChangeWeight(newWeight) {
                            return setAttributes({ firstLabelWeight: newWeight || 500 });
                        },
                        onChangeStyle: function onChangeStyle(newStyle) {
                            return setAttributes({ firstLabelStyle: newStyle });
                        },
                        onChangeSpacing: function onChangeSpacing(newValue) {
                            return setAttributes({ firstLabelLetter: newValue });
                        },
                        onChangeUpper: function onChangeUpper(check) {
                            return setAttributes({ firstLabelUpper: check });
                        }
                    }),
                    wp.element.createElement("hr", null),
                    wp.element.createElement(
                        "h2",
                        { className: "premium-content-switcher-labels-style" },
                        __("Second Label")
                    ),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Second Label Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: secondLabelColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                secondLabelColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_typo__["a" /* default */], {
                        components: ["responsiveSize", "weight", "style", "upper", "spacing"],
                        setAttributes: setAttributes,
                        fontSizeType: { value: secondLabelfontSizeType, label: __("secondLabelfontSizeType") },
                        fontSize: { value: secondLabelfontSize, label: __("secondLabelfontSize") },
                        fontSizeMobile: { value: secondLabelfontSizeMobile, label: __("secondLabelfontSizeMobile") },
                        fontSizeTablet: { value: secondLabelfontSizeTablet, label: __("secondLabelfontSizeTablet") },
                        weight: secondLabelWeight,
                        style: secondLabelStyle,
                        spacing: secondLabelLetter,
                        upper: secondLabelUpper,
                        onChangeWeight: function onChangeWeight(newWeight) {
                            return setAttributes({ secondLabelWeight: newWeight || 500 });
                        },
                        onChangeStyle: function onChangeStyle(newStyle) {
                            return setAttributes({ secondLabelStyle: newStyle });
                        },
                        onChangeSpacing: function onChangeSpacing(newValue) {
                            return setAttributes({ secondLabelLetter: newValue });
                        },
                        onChangeUpper: function onChangeUpper(check) {
                            return setAttributes({ secondLabelUpper: check });
                        }
                    })
                ),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("First Content Style"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: firstContentHeightType, label: __("firstContentHeightType") },
                        range: { value: firstContentHeight, label: __("firstContentHeight") },
                        rangeMobile: { value: firstContentHeightMobile, label: __("firstContentHeightMobile") },
                        rangeTablet: { value: firstContentHeightTablet, label: __("firstContentHeightTablet") },
                        rangeLabel: __("Height")
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Text Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: firstContentColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                firstContentColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Background Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: firstContentBGColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                firstContentBGColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_padding_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        paddingTopType: { value: firstpaddingTopType, label: __("firstpaddingTopType") },
                        paddingTop: { value: firstpaddingTop, label: __("firstpaddingTop") },
                        paddingTopMobile: { value: firstpaddingTopMobile, label: __("firstpaddingTopMobile") },
                        paddingTopTablet: { value: firstpaddingTopTablet, label: __("firstpaddingTopTablet") },
                        paddingBottomType: { value: firstpaddingBottomType, label: __("firstpaddingBottomType") },
                        paddingBottom: { value: firstpaddingBottom, label: __("firstpaddingBottom") },
                        paddingBottomMobile: { value: firstpaddingBottomMobile, label: __("firstpaddingBottomMobile") },
                        paddingBottomTablet: { value: firstpaddingBottomTablet, label: __("firstpaddingBottomTablet") },
                        paddingRightType: { value: firstpaddingRightType, label: __("firstpaddingRightType") },
                        paddingRight: { value: firstpaddingRight, label: __("firstpaddingRight") },
                        paddingRightMobile: { value: firstpaddingRightMobile, label: __("firstpaddingRightMobile") },
                        paddingRightTablet: { value: firstpaddingRightTablet, label: __("firstpaddingRightTablet") },
                        paddingLeftType: { value: firstpaddingLeftType, label: __("firstpaddingLeftType") },
                        paddingLeft: { value: firstpaddingLeft, label: __("firstpaddingLeft") },
                        paddingLeftMobile: { value: firstpaddingLeftMobile, label: __("firstpaddingLeftMobile") },
                        paddingLeftTablet: { value: firstpaddingLeftTablet, label: __("firstpaddingLeftTablet") }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_typo__["a" /* default */], {
                        components: ["responsiveSize", "weight", "style", "upper", "spacing"],
                        setAttributes: setAttributes,
                        fontSizeType: { value: firstContentfontSizeType, label: __("firstContentfontSizeType") },
                        fontSize: { value: firstContentfontSize, label: __("firstContentfontSize") },
                        fontSizeMobile: { value: firstContentfontSizeMobile, label: __("firstContentfontSizeMobile") },
                        fontSizeTablet: { value: firstContentfontSizeTablet, label: __("firstContentfontSizeTablet") },
                        weight: firstContentWeight,
                        style: firstContentStyle,
                        spacing: firstContentLetter,
                        upper: firstContentUpper,
                        onChangeWeight: function onChangeWeight(newWeight) {
                            return setAttributes({ firstContentWeight: newWeight || 500 });
                        },
                        onChangeStyle: function onChangeStyle(newStyle) {
                            return setAttributes({ firstContentStyle: newStyle });
                        },
                        onChangeSpacing: function onChangeSpacing(newValue) {
                            return setAttributes({ firstContentLetter: newValue });
                        },
                        onChangeUpper: function onChangeUpper(check) {
                            return setAttributes({ firstContentUpper: check });
                        }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_border__["a" /* default */], {
                        borderType: firstContentborderType,
                        borderWidth: firstContentborderWidth,
                        borderColor: firstContentborderColor,
                        borderRadius: firstContentborderRadius,
                        onChangeType: function onChangeType(newType) {
                            return setAttributes({ firstContentborderType: newType });
                        },
                        onChangeWidth: function onChangeWidth(newWidth) {
                            return setAttributes({ firstContentborderWidth: newWidth });
                        },
                        onChangeColor: function onChangeColor(colorValue) {
                            return setAttributes({ firstContentborderColor: colorValue.hex });
                        },
                        onChangeRadius: function onChangeRadius(newrRadius) {
                            return setAttributes({ firstContentborderRadius: newrRadius });
                        }
                    })
                ),
                wp.element.createElement(
                    PanelBody,
                    {
                        title: __("Second Content Style"),
                        className: "premium-panel-body",
                        initialOpen: false
                    },
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_range_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        rangeType: { value: secondContentHeightType, label: __("secondContentHeightType") },
                        range: { value: secondContentHeight, label: __("secondContentHeight") },
                        rangeMobile: { value: secondContentHeightMobile, label: __("secondContentHeightMobile") },
                        rangeTablet: { value: secondContentHeightTablet, label: __("secondContentHeightTablet") },
                        rangeLabel: __("Height")
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Text Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: secondContentColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                secondContentColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(
                        "p",
                        null,
                        __("Background Color")
                    ),
                    wp.element.createElement(ColorPalette, {
                        value: secondContentBGColor,
                        onChange: function onChange(newValue) {
                            return setAttributes({
                                secondContentBGColor: newValue
                            });
                        },
                        allowReset: true
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_premium_padding_responsive__["a" /* default */], {
                        setAttributes: setAttributes,
                        paddingTopType: { value: secondpaddingTopType, label: __("secondpaddingTopType") },
                        paddingTop: { value: secondpaddingTop, label: __("secondpaddingTop") },
                        paddingTopMobile: { value: secondpaddingTopMobile, label: __("secondpaddingTopMobile") },
                        paddingTopTablet: { value: secondpaddingTopTablet, label: __("secondpaddingTopTablet") },
                        paddingBottomType: { value: secondpaddingBottomType, label: __("secondpaddingBottomType") },
                        paddingBottom: { value: secondpaddingBottom, label: __("secondpaddingBottom") },
                        paddingBottomMobile: { value: secondpaddingBottomMobile, label: __("secondpaddingBottomMobile") },
                        paddingBottomTablet: { value: secondpaddingBottomTablet, label: __("secondpaddingBottomTablet") },
                        paddingRightType: { value: secondpaddingRightType, label: __("secondpaddingRightType") },
                        paddingRight: { value: secondpaddingRight, label: __("secondpaddingRight") },
                        paddingRightMobile: { value: secondpaddingRightMobile, label: __("secondpaddingRightMobile") },
                        paddingRightTablet: { value: secondpaddingRightTablet, label: __("secondpaddingRightTablet") },
                        paddingLeftType: { value: secondpaddingLeftType, label: __("secondpaddingLeftType") },
                        paddingLeft: { value: secondpaddingLeft, label: __("secondpaddingLeft") },
                        paddingLeftMobile: { value: secondpaddingLeftMobile, label: __("secondpaddingLeftMobile") },
                        paddingLeftTablet: { value: secondpaddingLeftTablet, label: __("secondpaddingLeftTablet") }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_typo__["a" /* default */], {
                        components: ["responsiveSize", "weight", "style", "upper", "spacing"],
                        setAttributes: setAttributes,
                        fontSizeType: { value: secondContentfontSizeType, label: __("secondContentfontSizeType") },
                        fontSize: { value: secondContentfontSize, label: __("secondContentfontSize") },
                        fontSizeMobile: { value: secondContentfontSizeMobile, label: __("secondContentfontSizeMobile") },
                        fontSizeTablet: { value: secondContentfontSizeTablet, label: __("secondContentfontSizeTablet") },
                        weight: secondContentWeight,
                        style: secondContentStyle,
                        spacing: secondContentLetter,
                        upper: secondContentUpper,
                        onChangeWeight: function onChangeWeight(newWeight) {
                            return setAttributes({ secondContentWeight: newWeight || 500 });
                        },
                        onChangeStyle: function onChangeStyle(newStyle) {
                            return setAttributes({ secondContentStyle: newStyle });
                        },
                        onChangeSpacing: function onChangeSpacing(newValue) {
                            return setAttributes({ secondContentLetter: newValue });
                        },
                        onChangeUpper: function onChangeUpper(check) {
                            return setAttributes({ secondContentUpper: check });
                        }
                    }),
                    wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_border__["a" /* default */], {
                        borderType: secondContentborderType,
                        borderWidth: secondContentborderWidth,
                        borderColor: secondContentborderColor,
                        borderRadius: secondContentborderRadius,
                        onChangeType: function onChangeType(newType) {
                            return setAttributes({ secondContentborderType: newType });
                        },
                        onChangeWidth: function onChangeWidth(newWidth) {
                            return setAttributes({ secondContentborderWidth: newWidth });
                        },
                        onChangeColor: function onChangeColor(colorValue) {
                            return setAttributes({ secondContentborderColor: colorValue.hex });
                        },
                        onChangeRadius: function onChangeRadius(newrRadius) {
                            return setAttributes({ secondContentborderRadius: newrRadius });
                        }
                    })
                )
            ), wp.element.createElement(
                "div",
                { className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-block-" + this.props.clientId), style: {
                        textAlign: align
                    } },
                wp.element.createElement(
                    "div",
                    { className: "premium-content-switcher",
                        style: {
                            textAlign: align
                        } },
                    wp.element.createElement(
                        "div",
                        { className: "premium-content-switcher-toggle-" + display,
                            style: {
                                textAlign: align,
                                justifyContent: align == "right" ? "flex-end" : align,
                                alignItems: align
                            } },
                        showLabel && wp.element.createElement(
                            "div",
                            { className: "premium-content-switcher-first-label" },
                            wp.element.createElement(
                                "h3",
                                { style: {
                                        color: firstLabelColor,
                                        letterSpacing: firstLabelLetter + "px",
                                        textTransform: firstLabelUpper ? "uppercase" : "none",
                                        fontStyle: firstLabelStyle,
                                        fontWeight: firstLabelWeight,
                                        textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
                                    } },
                                firstLabel
                            )
                        ),
                        wp.element.createElement(
                            "div",
                            { className: "premium-content-switcher-toggle-switch" },
                            wp.element.createElement(
                                "label",
                                { className: "premium-content-switcher-toggle-switch-label" },
                                wp.element.createElement("input", { type: "checkbox", className: "premium-content-switcher-toggle-switch-input " + this.props.clientId }),
                                wp.element.createElement("span", { className: "premium-content-switcher-toggle-switch-slider round",
                                    style: {
                                        borderRadius: switchRadius + "px"
                                    } })
                            )
                        ),
                        showLabel && wp.element.createElement(
                            "div",
                            { className: "premium-content-switcher-second-label" },
                            wp.element.createElement(
                                "h3",
                                { style: {
                                        color: secondLabelColor,
                                        letterSpacing: secondLabelLetter + "px",
                                        textTransform: secondLabelUpper ? "uppercase" : "none",
                                        fontStyle: secondLabelStyle,
                                        fontWeight: secondLabelWeight,
                                        textShadow: shadowHorizontal + "px " + shadowVertical + "px " + shadowBlur + "px " + shadowColor
                                    } },
                                secondLabel
                            )
                        )
                    ),
                    wp.element.createElement(
                        "div",
                        { className: "premium-content-switcher-list " + (effect == 'slide' ? "slide-" + slide : "") },
                        wp.element.createElement(
                            "ul",
                            { className: "premium-content-switcher-two-content" },
                            wp.element.createElement(
                                "li",
                                { className: "premium-content-switcher-is-visible premium-content-switcher-first-list " + this.props.clientId,
                                    style: {
                                        background: firstContentBGColor,
                                        borderStyle: firstContentborderType,
                                        borderWidth: firstContentborderWidth + "px",
                                        borderRadius: firstContentborderRadius || 0 + "px",
                                        borderColor: firstContentborderColor
                                    } },
                                wp.element.createElement(RichText, {
                                    tagName: "p",
                                    className: "premium-content-switcher-first-content",
                                    value: firstContent,
                                    onChange: function onChange(value) {
                                        setAttributes({ firstContent: value });
                                    },
                                    style: {
                                        textAlign: firstcontentlign,
                                        justifyContent: firstcontentlign,
                                        color: firstContentColor
                                        // letterSpacing: firstContentLetter + "px",
                                        // textTransform: firstContentUpper ? "uppercase" : "none",
                                        // fontStyle: firstContentStyle,
                                        // fontWeight: firstContentWeight,
                                    }
                                })
                            ),
                            wp.element.createElement(
                                "li",
                                { className: "premium-content-switcher-is-hidden premium-content-switcher-second-list " + this.props.clientId,
                                    style: {
                                        background: secondContentBGColor,
                                        borderStyle: secondContentborderType,
                                        borderWidth: secondContentborderWidth + "px",
                                        borderRadius: secondContentborderRadius || 0 + "px",
                                        borderColor: secondContentborderColor
                                    } },
                                wp.element.createElement(RichText, {
                                    tagName: "p",
                                    className: "premium-content-switcher-second-content",
                                    value: secondContent,
                                    onChange: function onChange(value) {
                                        setAttributes({ secondContent: value });
                                    },
                                    style: {
                                        textAlign: secondcontentlign,
                                        justifyContent: secondcontentlign,
                                        color: secondContentColor
                                        // letterSpacing: secondContentLetter + "px",
                                        // textTransform: secondContentUpper ? "uppercase" : "none",
                                        // fontStyle: secondContentStyle,
                                        // fontWeight: secondContentWeight,
                                    }
                                })
                            )
                        )
                    )
                )
            )];
        }
    }]);

    return edit;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 276 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__icon_list_generateCss__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__ = __webpack_require__(102);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function styling(props) {
    var _selectors, _mobile_selectors, _tablet_selectors;

    var _props$attributes = props.attributes,
        switchSize = _props$attributes.switchSize,
        switchSizeTablet = _props$attributes.switchSizeTablet,
        switchSizeType = _props$attributes.switchSizeType,
        switchSizeMobile = _props$attributes.switchSizeMobile,
        classMigrate = _props$attributes.classMigrate,
        display = _props$attributes.display,
        bottomSpacingType = _props$attributes.bottomSpacingType,
        bottomSpacing = _props$attributes.bottomSpacing,
        bottomSpacingMobile = _props$attributes.bottomSpacingMobile,
        bottomSpacingTablet = _props$attributes.bottomSpacingTablet,
        secondStateColor = _props$attributes.secondStateColor,
        firstStateColor = _props$attributes.firstStateColor,
        switcherBGColor = _props$attributes.switcherBGColor,
        labelSpacingTablet = _props$attributes.labelSpacingTablet,
        labelSpacingType = _props$attributes.labelSpacingType,
        labelSpacing = _props$attributes.labelSpacing,
        labelSpacingMobile = _props$attributes.labelSpacingMobile,
        firstLabelfontSizeTablet = _props$attributes.firstLabelfontSizeTablet,
        firstLabelfontSize = _props$attributes.firstLabelfontSize,
        firstLabelfontSizeType = _props$attributes.firstLabelfontSizeType,
        firstLabelfontSizeMobile = _props$attributes.firstLabelfontSizeMobile,
        secondLabelfontSize = _props$attributes.secondLabelfontSize,
        secondLabelfontSizeMobile = _props$attributes.secondLabelfontSizeMobile,
        secondLabelfontSizeTablet = _props$attributes.secondLabelfontSizeTablet,
        secondLabelfontSizeType = _props$attributes.secondLabelfontSizeType,
        firstContentHeightTablet = _props$attributes.firstContentHeightTablet,
        firstContentHeightType = _props$attributes.firstContentHeightType,
        firstContentHeight = _props$attributes.firstContentHeight,
        firstContentHeightMobile = _props$attributes.firstContentHeightMobile,
        secondContentHeightTablet = _props$attributes.secondContentHeightTablet,
        secondContentHeightType = _props$attributes.secondContentHeightType,
        secondContentHeight = _props$attributes.secondContentHeight,
        secondContentHeightMobile = _props$attributes.secondContentHeightMobile,
        firstpaddingTop = _props$attributes.firstpaddingTop,
        firstpaddingTopType = _props$attributes.firstpaddingTopType,
        firstpaddingTopMobile = _props$attributes.firstpaddingTopMobile,
        firstpaddingTopTablet = _props$attributes.firstpaddingTopTablet,
        firstpaddingRight = _props$attributes.firstpaddingRight,
        firstpaddingRightMobile = _props$attributes.firstpaddingRightMobile,
        firstpaddingRightTablet = _props$attributes.firstpaddingRightTablet,
        firstpaddingRightType = _props$attributes.firstpaddingRightType,
        firstpaddingLeft = _props$attributes.firstpaddingLeft,
        firstpaddingLeftMobile = _props$attributes.firstpaddingLeftMobile,
        firstpaddingLeftTablet = _props$attributes.firstpaddingLeftTablet,
        firstpaddingLeftType = _props$attributes.firstpaddingLeftType,
        firstpaddingBottom = _props$attributes.firstpaddingBottom,
        firstpaddingBottomMobile = _props$attributes.firstpaddingBottomMobile,
        firstpaddingBottomTablet = _props$attributes.firstpaddingBottomTablet,
        firstpaddingBottomType = _props$attributes.firstpaddingBottomType,
        secondpaddingTop = _props$attributes.secondpaddingTop,
        secondpaddingTopType = _props$attributes.secondpaddingTopType,
        secondpaddingTopMobile = _props$attributes.secondpaddingTopMobile,
        secondpaddingTopTablet = _props$attributes.secondpaddingTopTablet,
        secondpaddingRight = _props$attributes.secondpaddingRight,
        secondpaddingRightMobile = _props$attributes.secondpaddingRightMobile,
        secondpaddingRightTablet = _props$attributes.secondpaddingRightTablet,
        secondpaddingRightType = _props$attributes.secondpaddingRightType,
        secondpaddingLeft = _props$attributes.secondpaddingLeft,
        secondpaddingLeftMobile = _props$attributes.secondpaddingLeftMobile,
        secondpaddingLeftTablet = _props$attributes.secondpaddingLeftTablet,
        secondpaddingLeftType = _props$attributes.secondpaddingLeftType,
        secondpaddingBottom = _props$attributes.secondpaddingBottom,
        secondpaddingBottomMobile = _props$attributes.secondpaddingBottomMobile,
        secondpaddingBottomTablet = _props$attributes.secondpaddingBottomTablet,
        secondpaddingBottomType = _props$attributes.secondpaddingBottomType,
        switchRadius = _props$attributes.switchRadius,
        switchRadiusType = _props$attributes.switchRadiusType,
        firstContentfontSizeTablet = _props$attributes.firstContentfontSizeTablet,
        firstContentfontSizeType = _props$attributes.firstContentfontSizeType,
        firstContentfontSize = _props$attributes.firstContentfontSize,
        firstContentfontSizeMobile = _props$attributes.firstContentfontSizeMobile,
        firstContentLetter = _props$attributes.firstContentLetter,
        firstContentStyle = _props$attributes.firstContentStyle,
        firstContentUpper = _props$attributes.firstContentUpper,
        firstContentWeight = _props$attributes.firstContentWeight,
        secondContentfontSize = _props$attributes.secondContentfontSize,
        secondContentfontSizeTablet = _props$attributes.secondContentfontSizeTablet,
        secondContentfontSizeType = _props$attributes.secondContentfontSizeType,
        secondContentfontSizeMobile = _props$attributes.secondContentfontSizeMobile,
        secondContentUpper = _props$attributes.secondContentUpper,
        secondContentWeight = _props$attributes.secondContentWeight,
        secondContentStyle = _props$attributes.secondContentStyle,
        secondContentLetter = _props$attributes.secondContentLetter;


    var selectors = {};
    var tablet_selectors = {};
    var mobile_selectors = {};

    selectors = (_selectors = {
        " .premium-content-switcher-toggle-switch": {
            "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(switchSize, switchSizeType)
        }
    }, _defineProperty(_selectors, " .premium-content-switcher-toggle-" + display, {
        "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(bottomSpacing, bottomSpacingType)
    }), _defineProperty(_selectors, " .premium-content-switcher-toggle-switch-slider::before", {
        "background": firstStateColor,
        "border-radius": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(switchRadius, switchRadiusType)
    }), _defineProperty(_selectors, " .premium-content-switcher-toggle-switch-label input:checked + .premium-content-switcher-toggle-switch-slider::before", {
        "background": secondStateColor,
        "border-radius": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(switchRadius, switchRadiusType)
    }), _defineProperty(_selectors, " .premium-content-switcher-toggle-switch-slider", {
        "background": switcherBGColor
    }), _defineProperty(_selectors, " .premium-content-switcher-first-label", {
        "margin-right": display == 'inline' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacing, labelSpacingType) : "",
        "margin-bottom": display == 'block' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacing, labelSpacingType) : ""
    }), _defineProperty(_selectors, " .premium-content-switcher-first-label h3", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstLabelfontSize, firstLabelfontSizeType)
    }), _defineProperty(_selectors, " .premium-content-switcher-second-label", {
        "margin-left": display == 'inline' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacing, labelSpacingType) : "",
        "margin-top": display == 'block' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacing, labelSpacingType) : ""
    }), _defineProperty(_selectors, " .premium-content-switcher-second-label h3", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondLabelfontSize, secondLabelfontSizeType)
    }), _defineProperty(_selectors, " .premium-content-switcher-first-list", {
        "min-height": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstContentHeight, firstContentHeightType),
        "padding-top": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingTop, firstpaddingTopType),
        "padding-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingBottom, firstpaddingBottomType),
        "padding-right": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingRight, firstpaddingRightType),
        "padding-left": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingLeft, firstpaddingLeftType)
    }), _defineProperty(_selectors, " .premium-content-switcher-second-list", {
        "min-height": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondContentHeight, secondContentHeightType),
        "padding-top": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingTop, secondpaddingTopType),
        "padding-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingBottom, secondpaddingBottomType),
        "padding-right": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingRight, secondpaddingRightType),
        "padding-left": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingLeft, secondpaddingLeftType)
    }), _defineProperty(_selectors, " .premium-content-switcher-first-content", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstContentfontSize, firstContentfontSizeType) + "!important",
        "letter-spacing": firstContentLetter + "px" + "!important",
        "text-transform": firstContentUpper ? "uppercase" : "none" + "!important",
        "font-style": firstContentStyle + "!important",
        "font-weight": firstContentWeight + "!important"
    }), _defineProperty(_selectors, " .premium-content-switcher-second-content", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondContentfontSize, secondContentfontSizeType) + "!important",
        "letter-spacing": secondContentLetter + "px" + "!important",
        "text-transform": secondContentUpper ? "uppercase" : "none" + "!important",
        "font-style": secondContentStyle + "!important",
        "font-weight": secondContentWeight + "!important"
    }), _selectors);

    mobile_selectors = (_mobile_selectors = {
        " .premium-content-switcher-toggle-switch": {
            "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(switchSizeMobile, switchSizeType)
        }
    }, _defineProperty(_mobile_selectors, " .premium-content-switcher-toggle-" + display, {
        "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(bottomSpacingMobile, bottomSpacingType)
    }), _defineProperty(_mobile_selectors, " .premium-content-switcher-first-label", {
        "margin-right": display == 'inline' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacingMobile, labelSpacingType) : "",
        "margin-bottom": display == 'block' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacingMobile, labelSpacingType) : ""
    }), _defineProperty(_mobile_selectors, " .premium-content-switcher-first-label h3", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstLabelfontSizeMobile, firstLabelfontSizeType)
    }), _defineProperty(_mobile_selectors, " .premium-content-switcher-second-label", {
        "margin-left": display == 'inline' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacingMobile, labelSpacingType) : "",
        "margin-top": display == 'block' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacingMobile, labelSpacingType) : ""
    }), _defineProperty(_mobile_selectors, " .premium-content-switcher-second-label h3", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondLabelfontSizeMobile, secondLabelfontSizeType)
    }), _defineProperty(_mobile_selectors, " .premium-content-switcher-first-list", {
        "min-height": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstContentHeightMobile, firstContentHeightType),
        "padding-top": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingTopMobile, firstpaddingTopType),
        "padding-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingBottomMobile, firstpaddingBottomType),
        "padding-right": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingRightMobile, firstpaddingRightType),
        "padding-left": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingLeftMobile, firstpaddingLeftType)
    }), _defineProperty(_mobile_selectors, " .premium-content-switcher-second-list", {
        "min-height": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondContentHeightMobile, secondContentHeightType),
        "padding-top": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingTopMobile, secondpaddingTopType),
        "padding-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingBottomMobile, secondpaddingBottomType),
        "padding-right": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingRightMobile, secondpaddingRightType),
        "padding-left": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingLeftMobile, secondpaddingLeftType)
    }), _defineProperty(_mobile_selectors, " .premium-content-switcher-first-content", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstContentfontSizeMobile, firstContentfontSizeType) + "!important"
    }), _defineProperty(_mobile_selectors, " .premium-content-switcher-second-content", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondContentfontSizeMobile, secondContentfontSizeType) + "!important"
    }), _mobile_selectors);

    tablet_selectors = (_tablet_selectors = {
        " .premium-content-switcher-toggle-switch": {
            "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(switchSizeTablet, switchSizeType)
        }
    }, _defineProperty(_tablet_selectors, " .premium-content-switcher-toggle-" + display, {
        "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(bottomSpacingTablet, bottomSpacingType)
    }), _defineProperty(_tablet_selectors, " .premium-content-switcher-first-label", {
        "margin-right": display == 'inline' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacingTablet, labelSpacingType) : "",
        "margin-bottom": display == 'block' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacingTablet, labelSpacingType) : ""
    }), _defineProperty(_tablet_selectors, " .premium-content-switcher-first-label h3", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstLabelfontSizeTablet, firstLabelfontSizeType)
    }), _defineProperty(_tablet_selectors, " .premium-content-switcher-second-label", {
        "margin-left": display == 'inline' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacingTablet, labelSpacingType) : "",
        "margin-top": display == 'block' ? Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(labelSpacingTablet, labelSpacingType) : ""
    }), _defineProperty(_tablet_selectors, " .premium-content-switcher-second-label h3", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondLabelfontSizeTablet, secondLabelfontSizeType)
    }), _defineProperty(_tablet_selectors, " .premium-content-switcher-first-list", {
        "min-height": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstContentHeightTablet, firstContentHeightType),
        "padding-top": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingTopTablet, firstpaddingTopType),
        "padding-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingBottomTablet, firstpaddingBottomType),
        "padding-right": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingRightTablet, firstpaddingRightType),
        "padding-left": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstpaddingLeftTablet, firstpaddingLeftType)
    }), _defineProperty(_tablet_selectors, " .premium-content-switcher-second-list", {
        "min-height": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondContentHeightTablet, secondContentHeightType),
        "padding-top": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingTopTablet, secondpaddingTopType),
        "padding-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingBottomTablet, secondpaddingBottomType),
        "padding-right": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingRightTablet, secondpaddingRightType),
        "padding-left": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondpaddingLeftTablet, secondpaddingLeftType)
    }), _defineProperty(_tablet_selectors, " .premium-content-switcher-first-content", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(firstContentfontSizeTablet, firstContentfontSizeType) + "!important"
    }), _defineProperty(_tablet_selectors, " .premium-content-switcher-second-content", {
        "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__icon_list_generateCssUnit__["a" /* default */])(secondContentfontSizeTablet, secondContentfontSizeType) + "!important"
    }), _tablet_selectors);

    var styling_css = "";
    var id = '#premium-content-switcher-' + props.clientId;
    if (classMigrate) {
        id = '.premium-block-' + props.clientId;
    }

    styling_css = Object(__WEBPACK_IMPORTED_MODULE_0__icon_list_generateCss__["a" /* default */])(selectors, id);
    styling_css += Object(__WEBPACK_IMPORTED_MODULE_0__icon_list_generateCss__["a" /* default */])(tablet_selectors, id, true, "tablet");

    styling_css += Object(__WEBPACK_IMPORTED_MODULE_0__icon_list_generateCss__["a" /* default */])(mobile_selectors, id, true, "mobile");

    return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 277 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__premium_size_units__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__premium_responsive__ = __webpack_require__(30);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var __ = wp.i18n.__;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var _wp$components = wp.components,
    Dropdown = _wp$components.Dropdown,
    Button = _wp$components.Button;

var PremiumPaddingR = function (_Component) {
    _inherits(PremiumPaddingR, _Component);

    function PremiumPaddingR() {
        _classCallCheck(this, PremiumPaddingR);

        var _this = _possibleConstructorReturn(this, (PremiumPaddingR.__proto__ || Object.getPrototypeOf(PremiumPaddingR)).apply(this, arguments));

        _this.onAdvancedControlReset = _this.onAdvancedControlReset.bind(_this);
        return _this;
    }

    _createClass(PremiumPaddingR, [{
        key: "onAdvancedControlReset",
        value: function onAdvancedControlReset() {
            var setAttributes = this.props.setAttributes;
            // Reset padding to default.

            setAttributes(_defineProperty({}, this.props.paddingTop.label, ""));
            setAttributes(_defineProperty({}, this.props.paddingTopType.label, "px"));
            setAttributes(_defineProperty({}, this.props.paddingTopMobile.label, ""));
            setAttributes(_defineProperty({}, this.props.paddingTopTablet.label, ""));

            setAttributes(_defineProperty({}, this.props.paddingRight.label, ""));
            setAttributes(_defineProperty({}, this.props.paddingRightType.label, "px"));
            setAttributes(_defineProperty({}, this.props.paddingRightMobile.label, ""));
            setAttributes(_defineProperty({}, this.props.paddingRightTablet.label, ""));

            setAttributes(_defineProperty({}, this.props.paddingBottom.label, ""));
            setAttributes(_defineProperty({}, this.props.paddingBottomType.label, "px"));
            setAttributes(_defineProperty({}, this.props.paddingBottomMobile.label, ""));
            setAttributes(_defineProperty({}, this.props.paddingBottomTablet.label, ""));

            setAttributes(_defineProperty({}, this.props.paddingLeft.label, ""));
            setAttributes(_defineProperty({}, this.props.paddingLeftType.label, "px"));
            setAttributes(_defineProperty({}, this.props.paddingLeftMobile.label, ""));
            setAttributes(_defineProperty({}, this.props.paddingLeftTablet.label, ""));
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                showUnits = _props.showUnits,
                _props$onChangePadSiz = _props.onChangePadSizeUnit,
                onChangePadSizeUnit = _props$onChangePadSiz === undefined ? function () {} : _props$onChangePadSiz;

            return wp.element.createElement(
                "div",
                { className: "premium-control-toggle" },
                wp.element.createElement(
                    "strong",
                    null,
                    __("Padding")
                ),
                wp.element.createElement(Dropdown, {
                    className: "premium-control-toggle-btn",
                    contentClassName: "premium-control-toggle-content",
                    position: "bottom right",
                    renderToggle: function renderToggle(_ref) {
                        var isOpen = _ref.isOpen,
                            onToggle = _ref.onToggle;
                        return wp.element.createElement(
                            Button,
                            { isSmall: true, onClick: onToggle, "aria-expanded": isOpen },
                            wp.element.createElement("i", { className: "dashicons dashicons-edit" })
                        );
                    },
                    renderContent: function renderContent() {
                        return wp.element.createElement(
                            Fragment,
                            null,
                            showUnits && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__premium_size_units__["a" /* default */], { onChangeSizeUnit: onChangePadSizeUnit }),
                            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__premium_responsive__["a" /* default */], _extends({
                                type: _this2.props.paddingTopType,
                                typeLabel: _this2.props.paddingTopType.label,
                                sizeMobile: _this2.props.paddingTopMobile,
                                sizeMobileLabel: _this2.props.paddingTopMobile.label,
                                sizeTablet: _this2.props.paddingTopTablet,
                                sizeTabletLabel: _this2.props.paddingTopTablet.label,
                                size: _this2.props.paddingTop,
                                sizeLabel: _this2.props.paddingTop.label,
                                sizeMobileText: !_this2.props.paddingTopLabel ? __("padding Top") : _this2.props.paddingTopLabel,
                                sizeTabletText: !_this2.props.paddingTopLabel ? __("padding Top") : _this2.props.paddingTopLabel,
                                sizeText: !_this2.props.paddingTopLabel ? __("padding Top") : _this2.props.paddingTopLabel,
                                steps: 0.1
                            }, _this2.props)),
                            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__premium_responsive__["a" /* default */], _extends({
                                type: _this2.props.paddingRightType,
                                typeLabel: _this2.props.paddingRightType.label,
                                sizeMobile: _this2.props.paddingRightMobile,
                                sizeMobileLabel: _this2.props.paddingRightMobile.label,
                                sizeTablet: _this2.props.paddingRightTablet,
                                sizeTabletLabel: _this2.props.paddingRightTablet.label,
                                size: _this2.props.paddingRight,
                                sizeLabel: _this2.props.paddingRight.label,
                                sizeMobileText: !_this2.props.paddingRightLabel ? __("padding Right") : _this2.props.paddingTRightLabel,
                                sizeTabletText: !_this2.props.paddingRightLabel ? __("padding Right") : _this2.props.paddingRightLabel,
                                sizeText: !_this2.props.paddingRightLabel ? __("padding Right") : _this2.props.paddingRightLabel,
                                steps: 0.1
                            }, _this2.props)),
                            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__premium_responsive__["a" /* default */], _extends({
                                type: _this2.props.paddingBottomType,
                                typeLabel: _this2.props.paddingBottomType.label,
                                sizeMobile: _this2.props.paddingBottomMobile,
                                sizeMobileLabel: _this2.props.paddingBottomMobile.label,
                                sizeTablet: _this2.props.paddingBottomTablet,
                                sizeTabletLabel: _this2.props.paddingBottomTablet.label,
                                size: _this2.props.paddingBottom,
                                sizeLabel: _this2.props.paddingBottom.label,
                                sizeMobileText: !_this2.props.paddingBottomLabel ? __("padding Bottom") : _this2.props.paddingBottomLabel,
                                sizeTabletText: !_this2.props.paddingBottomLabel ? __("padding Bottom") : _this2.props.paddingBottomLabel,
                                sizeText: !_this2.props.paddingBottomLabel ? __("padding Bottom") : _this2.props.paddingBottomLabel,
                                steps: 0.1
                            }, _this2.props)),
                            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__premium_responsive__["a" /* default */], _extends({
                                type: _this2.props.paddingLeftType,
                                typeLabel: _this2.props.paddingLeftType.label,
                                sizeMobile: _this2.props.paddingLeftMobile,
                                sizeMobileLabel: _this2.props.paddingLeftMobile.label,
                                sizeTablet: _this2.props.paddingLeftTablet,
                                sizeTabletLabel: _this2.props.paddingLeftTablet.label,
                                size: _this2.props.paddingLeft,
                                sizeLabel: _this2.props.paddingLeft.label,
                                sizeMobileText: !_this2.props.paddingLeftLabel ? __("padding Left") : _this2.props.paddingLeftLabel,
                                sizeTabletText: !_this2.props.paddingLeftLabel ? __("padding Left") : _this2.props.paddingLeftLabel,
                                sizeText: !_this2.props.paddingLeftLabel ? __("padding Left") : _this2.props.paddingLeftLabel,
                                steps: 0.1
                            }, _this2.props))
                        );
                    }
                })
            );
        }
    }]);

    return PremiumPaddingR;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (PremiumPaddingR);

/***/ }),
/* 278 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(279);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__save__ = __webpack_require__(280);


var __ = wp.i18n.__;






var registerBlockType = wp.blocks.registerBlockType;


registerBlockType("premium/image-scroll", {
  title: __("Image Scroll"),
  icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__icons__["a" /* default */], { icon: "content-switcher" }),
  category: "premium-blocks",
  attributes: {
    title: {
      type: "string",
      source: "html",
      selector: "h2"
    },
    imageID: {
      type: "number"
    },

    imageURL: {
      type: "string",
      source: "attribute",
      attribute: "src",
      selector: ".premium-banner__img"
    },
    imageHeight: {
      type: "number"
    },
    imageAlt: {
      type: "string"
    },
    imageWidth: {
      type: "number"
    },
    urlCheck: {
      type: "boolean",
      default: false
    },
    url: {
      type: "string",
      source: "attribute",
      attribute: "href",
      selector: ".premium-banner__link"
    },
    target: {
      type: "boolean",
      default: false
    },
    height: {
      type: "number",
      default: 300
    },
    HeightU: {
      type: "string",
      default: "px"
    },

    width: {
      type: "number",
      default: "default"
    },
    effectDir: {
      type: "string",
      default: "vertical"
    },
    hoverEffect: {
      type: "string",
      default: "hover"
    },
    reverse: {
      type: "boolean",
      default: false
    },
    targetOverlay: {
      type: "boolean",
      default: false
    },
    background: {
      type: "string"
    },
    blur: {
      type: "number",
      default: "0"
    },
    bright: {
      type: "number",
      default: "100"
    },
    contrast: {
      type: "number",
      default: "100"
    },
    saturation: {
      type: "number",
      default: "100"
    },
    hue: {
      type: "number",
      default: "0"
    },
    borderType: {
      type: "string",
      default: "none"
    },
    borderWidth: {
      type: "number",
      default: "1"
    },
    borderRadius: {
      type: "number",
      default: "0"
    },
    borderColor: {
      type: "string"
    },
    containerShadowColor: {
      type: "string"
    },
    containerShadowBlur: {
      type: "number",
      default: "0"
    },
    containerShadowHorizontal: {
      type: "number",
      default: "0"
    },
    containerShadowVertical: {
      type: "number",
      default: "0"
    },
    containerShadowPosition: {
      type: "string",
      default: ""
    },
    blockID: {
      type: "string"
    },
    responsive: {
      type: "boolean",
      default: false
    },
    verAlign: {
      type: "string",
      default: "top"
    },
    paddingT: {
      type: "number"
    }
  },
  supports: {
    inserter: __WEBPACK_IMPORTED_MODULE_0__assets_js_settings__["o" /* scroll */]
  },
  example: {},

  edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
  save: __WEBPACK_IMPORTED_MODULE_3__save__["a" /* default */]
});

/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_premium_filters__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_size_units__ = __webpack_require__(7);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var __ = wp.i18n.__;
var Component = wp.element.Component;
var _wp$components = wp.components,
    IconButton = _wp$components.IconButton,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette,
    MediaUpload = _wp$editor.MediaUpload;

var scrollElement = void 0,
    imageScroll = void 0,
    scrollOverlay = void 0;
var transformOffset = null;

var edit = function (_Component) {
  _inherits(edit, _Component);

  function edit() {
    _classCallCheck(this, edit);

    return _possibleConstructorReturn(this, (edit.__proto__ || Object.getPrototypeOf(edit)).apply(this, arguments));
  }

  _createClass(edit, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _props = this.props,
          setAttributes = _props.setAttributes,
          clientId = _props.clientId;

      setAttributes({ blockID: clientId });
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          setAttributes = _props2.setAttributes,
          isSelected = _props2.isSelected,
          blockID = _props2.clientId;
      var _props$attributes = this.props.attributes,
          imageURL = _props$attributes.imageURL,
          imageID = _props$attributes.imageID,
          imageAlt = _props$attributes.imageAlt,
          imageWidth = _props$attributes.imageWidth,
          imageHeight = _props$attributes.imageHeight,
          url = _props$attributes.url,
          target = _props$attributes.target,
          urlCheck = _props$attributes.urlCheck,
          height = _props$attributes.height,
          minHeight = _props$attributes.minHeight,
          effectDir = _props$attributes.effectDir,
          HeightU = _props$attributes.HeightU,
          background = _props$attributes.background,
          targetOverlay = _props$attributes.targetOverlay,
          hoverEffect = _props$attributes.hoverEffect,
          blur = _props$attributes.blur,
          bright = _props$attributes.bright,
          contrast = _props$attributes.contrast,
          saturation = _props$attributes.saturation,
          hue = _props$attributes.hue,
          borderType = _props$attributes.borderType,
          borderWidth = _props$attributes.borderWidth,
          borderRadius = _props$attributes.borderRadius,
          borderColor = _props$attributes.borderColor,
          containerShadowColor = _props$attributes.containerShadowColor,
          containerShadowBlur = _props$attributes.containerShadowBlur,
          containerShadowHorizontal = _props$attributes.containerShadowHorizontal,
          containerShadowVertical = _props$attributes.containerShadowVertical,
          containerShadowPosition = _props$attributes.containerShadowPosition,
          reverse = _props$attributes.reverse;


      var hover = [{
        value: "vertical",
        label: __("Vertical")
      }, {
        value: "horizontal",
        label: __("Horizontal")
      }];

      var trigger = [{
        value: "hover",
        label: __("Hover")
      }, {
        value: "mouse-scroll",
        label: __("Mouse Scroll")
      }];

      var classVertical = "" + (effectDir === "vertical" && hoverEffect === "mouse-scroll" ? "premium-img-scroll-ver " : "");

      var reverseClasses = "" + (reverse && effectDir === "vertical" ? "premium-container-scroll-instant" : "");

      var classHorizontal = "" + (effectDir === "horizontal" && hoverEffect === "hover" ? "img-scroll-horizontal " : "");

      var containerClasses = "" + (hoverEffect === "mouse-scroll" ? "premium-container-scroll" : "");
      var overlayClasses = "" + (hoverEffect === "mouse-scroll" && effectDir === "horizontal" ? "premium-img-scroll-horizontal-overlay" : null);

      var onFileSelect = function onFileSelect(img) {
        setAttributes({
          imageURL: img.url,
          imageID: img.id,
          imageHeight: img.height,
          imageWidth: img.width,
          imageAlt: img.alt
        });
      };

      var startTransform = function startTransform() {
        imageScroll.style.cssText = "\n        transform:" + (effectDir === "vertical" ? "translateY" : "translateX") + "(-" + transformOffset + "px);";
      };

      var endTransform = function endTransform() {
        imageScroll.style.cssText = "transform:" + (effectDir === "vertical" ? "translateY" : "translateX") + "(0px);";
      };

      var setTransform = function setTransform() {
        if (effectDir === "vertical") {
          transformOffset = imageScroll.clientHeight - scrollElement.clientHeight;
        } else {
          if (hoverEffect === "hover") {
            transformOffset = imageScroll.clientWidth - scrollElement.clientWidth;
          } else {
            scrollOverlay.style.cssText = "width:" + imageWidth + ";\n         \n          ";
          }
        }

        if (hoverEffect === "mouse-scroll") {
          transformOffset = null;
        }
      };

      var mouseenter = function mouseenter() {
        scrollElement = document.getElementById("premium-scroll-" + blockID);
        imageScroll = scrollElement.querySelector(".premium-img-scroll");
        scrollOverlay = scrollElement.querySelector(".premium-img-scroll-overlay");

        setTransform();
        reverse ? endTransform() : startTransform();
        console.log(transformOffset);
      };

      var mouseleave = function mouseleave() {
        reverse ? startTransform() : endTransform();
      };
      var onChangeHeight = function onChangeHeight(newHeight) {
        if (HeightU === "em" && newHeight > 50) return 50;

        setAttributes({ height: newHeight });
      };
      return [isSelected && wp.element.createElement(
        InspectorControls,
        null,
        wp.element.createElement(
          PanelBody,
          {
            title: __("Image Settings"),
            className: "premium-panel-body",
            initialOpen: true
          },
          imageURL && wp.element.createElement("img", { src: imageURL }),
          wp.element.createElement(MediaUpload, {
            onSelect: onFileSelect,
            value: imageID,
            render: function render(_ref) {
              var open = _ref.open;
              return wp.element.createElement(
                IconButton,
                {
                  className: "premium-media-uplpad-btn",
                  label: __("Change Image"),
                  icon: "edit",
                  onClick: open
                },
                __("Change Image")
              );
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_size_units__["a" /* default */], {
            units: ["px", "em"],
            onChangeSizeUnit: function onChangeSizeUnit(newValue) {
              setAttributes({ HeightU: newValue });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Height"),
            value: height,
            onChange: onChangeHeight,
            max: HeightU === "em" ? 50 : 800
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Link"),
            checked: urlCheck,
            onChange: function onChange(newCheck) {
              return setAttributes({ urlCheck: newCheck });
            }
          }),
          urlCheck && wp.element.createElement(TextControl, {
            label: __("URL"),
            value: url,
            onChange: function onChange(newURL) {
              return setAttributes({ url: newURL });
            }
          }),
          urlCheck && wp.element.createElement(ToggleControl, {
            label: __("Open link in new tab"),
            checked: target,
            onChange: function onChange(newValue) {
              return setAttributes({ target: newValue });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Advanced Settings"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(SelectControl, {
            label: __("Direction"),
            options: hover,
            value: effectDir,
            onChange: function onChange(newEffect) {
              return setAttributes({ effectDir: newEffect });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Reverse Direction"),
            checked: reverse,
            onChange: function onChange(value) {
              return setAttributes({ reverse: value });
            }
          }),
          wp.element.createElement(SelectControl, {
            label: __("Trigger"),
            options: trigger,
            value: hoverEffect,
            onChange: function onChange(newEffect) {
              return setAttributes({ hoverEffect: newEffect });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Overlay"),
            checked: targetOverlay,
            onChange: function onChange(Overlay) {
              return setAttributes({ targetOverlay: Overlay });
            }
          }),
          targetOverlay && wp.element.createElement(ColorPalette, {
            value: background,
            onChange: function onChange(newValue) {
              return setAttributes({
                background: newValue === undefined ? "transparent" : newValue
              });
            },
            allowReset: true
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Image Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_premium_filters__["a" /* default */], {
            blur: blur,
            bright: bright,
            contrast: contrast,
            saturation: saturation,
            hue: hue,
            onChangeBlur: function onChangeBlur(value) {
              return setAttributes({ blur: value });
            },
            onChangeBright: function onChangeBright(value) {
              return setAttributes({ bright: value });
            },
            onChangeContrast: function onChangeContrast(value) {
              return setAttributes({ contrast: value });
            },
            onChangeSat: function onChangeSat(value) {
              return setAttributes({ saturation: value });
            },
            onChangeHue: function onChangeHue(value) {
              return setAttributes({ hue: value });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Container Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__components_premium_border__["a" /* default */], {
            borderType: borderType,
            borderWidth: borderWidth,
            borderColor: borderColor,
            borderRadius: borderRadius,
            onChangeType: function onChangeType(newType) {
              return setAttributes({ borderType: newType });
            },
            onChangeWidth: function onChangeWidth(newWidth) {
              return setAttributes({
                borderWidth: newWidth === undefined ? 0 : newWidth
              });
            },
            onChangeColor: function onChangeColor(colorValue) {
              return setAttributes({
                borderColor: colorValue === undefined ? "transparent" : colorValue.hex
              });
            },
            onChangeRadius: function onChangeRadius(newRadius) {
              return setAttributes({
                borderRadius: newRadius === undefined ? 0 : newRadius
              });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_box_shadow__["a" /* default */], {
            inner: true,
            color: containerShadowColor,
            blur: containerShadowBlur,
            horizontal: containerShadowHorizontal,
            vertical: containerShadowVertical,
            position: containerShadowPosition,
            onChangeColor: function onChangeColor(newColor) {
              return setAttributes({
                containerShadowColor: newColor.hex
              });
            },
            onChangeBlur: function onChangeBlur(newBlur) {
              return setAttributes({
                containerShadowBlur: newBlur
              });
            },
            onChangehHorizontal: function onChangehHorizontal(newValue) {
              return setAttributes({
                containerShadowHorizontal: newValue
              });
            },
            onChangeVertical: function onChangeVertical(newValue) {
              return setAttributes({
                containerShadowVertical: newValue
              });
            },
            onChangePosition: function onChangePosition(newValue) {
              return setAttributes({
                containerShadowPosition: newValue
              });
            }
          })
        )
      ), wp.element.createElement(
        "div",
        {
          className: "premium-img-scroll-container",
          style: {
            border: borderType,
            borderWidth: borderWidth + "px",
            borderRadius: borderRadius + "px",
            borderColor: borderColor,
            boxShadow: containerShadowHorizontal + "px " + containerShadowVertical + "px " + containerShadowBlur + "px " + containerShadowColor + " " + containerShadowPosition
          },
          onMouseEnter: mouseenter,
          onMouseLeave: mouseleave
        },
        wp.element.createElement("style", {
          dangerouslySetInnerHTML: {
            __html: [".premium-img-scroll-overlay{", "background: " + background + ";", "}", ".premium-img-scroll-horizontal-overlay{", "   width:" + imageWidth + "px;", "}", "#premium-img-scroll-" + blockID + " {", "filter: brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )", "}"].join("\n")
          }
        }),
        imageURL && wp.element.createElement(
          "div",
          {
            "data-direction": effectDir,
            "data-effect": hoverEffect,
            "data-reverse": reverse,
            id: "premium-scroll-" + blockID,
            className: " premium-img-scroll-wrap  " + containerClasses + " " + reverseClasses + " ",
            style: {
              minHeight: minHeight,
              height: height + HeightU
            }
          },
          urlCheck && wp.element.createElement("a", {
            className: "premium-img-scroll-link",
            target: "" + (target ? "_blank" : "_self"),
            href: url
          }),
          wp.element.createElement(
            "div",
            {
              className: " premium-img-scroll-" + effectDir + "  " + classHorizontal + " " + classVertical + " "
            },
            targetOverlay && wp.element.createElement("div", {
              className: "premium-img-scroll-overlay " + overlayClasses
            }),
            wp.element.createElement("img", {
              id: "premium-img-scroll-" + blockID,
              className: "premium-img-scroll",
              alt: imageAlt,
              src: imageURL,
              width: imageWidth,
              height: imageHeight
            })
          )
        )
      )];
    }
  }]);

  return edit;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (edit);

/***/ }),
/* 280 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
var __ = wp.i18n.__;



var save = function save(props) {
  var className = props.className;
  var _props$attributes = props.attributes,
      imageURL = _props$attributes.imageURL,
      imageID = _props$attributes.imageID,
      imageAlt = _props$attributes.imageAlt,
      imageWidth = _props$attributes.imageWidth,
      imageHeight = _props$attributes.imageHeight,
      url = _props$attributes.url,
      target = _props$attributes.target,
      urlCheck = _props$attributes.urlCheck,
      height = _props$attributes.height,
      minHeight = _props$attributes.minHeight,
      effectDir = _props$attributes.effectDir,
      HeightU = _props$attributes.HeightU,
      background = _props$attributes.background,
      targetOverlay = _props$attributes.targetOverlay,
      hoverEffect = _props$attributes.hoverEffect,
      blur = _props$attributes.blur,
      bright = _props$attributes.bright,
      contrast = _props$attributes.contrast,
      saturation = _props$attributes.saturation,
      hue = _props$attributes.hue,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderRadius = _props$attributes.borderRadius,
      borderColor = _props$attributes.borderColor,
      containerShadowColor = _props$attributes.containerShadowColor,
      containerShadowBlur = _props$attributes.containerShadowBlur,
      containerShadowHorizontal = _props$attributes.containerShadowHorizontal,
      containerShadowVertical = _props$attributes.containerShadowVertical,
      containerShadowPosition = _props$attributes.containerShadowPosition,
      reverse = _props$attributes.reverse;


  var classVertical = "" + (effectDir === "vertical" && hoverEffect === "mouse-scroll" ? "premium-img-scroll-ver " : "");

  var reverseClasses = "" + (reverse && effectDir === "vertical" ? "premium-container-scroll-instant" : "");

  var classHorizontal = "" + (effectDir === "horizontal" && hoverEffect === "hover" ? "img-scroll-horizontal " : "");

  var containerClasses = "" + (hoverEffect === "mouse-scroll" ? "premium-container-scroll" : "");
  var overlayClasses = "" + (hoverEffect === "mouse-scroll" && effectDir === "horizontal" ? "premium-img-scroll-horizontal-overlay" : null);
  var mainClasses = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "premium-image-scroll");
  return wp.element.createElement(
    "div",
    {
      className: mainClasses + " premium-img-scroll-container",
      style: {
        border: borderType,
        borderWidth: borderWidth + "px",
        borderRadius: borderRadius + "px",
        borderColor: borderColor,
        boxShadow: containerShadowHorizontal + "px " + containerShadowVertical + "px " + containerShadowBlur + "px " + containerShadowColor + " " + containerShadowPosition
      }
    },
    wp.element.createElement(
      "div",
      {
        "data-direction": effectDir,
        "data-effect": hoverEffect,
        "data-reverse": reverse,
        className: " premium-img-scroll-wrap  " + containerClasses + " " + reverseClasses + " ",
        style: {
          minHeight: minHeight,
          height: height + HeightU
        }
      },
      wp.element.createElement("style", {
        dangerouslySetInnerHTML: {
          __html: [".premium-img-scroll-horizontal-overlay{", "   width:" + imageWidth + "px;", "}"].join("\n")
        }
      }),
      wp.element.createElement(
        "div",
        {
          className: " premium-img-scroll-" + effectDir + "  " + classHorizontal + " " + classVertical + " "
        },
        wp.element.createElement("div", {
          className: "premium-img-scroll-overlay " + overlayClasses,
          style: { background: background }
        }),
        wp.element.createElement("img", {
          className: "premium-img-scroll",
          alt: imageAlt,
          src: imageURL,
          width: imageWidth,
          height: imageHeight,
          style: {
            filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
          }
        })
      ),
      urlCheck && "" !== url && wp.element.createElement("a", {
        className: "premium-img-scroll-link",
        target: "" + (target ? "_blank" : "_self"),
        href: url
      })
    )
  );
};

/* harmony default export */ __webpack_exports__["a"] = (save);

/***/ }),
/* 281 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__icons__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__edit__ = __webpack_require__(282);
var _attributes;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var __ = wp.i18n.__;



var registerBlockType = wp.blocks.registerBlockType;

registerBlockType("premium/post-blog", {
  title: __("Premium Blog"),
  icon: wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__icons__["a" /* default */], { icon: "content-switcher" }),
  category: "premium-blocks",
  attributes: (_attributes = {
    blockID: {
      type: "string"
    },
    borderWidth: {
      type: "number"
    },
    borderRadius: {
      type: "number"
    },
    borderColor: {
      type: "string"
    },
    rowGap: {
      type: "number",
      default: 16
    },
    columnGap: {
      type: "number",
      default: 16
    },
    gridCheck: {
      type: "boolean",
      default: false
    },
    numOfPosts: {
      type: "number",
      default: 4
    },
    offsetNum: {
      type: "number",
      default: 0
    },
    currentPost: {
      type: "boolean",
      default: false
    },
    orderBy: {
      type: "string",
      default: "date"
    },
    order: {
      type: "string",
      default: "desc"
    },
    featuredImage: {
      type: "boolean",
      default: true
    },
    hoverEffect: {
      type: "string",
      default: "zoomin"
    },
    height: {
      type: "number",
      default: 300
    },
    HeightU: {
      type: "string",
      default: "px"
    },
    rowGapUnit: {
      type: "string",
      default: "px"
    }
  }, _defineProperty(_attributes, "columnGap", {
    type: "number",
    default: 16
  }), _defineProperty(_attributes, "displayPostContent", {
    type: "boolean",
    default: true
  }), _defineProperty(_attributes, "displayPostExcerpt", {
    type: "string",
    default: "Post Excerpt"
  }), _defineProperty(_attributes, "excerptType", {
    type: "string",
    default: "Dots"
  }), _defineProperty(_attributes, "excerptLength", {
    type: "number",
    default: 25
  }), _defineProperty(_attributes, "fullWidth", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "readMoreText", {
    type: "string",
    default: "Read More"
  }), _defineProperty(_attributes, "displayPostAuthor", {
    type: "boolean",
    default: "true"
  }), _defineProperty(_attributes, "displayPostDate", {
    type: "boolean",
    default: "true"
  }), _defineProperty(_attributes, "displayPostCategories", {
    type: "boolean",
    default: "true"
  }), _defineProperty(_attributes, "displayPostComment", {
    type: "boolean",
    default: "true"
  }), _defineProperty(_attributes, "displayPostTags", {
    type: "boolean",
    default: true
  }), _defineProperty(_attributes, "layoutValue", {
    type: "string",
    default: "even"
  }), _defineProperty(_attributes, "postFilter", {
    type: "string",
    default: "Default"
  }), _defineProperty(_attributes, "Carousel", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "Autoplay", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "slideToScroll", {
    type: "number",
    default: 1
  }), _defineProperty(_attributes, "autoplaySpeed", {
    type: "number",
    default: 5000
  }), _defineProperty(_attributes, "centerMode", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "slideSpacing", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "navigationDots", {
    type: "boolean",
    default: true
  }), _defineProperty(_attributes, "navigationArrow", {
    type: "boolean",
    default: true
  }), _defineProperty(_attributes, "arrowPosition", {
    type: "number",
    default: 0
  }), _defineProperty(_attributes, "pagination", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "pageLimit", {
    type: "number",
    default: 5
  }), _defineProperty(_attributes, "paginationPosition", {
    type: "string"
  }), _defineProperty(_attributes, "imageSize", {
    type: "string",
    default: "large"
  }), _defineProperty(_attributes, "categories", {
    type: "string"
  }), _defineProperty(_attributes, "overlayColor", {
    type: "string",
    default: "transparent"
  }), _defineProperty(_attributes, "blur", {
    type: "number",
    default: "0"
  }), _defineProperty(_attributes, "bright", {
    type: "number",
    default: "100"
  }), _defineProperty(_attributes, "contrast", {
    type: "number",
    default: "100"
  }), _defineProperty(_attributes, "saturation", {
    type: "number",
    default: "100"
  }), _defineProperty(_attributes, "hue", {
    type: "number",
    default: "0"
  }), _defineProperty(_attributes, "firstContentLetter", {
    type: "number"
  }), _defineProperty(_attributes, "firstContentStyle", {
    type: "string"
  }), _defineProperty(_attributes, "firstContentUpper", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "firstContentWeight", {
    type: "number",
    default: 500
  }), _defineProperty(_attributes, "firstContentfontSize", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "firstContentfontSizeType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "firstContentfontSizeMobile", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "firstContentfontSizeTablet", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "secondContentLetter", {
    type: "number"
  }), _defineProperty(_attributes, "secondContentStyle", {
    type: "string"
  }), _defineProperty(_attributes, "secondContentUpper", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "secondContentWeight", {
    type: "number",
    default: 500
  }), _defineProperty(_attributes, "secondContentfontSize", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "secondContentfontSizeType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "secondContentfontSizeMobile", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "secondContentfontSizeTablet", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "typoColor", {
    type: "string"
  }), _defineProperty(_attributes, "metaColor", {
    type: "string"
  }), _defineProperty(_attributes, "linkColor", {
    type: "string"
  }), _defineProperty(_attributes, "sepaColor", {
    type: "string"
  }), _defineProperty(_attributes, "hoverTag", {
    type: "string"
  }), _defineProperty(_attributes, "postContentLetter", {
    type: "number"
  }), _defineProperty(_attributes, "postContentStyle", {
    type: "string"
  }), _defineProperty(_attributes, "postContentUpper", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "postContentWeight", {
    type: "number",
    default: 500
  }), _defineProperty(_attributes, "postContentfontSize", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "postContentfontSizeType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "postContentfontSizeMobile", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "postContentfontSizeTablet", {
    type: "number",
    default: 15
  }), _defineProperty(_attributes, "textColor", {
    type: "string"

  }), _defineProperty(_attributes, "tagColor", {
    type: "string"
  }), _defineProperty(_attributes, "hoverColor", {
    type: "string"
  }), _defineProperty(_attributes, "buttonColor", {
    type: "string"
  }), _defineProperty(_attributes, "buttonhover", {
    type: "string"

  }), _defineProperty(_attributes, "buttonBackground", {
    type: "string"

  }), _defineProperty(_attributes, "hoverBackground", {
    type: "string"

  }), _defineProperty(_attributes, "currentPage", {
    type: "number",
    default: 0
  }), _defineProperty(_attributes, "classMigrate", {
    type: "boolean",
    default: false
  }), _defineProperty(_attributes, "columns", {
    type: "number",
    default: 3
  }), _defineProperty(_attributes, "mcolumns", {
    type: "number",
    default: 2
  }), _defineProperty(_attributes, "tcolumns", {
    type: "number",
    default: 1
  }), _defineProperty(_attributes, "thumbnail", {
    type: "string",
    default: "cover"
  }), _defineProperty(_attributes, "thumbnailMobile", {
    type: "string",
    default: "cover"
  }), _defineProperty(_attributes, "thumbnailTablet", {
    type: "string",
    default: "cover"
  }), _defineProperty(_attributes, "marginBottom", {
    type: "number"
  }), _defineProperty(_attributes, "marginBottomTablet", {
    type: "number"
  }), _defineProperty(_attributes, "marginBottomMobile", {
    type: "number"
  }), _defineProperty(_attributes, "marginBottom", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginBottomType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "PostmarginBottom", {
    type: "number",
    default: ''
  }), _defineProperty(_attributes, "PostmarginBottomMobile", {
    type: "number",
    default: ''
  }), _defineProperty(_attributes, "PostmarginBottomTablet", {
    type: "number",
    default: ''
  }), _defineProperty(_attributes, "PostmarginTopType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "PostmarginTop", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginTopMobile", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginTopTablet", {
    type: "number"
  }), _defineProperty(_attributes, "postSpacingType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "postSpacing", {
    type: "number"
  }), _defineProperty(_attributes, "postSpacingMobile", {
    type: "number"
  }), _defineProperty(_attributes, "postSpacingTablet", {
    type: "number"
  }), _defineProperty(_attributes, "postContentfontSizeType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "postContentfontSize", {
    type: "number"
  }), _defineProperty(_attributes, "postContentfontSizeMobile", {
    type: "number"
  }), _defineProperty(_attributes, "postContentfontSizeTablet", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginRightType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "PostmarginRight", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginRightMobile", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginRightTablet", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginLeftType", {
    type: "string"
  }), _defineProperty(_attributes, "PostmarginLeft", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginLeftMobile", {
    type: "number"
  }), _defineProperty(_attributes, "PostmarginLeftTablet", {
    type: "number"
  }), _defineProperty(_attributes, "backgroundPostContent", {
    type: "string"
  }), _defineProperty(_attributes, "containerShadowColor", {
    type: "string"
  }), _defineProperty(_attributes, "containerShadowBlur", {
    type: "string"
  }), _defineProperty(_attributes, "containerShadowHorizontal", {
    type: "string"
  }), _defineProperty(_attributes, "containerShadowVertical", {
    type: "string"
  }), _defineProperty(_attributes, "containerShadowPosition", {
    type: "string"
  }), _defineProperty(_attributes, "tagsfontSizeType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "tagsfontSize", {
    type: "number",
    default: "default"
  }), _defineProperty(_attributes, "tagsfontSizeMobile", {
    type: "number",
    default: "default"
  }), _defineProperty(_attributes, "tagsfontSizeTablet", {
    type: "number",
    default: "default"
  }), _defineProperty(_attributes, "tagsWeight", {
    type: "number",
    default: "default"
  }), _defineProperty(_attributes, "tagsStyle", {
    type: "string",
    default: "default"
  }), _defineProperty(_attributes, "tagsLetter", {
    type: "string",
    default: "default"
  }), _defineProperty(_attributes, "tagsUpper", {
    type: "string",
    default: "default"
  }), _defineProperty(_attributes, "buttonfontSizeType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "buttonfontSize", {
    type: "number"
  }), _defineProperty(_attributes, "buttonfontSizeMobile", {
    type: "number"
  }), _defineProperty(_attributes, "buttonfontSizeTablet", {
    type: "number"
  }), _defineProperty(_attributes, "buttonWeight", {
    type: "number"
  }), _defineProperty(_attributes, "buttonStyle", {
    type: "number"
  }), _defineProperty(_attributes, "buttonLetter", {
    type: "number"
  }), _defineProperty(_attributes, "buttonUpper", {
    type: "number"
  }), _defineProperty(_attributes, "buttonSpacingType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "buttonSpacing", {
    type: "number"
  }), _defineProperty(_attributes, "buttonSpacingMobile", {
    type: "number"
  }), _defineProperty(_attributes, "buttonSpacingTablet", {
    type: "number"
  }), _defineProperty(_attributes, "borderType", {
    type: "string",
    default: "solid"
  }), _defineProperty(_attributes, "buttonPaddingType", {
    type: "string",
    default: "px"
  }), _defineProperty(_attributes, "buttonPadding", {
    type: "number"
  }), _defineProperty(_attributes, "buttonPaddingMobile", {
    type: "number"
  }), _defineProperty(_attributes, "buttonPaddingTablet", {
    type: "number"
  }), _attributes),
  example: {},
  edit: __WEBPACK_IMPORTED_MODULE_1__edit__["a" /* default */],
  save: function save() {
    return null;
  }
});

/***/ }),
/* 282 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_premium_size_units__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_premium_range_responsive__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Carousel__ = __webpack_require__(283);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_premium_filters__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_premium_typo__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__blog__ = __webpack_require__(300);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_premium_border__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__styling__ = __webpack_require__(301);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Masonry__ = __webpack_require__(304);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_premium_margin_responsive__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_premium_box_shadow__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_transition_group_Transition__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_transition_group_Transition___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_react_transition_group_Transition__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }














var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl,
    Spinner = _wp$components.Spinner,
    ToggleControl = _wp$components.ToggleControl,
    TabPanel = _wp$components.TabPanel,
    Dashicon = _wp$components.Dashicon,
    TextControl = _wp$components.TextControl,
    IconButton = _wp$components.IconButton;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette;
var _wp$data = wp.data,
    withSelect = _wp$data.withSelect,
    select = _wp$data.select;

var edit = function (_Component) {
  _inherits(edit, _Component);

  function edit() {
    _classCallCheck(this, edit);

    var _this = _possibleConstructorReturn(this, (edit.__proto__ || Object.getPrototypeOf(edit)).apply(this, arguments));

    _this.onSelectPagination = _this.onSelectPagination.bind(_this);
    _this.onChangePostsPerPage = _this.onChangePostsPerPage.bind(_this);
    _this.onChangePageLimit = _this.onChangePageLimit.bind(_this);
    return _this;
  }

  _createClass(edit, [{
    key: "onSelectPagination",
    value: function onSelectPagination(value) {
      var setAttributes = this.props.setAttributes;


      setAttributes({ pagination: value });
      setAttributes({ paginationMarkup: "empty" });
    }
  }, {
    key: "onChangePostsPerPage",
    value: function onChangePostsPerPage(value) {
      var setAttributes = this.props.setAttributes;


      setAttributes({ numOfPosts: value });
      setAttributes({ paginationMarkup: "empty" });
    }
  }, {
    key: "onChangePageLimit",
    value: function onChangePageLimit(value) {
      var setAttributes = this.props.setAttributes;


      setAttributes({ pageLimit: value });
      setAttributes({ paginationMarkup: "empty" });
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.props.setAttributes({ block_id: this.props.clientId });
      this.props.setAttributes({ classMigrate: true });
      var $style = document.createElement("style");
      $style.setAttribute("id", "premium-post-style-" + this.props.clientId);
      document.head.appendChild($style);
    }
  }, {
    key: "render",
    value: function render() {
      var orderSelect = [{ label: "None", value: "rand" }, { label: "ID", value: "id" }, { label: "Author", value: "author" }, { label: "Title", value: "title" }, { label: "Name", value: "slug" }, { label: "Date", value: "date" }, { label: "last Modified", value: "modified" }, { label: "Random", value: "rand" }, { label: "Number Of Comments", value: "include" }];
      var hoverEffects = [{ label: "None", value: "None" }, { label: "Zoom in", value: "zoomin" }, { label: "Zoom out", value: "zoomout" }, { label: "Scale", value: "scale" }, { label: "GrayScale", value: "gray" }, { label: "Blur", value: "blur" }, { label: "Bright", value: "bright" }, { label: "Sepia", value: "sepia" }, { label: "Translate", value: "trans" }];
      var ThumbnailSelect = [{
        label: "Cover",
        value: "cover"
      }, {
        label: "Fill",
        value: "fill"
      }, {
        label: "Contain",
        value: "contain"
      }];
      var hasPosts = Array.isArray(latestPosts) && latestPosts.length;
      var _props = this.props,
          attributes = _props.attributes,
          categoriesList = _props.categoriesList,
          setAttributes = _props.setAttributes,
          latestPosts = _props.latestPosts,
          isSelected = _props.isSelected,
          taxonomyList = _props.taxonomyList,
          tagList = _props.tagList;
      var block_id = attributes.block_id,
          categories = attributes.categories,
          rowGap = attributes.rowGap,
          imageSize = attributes.imageSize,
          gridCheck = attributes.gridCheck,
          numOfPosts = attributes.numOfPosts,
          offsetNum = attributes.offsetNum,
          currentPost = attributes.currentPost,
          orderBy = attributes.orderBy,
          order = attributes.order,
          featuredImage = attributes.featuredImage,
          hoverEffect = attributes.hoverEffect,
          height = attributes.height,
          HeightU = attributes.HeightU,
          backgroundPostContent = attributes.backgroundPostContent,
          rowGapUnit = attributes.rowGapUnit,
          columnGap = attributes.columnGap,
          displayPostContent = attributes.displayPostContent,
          displayPostExcerpt = attributes.displayPostExcerpt,
          excerptType = attributes.excerptType,
          excerptLength = attributes.excerptLength,
          fullWidth = attributes.fullWidth,
          readMoreText = attributes.readMoreText,
          displayPostAuthor = attributes.displayPostAuthor,
          displayPostDate = attributes.displayPostDate,
          displayPostCategories = attributes.displayPostCategories,
          displayPostComment = attributes.displayPostComment,
          displayPostTags = attributes.displayPostTags,
          filterPosition = attributes.filterPosition,
          layoutValue = attributes.layoutValue,
          postFilter = attributes.postFilter,
          Carousel = attributes.Carousel,
          Autoplay = attributes.Autoplay,
          slideToScroll = attributes.slideToScroll,
          autoplaySpeed = attributes.autoplaySpeed,
          centerMode = attributes.centerMode,
          slideSpacing = attributes.slideSpacing,
          navigationDots = attributes.navigationDots,
          navigationArrow = attributes.navigationArrow,
          arrowPosition = attributes.arrowPosition,
          pagination = attributes.pagination,
          pageLimit = attributes.pageLimit,
          paginationPosition = attributes.paginationPosition,
          overlayColor = attributes.overlayColor,
          blur = attributes.blur,
          bright = attributes.bright,
          contrast = attributes.contrast,
          saturation = attributes.saturation,
          hue = attributes.hue,
          firstContentLetter = attributes.firstContentLetter,
          firstContentStyle = attributes.firstContentStyle,
          firstContentUpper = attributes.firstContentUpper,
          firstContentWeight = attributes.firstContentWeight,
          firstContentfontSize = attributes.firstContentfontSize,
          firstContentfontSizeType = attributes.firstContentfontSizeType,
          firstContentfontSizeMobile = attributes.firstContentfontSizeMobile,
          firstContentfontSizeTablet = attributes.firstContentfontSizeTablet,
          secondContentLetter = attributes.secondContentLetter,
          secondContentStyle = attributes.secondContentStyle,
          secondContentUpper = attributes.secondContentUpper,
          secondContentWeight = attributes.secondContentWeight,
          secondContentfontSize = attributes.secondContentfontSize,
          secondContentfontSizeType = attributes.secondContentfontSizeType,
          secondContentfontSizeMobile = attributes.secondContentfontSizeMobile,
          secondContentfontSizeTablet = attributes.secondContentfontSizeTablet,
          metaColor = attributes.metaColor,
          typoColor = attributes.typoColor,
          hoverColor = attributes.hoverColor,
          linkColor = attributes.linkColor,
          sepaColor = attributes.sepaColor,
          postContentLetter = attributes.postContentLetter,
          postContentStyle = attributes.postContentStyle,
          postContentUpper = attributes.postContentUpper,
          postContentWeight = attributes.postContentWeight,
          textColor = attributes.textColor,
          tagColor = attributes.tagColor,
          hoverTag = attributes.hoverTag,
          buttonColor = attributes.buttonColor,
          buttonhover = attributes.buttonhover,
          buttonBackground = attributes.buttonBackground,
          hoverBackground = attributes.hoverBackground,
          marginBottomType = attributes.marginBottomType,
          marginBottomMobile = attributes.marginBottomMobile,
          marginBottomTablet = attributes.marginBottomTablet,
          marginBottom = attributes.marginBottom,
          columns = attributes.columns,
          mcolumns = attributes.mcolumns,
          tcolumns = attributes.tcolumns,
          containerShadowColor = attributes.containerShadowColor,
          containerShadowBlur = attributes.containerShadowBlur,
          containerShadowHorizontal = attributes.containerShadowHorizontal,
          containerShadowVertical = attributes.containerShadowVertical,
          containerShadowPosition = attributes.containerShadowPosition,
          tagsfontSizeType = attributes.tagsfontSizeType,
          tagsfontSize = attributes.tagsfontSize,
          tagsfontSizeMobile = attributes.tagsfontSizeMobile,
          tagsfontSizeTablet = attributes.tagsfontSizeTablet,
          tagsWeight = attributes.tagsWeight,
          tagsStyle = attributes.tagsStyle,
          tagsLetter = attributes.tagsLetter,
          tagsUpper = attributes.tagsUpper,
          buttonfontSizeType = attributes.buttonfontSizeType,
          buttonfontSize = attributes.buttonfontSize,
          buttonfontSizeMobile = attributes.buttonfontSizeMobile,
          buttonfontSizeTablet = attributes.buttonfontSizeTablet,
          buttonWeight = attributes.buttonWeight,
          buttonStyle = attributes.buttonStyle,
          buttonLetter = attributes.buttonLetter,
          buttonUpper = attributes.buttonUpper,
          buttonSpacingType = attributes.buttonSpacingType,
          buttonSpacing = attributes.buttonSpacing,
          buttonSpacingMobile = attributes.buttonSpacingMobile,
          buttonSpacingTablet = attributes.buttonSpacingTablet,
          borderType = attributes.borderType,
          buttonPaddingType = attributes.buttonPaddingType,
          buttonPadding = attributes.buttonPadding,
          buttonPaddingMobile = attributes.buttonPaddingMobile,
          buttonPaddingTablet = attributes.buttonPaddingTablet,
          thumbnail = attributes.thumbnail,
          thumbnailMobile = attributes.thumbnailMobile,
          thumbnailTablet = attributes.thumbnailTablet,
          PostmarginBottomType = attributes.PostmarginBottomType,
          PostmarginBottom = attributes.PostmarginBottom,
          PostmarginBottomMobile = attributes.PostmarginBottomMobile,
          PostmarginBottomTablet = attributes.PostmarginBottomTablet,
          PostmarginTopType = attributes.PostmarginTopType,
          PostmarginTop = attributes.PostmarginTop,
          PostmarginTopMobile = attributes.PostmarginTopMobile,
          PostmarginTopTablet = attributes.PostmarginTopTablet,
          postSpacingType = attributes.postSpacingType,
          postSpacing = attributes.postSpacing,
          postSpacingMobile = attributes.postSpacingMobile,
          postSpacingTablet = attributes.postSpacingTablet,
          postContentfontSizeType = attributes.postContentfontSizeType,
          postContentfontSize = attributes.postContentfontSize,
          postContentfontSizeMobile = attributes.postContentfontSizeMobile,
          postContentfontSizeTablet = attributes.postContentfontSizeTablet,
          PostmarginRightType = attributes.PostmarginRightType,
          PostmarginRight = attributes.PostmarginRight,
          PostmarginRightMobile = attributes.PostmarginRightMobile,
          PostmarginRightTablet = attributes.PostmarginRightTablet,
          PostmarginLeftType = attributes.PostmarginLeftType,
          PostmarginLeft = attributes.PostmarginLeft,
          PostmarginLeftMobile = attributes.PostmarginLeftMobile,
          PostmarginLeftTablet = attributes.PostmarginLeftTablet,
          borderWidth = attributes.borderWidth,
          borderColor = attributes.borderColor,
          borderRadius = attributes.borderRadius;

      var categoryListOptions = [];
      if (categoriesList) {
        Object.keys(categoriesList).map(function (item, thisIndex) {
          return categoryListOptions.push({
            value: categoriesList[item]["id"],
            label: categoriesList[item]["name"]
          });
        });
      }

      var element = document.getElementById("premium-post-style-" + this.props.clientId);
      if (null != element) {
        element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_7__styling__["a" /* default */])(this.props);
      }
      var hundleCarousel = function hundleCarousel() {
        setAttributes({ layoutValue: "" });
        setAttributes({ Carousel: !Carousel });
      };
      var hundleGrid = function hundleGrid() {
        setAttributes({ gridCheck: !gridCheck });
        setAttributes({ Carousel: false });
      };
      var Inspectors = isSelected && wp.element.createElement(
        InspectorControls,
        null,
        wp.element.createElement(
          PanelBody,
          {
            title: __("General"),
            className: "premium-panel-body",
            initialOpen: true
          },
          wp.element.createElement(ToggleControl, {
            label: __("Grid"),
            checked: gridCheck,
            onChange: hundleGrid
          }),
          gridCheck && [wp.element.createElement(SelectControl, {
            label: __("Layout"),
            options: [{ label: "Even", value: "even" }, {
              label: "Masonry",
              value: "masonry"
            }],
            value: layoutValue,
            onChange: function onChange(newLayout) {
              return setAttributes({ layoutValue: newLayout });
            }
          }), wp.element.createElement(
            TabPanel,
            {
              className: "premium-size-type-field-tabs",
              activeClass: "active-tab",
              tabs: [{
                name: "mobile",
                title: wp.element.createElement(Dashicon, { icon: "desktop" }),
                className: "premium-desktop-tab premium-responsive-tabs"
              }, {
                name: "tablet",
                title: wp.element.createElement(Dashicon, { icon: "tablet" }),
                className: "premium-tablet-tab premium-responsive-tabs"
              }, {
                name: "desktop",
                title: wp.element.createElement(Dashicon, { icon: "smartphone" }),
                className: "premium-mobile-tab premium-responsive-tabs"
              }]
            },
            function (tab) {
              var tabout = void 0;
              if ("mobile" === tab.name) {
                tabout = wp.element.createElement(RangeControl, {
                  label: __("Columns"),
                  value: columns,
                  onChange: function onChange(value) {
                    return setAttributes({ columns: value });
                  }
                });
              } else if ("tablet" === tab.name) {
                tabout = wp.element.createElement(RangeControl, {
                  label: __("Columns"),
                  value: tcolumns,
                  onChange: function onChange(value) {
                    return setAttributes({ tcolumns: value });
                  }
                });
              } else {
                tabout = wp.element.createElement(RangeControl, {
                  label: __("Columns"),
                  value: mcolumns,
                  onChange: function onChange(value) {
                    return setAttributes({ mcolumns: value });
                  }
                });
              }

              return wp.element.createElement(
                "div",
                null,
                tabout
              );
            }
          )],
          wp.element.createElement(RangeControl, {
            label: __("Number of Posts Per Page"),
            onChange: function onChange(newNumberofPosts) {
              return setAttributes({ numOfPosts: newNumberofPosts });
            },
            value: numOfPosts,
            min: 1
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Query"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(SelectControl, {
            label: __("Filter By"),
            options: [{ label: "Default", value: "Default" }, { label: "Categories", value: "category" }, { label: "Tags", value: "post_tag" }],
            value: postFilter,
            onChange: function onChange(newPostFilter) {
              return setAttributes({ postFilter: newPostFilter });
            }
          }),
          "Default" !== postFilter && wp.element.createElement(SelectControl, {
            label: taxonomyList[postFilter]["label"],
            options: categoryListOptions,
            value: categories,
            onChange: function onChange(value) {
              return setAttributes({ categories: value });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Offset"),
            onChange: function onChange(newOffsetNum) {
              return setAttributes({ offsetNum: newOffsetNum });
            },
            value: offsetNum,
            min: 0
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Exclude Current Post"),
            checked: currentPost,
            help: currentPost ? "This option will remove the current post from the query. " : " ",
            onChange: function onChange() {
              return setAttributes({ currentPost: !currentPost });
            }
          }),
          wp.element.createElement("hr", null),
          wp.element.createElement(SelectControl, {
            label: __("Order By"),
            options: orderSelect,
            value: orderBy,
            onChange: function onChange(Orderby) {
              return setAttributes({ orderBy: Orderby });
            }
          }),
          wp.element.createElement(SelectControl, {
            label: __("Order"),
            options: [{ value: "desc", label: __("Descending") }, { value: "asc", label: __("Ascending") }],
            value: order,
            onChange: function onChange(NewOrder) {
              return setAttributes({ order: NewOrder });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Featured Image"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(ToggleControl, {
            label: __("Show Featured Iamge"),
            checked: featuredImage,
            onChange: function onChange() {
              return setAttributes({ featuredImage: !featuredImage });
            }
          }),
          featuredImage && [wp.element.createElement(SelectControl, {
            label: __("Hover Effect"),
            options: hoverEffects,
            value: hoverEffect,
            onChange: function onChange(newEffect) {
              return setAttributes({ hoverEffect: newEffect });
            }
          }), wp.element.createElement(SelectControl, {
            label: __("Image Size"),
            options: [{ label: "1536x1536", value: "1536x1536" }, { label: "2048x2048", value: "2048x2048" }, {
              label: "ab-block-post-grid-landscape",
              value: "ab-block-post-grid-landscape"
            }, {
              label: "ab-block-post-grid-square",
              value: "ab-block-post-grid-square"
            }, { label: "full", value: "full" }, { label: "large", value: "large" }, { label: "medium", value: "medium" }, { label: "medium_large", value: "medium_large" }, { label: "thumbnail", value: "thumbnail" }],
            value: imageSize,
            onChange: function onChange(newSizeImage) {
              return setAttributes({ imageSize: newSizeImage });
            }
          }), wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__components_premium_size_units__["a" /* default */], {
            units: ["px", "em"],
            onChangeSizeUnit: function onChangeSizeUnit(newValue) {
              setAttributes({ HeightU: newValue });
            }
          }), wp.element.createElement(RangeControl, {
            label: __("Height"),
            value: height,
            onChange: function onChange(newHeight) {
              return setAttributes({ height: newHeight });
            },
            max: HeightU === "em" ? 60 : 800
          }), wp.element.createElement(
            TabPanel,
            {
              className: "uagb-size-type-field-tabs uagb-without-size-type",
              activeClass: "active-tab",
              tabs: [{
                name: "desktop",
                title: wp.element.createElement(Dashicon, { icon: "desktop" })
              }, {
                name: "tablet",
                title: wp.element.createElement(Dashicon, { icon: "tablet" })
              }, {
                name: "mobile",
                title: wp.element.createElement(Dashicon, { icon: "smartphone" })
              }]
            },
            function (tab) {
              var tabout = void 0;
              if ("mobile" === tab.name) {
                tabout = wp.element.createElement(SelectControl, {
                  options: ThumbnailSelect,
                  label: __("Thumbnail Fit"),
                  value: thumbnailMobile,
                  onChange: function onChange(value) {
                    return setAttributes({ thumbnailMobile: value });
                  }
                });
              } else if ("tablet" === tab.name) {
                tabout = wp.element.createElement(SelectControl, {
                  options: ThumbnailSelect,
                  label: __("Thumbnail Fit"),
                  value: thumbnailTablet,
                  onChange: function onChange(value) {
                    return setAttributes({ thumbnailTablet: value });
                  }
                });
              } else {
                tabout = wp.element.createElement(SelectControl, {
                  options: ThumbnailSelect,
                  label: __("Thumbnail Fit"),
                  value: thumbnail,
                  onChange: function onChange(value) {
                    return setAttributes({ thumbnail: value });
                  }
                });
              }
              return wp.element.createElement(
                "div",
                null,
                tabout
              );
            }
          )]
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Display Options"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_0__components_premium_size_units__["a" /* default */], {
            onChangeSizeUnit: function onChangeSizeUnit(newUnit) {
              setAttributes({ rowGapUnit: newUnit });
            }
          }),
          wp.element.createElement(RangeControl, {
            label: __("Row Spacing"),
            value: rowGap,
            onChange: function onChange(newRowGap) {
              return setAttributes({ rowGap: newRowGap });
            },
            max: rowGapUnit === "em" ? 10 : 200
          }),
          wp.element.createElement(RangeControl, {
            label: __("Column Spacing"),
            value: columnGap,
            onChange: function onChange(newcolumnGap) {
              return setAttributes({ columnGap: newcolumnGap });
            },
            max: 50
          }),
          wp.element.createElement(
            "h2",
            null,
            " ",
            __("Alignment")
          ),
          wp.element.createElement(IconButton, {
            key: "left",
            icon: "editor-alignleft",
            label: "Left",
            onClick: function onClick() {
              return setAttributes({ filterPosition: "left" });
            },
            "aria-pressed": "left" === filterPosition,
            isPrimary: "left" === filterPosition
          }),
          wp.element.createElement(IconButton, {
            key: "center",
            icon: "editor-aligncenter",
            label: "Right",
            onClick: function onClick() {
              return setAttributes({ filterPosition: "center" });
            },
            "aria-pressed": "center" === filterPosition,
            isPrimary: "center" === filterPosition
          }),
          wp.element.createElement(IconButton, {
            key: "right",
            icon: "editor-alignright",
            label: "Right",
            onClick: function onClick() {
              return setAttributes({ filterPosition: "right" });
            },
            "aria-pressed": "right" === filterPosition,
            isPrimary: "right" === filterPosition
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Post Options"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(ToggleControl, {
            label: __("Show Post Content"),
            checked: displayPostContent,
            onChange: function onChange() {
              return setAttributes({ displayPostContent: !displayPostContent });
            }
          }),
          displayPostContent && [wp.element.createElement(SelectControl, {
            label: __("Get Content From"),
            options: [{ label: "Post Full Content", value: "Post Full Content" }, { label: "Post Excerpt", value: "Post Excerpt" }],
            value: displayPostExcerpt,
            onChange: function onChange(newExcerpt) {
              return setAttributes({ displayPostExcerpt: newExcerpt });
            }
          }), "Post Excerpt" === displayPostExcerpt && [wp.element.createElement(RangeControl, {
            label: __("Excerpt Length"),
            value: excerptLength,
            onChange: function onChange(value) {
              return setAttributes({ excerptLength: value });
            }
          }), wp.element.createElement(SelectControl, {
            label: __("Excerpt Type"),
            options: [{ label: "Dots", value: "Dots" }, { label: "Link", value: "Link" }],
            value: excerptType,
            onChange: function onChange(newExcerptType) {
              return setAttributes({ excerptType: newExcerptType });
            }
          }), excerptType === "Link" ? [wp.element.createElement(ToggleControl, {
            label: __("Full Width"),
            checked: fullWidth,
            onChange: function onChange() {
              return setAttributes({
                fullWidth: !fullWidth
              });
            }
          }), wp.element.createElement(TextControl, {
            label: __("Read More Text"),
            value: readMoreText,
            onChange: function onChange(newText) {
              return setAttributes({ readMoreText: newText });
            }
          })] : null]],
          wp.element.createElement(ToggleControl, {
            label: __("Author Meta"),
            checked: displayPostAuthor,
            onChange: function onChange() {
              return setAttributes({ displayPostAuthor: !displayPostAuthor });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Date Meta"),
            checked: displayPostDate,
            onChange: function onChange() {
              return setAttributes({ displayPostDate: !displayPostDate });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Category Meta"),
            checked: displayPostCategories,
            onChange: function onChange() {
              return setAttributes({ displayPostCategories: !displayPostCategories });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Comments Meta"),
            checked: displayPostComment,
            onChange: function onChange() {
              return setAttributes({ displayPostComment: !displayPostComment });
            }
          }),
          wp.element.createElement(ToggleControl, {
            label: __("Tags Meta"),
            checked: displayPostTags,
            onChange: function onChange() {
              return setAttributes({ displayPostTags: !displayPostTags });
            }
          })
        ),
        !pagination && wp.element.createElement(
          PanelBody,
          {
            title: __("Carousel"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(ToggleControl, {
            label: __("Enable Carousel"),
            checked: Carousel,
            onChange: hundleCarousel
          }),
          Carousel && wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(ToggleControl, {
              label: __("Auto Play"),
              checked: Autoplay,
              onChange: function onChange() {
                return setAttributes({ Autoplay: !Autoplay });
              }
            }),
            wp.element.createElement(RangeControl, {
              label: __("Slides To Scroll"),
              value: slideToScroll,
              onChange: function onChange(newSlideScroll) {
                return setAttributes({ slideToScroll: newSlideScroll });
              }
            }),
            wp.element.createElement(RangeControl, {
              label: __("Autoplay Speed"),
              value: autoplaySpeed,
              onChange: function onChange(newSpeed) {
                return setAttributes({ autoplaySpeed: newSpeed });
              }
            }),
            wp.element.createElement(ToggleControl, {
              label: __("Center Mode"),
              checked: centerMode,
              onChange: function onChange(centerModeValue) {
                return setAttributes({ centerMode: centerModeValue });
              }
            }),
            wp.element.createElement(RangeControl, {
              label: __("Slides' Spacing"),
              value: slideSpacing,
              onChange: function onChange(slideSpacingValue) {
                return setAttributes({ slideSpacing: slideSpacingValue });
              }
            }),
            wp.element.createElement(ToggleControl, {
              label: __("Navigation Dots"),
              checked: navigationDots,
              onChange: function onChange() {
                return setAttributes({ navigationDots: !navigationDots });
              }
            }),
            wp.element.createElement(ToggleControl, {
              label: __("Navigation Arrows"),
              checked: navigationArrow,
              onChange: function onChange() {
                return setAttributes({ navigationArrow: !navigationArrow });
              }
            }),
            navigationArrow && wp.element.createElement(RangeControl, {
              label: __("Arrows Position"),
              value: arrowPosition,
              onChange: function onChange(arrowPositionValue) {
                return setAttributes({ arrowPosition: arrowPositionValue });
              }
            })
          )
        ),
        !Carousel && wp.element.createElement(
          PanelBody,
          {
            title: __("Pagination"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(ToggleControl, {
            label: __("Enable Pagination"),
            checked: pagination,
            onChange: this.onSelectPagination
          }),
          pagination && wp.element.createElement(
            Fragment,
            null,
            wp.element.createElement(RangeControl, {
              label: __("Page Limit"),
              value: pageLimit,
              onChange: this.onChangePageLimit
            }),
            wp.element.createElement(
              "h2",
              null,
              " ",
              __("Alignment")
            ),
            wp.element.createElement(IconButton, {
              key: "left",
              icon: "editor-alignleft",
              label: "Left",
              onClick: function onClick() {
                return setAttributes({ paginationPosition: "left" });
              },
              "aria-pressed": "left" === paginationPosition,
              isPrimary: "left" === paginationPosition
            }),
            wp.element.createElement(IconButton, {
              key: "center",
              icon: "editor-aligncenter",
              label: "Right",
              onClick: function onClick() {
                return setAttributes({ paginationPosition: "center" });
              },
              "aria-pressed": "center" === paginationPosition,
              isPrimary: "center" === paginationPosition
            }),
            wp.element.createElement(IconButton, {
              key: "right",
              icon: "editor-alignright",
              label: "Right",
              onClick: function onClick() {
                return setAttributes({ paginationPosition: "right" });
              },
              "aria-pressed": "right" === paginationPosition,
              isPrimary: "right" === paginationPosition
            })
          )
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Image Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(ColorPalette, {
            label: __("Overlay Color"),
            value: overlayColor,
            onChange: function onChange(newColorOverlay) {
              return setAttributes({ overlayColor: newColorOverlay });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_premium_filters__["a" /* default */], {
            blur: blur,
            bright: bright,
            contrast: contrast,
            saturation: saturation,
            hue: hue,
            onChangeBlur: function onChangeBlur(value) {
              return setAttributes({ blur: value });
            },
            onChangeBright: function onChangeBright(value) {
              return setAttributes({ bright: value });
            },
            onChangeContrast: function onChangeContrast(value) {
              return setAttributes({ contrast: value });
            },
            onChangeSat: function onChangeSat(value) {
              return setAttributes({ saturation: value });
            },
            onChangeHue: function onChangeHue(value) {
              return setAttributes({ hue: value });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Post Title Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_typo__["a" /* default */], {
            components: ["responsiveSize", "weight", "style", "upper", "spacing"],
            setAttributes: setAttributes,
            fontSizeType: {
              value: firstContentfontSizeType,
              label: __("firstContentfontSizeType")
            },
            fontSize: {
              value: firstContentfontSize,
              label: __("firstContentfontSize")
            },
            fontSizeMobile: {
              value: firstContentfontSizeMobile,
              label: __("firstContentfontSizeMobile")
            },
            fontSizeTablet: {
              value: firstContentfontSizeTablet,
              label: __("firstContentfontSizeTablet")
            },
            weight: firstContentWeight,
            style: firstContentStyle,
            spacing: firstContentLetter,
            upper: firstContentUpper,
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ firstContentWeight: newWeight || 500 });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ firstContentStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ firstContentLetter: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ firstContentUpper: check });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Color"),
            value: typoColor,
            onChange: function onChange(newTypoColor) {
              return setAttributes({ typoColor: newTypoColor });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Hover Color"),
            value: hoverColor,
            onChange: function onChange(newHoverColor) {
              return setAttributes({ hoverColor: newHoverColor });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_margin_responsive__["a" /* default */], {
            directions: ["bottom"],
            setAttributes: setAttributes,
            marginBottomType: {
              value: marginBottomType,
              label: __("marginBottomType")
            },
            marginBottom: { value: marginBottom, label: __("marginBottom") },
            marginBottomMobile: {
              value: marginBottomMobile,
              label: __("marginBottomMobile")
            },
            marginBottomTablet: {
              value: marginBottomTablet,
              label: __("marginBottomTablet")
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Metadata Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_typo__["a" /* default */], {
            components: ["responsiveSize", "weight", "style", "upper", "spacing"],
            setAttributes: setAttributes,
            fontSizeType: {
              value: secondContentfontSizeType,
              label: __("secondContentfontSizeType")
            },
            fontSize: {
              value: secondContentfontSize,
              label: __("secondContentfontSize")
            },
            fontSizeMobile: {
              value: secondContentfontSizeMobile,
              label: __("secondContentfontSizeMobile")
            },
            fontSizeTablet: {
              value: secondContentfontSizeTablet,
              label: __("secondContentfontSizeTablet")
            },
            weight: secondContentWeight,
            style: secondContentStyle,
            spacing: secondContentLetter,
            upper: secondContentUpper,
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ secondContentWeight: newWeight || 500 });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ secondContentStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ secondContentLetter: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ secondContentUpper: check });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Text Color"),
            value: metaColor,
            onChange: function onChange(newMetaColor) {
              return setAttributes({ metaColor: newMetaColor });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Links Hover Color"),
            value: linkColor,
            onChange: function onChange(newLinkColor) {
              return setAttributes({ linkColor: newLinkColor });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Separator Color"),
            value: sepaColor,
            onChange: function onChange(newSepaColor) {
              return setAttributes({ sepaColor: newSepaColor });
            }
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Post Content Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_typo__["a" /* default */], {
            components: ["responsiveSize", "weight", "style", "upper", "spacing"],
            setAttributes: setAttributes,
            fontSizeType: {
              value: postContentfontSizeType,
              label: __("postContentfontSizeType")
            },
            fontSize: {
              value: postContentfontSize,
              label: __("postContentfontSize")
            },
            fontSizeMobile: {
              value: postContentfontSizeMobile,
              label: __("postContentfontSizeMobile")
            },
            fontSizeTablet: {
              value: postContentfontSizeTablet,
              label: __("postContentfontSizeTablet")
            },
            weight: postContentWeight,
            style: postContentStyle,
            spacing: postContentLetter,
            upper: postContentUpper,
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ postContentWeight: newWeight || 500 });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ postContentStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ postContentLetter: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ postContentUpper: check });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Text Color"),
            value: textColor,
            onChange: function onChange(newTextColor) {
              return setAttributes({ textColor: newTextColor });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_premium_margin_responsive__["a" /* default */], {
            directions: ["top", "bottom", "left", "right"],
            setAttributes: setAttributes,
            marginTopType: { value: PostmarginTopType, label: __("marginTopType") },
            marginTop: { value: PostmarginTop, label: __("marginTop") },
            marginTopMobile: {
              value: PostmarginTopMobile,
              label: __("marginTopMobile")
            },
            marginTopTablet: {
              value: PostmarginTopTablet,
              label: __("marginTopTablet")
            },
            marginBottomType: {
              value: PostmarginBottomType,
              label: __("marginBottomType")
            },
            marginBottom: { value: PostmarginBottom, label: __("marginBottom") },
            marginBottomMobile: {
              value: PostmarginBottomMobile,
              label: __("marginBottomMobile")
            },
            marginBottomTablet: {
              value: PostmarginBottomTablet,
              label: __("marginBottomTablet")
            },
            marginLeftType: {
              value: PostmarginLeftType,
              label: __("marginLeftType")
            },
            marginLeft: { value: PostmarginLeft, label: __("marginLeft") },
            marginLeftMobile: {
              value: PostmarginLeftMobile,
              label: __("marginLeftMobile")
            },
            marginLeftTablet: {
              value: PostmarginLeftTablet,
              label: __("marginLeftTablet")
            },
            marginRightType: {
              value: PostmarginRightType,
              label: __("marginRightType")
            },
            marginRight: { value: PostmarginRight, label: __("marginRight") },
            marginRightMobile: {
              value: PostmarginRightMobile,
              label: __("marginRightMobile")
            },
            marginRightTablet: {
              value: PostmarginRightTablet,
              label: __("marginRightTablet")
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: "Background Color",
            value: backgroundPostContent,
            onChange: function onChange(value) {
              return setAttributes({ backgroundPostContent: value });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_10__components_premium_box_shadow__["a" /* default */], {
            inner: true,
            color: containerShadowColor,
            blur: containerShadowBlur,
            horizontal: containerShadowHorizontal,
            vertical: containerShadowVertical,
            position: containerShadowPosition,
            onChangeColor: function onChangeColor(newColor) {
              return setAttributes({
                containerShadowColor: newColor.hex
              });
            },
            onChangeBlur: function onChangeBlur(newBlur) {
              return setAttributes({
                containerShadowBlur: newBlur
              });
            },
            onChangehHorizontal: function onChangehHorizontal(newValue) {
              return setAttributes({
                containerShadowHorizontal: newValue
              });
            },
            onChangeVertical: function onChangeVertical(newValue) {
              return setAttributes({
                containerShadowVertical: newValue
              });
            },
            onChangePosition: function onChangePosition(newValue) {
              return setAttributes({
                containerShadowPosition: newValue
              });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_range_responsive__["a" /* default */], {
            setAttributes: setAttributes,
            rangeType: {
              value: postSpacingType,
              label: __("postSpacingType")
            },
            range: { value: postSpacing, label: __("postSpacing") },
            rangeMobile: {
              value: postSpacingMobile,
              label: __("postSpacingMobile")
            },
            rangeTablet: {
              value: postSpacingTablet,
              label: __("postSpacingTablet")
            },
            rangeLabel: __("Post Content Spacing ")
          })
        ),
        wp.element.createElement(
          PanelBody,
          {
            title: __("Tags Style"),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_typo__["a" /* default */], {
            components: ["responsiveSize", "weight", "style", "upper", "spacing"],
            setAttributes: setAttributes,
            fontSizeType: {
              value: tagsfontSizeType,
              label: __("tagsfontSizeType")
            },
            fontSize: {
              value: tagsfontSize,
              label: __("tagsfontSize")
            },
            fontSizeMobile: {
              value: tagsfontSizeMobile,
              label: __("tagsfontSizeMobile")
            },
            fontSizeTablet: {
              value: tagsfontSizeTablet,
              label: __("tagsfontSizeTablet")
            },
            weight: tagsWeight,
            style: tagsStyle,
            spacing: tagsLetter,
            upper: tagsUpper,
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ tagsWeight: newWeight || 500 });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ tagsStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ tagsLetter: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ tagsUpper: check });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Tag Color"),
            value: tagColor,
            onChange: function onChange(newtagColor) {
              return setAttributes({ tagColor: newtagColor });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Hover Color"),
            value: hoverTag,
            onChange: function onChange(newHoverTag) {
              return setAttributes({ hoverTag: newHoverTag });
            }
          })
        ),
        ",",
        excerptType === "Link" ? wp.element.createElement(
          PanelBody,
          {
            title: __("Button Style "),
            className: "premium-panel-body",
            initialOpen: false
          },
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_premium_typo__["a" /* default */], {
            components: ["responsiveSize", "weight", "style", "upper", "spacing"],
            setAttributes: setAttributes,
            fontSizeType: {
              value: buttonfontSizeType,
              label: __("buttonfontSizeType")
            },
            fontSize: {
              value: buttonfontSize,
              label: __("buttonfontSize")
            },
            fontSizeMobile: {
              value: buttonfontSizeMobile,
              label: __("buttonfontSizeMobile")
            },
            fontSizeTablet: {
              value: buttonfontSizeTablet,
              label: __("buttonfontSizeTablet")
            },
            weight: buttonWeight,
            style: buttonStyle,
            spacing: buttonLetter,
            upper: buttonUpper,
            onChangeWeight: function onChangeWeight(newWeight) {
              return setAttributes({ buttonWeight: newWeight || 500 });
            },
            onChangeStyle: function onChangeStyle(newStyle) {
              return setAttributes({ buttonStyle: newStyle });
            },
            onChangeSpacing: function onChangeSpacing(newValue) {
              return setAttributes({ buttonLetter: newValue });
            },
            onChangeUpper: function onChangeUpper(check) {
              return setAttributes({ buttonUpper: check });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_range_responsive__["a" /* default */], {
            setAttributes: setAttributes,
            rangeType: {
              value: buttonSpacingType,
              label: __("buttonSpacingType")
            },
            range: { value: buttonSpacing, label: __("buttonSpacing") },
            rangeMobile: {
              value: buttonSpacingMobile,
              label: __("buttonSpacingMobile")
            },
            rangeTablet: {
              value: buttonSpacingTablet,
              label: __("buttonSpacingTablet")
            },
            rangeLabel: __("Button Spacing ")
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Color"),
            value: buttonColor,
            onChange: function onChange(newButtonColor) {
              return setAttributes({ buttonColor: newButtonColor });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Hover Color"),
            value: buttonhover,
            onChange: function onChange(newButtonHover) {
              return setAttributes({ buttonhover: newButtonHover });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Background Color"),
            value: buttonBackground,
            onChange: function onChange(newBackground) {
              return setAttributes({ buttonBackground: newBackground });
            }
          }),
          wp.element.createElement(ColorPalette, {
            label: __("Hover Background Color"),
            value: hoverBackground,
            onChange: function onChange(newhoverBackground) {
              return setAttributes({ hoverBackground: newhoverBackground });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_premium_border__["a" /* default */], {
            borderType: borderType,
            borderWidth: borderWidth,
            borderColor: borderColor,
            borderRadius: borderRadius,
            onChangeType: function onChangeType(newType) {
              return setAttributes({ borderType: newType });
            },
            onChangeWidth: function onChangeWidth(newWidth) {
              return setAttributes({ borderWidth: newWidth });
            },
            onChangeColor: function onChangeColor(colorValue) {
              return setAttributes({ borderColor: colorValue.hex });
            },
            onChangeRadius: function onChangeRadius(newrRadius) {
              return setAttributes({ borderRadius: newrRadius });
            }
          }),
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_premium_range_responsive__["a" /* default */], {
            setAttributes: setAttributes,
            rangeType: {
              value: buttonPaddingType,
              label: __("buttonPaddingType")
            },
            range: { value: buttonPadding, label: __("buttonPadding") },
            rangeMobile: {
              value: buttonPaddingMobile,
              label: __("buttonPaddingMobile")
            },
            rangeTablet: {
              value: buttonPaddingTablet,
              label: __("buttonPaddingTablet")
            },
            rangeLabel: __("Button Padding ")
          })
        ) : null
      );
      if (!latestPosts) {
        return wp.element.createElement(
          Fragment,
          null,
          Inspectors,
          wp.element.createElement(Spinner, null)
        );
      }
      if (Carousel) {
        return wp.element.createElement(
          Fragment,
          null,
          Inspectors,
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__Carousel__["a" /* default */], {
            attributes: attributes,
            latestPosts: latestPosts,
            categoriesList: categoriesList,
            tagList: tagList
          })
        );
      }
      if (layoutValue === "masonry") {
        return wp.element.createElement(
          Fragment,
          null,
          Inspectors,
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__Masonry__["a" /* default */], {
            latestPosts: latestPosts,
            attributes: attributes,
            categoriesList: categoriesList,
            tagList: tagList
          })
        );
      } else {
        return wp.element.createElement(
          Fragment,
          null,
          Inspectors,
          wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__blog__["a" /* default */], {
            latestPosts: latestPosts,
            attributes: attributes,
            categoriesList: categoriesList,
            tagList: tagList
          })
        );
      }
    }
  }]);

  return edit;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (withSelect(function (select, props) {
  var _props$attributes = props.attributes,
      categories = _props$attributes.categories,
      order = _props$attributes.order,
      orderBy = _props$attributes.orderBy,
      postFilter = _props$attributes.postFilter,
      paginationMarkup = _props$attributes.paginationMarkup,
      numOfPosts = _props$attributes.numOfPosts,
      pagination = _props$attributes.pagination,
      currentPost = _props$attributes.currentPost;
  var setAttributes = props.setAttributes;

  var _select = select("core"),
      getEntityRecords = _select.getEntityRecords;

  var allTaxonomy = PremiumBlocksSettings.all_taxonomy;
  var currentTax = allTaxonomy["post"];
  var taxonomy = "";
  var categoriesList = [];
  var tagList = [];
  var rest_base = "";
  categoriesList = wp.data.select("core").getEntityRecords("taxonomy", "category");

  // if (pagination && 'empty' === paginationMarkup )
  // {

  //   jQuery.ajax({
  //     url: PremiumBlocksSettings.ajaxurl,
  //     data: {
  //       action: 'uagb_post_pagination',
  //       attributes: props.attributes,
  //       nonce: PremiumBlocksSettings.nonce,
  //     },
  //    dataType:"json",
  //     type: "POST",
  //     success: function ( data )

  //     {  setAttributes({paginationMarkup:data})

  //     },
  //     error: function(err) {
  //       console.log(err)
  //     }
  //   });
  // }

  if ("undefined" != typeof currentTax) {
    if ("undefined" != typeof currentTax["taxonomy"][postFilter]) {
      rest_base = currentTax["taxonomy"][postFilter]["rest_base"] == false || currentTax["taxonomy"][postFilter]["rest_base"] == null ? currentTax["taxonomy"][postFilter]["name"] : currentTax["taxonomy"][postFilter]["rest_base"];
    }

    if ("" != postFilter) {
      if ("undefined" != typeof currentTax["terms"] && "undefined" != typeof currentTax["terms"][postFilter]) {
        categoriesList = currentTax["terms"][postFilter];
      }
    }
  }
  tagList = currentTax["terms"]["post_tag"];
  var latestPostsQuery = {
    orderby: orderBy,
    order: order,
    posts_per_page: numOfPosts
  };

  if (currentPost) {
    latestPostsQuery["exclude"] = select("core/editor").getCurrentPostId();
  }

  latestPostsQuery[rest_base] = categories;
  return {
    latestPosts: getEntityRecords("postType", "post", latestPostsQuery),
    categoriesList: categoriesList,
    taxonomyList: "undefined" != typeof currentTax ? currentTax["taxonomy"] : [],
    tagList: tagList
  };
})(edit));

/***/ }),
/* 283 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_slick__ = __webpack_require__(284);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_slick___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react_slick__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__meta__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Excerpt__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Button__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Image__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Tags__ = __webpack_require__(69);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var decodeEntities = wp.htmlEntities.decodeEntities;
var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    format = _wp$date.format,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;









var __ = wp.i18n.__;

var prevArrow = void 0,
    nextArrow = void 0;
function SampleNextArrow(props) {
  var className = props.className,
      style = props.style,
      onClick = props.onClick;

  return wp.element.createElement("div", {
    className: className,
    style: _extends({}, style, { display: "block" }),
    onClick: onClick
  });
}
function SamplePrevArrow(props) {
  var className = props.className,
      style = props.style,
      onClick = props.onClick;

  return wp.element.createElement("div", {
    className: className,
    style: _extends({}, style, { display: "block" }),
    onClick: onClick
  });
}

var Carousel = function (_React$Component) {
  _inherits(Carousel, _React$Component);

  function Carousel() {
    _classCallCheck(this, Carousel);

    return _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).apply(this, arguments));
  }

  _createClass(Carousel, [{
    key: "render",
    value: function render() {
      var _settings;

      var _props = this.props,
          attributes = _props.attributes,
          className = _props.className,
          latestPosts = _props.latestPosts,
          TagList = _props.TagList,
          categoriesList = _props.categoriesList;
      var block_id = attributes.block_id,
          Autoplay = attributes.Autoplay,
          slideToScroll = attributes.slideToScroll,
          autoplaySpeed = attributes.autoplaySpeed,
          centerMode = attributes.centerMode,
          slideSpacing = attributes.slideSpacing,
          navigationDots = attributes.navigationDots,
          columns = attributes.columns,
          mcolumns = attributes.mcolumns,
          tcolumns = attributes.tcolumns,
          offsetNum = attributes.offsetNum,
          navigationArrow = attributes.navigationArrow,
          arrowPosition = attributes.arrowPosition;

      var settings = (_settings = {

        arrows: navigationArrow,
        dots: navigationDots,
        centerMode: centerMode,
        centerPadding: slideSpacing + 'px',
        infinite: true,
        autoplay: Autoplay,
        speed: autoplaySpeed
      }, _defineProperty(_settings, "speed", autoplaySpeed), _defineProperty(_settings, "slidesToShow", columns), _defineProperty(_settings, "responsive", [{
        breakpoint: 976,
        settings: {
          slidesToShow: tcolumns
        }
      }, {
        breakpoint: 767,
        settings: {
          slidesToShow: mcolumns
        }
      }]), _settings);
      var lastDisplay = latestPosts.slice(offsetNum);
      return wp.element.createElement(
        "div",
        { className: "premium-blog", id: "premium-blog-" + block_id },
        wp.element.createElement(
          __WEBPACK_IMPORTED_MODULE_0_react_slick___default.a,
          settings,
          lastDisplay.map(function (post, i) {
            return wp.element.createElement(
              "div",
              { className: "premium-blog-post-outer-container", key: i },
              wp.element.createElement(
                "div",
                { className: "premium-blog-post-container" },
                wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__Image__["a" /* default */], { post: post, attributes: attributes }),
                wp.element.createElement(
                  "div",
                  { className: "premium-blog-content-wrapper empty-thumb" },
                  wp.element.createElement(
                    "div",
                    { className: "premium-blog-content-wrapper empty-thumb " },
                    wp.element.createElement(
                      "div",
                      { className: "premium-blog-content-wrapper-inner" },
                      wp.element.createElement(
                        "div",
                        { className: "premium-blog-inner-container" },
                        wp.element.createElement(
                          "div",
                          { className: "premium-blog-entry-container" },
                          wp.element.createElement(
                            "div",
                            { className: "premium-blog-entry-title" },
                            wp.element.createElement(
                              "h2",
                              null,
                              wp.element.createElement(
                                "a",
                                { href: post.link },
                                undefined == post.title ? post.value : decodeEntities(post.title.rendered.trim()) || __("(Untitled)")
                              )
                            )
                          ),
                          wp.element.createElement(
                            "div",
                            { className: "premium-blog-entry-meta" },
                            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__meta__["a" /* default */], {
                              post: post,
                              categoriesList: categoriesList,
                              attributes: attributes
                            })
                          )
                        )
                      ),
                      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__Excerpt__["a" /* default */], { attributes: attributes, post: post }),
                      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__Button__["a" /* default */], { attributes: attributes, post: post }),
                      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__Tags__["a" /* default */], {
                        attributes: attributes,
                        post: post,
                        TagList: TagList
                      })
                    )
                  )
                )
              )
            );
          })
        )
      );
    }
  }]);

  return Carousel;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Carousel);

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slider = _interopRequireDefault(__webpack_require__(285));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}

var _default = _slider["default"];
exports["default"] = _default;

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _innerSlider = __webpack_require__(286);

var _json2mq = _interopRequireDefault(__webpack_require__(293));

var _defaultProps = _interopRequireDefault(__webpack_require__(295));

var _innerSliderUtils = __webpack_require__(29);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}

function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  }return _typeof(obj);
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });keys.push.apply(keys, symbols);
  }return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;return o;
  };return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };return _getPrototypeOf(o);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

var enquire = (0, _innerSliderUtils.canUseDOM)() && __webpack_require__(296);

var Slider = /*#__PURE__*/function (_React$Component) {
  _inherits(Slider, _React$Component);

  var _super = _createSuper(Slider);

  function Slider(props) {
    var _this;

    _classCallCheck(this, Slider);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "innerSliderRefHandler", function (ref) {
      return _this.innerSlider = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "slickPrev", function () {
      return _this.innerSlider.slickPrev();
    });

    _defineProperty(_assertThisInitialized(_this), "slickNext", function () {
      return _this.innerSlider.slickNext();
    });

    _defineProperty(_assertThisInitialized(_this), "slickGoTo", function (slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      return _this.innerSlider.slickGoTo(slide, dontAnimate);
    });

    _defineProperty(_assertThisInitialized(_this), "slickPause", function () {
      return _this.innerSlider.pause("paused");
    });

    _defineProperty(_assertThisInitialized(_this), "slickPlay", function () {
      return _this.innerSlider.autoPlay("play");
    });

    _this.state = {
      breakpoint: null
    };
    _this._responsiveMediaHandlers = [];
    return _this;
  }

  _createClass(Slider, [{
    key: "media",
    value: function media(query, handler) {
      // javascript handler for  css media query
      enquire.register(query, handler);

      this._responsiveMediaHandlers.push({
        query: query,
        handler: handler
      });
    } // handles responsive breakpoints

  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      // performance monitoring
      //if (process.env.NODE_ENV !== 'production') {
      //const { whyDidYouUpdate } = require('why-did-you-update')
      //whyDidYouUpdate(React)
      //}
      if (this.props.responsive) {
        var breakpoints = this.props.responsive.map(function (breakpt) {
          return breakpt.breakpoint;
        }); // sort them in increasing order of their numerical value

        breakpoints.sort(function (x, y) {
          return x - y;
        });
        breakpoints.forEach(function (breakpoint, index) {
          // media query for each breakpoint
          var bQuery;

          if (index === 0) {
            bQuery = (0, _json2mq["default"])({
              minWidth: 0,
              maxWidth: breakpoint
            });
          } else {
            bQuery = (0, _json2mq["default"])({
              minWidth: breakpoints[index - 1] + 1,
              maxWidth: breakpoint
            });
          } // when not using server side rendering


          (0, _innerSliderUtils.canUseDOM)() && _this2.media(bQuery, function () {
            _this2.setState({
              breakpoint: breakpoint
            });
          });
        }); // Register media query for full screen. Need to support resize from small to large
        // convert javascript object to media query string

        var query = (0, _json2mq["default"])({
          minWidth: breakpoints.slice(-1)[0]
        });
        (0, _innerSliderUtils.canUseDOM)() && this.media(query, function () {
          _this2.setState({
            breakpoint: null
          });
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._responsiveMediaHandlers.forEach(function (obj) {
        enquire.unregister(obj.query, obj.handler);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var settings;
      var newProps;

      if (this.state.breakpoint) {
        newProps = this.props.responsive.filter(function (resp) {
          return resp.breakpoint === _this3.state.breakpoint;
        });
        settings = newProps[0].settings === "unslick" ? "unslick" : _objectSpread(_objectSpread(_objectSpread({}, _defaultProps["default"]), this.props), newProps[0].settings);
      } else {
        settings = _objectSpread(_objectSpread({}, _defaultProps["default"]), this.props);
      } // force scrolling by one if centerMode is on


      if (settings.centerMode) {
        if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== "production") {
          console.warn("slidesToScroll should be equal to 1 in centerMode, you are using ".concat(settings.slidesToScroll));
        }

        settings.slidesToScroll = 1;
      } // force showing one slide and scrolling by one if the fade mode is on


      if (settings.fade) {
        if (settings.slidesToShow > 1 && process.env.NODE_ENV !== "production") {
          console.warn("slidesToShow should be equal to 1 when fade is true, you're using ".concat(settings.slidesToShow));
        }

        if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== "production") {
          console.warn("slidesToScroll should be equal to 1 when fade is true, you're using ".concat(settings.slidesToScroll));
        }

        settings.slidesToShow = 1;
        settings.slidesToScroll = 1;
      } // makes sure that children is an array, even when there is only 1 child


      var children = _react["default"].Children.toArray(this.props.children); // Children may contain false or null, so we should filter them
      // children may also contain string filled with spaces (in certain cases where we use jsx strings)


      children = children.filter(function (child) {
        if (typeof child === "string") {
          return !!child.trim();
        }

        return !!child;
      }); // rows and slidesPerRow logic is handled here

      if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {
        console.warn("variableWidth is not supported in case of rows > 1 or slidesPerRow > 1");
        settings.variableWidth = false;
      }

      var newChildren = [];
      var currentWidth = null;

      for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {
        var newSlide = [];

        for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {
          var row = [];

          for (var k = j; k < j + settings.slidesPerRow; k += 1) {
            if (settings.variableWidth && children[k].props.style) {
              currentWidth = children[k].props.style.width;
            }

            if (k >= children.length) break;
            row.push( /*#__PURE__*/_react["default"].cloneElement(children[k], {
              key: 100 * i + 10 * j + k,
              tabIndex: -1,
              style: {
                width: "".concat(100 / settings.slidesPerRow, "%"),
                display: "inline-block"
              }
            }));
          }

          newSlide.push( /*#__PURE__*/_react["default"].createElement("div", {
            key: 10 * i + j
          }, row));
        }

        if (settings.variableWidth) {
          newChildren.push( /*#__PURE__*/_react["default"].createElement("div", {
            key: i,
            style: {
              width: currentWidth
            }
          }, newSlide));
        } else {
          newChildren.push( /*#__PURE__*/_react["default"].createElement("div", {
            key: i
          }, newSlide));
        }
      }

      if (settings === "unslick") {
        var className = "regular slider " + (this.props.className || "");
        return (/*#__PURE__*/_react["default"].createElement("div", {
            className: className
          }, children)
        );
      } else if (newChildren.length <= settings.slidesToShow) {
        settings.unslick = true;
      }

      return (/*#__PURE__*/_react["default"].createElement(_innerSlider.InnerSlider, _extends({
          style: this.props.style,
          ref: this.innerSliderRefHandler
        }, settings), newChildren)
      );
    }
  }]);

  return Slider;
}(_react["default"].Component);

exports["default"] = Slider;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InnerSlider = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _initialState = _interopRequireDefault(__webpack_require__(287));

var _lodash = _interopRequireDefault(__webpack_require__(288));

var _classnames = _interopRequireDefault(__webpack_require__(0));

var _innerSliderUtils = __webpack_require__(29);

var _track = __webpack_require__(289);

var _dots = __webpack_require__(290);

var _arrows = __webpack_require__(291);

var _resizeObserverPolyfill = _interopRequireDefault(__webpack_require__(292));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}

function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  }return _typeof(obj);
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };return _extends.apply(this, arguments);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];
    }
  }return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
  }return target;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });keys.push.apply(keys, symbols);
  }return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;return o;
  };return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };return _getPrototypeOf(o);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

var InnerSlider = /*#__PURE__*/function (_React$Component) {
  _inherits(InnerSlider, _React$Component);

  var _super = _createSuper(InnerSlider);

  function InnerSlider(props) {
    var _this;

    _classCallCheck(this, InnerSlider);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "listRefHandler", function (ref) {
      return _this.list = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "trackRefHandler", function (ref) {
      return _this.track = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "adaptHeight", function () {
      if (_this.props.adaptiveHeight && _this.list) {
        var elem = _this.list.querySelector("[data-index=\"".concat(_this.state.currentSlide, "\"]"));

        _this.list.style.height = (0, _innerSliderUtils.getHeight)(elem) + "px";
      }
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidMount", function () {
      _this.props.onInit && _this.props.onInit();

      if (_this.props.lazyLoad) {
        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_objectSpread(_objectSpread({}, _this.props), _this.state));

        if (slidesToLoad.length > 0) {
          _this.setState(function (prevState) {
            return {
              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
            };
          });

          if (_this.props.onLazyLoad) {
            _this.props.onLazyLoad(slidesToLoad);
          }
        }
      }

      var spec = _objectSpread({
        listRef: _this.list,
        trackRef: _this.track
      }, _this.props);

      _this.updateState(spec, true, function () {
        _this.adaptHeight();

        _this.props.autoplay && _this.autoPlay("update");
      });

      if (_this.props.lazyLoad === "progressive") {
        _this.lazyLoadTimer = setInterval(_this.progressiveLazyLoad, 1000);
      }

      _this.ro = new _resizeObserverPolyfill["default"](function () {
        if (_this.state.animating) {
          _this.onWindowResized(false); // don't set trackStyle hence don't break animation


          _this.callbackTimers.push(setTimeout(function () {
            return _this.onWindowResized();
          }, _this.props.speed));
        } else {
          _this.onWindowResized();
        }
      });

      _this.ro.observe(_this.list);

      document.querySelectorAll && Array.prototype.forEach.call(document.querySelectorAll(".slick-slide"), function (slide) {
        slide.onfocus = _this.props.pauseOnFocus ? _this.onSlideFocus : null;
        slide.onblur = _this.props.pauseOnFocus ? _this.onSlideBlur : null;
      });

      if (window.addEventListener) {
        window.addEventListener("resize", _this.onWindowResized);
      } else {
        window.attachEvent("onresize", _this.onWindowResized);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "componentWillUnmount", function () {
      if (_this.animationEndCallback) {
        clearTimeout(_this.animationEndCallback);
      }

      if (_this.lazyLoadTimer) {
        clearInterval(_this.lazyLoadTimer);
      }

      if (_this.callbackTimers.length) {
        _this.callbackTimers.forEach(function (timer) {
          return clearTimeout(timer);
        });

        _this.callbackTimers = [];
      }

      if (window.addEventListener) {
        window.removeEventListener("resize", _this.onWindowResized);
      } else {
        window.detachEvent("onresize", _this.onWindowResized);
      }

      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
      }

      _this.ro.disconnect();
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidUpdate", function (prevProps) {
      _this.checkImagesLoad();

      _this.props.onReInit && _this.props.onReInit();

      if (_this.props.lazyLoad) {
        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_objectSpread(_objectSpread({}, _this.props), _this.state));

        if (slidesToLoad.length > 0) {
          _this.setState(function (prevState) {
            return {
              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
            };
          });

          if (_this.props.onLazyLoad) {
            _this.props.onLazyLoad(slidesToLoad);
          }
        }
      } // if (this.props.onLazyLoad) {
      //   this.props.onLazyLoad([leftMostSlide])
      // }


      _this.adaptHeight();

      var spec = _objectSpread(_objectSpread({
        listRef: _this.list,
        trackRef: _this.track
      }, _this.props), _this.state);

      var setTrackStyle = _this.didPropsChange(prevProps);

      setTrackStyle && _this.updateState(spec, setTrackStyle, function () {
        if (_this.state.currentSlide >= _react["default"].Children.count(_this.props.children)) {
          _this.changeSlide({
            message: "index",
            index: _react["default"].Children.count(_this.props.children) - _this.props.slidesToShow,
            currentSlide: _this.state.currentSlide
          });
        }

        if (_this.props.autoplay) {
          _this.autoPlay("update");
        } else {
          _this.pause("paused");
        }
      });
    });

    _defineProperty(_assertThisInitialized(_this), "onWindowResized", function (setTrackStyle) {
      if (_this.debouncedResize) _this.debouncedResize.cancel();
      _this.debouncedResize = (0, _lodash["default"])(function () {
        return _this.resizeWindow(setTrackStyle);
      }, 50);

      _this.debouncedResize();
    });

    _defineProperty(_assertThisInitialized(_this), "resizeWindow", function () {
      var setTrackStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var isTrackMounted = Boolean(_this.track && _this.track.node); // prevent warning: setting state on unmounted component (server side rendering)

      if (!isTrackMounted) return;

      var spec = _objectSpread(_objectSpread({
        listRef: _this.list,
        trackRef: _this.track
      }, _this.props), _this.state);

      _this.updateState(spec, setTrackStyle, function () {
        if (_this.props.autoplay) _this.autoPlay("update");else _this.pause("paused");
      }); // animating state should be cleared while resizing, otherwise autoplay stops working


      _this.setState({
        animating: false
      });

      clearTimeout(_this.animationEndCallback);
      delete _this.animationEndCallback;
    });

    _defineProperty(_assertThisInitialized(_this), "updateState", function (spec, setTrackStyle, callback) {
      var updatedState = (0, _innerSliderUtils.initializedState)(spec);
      spec = _objectSpread(_objectSpread(_objectSpread({}, spec), updatedState), {}, {
        slideIndex: updatedState.currentSlide
      });
      var targetLeft = (0, _innerSliderUtils.getTrackLeft)(spec);
      spec = _objectSpread(_objectSpread({}, spec), {}, {
        left: targetLeft
      });
      var trackStyle = (0, _innerSliderUtils.getTrackCSS)(spec);

      if (setTrackStyle || _react["default"].Children.count(_this.props.children) !== _react["default"].Children.count(spec.children)) {
        updatedState["trackStyle"] = trackStyle;
      }

      _this.setState(updatedState, callback);
    });

    _defineProperty(_assertThisInitialized(_this), "ssrInit", function () {
      if (_this.props.variableWidth) {
        var _trackWidth = 0,
            _trackLeft = 0;
        var childrenWidths = [];
        var preClones = (0, _innerSliderUtils.getPreClones)(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
          slideCount: _this.props.children.length
        }));
        var postClones = (0, _innerSliderUtils.getPostClones)(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
          slideCount: _this.props.children.length
        }));

        _this.props.children.forEach(function (child) {
          childrenWidths.push(child.props.style.width);
          _trackWidth += child.props.style.width;
        });

        for (var i = 0; i < preClones; i++) {
          _trackLeft += childrenWidths[childrenWidths.length - 1 - i];
          _trackWidth += childrenWidths[childrenWidths.length - 1 - i];
        }

        for (var _i = 0; _i < postClones; _i++) {
          _trackWidth += childrenWidths[_i];
        }

        for (var _i2 = 0; _i2 < _this.state.currentSlide; _i2++) {
          _trackLeft += childrenWidths[_i2];
        }

        var _trackStyle = {
          width: _trackWidth + "px",
          left: -_trackLeft + "px"
        };

        if (_this.props.centerMode) {
          var currentWidth = "".concat(childrenWidths[_this.state.currentSlide], "px");
          _trackStyle.left = "calc(".concat(_trackStyle.left, " + (100% - ").concat(currentWidth, ") / 2 ) ");
        }

        return {
          trackStyle: _trackStyle
        };
      }

      var childrenCount = _react["default"].Children.count(_this.props.children);

      var spec = _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
        slideCount: childrenCount
      });

      var slideCount = (0, _innerSliderUtils.getPreClones)(spec) + (0, _innerSliderUtils.getPostClones)(spec) + childrenCount;
      var trackWidth = 100 / _this.props.slidesToShow * slideCount;
      var slideWidth = 100 / slideCount;
      var trackLeft = -slideWidth * ((0, _innerSliderUtils.getPreClones)(spec) + _this.state.currentSlide) * trackWidth / 100;

      if (_this.props.centerMode) {
        trackLeft += (100 - slideWidth * trackWidth / 100) / 2;
      }

      var trackStyle = {
        width: trackWidth + "%",
        left: trackLeft + "%"
      };
      return {
        slideWidth: slideWidth + "%",
        trackStyle: trackStyle
      };
    });

    _defineProperty(_assertThisInitialized(_this), "checkImagesLoad", function () {
      var images = _this.list.querySelectorAll && _this.list.querySelectorAll(".slick-slide img") || [];
      var imagesCount = images.length,
          loadedCount = 0;
      Array.prototype.forEach.call(images, function (image) {
        var handler = function handler() {
          return ++loadedCount && loadedCount >= imagesCount && _this.onWindowResized();
        };

        if (!image.onclick) {
          image.onclick = function () {
            return image.parentNode.focus();
          };
        } else {
          var prevClickHandler = image.onclick;

          image.onclick = function () {
            prevClickHandler();
            image.parentNode.focus();
          };
        }

        if (!image.onload) {
          if (_this.props.lazyLoad) {
            image.onload = function () {
              _this.adaptHeight();

              _this.callbackTimers.push(setTimeout(_this.onWindowResized, _this.props.speed));
            };
          } else {
            image.onload = handler;

            image.onerror = function () {
              handler();
              _this.props.onLazyLoadError && _this.props.onLazyLoadError();
            };
          }
        }
      });
    });

    _defineProperty(_assertThisInitialized(_this), "progressiveLazyLoad", function () {
      var slidesToLoad = [];

      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);

      for (var index = _this.state.currentSlide; index < _this.state.slideCount + (0, _innerSliderUtils.getPostClones)(spec); index++) {
        if (_this.state.lazyLoadedList.indexOf(index) < 0) {
          slidesToLoad.push(index);
          break;
        }
      }

      for (var _index = _this.state.currentSlide - 1; _index >= -(0, _innerSliderUtils.getPreClones)(spec); _index--) {
        if (_this.state.lazyLoadedList.indexOf(_index) < 0) {
          slidesToLoad.push(_index);
          break;
        }
      }

      if (slidesToLoad.length > 0) {
        _this.setState(function (state) {
          return {
            lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)
          };
        });

        if (_this.props.onLazyLoad) {
          _this.props.onLazyLoad(slidesToLoad);
        }
      } else {
        if (_this.lazyLoadTimer) {
          clearInterval(_this.lazyLoadTimer);
          delete _this.lazyLoadTimer;
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "slideHandler", function (index) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var _this$props = _this.props,
          asNavFor = _this$props.asNavFor,
          beforeChange = _this$props.beforeChange,
          onLazyLoad = _this$props.onLazyLoad,
          speed = _this$props.speed,
          afterChange = _this$props.afterChange; // capture currentslide before state is updated

      var currentSlide = _this.state.currentSlide;

      var _slideHandler = (0, _innerSliderUtils.slideHandler)(_objectSpread(_objectSpread(_objectSpread({
        index: index
      }, _this.props), _this.state), {}, {
        trackRef: _this.track,
        useCSS: _this.props.useCSS && !dontAnimate
      })),
          state = _slideHandler.state,
          nextState = _slideHandler.nextState;

      if (!state) return;
      beforeChange && beforeChange(currentSlide, state.currentSlide);
      var slidesToLoad = state.lazyLoadedList.filter(function (value) {
        return _this.state.lazyLoadedList.indexOf(value) < 0;
      });
      onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad);

      if (!_this.props.waitForAnimate && _this.animationEndCallback) {
        clearTimeout(_this.animationEndCallback);
        afterChange && afterChange(currentSlide);
        delete _this.animationEndCallback;
      }

      _this.setState(state, function () {
        // asNavForIndex check is to avoid recursive calls of slideHandler in waitForAnimate=false mode
        if (asNavFor && _this.asNavForIndex !== index) {
          _this.asNavForIndex = index;
          asNavFor.innerSlider.slideHandler(index);
        }

        if (!nextState) return;
        _this.animationEndCallback = setTimeout(function () {
          var animating = nextState.animating,
              firstBatch = _objectWithoutProperties(nextState, ["animating"]);

          _this.setState(firstBatch, function () {
            _this.callbackTimers.push(setTimeout(function () {
              return _this.setState({
                animating: animating
              });
            }, 10));

            afterChange && afterChange(state.currentSlide);
            delete _this.animationEndCallback;
          });
        }, speed);
      });
    });

    _defineProperty(_assertThisInitialized(_this), "changeSlide", function (options) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);

      var targetSlide = (0, _innerSliderUtils.changeSlide)(spec, options);
      if (targetSlide !== 0 && !targetSlide) return;

      if (dontAnimate === true) {
        _this.slideHandler(targetSlide, dontAnimate);
      } else {
        _this.slideHandler(targetSlide);
      }

      _this.props.autoplay && _this.autoPlay("update");

      if (_this.props.focusOnSelect) {
        var nodes = _this.list.querySelectorAll(".slick-current");

        nodes[0] && nodes[0].focus();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "clickHandler", function (e) {
      if (_this.clickable === false) {
        e.stopPropagation();
        e.preventDefault();
      }

      _this.clickable = true;
    });

    _defineProperty(_assertThisInitialized(_this), "keyHandler", function (e) {
      var dir = (0, _innerSliderUtils.keyHandler)(e, _this.props.accessibility, _this.props.rtl);
      dir !== "" && _this.changeSlide({
        message: dir
      });
    });

    _defineProperty(_assertThisInitialized(_this), "selectHandler", function (options) {
      _this.changeSlide(options);
    });

    _defineProperty(_assertThisInitialized(_this), "disableBodyScroll", function () {
      var preventDefault = function preventDefault(e) {
        e = e || window.event;
        if (e.preventDefault) e.preventDefault();
        e.returnValue = false;
      };

      window.ontouchmove = preventDefault;
    });

    _defineProperty(_assertThisInitialized(_this), "enableBodyScroll", function () {
      window.ontouchmove = null;
    });

    _defineProperty(_assertThisInitialized(_this), "swipeStart", function (e) {
      if (_this.props.verticalSwiping) {
        _this.disableBodyScroll();
      }

      var state = (0, _innerSliderUtils.swipeStart)(e, _this.props.swipe, _this.props.draggable);
      state !== "" && _this.setState(state);
    });

    _defineProperty(_assertThisInitialized(_this), "swipeMove", function (e) {
      var state = (0, _innerSliderUtils.swipeMove)(e, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
        trackRef: _this.track,
        listRef: _this.list,
        slideIndex: _this.state.currentSlide
      }));
      if (!state) return;

      if (state["swiping"]) {
        _this.clickable = false;
      }

      _this.setState(state);
    });

    _defineProperty(_assertThisInitialized(_this), "swipeEnd", function (e) {
      var state = (0, _innerSliderUtils.swipeEnd)(e, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
        trackRef: _this.track,
        listRef: _this.list,
        slideIndex: _this.state.currentSlide
      }));
      if (!state) return;
      var triggerSlideHandler = state["triggerSlideHandler"];
      delete state["triggerSlideHandler"];

      _this.setState(state);

      if (triggerSlideHandler === undefined) return;

      _this.slideHandler(triggerSlideHandler);

      if (_this.props.verticalSwiping) {
        _this.enableBodyScroll();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "touchEnd", function (e) {
      _this.swipeEnd(e);

      _this.clickable = true;
    });

    _defineProperty(_assertThisInitialized(_this), "slickPrev", function () {
      // this and fellow methods are wrapped in setTimeout
      // to make sure initialize setState has happened before
      // any of such methods are called
      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({
          message: "previous"
        });
      }, 0));
    });

    _defineProperty(_assertThisInitialized(_this), "slickNext", function () {
      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({
          message: "next"
        });
      }, 0));
    });

    _defineProperty(_assertThisInitialized(_this), "slickGoTo", function (slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      slide = Number(slide);
      if (isNaN(slide)) return "";

      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({
          message: "index",
          index: slide,
          currentSlide: _this.state.currentSlide
        }, dontAnimate);
      }, 0));
    });

    _defineProperty(_assertThisInitialized(_this), "play", function () {
      var nextIndex;

      if (_this.props.rtl) {
        nextIndex = _this.state.currentSlide - _this.props.slidesToScroll;
      } else {
        if ((0, _innerSliderUtils.canGoNext)(_objectSpread(_objectSpread({}, _this.props), _this.state))) {
          nextIndex = _this.state.currentSlide + _this.props.slidesToScroll;
        } else {
          return false;
        }
      }

      _this.slideHandler(nextIndex);
    });

    _defineProperty(_assertThisInitialized(_this), "autoPlay", function (playType) {
      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
      }

      var autoplaying = _this.state.autoplaying;

      if (playType === "update") {
        if (autoplaying === "hovered" || autoplaying === "focused" || autoplaying === "paused") {
          return;
        }
      } else if (playType === "leave") {
        if (autoplaying === "paused" || autoplaying === "focused") {
          return;
        }
      } else if (playType === "blur") {
        if (autoplaying === "paused" || autoplaying === "hovered") {
          return;
        }
      }

      _this.autoplayTimer = setInterval(_this.play, _this.props.autoplaySpeed + 50);

      _this.setState({
        autoplaying: "playing"
      });
    });

    _defineProperty(_assertThisInitialized(_this), "pause", function (pauseType) {
      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
        _this.autoplayTimer = null;
      }

      var autoplaying = _this.state.autoplaying;

      if (pauseType === "paused") {
        _this.setState({
          autoplaying: "paused"
        });
      } else if (pauseType === "focused") {
        if (autoplaying === "hovered" || autoplaying === "playing") {
          _this.setState({
            autoplaying: "focused"
          });
        }
      } else {
        // pauseType  is 'hovered'
        if (autoplaying === "playing") {
          _this.setState({
            autoplaying: "hovered"
          });
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onDotsOver", function () {
      return _this.props.autoplay && _this.pause("hovered");
    });

    _defineProperty(_assertThisInitialized(_this), "onDotsLeave", function () {
      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
    });

    _defineProperty(_assertThisInitialized(_this), "onTrackOver", function () {
      return _this.props.autoplay && _this.pause("hovered");
    });

    _defineProperty(_assertThisInitialized(_this), "onTrackLeave", function () {
      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
    });

    _defineProperty(_assertThisInitialized(_this), "onSlideFocus", function () {
      return _this.props.autoplay && _this.pause("focused");
    });

    _defineProperty(_assertThisInitialized(_this), "onSlideBlur", function () {
      return _this.props.autoplay && _this.state.autoplaying === "focused" && _this.autoPlay("blur");
    });

    _defineProperty(_assertThisInitialized(_this), "render", function () {
      var className = (0, _classnames["default"])("slick-slider", _this.props.className, {
        "slick-vertical": _this.props.vertical,
        "slick-initialized": true
      });

      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);

      var trackProps = (0, _innerSliderUtils.extractObject)(spec, ["fade", "cssEase", "speed", "infinite", "centerMode", "focusOnSelect", "currentSlide", "lazyLoad", "lazyLoadedList", "rtl", "slideWidth", "slideHeight", "listHeight", "vertical", "slidesToShow", "slidesToScroll", "slideCount", "trackStyle", "variableWidth", "unslick", "centerPadding", "targetSlide", "useCSS"]);
      var pauseOnHover = _this.props.pauseOnHover;
      trackProps = _objectSpread(_objectSpread({}, trackProps), {}, {
        onMouseEnter: pauseOnHover ? _this.onTrackOver : null,
        onMouseLeave: pauseOnHover ? _this.onTrackLeave : null,
        onMouseOver: pauseOnHover ? _this.onTrackOver : null,
        focusOnSelect: _this.props.focusOnSelect && _this.clickable ? _this.selectHandler : null
      });
      var dots;

      if (_this.props.dots === true && _this.state.slideCount >= _this.props.slidesToShow) {
        var dotProps = (0, _innerSliderUtils.extractObject)(spec, ["dotsClass", "slideCount", "slidesToShow", "currentSlide", "slidesToScroll", "clickHandler", "children", "customPaging", "infinite", "appendDots"]);
        var pauseOnDotsHover = _this.props.pauseOnDotsHover;
        dotProps = _objectSpread(_objectSpread({}, dotProps), {}, {
          clickHandler: _this.changeSlide,
          onMouseEnter: pauseOnDotsHover ? _this.onDotsLeave : null,
          onMouseOver: pauseOnDotsHover ? _this.onDotsOver : null,
          onMouseLeave: pauseOnDotsHover ? _this.onDotsLeave : null
        });
        dots = /*#__PURE__*/_react["default"].createElement(_dots.Dots, dotProps);
      }

      var prevArrow, nextArrow;
      var arrowProps = (0, _innerSliderUtils.extractObject)(spec, ["infinite", "centerMode", "currentSlide", "slideCount", "slidesToShow", "prevArrow", "nextArrow"]);
      arrowProps.clickHandler = _this.changeSlide;

      if (_this.props.arrows) {
        prevArrow = /*#__PURE__*/_react["default"].createElement(_arrows.PrevArrow, arrowProps);
        nextArrow = /*#__PURE__*/_react["default"].createElement(_arrows.NextArrow, arrowProps);
      }

      var verticalHeightStyle = null;

      if (_this.props.vertical) {
        verticalHeightStyle = {
          height: _this.state.listHeight
        };
      }

      var centerPaddingStyle = null;

      if (_this.props.vertical === false) {
        if (_this.props.centerMode === true) {
          centerPaddingStyle = {
            padding: "0px " + _this.props.centerPadding
          };
        }
      } else {
        if (_this.props.centerMode === true) {
          centerPaddingStyle = {
            padding: _this.props.centerPadding + " 0px"
          };
        }
      }

      var listStyle = _objectSpread(_objectSpread({}, verticalHeightStyle), centerPaddingStyle);

      var touchMove = _this.props.touchMove;
      var listProps = {
        className: "slick-list",
        style: listStyle,
        onClick: _this.clickHandler,
        onMouseDown: touchMove ? _this.swipeStart : null,
        onMouseMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
        onMouseUp: touchMove ? _this.swipeEnd : null,
        onMouseLeave: _this.state.dragging && touchMove ? _this.swipeEnd : null,
        onTouchStart: touchMove ? _this.swipeStart : null,
        onTouchMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
        onTouchEnd: touchMove ? _this.touchEnd : null,
        onTouchCancel: _this.state.dragging && touchMove ? _this.swipeEnd : null,
        onKeyDown: _this.props.accessibility ? _this.keyHandler : null
      };
      var innerSliderProps = {
        className: className,
        dir: "ltr",
        style: _this.props.style
      };

      if (_this.props.unslick) {
        listProps = {
          className: "slick-list"
        };
        innerSliderProps = {
          className: className
        };
      }

      return (/*#__PURE__*/_react["default"].createElement("div", innerSliderProps, !_this.props.unslick ? prevArrow : "", /*#__PURE__*/_react["default"].createElement("div", _extends({
          ref: _this.listRefHandler
        }, listProps), /*#__PURE__*/_react["default"].createElement(_track.Track, _extends({
          ref: _this.trackRefHandler
        }, trackProps), _this.props.children)), !_this.props.unslick ? nextArrow : "", !_this.props.unslick ? dots : "")
      );
    });

    _this.list = null;
    _this.track = null;
    _this.state = _objectSpread(_objectSpread({}, _initialState["default"]), {}, {
      currentSlide: _this.props.initialSlide,
      slideCount: _react["default"].Children.count(_this.props.children)
    });
    _this.callbackTimers = [];
    _this.clickable = true;
    _this.debouncedResize = null;

    var ssrState = _this.ssrInit();

    _this.state = _objectSpread(_objectSpread({}, _this.state), ssrState);
    return _this;
  }

  _createClass(InnerSlider, [{
    key: "didPropsChange",
    value: function didPropsChange(prevProps) {
      var setTrackStyle = false;

      for (var _i3 = 0, _Object$keys = Object.keys(this.props); _i3 < _Object$keys.length; _i3++) {
        var key = _Object$keys[_i3];

        if (!prevProps.hasOwnProperty(key)) {
          setTrackStyle = true;
          break;
        }

        if (_typeof(prevProps[key]) === "object" || typeof prevProps[key] === "function") {
          continue;
        }

        if (prevProps[key] !== this.props[key]) {
          setTrackStyle = true;
          break;
        }
      }

      return setTrackStyle || _react["default"].Children.count(this.props.children) !== _react["default"].Children.count(prevProps.children);
    }
  }]);

  return InnerSlider;
}(_react["default"].Component);

exports.InnerSlider = InnerSlider;

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var initialState = {
  animating: false,
  autoplaying: null,
  currentDirection: 0,
  currentLeft: null,
  currentSlide: 0,
  direction: 1,
  dragging: false,
  edgeDragged: false,
  initialized: false,
  lazyLoadedList: [],
  listHeight: null,
  listWidth: null,
  scrolling: false,
  slideCount: null,
  slideHeight: null,
  slideWidth: null,
  swipeLeft: null,
  swiped: false,
  // used by swipeEvent. differentites between touch and swipe.
  swiping: false,
  touchObject: {
    startX: 0,
    startY: 0,
    curX: 0,
    curY: 0
  },
  trackStyle: {},
  trackWidth: 0,
  targetSlide: 0
};
var _default = initialState;
exports["default"] = _default;

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function now() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? other + '' : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

module.exports = debounce;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(34)))

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Track = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _classnames = _interopRequireDefault(__webpack_require__(0));

var _innerSliderUtils = __webpack_require__(29);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}

function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  }return _typeof(obj);
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };return _extends.apply(this, arguments);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;return o;
  };return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };return _getPrototypeOf(o);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });keys.push.apply(keys, symbols);
  }return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

// given specifications/props for a slide, fetch all the classes that need to be applied to the slide
var getSlideClasses = function getSlideClasses(spec) {
  var slickActive, slickCenter, slickCloned;
  var centerOffset, index;

  if (spec.rtl) {
    index = spec.slideCount - 1 - spec.index;
  } else {
    index = spec.index;
  }

  slickCloned = index < 0 || index >= spec.slideCount;

  if (spec.centerMode) {
    centerOffset = Math.floor(spec.slidesToShow / 2);
    slickCenter = (index - spec.currentSlide) % spec.slideCount === 0;

    if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {
      slickActive = true;
    }
  } else {
    slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;
  }

  var focusedSlide;

  if (spec.targetSlide < 0) {
    focusedSlide = spec.targetSlide + spec.slideCount;
  } else if (spec.targetSlide >= spec.slideCount) {
    focusedSlide = spec.targetSlide - spec.slideCount;
  } else {
    focusedSlide = spec.targetSlide;
  }

  var slickCurrent = index === focusedSlide;
  return {
    "slick-slide": true,
    "slick-active": slickActive,
    "slick-center": slickCenter,
    "slick-cloned": slickCloned,
    "slick-current": slickCurrent // dubious in case of RTL

  };
};

var getSlideStyle = function getSlideStyle(spec) {
  var style = {};

  if (spec.variableWidth === undefined || spec.variableWidth === false) {
    style.width = spec.slideWidth;
  }

  if (spec.fade) {
    style.position = "relative";

    if (spec.vertical) {
      style.top = -spec.index * parseInt(spec.slideHeight);
    } else {
      style.left = -spec.index * parseInt(spec.slideWidth);
    }

    style.opacity = spec.currentSlide === spec.index ? 1 : 0;

    if (spec.useCSS) {
      style.transition = "opacity " + spec.speed + "ms " + spec.cssEase + ", " + "visibility " + spec.speed + "ms " + spec.cssEase;
    }
  }

  return style;
};

var getKey = function getKey(child, fallbackKey) {
  return child.key || fallbackKey;
};

var renderSlides = function renderSlides(spec) {
  var key;
  var slides = [];
  var preCloneSlides = [];
  var postCloneSlides = [];

  var childrenCount = _react["default"].Children.count(spec.children);

  var startIndex = (0, _innerSliderUtils.lazyStartIndex)(spec);
  var endIndex = (0, _innerSliderUtils.lazyEndIndex)(spec);

  _react["default"].Children.forEach(spec.children, function (elem, index) {
    var child;
    var childOnClickOptions = {
      message: "children",
      index: index,
      slidesToScroll: spec.slidesToScroll,
      currentSlide: spec.currentSlide
    }; // in case of lazyLoad, whether or not we want to fetch the slide

    if (!spec.lazyLoad || spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0) {
      child = elem;
    } else {
      child = /*#__PURE__*/_react["default"].createElement("div", null);
    }

    var childStyle = getSlideStyle(_objectSpread(_objectSpread({}, spec), {}, {
      index: index
    }));
    var slideClass = child.props.className || "";
    var slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
      index: index
    })); // push a cloned element of the desired slide

    slides.push( /*#__PURE__*/_react["default"].cloneElement(child, {
      key: "original" + getKey(child, index),
      "data-index": index,
      className: (0, _classnames["default"])(slideClasses, slideClass),
      tabIndex: "-1",
      "aria-hidden": !slideClasses["slick-active"],
      style: _objectSpread(_objectSpread({
        outline: "none"
      }, child.props.style || {}), childStyle),
      onClick: function onClick(e) {
        child.props && child.props.onClick && child.props.onClick(e);

        if (spec.focusOnSelect) {
          spec.focusOnSelect(childOnClickOptions);
        }
      }
    })); // if slide needs to be precloned or postcloned

    if (spec.infinite && spec.fade === false) {
      var preCloneNo = childrenCount - index;

      if (preCloneNo <= (0, _innerSliderUtils.getPreClones)(spec) && childrenCount !== spec.slidesToShow) {
        key = -preCloneNo;

        if (key >= startIndex) {
          child = elem;
        }

        slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
          index: key
        }));
        preCloneSlides.push( /*#__PURE__*/_react["default"].cloneElement(child, {
          key: "precloned" + getKey(child, key),
          "data-index": key,
          tabIndex: "-1",
          className: (0, _classnames["default"])(slideClasses, slideClass),
          "aria-hidden": !slideClasses["slick-active"],
          style: _objectSpread(_objectSpread({}, child.props.style || {}), childStyle),
          onClick: function onClick(e) {
            child.props && child.props.onClick && child.props.onClick(e);

            if (spec.focusOnSelect) {
              spec.focusOnSelect(childOnClickOptions);
            }
          }
        }));
      }

      if (childrenCount !== spec.slidesToShow) {
        key = childrenCount + index;

        if (key < endIndex) {
          child = elem;
        }

        slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
          index: key
        }));
        postCloneSlides.push( /*#__PURE__*/_react["default"].cloneElement(child, {
          key: "postcloned" + getKey(child, key),
          "data-index": key,
          tabIndex: "-1",
          className: (0, _classnames["default"])(slideClasses, slideClass),
          "aria-hidden": !slideClasses["slick-active"],
          style: _objectSpread(_objectSpread({}, child.props.style || {}), childStyle),
          onClick: function onClick(e) {
            child.props && child.props.onClick && child.props.onClick(e);

            if (spec.focusOnSelect) {
              spec.focusOnSelect(childOnClickOptions);
            }
          }
        }));
      }
    }
  });

  if (spec.rtl) {
    return preCloneSlides.concat(slides, postCloneSlides).reverse();
  } else {
    return preCloneSlides.concat(slides, postCloneSlides);
  }
};

var Track = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(Track, _React$PureComponent);

  var _super = _createSuper(Track);

  function Track() {
    var _this;

    _classCallCheck(this, Track);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "node", null);

    _defineProperty(_assertThisInitialized(_this), "handleRef", function (ref) {
      _this.node = ref;
    });

    return _this;
  }

  _createClass(Track, [{
    key: "render",
    value: function render() {
      var slides = renderSlides(this.props);
      var _this$props = this.props,
          onMouseEnter = _this$props.onMouseEnter,
          onMouseOver = _this$props.onMouseOver,
          onMouseLeave = _this$props.onMouseLeave;
      var mouseEvents = {
        onMouseEnter: onMouseEnter,
        onMouseOver: onMouseOver,
        onMouseLeave: onMouseLeave
      };
      return (/*#__PURE__*/_react["default"].createElement("div", _extends({
          ref: this.handleRef,
          className: "slick-track",
          style: this.props.trackStyle
        }, mouseEvents), slides)
      );
    }
  }]);

  return Track;
}(_react["default"].PureComponent);

exports.Track = Track;

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dots = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _classnames = _interopRequireDefault(__webpack_require__(0));

var _innerSliderUtils = __webpack_require__(29);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}

function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  }return _typeof(obj);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });keys.push.apply(keys, symbols);
  }return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;return o;
  };return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };return _getPrototypeOf(o);
}

var getDotCount = function getDotCount(spec) {
  var dots;

  if (spec.infinite) {
    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);
  } else {
    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1;
  }

  return dots;
};

var Dots = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(Dots, _React$PureComponent);

  var _super = _createSuper(Dots);

  function Dots() {
    _classCallCheck(this, Dots);

    return _super.apply(this, arguments);
  }

  _createClass(Dots, [{
    key: "clickHandler",
    value: function clickHandler(options, e) {
      // In Autoplay the focus stays on clicked button even after transition
      // to next slide. That only goes away by click somewhere outside
      e.preventDefault();
      this.props.clickHandler(options);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          onMouseEnter = _this$props.onMouseEnter,
          onMouseOver = _this$props.onMouseOver,
          onMouseLeave = _this$props.onMouseLeave,
          infinite = _this$props.infinite,
          slidesToScroll = _this$props.slidesToScroll,
          slidesToShow = _this$props.slidesToShow,
          slideCount = _this$props.slideCount,
          currentSlide = _this$props.currentSlide;
      var dotCount = getDotCount({
        slideCount: slideCount,
        slidesToScroll: slidesToScroll,
        slidesToShow: slidesToShow,
        infinite: infinite
      });
      var mouseEvents = {
        onMouseEnter: onMouseEnter,
        onMouseOver: onMouseOver,
        onMouseLeave: onMouseLeave
      };
      var dots = [];

      for (var i = 0; i < dotCount; i++) {
        var _rightBound = (i + 1) * slidesToScroll - 1;

        var rightBound = infinite ? _rightBound : (0, _innerSliderUtils.clamp)(_rightBound, 0, slideCount - 1);

        var _leftBound = rightBound - (slidesToScroll - 1);

        var leftBound = infinite ? _leftBound : (0, _innerSliderUtils.clamp)(_leftBound, 0, slideCount - 1);
        var className = (0, _classnames["default"])({
          "slick-active": infinite ? currentSlide >= leftBound && currentSlide <= rightBound : currentSlide === leftBound
        });
        var dotOptions = {
          message: "dots",
          index: i,
          slidesToScroll: slidesToScroll,
          currentSlide: currentSlide
        };
        var onClick = this.clickHandler.bind(this, dotOptions);
        dots = dots.concat( /*#__PURE__*/_react["default"].createElement("li", {
          key: i,
          className: className
        }, /*#__PURE__*/_react["default"].cloneElement(this.props.customPaging(i), {
          onClick: onClick
        })));
      }

      return (/*#__PURE__*/_react["default"].cloneElement(this.props.appendDots(dots), _objectSpread({
          className: this.props.dotsClass
        }, mouseEvents))
      );
    }
  }]);

  return Dots;
}(_react["default"].PureComponent);

exports.Dots = Dots;

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NextArrow = exports.PrevArrow = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _classnames = _interopRequireDefault(__webpack_require__(0));

var _innerSliderUtils = __webpack_require__(29);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}

function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
    };
  }return _typeof(obj);
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });keys.push.apply(keys, symbols);
  }return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;return o;
  };return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };return _getPrototypeOf(o);
}

var PrevArrow = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(PrevArrow, _React$PureComponent);

  var _super = _createSuper(PrevArrow);

  function PrevArrow() {
    _classCallCheck(this, PrevArrow);

    return _super.apply(this, arguments);
  }

  _createClass(PrevArrow, [{
    key: "clickHandler",
    value: function clickHandler(options, e) {
      if (e) {
        e.preventDefault();
      }

      this.props.clickHandler(options, e);
    }
  }, {
    key: "render",
    value: function render() {
      var prevClasses = {
        "slick-arrow": true,
        "slick-prev": true
      };
      var prevHandler = this.clickHandler.bind(this, {
        message: "previous"
      });

      if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {
        prevClasses["slick-disabled"] = true;
        prevHandler = null;
      }

      var prevArrowProps = {
        key: "0",
        "data-role": "none",
        className: (0, _classnames["default"])(prevClasses),
        style: {
          display: "block"
        },
        onClick: prevHandler
      };
      var customProps = {
        currentSlide: this.props.currentSlide,
        slideCount: this.props.slideCount
      };
      var prevArrow;

      if (this.props.prevArrow) {
        prevArrow = /*#__PURE__*/_react["default"].cloneElement(this.props.prevArrow, _objectSpread(_objectSpread({}, prevArrowProps), customProps));
      } else {
        prevArrow = /*#__PURE__*/_react["default"].createElement("button", _extends({
          key: "0",
          type: "button"
        }, prevArrowProps), " ", "Previous");
      }

      return prevArrow;
    }
  }]);

  return PrevArrow;
}(_react["default"].PureComponent);

exports.PrevArrow = PrevArrow;

var NextArrow = /*#__PURE__*/function (_React$PureComponent2) {
  _inherits(NextArrow, _React$PureComponent2);

  var _super2 = _createSuper(NextArrow);

  function NextArrow() {
    _classCallCheck(this, NextArrow);

    return _super2.apply(this, arguments);
  }

  _createClass(NextArrow, [{
    key: "clickHandler",
    value: function clickHandler(options, e) {
      if (e) {
        e.preventDefault();
      }

      this.props.clickHandler(options, e);
    }
  }, {
    key: "render",
    value: function render() {
      var nextClasses = {
        "slick-arrow": true,
        "slick-next": true
      };
      var nextHandler = this.clickHandler.bind(this, {
        message: "next"
      });

      if (!(0, _innerSliderUtils.canGoNext)(this.props)) {
        nextClasses["slick-disabled"] = true;
        nextHandler = null;
      }

      var nextArrowProps = {
        key: "1",
        "data-role": "none",
        className: (0, _classnames["default"])(nextClasses),
        style: {
          display: "block"
        },
        onClick: nextHandler
      };
      var customProps = {
        currentSlide: this.props.currentSlide,
        slideCount: this.props.slideCount
      };
      var nextArrow;

      if (this.props.nextArrow) {
        nextArrow = /*#__PURE__*/_react["default"].cloneElement(this.props.nextArrow, _objectSpread(_objectSpread({}, nextArrowProps), customProps));
      } else {
        nextArrow = /*#__PURE__*/_react["default"].createElement("button", _extends({
          key: "1",
          type: "button"
        }, nextArrowProps), " ", "Next");
      }

      return nextArrow;
    }
  }]);

  return NextArrow;
}(_react["default"].PureComponent);

exports.NextArrow = NextArrow;

/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return (/** @class */function () {
            function class_1() {
                this.__entries__ = [];
            }
            Object.defineProperty(class_1.prototype, "size", {
                /**
                 * @returns {boolean}
                 */
                get: function get() {
                    return this.__entries__.length;
                },
                enumerable: true,
                configurable: true
            });
            /**
             * @param {*} key
             * @returns {*}
             */
            class_1.prototype.get = function (key) {
                var index = getIndex(this.__entries__, key);
                var entry = this.__entries__[index];
                return entry && entry[1];
            };
            /**
             * @param {*} key
             * @param {*} value
             * @returns {void}
             */
            class_1.prototype.set = function (key, value) {
                var index = getIndex(this.__entries__, key);
                if (~index) {
                    this.__entries__[index][1] = value;
                } else {
                    this.__entries__.push([key, value]);
                }
            };
            /**
             * @param {*} key
             * @returns {void}
             */
            class_1.prototype.delete = function (key) {
                var entries = this.__entries__;
                var index = getIndex(entries, key);
                if (~index) {
                    entries.splice(index, 1);
                }
            };
            /**
             * @param {*} key
             * @returns {void}
             */
            class_1.prototype.has = function (key) {
                return !!~getIndex(this.__entries__, key);
            };
            /**
             * @returns {void}
             */
            class_1.prototype.clear = function () {
                this.__entries__.splice(0);
            };
            /**
             * @param {Function} callback
             * @param {*} [ctx=null]
             * @returns {void}
             */
            class_1.prototype.forEach = function (callback, ctx) {
                if (ctx === void 0) {
                    ctx = null;
                }
                for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                    var entry = _a[_i];
                    callback.call(ctx, entry[1], entry[0]);
                }
            };
            return class_1;
        }()
    );
}();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
}();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) {
        return setTimeout(function () {
            return callback(Date.now());
        }, 1000 / 60);
    };
}();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle(callback, delay) {
    var leadingCall = false,
        trailingCall = false,
        lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        } else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) {
            return observer.broadcastActive();
        });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        } else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName,
            propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}();

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = function defineConfigurable(target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
};

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = function getWindowOf(target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
};

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth,
        clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width),
        height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) {
            return target instanceof getWindowOf(target).SVGGraphicsElement;
        };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) {
        return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';
    };
}();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x,
        y = _a.y,
        width = _a.width,
        height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}();

var ResizeObserverEntry = /** @class */function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}();

var ResizeObserverSPI = /** @class */function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}();

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}();
// Expose public methods of ResizeObserver.
['observe', 'unobserve', 'disconnect'].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
}();

/* harmony default export */ __webpack_exports__["default"] = (index);
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(34)))

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

var camel2hyphen = __webpack_require__(294);

var isDimension = function isDimension(feature) {
  var re = /[height|width]$/;
  return re.test(feature);
};

var obj2mq = function obj2mq(obj) {
  var mq = '';
  var features = Object.keys(obj);
  features.forEach(function (feature, index) {
    var value = obj[feature];
    feature = camel2hyphen(feature);
    // Add px to dimension features
    if (isDimension(feature) && typeof value === 'number') {
      value = value + 'px';
    }
    if (value === true) {
      mq += feature;
    } else if (value === false) {
      mq += 'not ' + feature;
    } else {
      mq += '(' + feature + ': ' + value + ')';
    }
    if (index < features.length - 1) {
      mq += ' and ';
    }
  });
  return mq;
};

var json2mq = function json2mq(query) {
  var mq = '';
  if (typeof query === 'string') {
    return query;
  }
  // Handling array of media queries
  if (query instanceof Array) {
    query.forEach(function (q, index) {
      mq += obj2mq(q);
      if (index < query.length - 1) {
        mq += ', ';
      }
    });
    return mq;
  }
  // Handling single media query
  return obj2mq(query);
};

module.exports = json2mq;

/***/ }),
/* 294 */
/***/ (function(module, exports) {

var camel2hyphen = function camel2hyphen(str) {
  return str.replace(/[A-Z]/g, function (match) {
    return '-' + match.toLowerCase();
  }).toLowerCase();
};

module.exports = camel2hyphen;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}

var defaultProps = {
  accessibility: true,
  adaptiveHeight: false,
  afterChange: null,
  appendDots: function appendDots(dots) {
    return (/*#__PURE__*/_react["default"].createElement("ul", {
        style: {
          display: "block"
        }
      }, dots)
    );
  },
  arrows: true,
  autoplay: false,
  autoplaySpeed: 3000,
  beforeChange: null,
  centerMode: false,
  centerPadding: "50px",
  className: "",
  cssEase: "ease",
  customPaging: function customPaging(i) {
    return (/*#__PURE__*/_react["default"].createElement("button", null, i + 1)
    );
  },
  dots: false,
  dotsClass: "slick-dots",
  draggable: true,
  easing: "linear",
  edgeFriction: 0.35,
  fade: false,
  focusOnSelect: false,
  infinite: true,
  initialSlide: 0,
  lazyLoad: null,
  nextArrow: null,
  onEdge: null,
  onInit: null,
  onLazyLoadError: null,
  onReInit: null,
  pauseOnDotsHover: false,
  pauseOnFocus: false,
  pauseOnHover: true,
  prevArrow: null,
  responsive: null,
  rows: 1,
  rtl: false,
  slide: "div",
  slidesPerRow: 1,
  slidesToScroll: 1,
  slidesToShow: 1,
  speed: 500,
  swipe: true,
  swipeEvent: null,
  swipeToSlide: false,
  touchMove: true,
  touchThreshold: 5,
  useCSS: true,
  useTransform: true,
  variableWidth: false,
  vertical: false,
  waitForAnimate: true
};
var _default = defaultProps;
exports["default"] = _default;

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

var MediaQueryDispatch = __webpack_require__(297);
module.exports = new MediaQueryDispatch();

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

var MediaQuery = __webpack_require__(298);
var Util = __webpack_require__(104);
var each = Util.each;
var isFunction = Util.isFunction;
var isArray = Util.isArray;

/**
 * Allows for registration of query handlers.
 * Manages the query handler's state and is responsible for wiring up browser events
 *
 * @constructor
 */
function MediaQueryDispatch() {
    if (!window.matchMedia) {
        throw new Error('matchMedia not present, legacy browsers require a polyfill');
    }

    this.queries = {};
    this.browserIsIncapable = !window.matchMedia('only all').matches;
}

MediaQueryDispatch.prototype = {

    constructor: MediaQueryDispatch,

    /**
     * Registers a handler for the given media query
     *
     * @param {string} q the media query
     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
     * @param {function} options.match fired when query matched
     * @param {function} [options.unmatch] fired when a query is no longer matched
     * @param {function} [options.setup] fired when handler first triggered
     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
     */
    register: function register(q, options, shouldDegrade) {
        var queries = this.queries,
            isUnconditional = shouldDegrade && this.browserIsIncapable;

        if (!queries[q]) {
            queries[q] = new MediaQuery(q, isUnconditional);
        }

        //normalise to object in an array
        if (isFunction(options)) {
            options = { match: options };
        }
        if (!isArray(options)) {
            options = [options];
        }
        each(options, function (handler) {
            if (isFunction(handler)) {
                handler = { match: handler };
            }
            queries[q].addHandler(handler);
        });

        return this;
    },

    /**
     * unregisters a query and all it's handlers, or a specific handler for a query
     *
     * @param {string} q the media query to target
     * @param {object || function} [handler] specific handler to unregister
     */
    unregister: function unregister(q, handler) {
        var query = this.queries[q];

        if (query) {
            if (handler) {
                query.removeHandler(handler);
            } else {
                query.clear();
                delete this.queries[q];
            }
        }

        return this;
    }
};

module.exports = MediaQueryDispatch;

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

var QueryHandler = __webpack_require__(299);
var each = __webpack_require__(104).each;

/**
 * Represents a single media query, manages it's state and registered handlers for this query
 *
 * @constructor
 * @param {string} query the media query string
 * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
 */
function MediaQuery(query, isUnconditional) {
    this.query = query;
    this.isUnconditional = isUnconditional;
    this.handlers = [];
    this.mql = window.matchMedia(query);

    var self = this;
    this.listener = function (mql) {
        // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly
        self.mql = mql.currentTarget || mql;
        self.assess();
    };
    this.mql.addListener(this.listener);
}

MediaQuery.prototype = {

    constuctor: MediaQuery,

    /**
     * add a handler for this query, triggering if already active
     *
     * @param {object} handler
     * @param {function} handler.match callback for when query is activated
     * @param {function} [handler.unmatch] callback for when query is deactivated
     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
     */
    addHandler: function addHandler(handler) {
        var qh = new QueryHandler(handler);
        this.handlers.push(qh);

        this.matches() && qh.on();
    },

    /**
     * removes the given handler from the collection, and calls it's destroy methods
     *
     * @param {object || function} handler the handler to remove
     */
    removeHandler: function removeHandler(handler) {
        var handlers = this.handlers;
        each(handlers, function (h, i) {
            if (h.equals(handler)) {
                h.destroy();
                return !handlers.splice(i, 1); //remove from array and exit each early
            }
        });
    },

    /**
     * Determine whether the media query should be considered a match
     *
     * @return {Boolean} true if media query can be considered a match, false otherwise
     */
    matches: function matches() {
        return this.mql.matches || this.isUnconditional;
    },

    /**
     * Clears all handlers and unbinds events
     */
    clear: function clear() {
        each(this.handlers, function (handler) {
            handler.destroy();
        });
        this.mql.removeListener(this.listener);
        this.handlers.length = 0; //clear array
    },

    /*
        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
        */
    assess: function assess() {
        var action = this.matches() ? 'on' : 'off';

        each(this.handlers, function (handler) {
            handler[action]();
        });
    }
};

module.exports = MediaQuery;

/***/ }),
/* 299 */
/***/ (function(module, exports) {

/**
 * Delegate to handle a media query being matched and unmatched.
 *
 * @param {object} options
 * @param {function} options.match callback for when the media query is matched
 * @param {function} [options.unmatch] callback for when the media query is unmatched
 * @param {function} [options.setup] one-time callback triggered the first time a query is matched
 * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
 * @constructor
 */
function QueryHandler(options) {
    this.options = options;
    !options.deferSetup && this.setup();
}

QueryHandler.prototype = {

    constructor: QueryHandler,

    /**
     * coordinates setup of the handler
     *
     * @function
     */
    setup: function setup() {
        if (this.options.setup) {
            this.options.setup();
        }
        this.initialised = true;
    },

    /**
     * coordinates setup and triggering of the handler
     *
     * @function
     */
    on: function on() {
        !this.initialised && this.setup();
        this.options.match && this.options.match();
    },

    /**
     * coordinates the unmatch event for the handler
     *
     * @function
     */
    off: function off() {
        this.options.unmatch && this.options.unmatch();
    },

    /**
     * called when a handler is to be destroyed.
     * delegates to the destroy or unmatch callbacks, depending on availability.
     *
     * @function
     */
    destroy: function destroy() {
        this.options.destroy ? this.options.destroy() : this.off();
    },

    /**
     * determines equality by reference.
     * if object is supplied compare options, if function, compare match callback
     *
     * @function
     * @param {object || function} [target] the target for comparison
     */
    equals: function equals(target) {
        return this.options === target || this.options.match === target;
    }

};

module.exports = QueryHandler;

/***/ }),
/* 300 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_paginate__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_paginate___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react_paginate__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__meta__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Image__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Button__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Excerpt__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Tags__ = __webpack_require__(69);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var decodeEntities = wp.htmlEntities.decodeEntities;
var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    format = _wp$date.format,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;


var $blogElement = void 0,
    $blogPost = void 0,
    layout = void 0;

var Blog = function (_React$Component) {
  _inherits(Blog, _React$Component);

  function Blog() {
    _classCallCheck(this, Blog);

    return _possibleConstructorReturn(this, (Blog.__proto__ || Object.getPrototypeOf(Blog)).apply(this, arguments));
  }

  _createClass(Blog, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          attributes = _props.attributes,
          className = _props.className,
          latestPosts = _props.latestPosts,
          categoriesList = _props.categoriesList,
          tagList = _props.tagList,
          setAttributes = _props.setAttributes;
      var __ = wp.i18n.__;
      var block_id = attributes.block_id,
          gridCheck = attributes.gridCheck,
          numOfPosts = attributes.numOfPosts,
          offsetNum = attributes.offsetNum,
          layoutValue = attributes.layoutValue,
          pagination = attributes.pagination,
          paginationMarkup = attributes.paginationMarkup;

      var lastDisplay = void 0;
      var gridClasses = gridCheck ? "premium-blog-even" : "premium-blog-list";
      var displayPosts = latestPosts.length > numOfPosts ? latestPosts.slice(0, numOfPosts) : latestPosts;

      lastDisplay = displayPosts.slice(offsetNum);
      console.log(lastDisplay);

      var equalHeight = layoutValue === "even" ? "equal-Height" : null;

      return wp.element.createElement(
        __WEBPACK_IMPORTED_MODULE_3_react__["Fragment"],
        null,
        wp.element.createElement(
          "div",
          {
            className: "premium-blog-" + block_id,
            id: "premium-blog-" + block_id
          },
          wp.element.createElement(
            "div",
            {
              className: "premium-blog-wrap " + equalHeight,
              "data-layout": layoutValue,
              style: { position: "relative" }
            },
            lastDisplay.map(function (post, i) {
              return wp.element.createElement(
                "div",
                {
                  className: "premium-blog-post-outer-container  " + gridClasses,
                  key: i
                },
                wp.element.createElement(
                  "div",
                  { className: "premium-blog-post-container" },
                  wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__Image__["a" /* default */], { post: post, attributes: attributes }),
                  wp.element.createElement(
                    "div",
                    {
                      className: "premium-blog-content-wrapper empty-thumb "

                    },
                    wp.element.createElement(
                      "div",
                      { className: "premium-blog-content-wrapper-inner" },
                      wp.element.createElement(
                        "div",
                        { className: "premium-blog-inner-container" },
                        wp.element.createElement(
                          "div",
                          { className: "premium-blog-entry-container" },
                          wp.element.createElement(
                            "div",
                            { className: "premium-blog-entry-title" },
                            wp.element.createElement(
                              "h2",
                              null,
                              wp.element.createElement(
                                "a",
                                { href: post.link },
                                undefined == post.title ? post.value : decodeEntities(post.title.rendered.trim()) || __("(Untitled)")
                              )
                            )
                          ),
                          wp.element.createElement(
                            "div",
                            { className: "premium-blog-entry-meta" },
                            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__meta__["a" /* default */], {
                              post: post,
                              categoriesList: categoriesList,
                              attributes: attributes
                            })
                          )
                        )
                      ),
                      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__Excerpt__["a" /* default */], { post: post, attributes: attributes }),
                      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__Button__["a" /* default */], { post: post, attributes: attributes }),
                      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__Tags__["a" /* default */], {
                        tagList: tagList,
                        attributes: attributes,
                        post: post
                      })
                    )
                  )
                )
              );
            })
          )
        ),
        pagination && wp.element.createElement("div", {
          dangerouslySetInnerHTML: { __html: paginationMarkup },
          className: "pbg-post-pagination-wrap"
        })
      );
    }
  }]);

  return Blog;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Blog);

/***/ }),
/* 301 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__GenerateCss__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__ = __webpack_require__(303);


function styling(props) {
  var _props$attributes = props.attributes,
      height = _props$attributes.height,
      HeightU = _props$attributes.HeightU,
      classMigrate = _props$attributes.classMigrate,
      marginBottomType = _props$attributes.marginBottomType,
      marginBottomMobile = _props$attributes.marginBottomMobile,
      marginBottomTablet = _props$attributes.marginBottomTablet,
      marginBottom = _props$attributes.marginBottom,
      columns = _props$attributes.columns,
      mcolumns = _props$attributes.mcolumns,
      tcolumns = _props$attributes.tcolumns,
      thumbnail = _props$attributes.thumbnail,
      thumbnailMobile = _props$attributes.thumbnailMobile,
      thumbnailTablet = _props$attributes.thumbnailTablet,
      PostmarginBottomType = _props$attributes.PostmarginBottomType,
      PostmarginBottom = _props$attributes.PostmarginBottom,
      PostmarginBottomMobile = _props$attributes.PostmarginBottomMobile,
      PostmarginBottomTablet = _props$attributes.PostmarginBottomTablet,
      PostmarginTopType = _props$attributes.PostmarginTopType,
      PostmarginTop = _props$attributes.PostmarginTop,
      PostmarginTopMobile = _props$attributes.PostmarginTopMobile,
      PostmarginTopTablet = _props$attributes.PostmarginTopTablet,
      postSpacingType = _props$attributes.postSpacingType,
      postSpacing = _props$attributes.postSpacing,
      postSpacingMobile = _props$attributes.postSpacingMobile,
      postSpacingTablet = _props$attributes.postSpacingTablet,
      postContentfontSizeType = _props$attributes.postContentfontSizeType,
      postContentfontSize = _props$attributes.postContentfontSize,
      postContentfontSizeMobile = _props$attributes.postContentfontSizeMobile,
      postContentfontSizeTablet = _props$attributes.postContentfontSizeTablet,
      PostmarginRightType = _props$attributes.PostmarginRightType,
      PostmarginRight = _props$attributes.PostmarginRight,
      PostmarginRightMobile = _props$attributes.PostmarginRightMobile,
      PostmarginRightTablet = _props$attributes.PostmarginRightTablet,
      PostmarginLeftType = _props$attributes.PostmarginLeftType,
      PostmarginLeft = _props$attributes.PostmarginLeft,
      PostmarginLeftMobile = _props$attributes.PostmarginLeftMobile,
      PostmarginLeftTablet = _props$attributes.PostmarginLeftTablet,
      postContentLetter = _props$attributes.postContentLetter,
      postContentStyle = _props$attributes.postContentStyle,
      postContentUpper = _props$attributes.postContentUpper,
      postContentWeight = _props$attributes.postContentWeight,
      backgroundPostContent = _props$attributes.backgroundPostContent,
      containerShadowColor = _props$attributes.containerShadowColor,
      containerShadowBlur = _props$attributes.containerShadowBlur,
      containerShadowHorizontal = _props$attributes.containerShadowHorizontal,
      containerShadowVertical = _props$attributes.containerShadowVertical,
      containerShadowPosition = _props$attributes.containerShadowPosition,
      textColor = _props$attributes.textColor,
      rowGap = _props$attributes.rowGap,
      rowGapUnit = _props$attributes.rowGapUnit,
      columnGap = _props$attributes.columnGap,
      filterPosition = _props$attributes.filterPosition,
      overlayColor = _props$attributes.overlayColor,
      bright = _props$attributes.bright,
      contrast = _props$attributes.contrast,
      saturation = _props$attributes.saturation,
      blur = _props$attributes.blur,
      hue = _props$attributes.hue,
      firstContentfontSize = _props$attributes.firstContentfontSize,
      secondContentfontSizeMobile = _props$attributes.secondContentfontSizeMobile,
      secondContentfontSizeTablet = _props$attributes.secondContentfontSizeTablet,
      firstContentfontSizeType = _props$attributes.firstContentfontSizeType,
      firstContentfontSizeMobile = _props$attributes.firstContentfontSizeMobile,
      firstContentWeight = _props$attributes.firstContentWeight,
      firstContentStyle = _props$attributes.firstContentStyle,
      firstContentUpper = _props$attributes.firstContentUpper,
      firstContentLetter = _props$attributes.firstContentLetter,
      typoColor = _props$attributes.typoColor,
      hoverColor = _props$attributes.hoverColor,
      secondContentfontSize = _props$attributes.secondContentfontSize,
      secondContentfontSizeType = _props$attributes.secondContentfontSizeType,
      secondContentWeight = _props$attributes.secondContentWeight,
      secondContentStyle = _props$attributes.secondContentStyle,
      secondContentUpper = _props$attributes.secondContentUpper,
      secondContentLetter = _props$attributes.secondContentLetter,
      metaColor = _props$attributes.metaColor,
      linkColor = _props$attributes.linkColor,
      sepaColor = _props$attributes.sepaColor,
      buttonfontSize = _props$attributes.buttonfontSize,
      buttonfontSizeType = _props$attributes.buttonfontSizeType,
      buttonWeight = _props$attributes.buttonWeight,
      buttonStyle = _props$attributes.buttonStyle,
      buttonUpper = _props$attributes.buttonUpper,
      buttonLetter = _props$attributes.buttonLetter,
      firstContentfontSizeTablet = _props$attributes.firstContentfontSizeTablet,
      buttonfontSizeMobile = _props$attributes.buttonfontSizeMobile,
      buttonfontSizeTablet = _props$attributes.buttonfontSizeTablet,
      buttonSpacingType = _props$attributes.buttonSpacingType,
      buttonSpacing = _props$attributes.buttonSpacing,
      buttonSpacingMobile = _props$attributes.buttonSpacingMobile,
      buttonSpacingTablet = _props$attributes.buttonSpacingTablet,
      buttonColor = _props$attributes.buttonColor,
      buttonhover = _props$attributes.buttonhover,
      buttonBackground = _props$attributes.buttonBackground,
      hoverBackground = _props$attributes.hoverBackground,
      borderType = _props$attributes.borderType,
      borderWidth = _props$attributes.borderWidth,
      borderColor = _props$attributes.borderColor,
      borderRadius = _props$attributes.borderRadius,
      buttonPaddingType = _props$attributes.buttonPaddingType,
      buttonPadding = _props$attributes.buttonPadding,
      buttonPaddingMobile = _props$attributes.buttonPaddingMobile,
      buttonPaddingTablet = _props$attributes.buttonPaddingTablet,
      tagsfontSize = _props$attributes.tagsfontSize,
      tagsfontSizeType = _props$attributes.tagsfontSizeType,
      tagsWeight = _props$attributes.tagsWeight,
      tagsStyle = _props$attributes.tagsStyle,
      tagsUpper = _props$attributes.tagsUpper,
      tagsLetter = _props$attributes.tagsLetter,
      tagColor = _props$attributes.tagColor,
      hoverTag = _props$attributes.hoverTag,
      tagsfontSizeTablet = _props$attributes.tagsfontSizeTablet,
      tagsfontSizeMobile = _props$attributes.tagsfontSizeMobile,
      paginationPosition = _props$attributes.paginationPosition;
  var latestPosts = props.latestPosts;

  var selectors = {};
  var tablet_selectors = {};
  var mobile_selectors = {};
  selectors = {
    " .premium-blog-post-outer-container": {
      "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(rowGap, rowGapUnit),
      "padding-right": "calc( " + columnGap + "px/2 );",
      "padding-left": "calc( " + columnGap + "px/2 );"
    },
    " .premium-blog-post-outer-container .premium-blog-post-container .premium-blog-content-wrapper ": {
      "text-align": "" + filterPosition
    },
    " .premium-blog-thumbnail-overlay": {
      "background-color": "" + overlayColor
    },
    " .premium-blog-post-outer-container img": {
      "object-fit": "" + thumbnail,
      "height": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(height, HeightU)
    },
    " .premium-blog-post-outer-container:hover img": {

      filter: "brightness( " + bright + "% ) contrast( " + contrast + "% ) saturate( " + saturation + "% ) blur( " + blur + "px ) hue-rotate( " + hue + "deg )"
    },
    " .premium-blog-post-container .premium-blog-entry-title h2 a ": {
      "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(marginBottom, marginBottomType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(firstContentfontSize, firstContentfontSizeType),
      "font-weight": firstContentWeight + ";",
      "font-style": firstContentStyle + ";",
      "text-transform": (firstContentUpper ? "uppercase" : null) + " ;",
      "letter-spacing": firstContentLetter + "px ;",
      color: typoColor + " !important ;"
    },
    ".premium-blog-entry-title:hover a": {
      color: hoverColor + ";"
    },
    " .premium-blog-even": {
      width: 100 / columns + "%"

    },
    " .premium-blog-post-container .premium-blog-content-wrapper-inner p": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(postContentfontSize, postContentfontSizeType),
      "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginBottom, PostmarginBottomType),
      "margin-top": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginTop, PostmarginTopType),
      "margin-right": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginRight, PostmarginRightType),
      "margin-left": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginLeft, PostmarginLeftType),
      " padding": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(postSpacing, postSpacingType),
      "font-weight": postContentWeight + " !important;",
      "font-style": postContentStyle + ";",
      "text-transform": (postContentUpper ? "uppercase" : null) + " ;",
      "letter-spacing": postContentLetter + "px ;",
      " color": textColor + ";",
      "background-color": backgroundPostContent + ";",
      "box-shadow": containerShadowHorizontal + "px " + containerShadowVertical + "px " + containerShadowBlur + "px " + containerShadowColor + " " + containerShadowPosition
    },
    " .premium-blog-meta-data": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(secondContentfontSize, secondContentfontSizeType),
      "font-weight": secondContentWeight + ";",
      "font-style": secondContentStyle + ";",
      "text-transform": (secondContentUpper ? "uppercase" : null) + " ;",
      "letter-spacing": secondContentLetter + "px ;",
      color: metaColor + ";"
    },
    " .premium-blog-meta-data:hover": {
      color: "" + linkColor
    },
    " .premium-blog-meta-separtor": {
      color: sepaColor + ";"
    },
    " .premium-blog-excerpt-link-wrap ": {
      " padding": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(buttonSpacing, buttonSpacingType)
    },
    " .premium-blog-excerpt-link-wrap .premium-blog-excerpt-link": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(buttonfontSize, buttonfontSizeType),
      "font-weight": buttonWeight + ";",
      "font-style": buttonStyle + ";",
      "text-transform": (buttonUpper ? "uppercase" : null) + " ;",
      "letter-spacing": buttonLetter + "px ;",
      color: " " + buttonColor,
      background: "" + buttonBackground,
      "border-radius": borderRadius + "px",
      border: borderWidth + "px " + borderType + " " + borderColor,
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])("" + buttonPadding, "" + buttonPaddingType)
    },
    " .premium-blog-excerpt-link-wrap .premium-blog-excerpt-link:hover": {
      color: "" + buttonhover,
      background: "" + hoverBackground
    },
    " .premium-blog-post-tags-container ": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(tagsfontSize, tagsfontSizeType),
      "font-weight": tagsWeight + ";",
      "font-style": tagsStyle + ";",
      "text-transform": (tagsUpper ? "uppercase" : null) + " ;",
      "letter-spacing": tagsLetter + "px ;",
      "color": "" + tagColor

    },
    " .premium-blog-post-container .premium-blog-content-wrapper .premium-blog-post-tags-container:hover span": {
      "color": "" + hoverTag
    },
    " .premium-blog-pagination-container": {
      "text-align": "" + paginationPosition
    }
  };
  mobile_selectors = {
    " .premium-blog-post-container .premium-blog-entry-title h2": {
      "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(marginBottomMobile, marginBottomType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(firstContentfontSizeMobile, firstContentfontSizeType)
    },
    " .premium-blog-even": {
      width: 100 / mcolumns + "%"

    },
    " .premium-blog-post-container .premium-blog-content-wrapper-inner p": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(postContentfontSizeMobile, postContentfontSizeType),
      "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginBottomMobile, PostmarginBottomType),
      "margin-top": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginTopMobile, PostmarginTopType),
      "margin-right": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginRightMobile, PostmarginRightType),
      "margin-left": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginLeftMobile, PostmarginLeftType),
      " padding": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(postSpacingMobile, postSpacingType)
    },
    " .premium-blog-post-outer-container img": {
      "object-fit": "" + thumbnailMobile
    },
    " .premium-blog-meta-data": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(secondContentfontSizeMobile, secondContentfontSizeType)
    },
    " .premium-blog-meta-data:hover": {
      color: "" + linkColor
    },
    " .premium-blog-excerpt-link-wrap ": {
      " padding": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(buttonSpacingMobile, buttonSpacingType)
    },
    " .premium-blog-excerpt-link-wrap .premium-blog-excerpt-link": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(buttonfontSizeMobile, buttonfontSizeType),
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(buttonPaddingMobile, buttonPaddingType)
    },
    " .premium-blog-post-tags-container ": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(tagsfontSizeMobile, tagsfontSizeType)
    }
  };
  tablet_selectors = {
    " .premium-blog-post-container .premium-blog-entry-title h2": {
      "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(marginBottomTablet, marginBottomType),
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(firstContentfontSizeTablet, firstContentfontSizeType)
    },
    " .premium-blog-even": {
      width: 100 / tcolumns + "%"

    },
    " .premium-blog-post-container .premium-blog-content-wrapper-inner p": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(postContentfontSizeTablet, postContentfontSizeType),
      "margin-bottom": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginBottomTablet, PostmarginBottomType),
      "margin-top": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginTopTablet, PostmarginTopType),
      "margin-right": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginRightTablet, PostmarginRightType),
      "margin-left": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(PostmarginLeftTablet, PostmarginLeftType),
      " padding": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(postSpacingTablet, postSpacingType)

    },
    " .premium-blog-meta-data": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(secondContentfontSizeTablet, secondContentfontSizeType)
    },

    " .premium-blog-excerpt-link-wrap ": {
      " padding": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(buttonSpacingTablet, buttonSpacingType)
    },
    " .premium-blog-excerpt-link-wrap .premium-blog-excerpt-link": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(buttonfontSizeTablet, buttonfontSizeType),
      padding: Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(buttonPaddingTablet, buttonPaddingType)
    },
    " .premium-blog-post-outer-container img": {
      "object-fit": "" + thumbnailTablet
    },

    " .premium-blog-post-tags-container ": {
      "font-size": Object(__WEBPACK_IMPORTED_MODULE_1__GenerateCssUnit__["a" /* default */])(tagsfontSizeTablet, tagsfontSizeType)
    }
  };

  var styling_css = "";
  var id = "#premium-blog-" + props.clientId;
  if (classMigrate) {
    id = ".premium-blog-" + props.clientId;
  }
  styling_css = Object(__WEBPACK_IMPORTED_MODULE_0__GenerateCss__["a" /* default */])(selectors, id);
  styling_css += Object(__WEBPACK_IMPORTED_MODULE_0__GenerateCss__["a" /* default */])(tablet_selectors, id, true, "tablet");
  styling_css += Object(__WEBPACK_IMPORTED_MODULE_0__GenerateCss__["a" /* default */])(mobile_selectors, id, true, "mobile");
  return styling_css;
}
/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function generateCSS(selectors, id) {
  var isResponsive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var responsiveType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";

  var styling_css = "";
  var breakpoint = "";
  var gen_styling_css = "";
  var res_styling_css = "";
  if (responsiveType == "tablet") {
    breakpoint = PremiumBlocksSettings.tablet_breakpoint;
  } else if (responsiveType == "mobile") {
    breakpoint = PremiumBlocksSettings.mobile_breakpoint;
  }
  for (var i in selectors) {
    var sel = selectors[i];
    var css = "";
    for (var j in sel) {
      var checkString = true;
      if (typeof sel[j] === "string" && sel[j].length === 0) {
        checkString = false;
      }
      if ("font-family" === j && typeof sel[j] != "undefined" && "Default" === sel[j]) {
        continue;
      }
      if (typeof sel[j] != "undefined" && checkString) {
        css += j + ": " + sel[j] + ";";
      }
    }
    if (css.length !== 0) {
      gen_styling_css += id;
      gen_styling_css += i + "{";
      gen_styling_css += css;
      gen_styling_css += "}";
    }
  }
  if (isResponsive && typeof gen_styling_css !== "undefined" && gen_styling_css.length !== 0) {
    res_styling_css += "@media only screen and (max-width: " + breakpoint + "px) {";
    res_styling_css += gen_styling_css;
    res_styling_css += "}";
  }
  if (isResponsive) {
    return res_styling_css;
  } else {
    return gen_styling_css;
  }
}

/* harmony default export */ __webpack_exports__["a"] = (generateCSS);

/***/ }),
/* 303 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function generateCSSUnit(value, unit) {
  var css = "";
  if (typeof value != "undefined") {
    css += value + unit;
  }
  return css;
}
/* harmony default export */ __webpack_exports__["a"] = (generateCSSUnit);

/***/ }),
/* 304 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_masonry_component__ = __webpack_require__(305);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_masonry_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react_masonry_component__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_paginate__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_paginate___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_paginate__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__meta__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Image__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Excerpt__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Button__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Tags__ = __webpack_require__(69);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }


var decodeEntities = wp.htmlEntities.decodeEntities;
var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    format = _wp$date.format,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;










var MasonryClass = function (_React$Component) {
  _inherits(MasonryClass, _React$Component);

  function MasonryClass() {
    _classCallCheck(this, MasonryClass);

    return _possibleConstructorReturn(this, (MasonryClass.__proto__ || Object.getPrototypeOf(MasonryClass)).apply(this, arguments));
  }

  _createClass(MasonryClass, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          attributes = _props.attributes,
          className = _props.className,
          latestPosts = _props.latestPosts,
          TagList = _props.TagList,
          categoriesList = _props.categoriesList,
          setAttributes = _props.setAttributes;
      var __ = wp.i18n.__;
      var block_id = attributes.block_id,
          numOfPosts = attributes.numOfPosts,
          offsetNum = attributes.offsetNum,
          displayPostContent = attributes.displayPostContent,
          gridCheck = attributes.gridCheck,
          pagination = attributes.pagination,
          paginationMarkup = attributes.paginationMarkup;

      var lastDisplay = void 0;
      var gridClasses = gridCheck ? "premium-blog-even" : "premium-blog-list";
      // Removing posts from display should be instant.
      var displayPosts = latestPosts.length > numOfPosts ? latestPosts.slice(0, numOfPosts) : latestPosts;
      lastDisplay = displayPosts.slice(offsetNum);

      return wp.element.createElement(
        __WEBPACK_IMPORTED_MODULE_4_react__["Fragment"],
        null,
        wp.element.createElement(
          "div",
          {
            className: "premium-blog-" + block_id,
            id: "premium-blog-" + block_id
          },
          wp.element.createElement(
            __WEBPACK_IMPORTED_MODULE_0_react_masonry_component___default.a,
            null,
            lastDisplay.map(function (post, i) {
              return wp.element.createElement(
                "div",
                {
                  className: " premium-blog-post-outer-container " + gridClasses,
                  key: i
                },
                wp.element.createElement(
                  "div",
                  {
                    className: "premium-blog-post-container premium-blog-skin-classic"
                  },
                  wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__Image__["a" /* default */], { post: post, attributes: attributes }),
                  wp.element.createElement(
                    "div",
                    { className: "premium-blog-content-wrapper empty-thumb" },
                    wp.element.createElement(
                      "div",
                      { className: "premium-blog-content-wrapper-inner" },
                      wp.element.createElement(
                        "div",
                        { className: "premium-blog-inner-container" },
                        wp.element.createElement(
                          "div",
                          { className: "premium-blog-entry-container" },
                          wp.element.createElement(
                            "div",
                            { className: "premium-blog-entry-title" },
                            wp.element.createElement(
                              "h2",
                              null,
                              wp.element.createElement(
                                "a",
                                { href: post.link },
                                undefined == post.title ? post.value : decodeEntities(post.title.rendered.trim()) || __("(Untitled)")
                              )
                            )
                          ),
                          wp.element.createElement(
                            "div",
                            { className: "premium-blog-entry-meta" },
                            wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__meta__["a" /* default */], {
                              post: post,
                              categoriesList: categoriesList,
                              attributes: attributes
                            })
                          )
                        )
                      ),
                      displayPostContent && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__Excerpt__["a" /* default */], { post: post, attributes: attributes }),
                      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__Button__["a" /* default */], { post: post, attributes: attributes }),
                      wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__Tags__["a" /* default */], {
                        post: post,
                        attributes: attributes,
                        TagList: TagList
                      })
                    )
                  )
                )
              );
            })
          ),
          pagination && wp.element.createElement("div", {
            dangerouslySetInnerHTML: { __html: paginationMarkup },
            className: "pbg-post-pagination-wrap"
          })
        )
      );
    }
  }]);

  return MasonryClass;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (MasonryClass);

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

var isBrowser = typeof window !== 'undefined';
var Masonry = isBrowser ? window.Masonry || __webpack_require__(306) : null;
var imagesloaded = isBrowser ? __webpack_require__(311) : null;
var assign = __webpack_require__(312);
var elementResizeDetectorMaker = __webpack_require__(320);
var debounce = __webpack_require__(331);
var omit = __webpack_require__(333);
var PropTypes = __webpack_require__(13);
var React = __webpack_require__(1);
var createReactClass = __webpack_require__(366);

var propTypes = {
  enableResizableChildren: PropTypes.bool,
  disableImagesLoaded: PropTypes.bool,
  onImagesLoaded: PropTypes.func,
  updateOnEachImageLoad: PropTypes.bool,
  options: PropTypes.object,
  imagesLoadedOptions: PropTypes.object,
  elementType: PropTypes.string,
  onLayoutComplete: PropTypes.func,
  onRemoveComplete: PropTypes.func
};

var MasonryComponent = createReactClass({
  masonry: false,
  erd: undefined,
  latestKnownDomChildren: [],
  displayName: 'MasonryComponent',
  imagesLoadedCancelRef: undefined,
  propTypes: propTypes,

  getDefaultProps: function getDefaultProps() {
    return {
      enableResizableChildren: false,
      disableImagesLoaded: false,
      updateOnEachImageLoad: false,
      options: {},
      imagesLoadedOptions: {},
      className: '',
      elementType: 'div',
      onLayoutComplete: function onLayoutComplete() {},
      onRemoveComplete: function onRemoveComplete() {}
    };
  },

  initializeMasonry: function initializeMasonry(force) {
    if (!this.masonry || force) {
      this.masonry = new Masonry(this.masonryContainer, this.props.options);

      if (this.props.onLayoutComplete) {
        this.masonry.on('layoutComplete', this.props.onLayoutComplete);
      }

      if (this.props.onRemoveComplete) {
        this.masonry.on('removeComplete', this.props.onRemoveComplete);
      }

      this.latestKnownDomChildren = this.getCurrentDomChildren();
    }
  },

  getCurrentDomChildren: function getCurrentDomChildren() {
    var node = this.masonryContainer;
    var children = this.props.options.itemSelector ? node.querySelectorAll(this.props.options.itemSelector) : node.children;
    return Array.prototype.slice.call(children);
  },

  diffDomChildren: function diffDomChildren() {
    var forceItemReload = false;

    var knownChildrenStillAttached = this.latestKnownDomChildren.filter(function (element) {
      /*
       * take only elements attached to DOM
       * (aka the parent is the masonry container, not null)
       * otherwise masonry would try to "remove it" again from the DOM
       */
      return !!element.parentNode;
    });

    /*
     * If not all known children are attached to the dom - we have no other way of notifying
     * masonry to remove the ones not still attached besides invoking a complete item reload.
     * basically all the rest of the code below does not matter in that case.
     */
    if (knownChildrenStillAttached.length !== this.latestKnownDomChildren.length) {
      forceItemReload = true;
    }

    var currentDomChildren = this.getCurrentDomChildren();

    /*
     * Since we are looking for a known child which is also attached to the dom AND
     * not attached to the dom at the same time - this would *always* produce an empty array.
     */
    var removed = knownChildrenStillAttached.filter(function (attachedKnownChild) {
      return !~currentDomChildren.indexOf(attachedKnownChild);
    });

    /*
     * This would get any children which are attached to the dom but are *unkown* to us
     * from previous renders
     */
    var newDomChildren = currentDomChildren.filter(function (currentChild) {
      return !~knownChildrenStillAttached.indexOf(currentChild);
    });

    var beginningIndex = 0;

    // get everything added to the beginning of the DOMNode list
    var prepended = newDomChildren.filter(function (newChild) {
      var prepend = beginningIndex === currentDomChildren.indexOf(newChild);

      if (prepend) {
        // increase the index
        beginningIndex++;
      }

      return prepend;
    });

    // we assume that everything else is appended
    var appended = newDomChildren.filter(function (el) {
      return prepended.indexOf(el) === -1;
    });

    /*
     * otherwise we reverse it because so we're going through the list picking off the items that
     * have been added at the end of the list. this complex logic is preserved in case it needs to be
     * invoked
     *
     * var endingIndex = currentDomChildren.length - 1;
     *
     * newDomChildren.reverse().filter(function(newChild, i){
     *     var append = endingIndex == currentDomChildren.indexOf(newChild);
     *
     *     if (append) {
     *         endingIndex--;
     *     }
     *
     *     return append;
     * });
     */

    // get everything added to the end of the DOMNode list
    var moved = [];

    /*
     * This would always be true (see above about the lofic for "removed")
     */
    if (removed.length === 0) {
      /*
       * 'moved' will contain some random elements (if any) since the "knownChildrenStillAttached" is a filter
       * of the "known" children which are still attached - All indexes could basically change. (for example
       * if the first element is not attached)
       * Don't trust this array.
       */
      moved = knownChildrenStillAttached.filter(function (child, index) {
        return index !== currentDomChildren.indexOf(child);
      });
    }

    this.latestKnownDomChildren = currentDomChildren;

    return {
      old: knownChildrenStillAttached, // Not used
      new: currentDomChildren, // Not used
      removed: removed,
      appended: appended,
      prepended: prepended,
      moved: moved,
      forceItemReload: forceItemReload
    };
  },

  performLayout: function performLayout() {
    var diff = this.diffDomChildren();
    var reloadItems = diff.forceItemReload || diff.moved.length > 0;

    // Would never be true. (see comments of 'diffDomChildren' about 'removed')
    if (diff.removed.length > 0) {
      if (this.props.enableResizableChildren) {
        diff.removed.forEach(this.erd.removeAllListeners, this.erd);
      }
      this.masonry.remove(diff.removed);
      reloadItems = true;
    }

    if (diff.appended.length > 0) {
      this.masonry.appended(diff.appended);

      if (diff.prepended.length === 0) {
        reloadItems = true;
      }

      if (this.props.enableResizableChildren) {
        diff.appended.forEach(this.listenToElementResize, this);
      }
    }

    if (diff.prepended.length > 0) {
      this.masonry.prepended(diff.prepended);

      if (this.props.enableResizableChildren) {
        diff.prepended.forEach(this.listenToElementResize, this);
      }
    }

    if (reloadItems) {
      this.masonry.reloadItems();
    }

    this.masonry.layout();
  },

  derefImagesLoaded: function derefImagesLoaded() {
    this.imagesLoadedCancelRef();
    this.imagesLoadedCancelRef = undefined;
  },

  imagesLoaded: function imagesLoaded() {
    if (this.props.disableImagesLoaded) {
      return;
    }

    if (this.imagesLoadedCancelRef) {
      this.derefImagesLoaded();
    }

    var event = this.props.updateOnEachImageLoad ? 'progress' : 'always';
    var handler = debounce(function (instance) {
      if (this.props.onImagesLoaded) {
        this.props.onImagesLoaded(instance);
      }
      this.masonry.layout();
    }.bind(this), 100);

    var imgLoad = imagesloaded(this.masonryContainer, this.props.imagesLoadedOptions).on(event, handler);

    this.imagesLoadedCancelRef = function () {
      imgLoad.off(event, handler);
      handler.cancel();
    };
  },

  initializeResizableChildren: function initializeResizableChildren() {
    if (!this.props.enableResizableChildren) {
      return;
    }

    this.erd = elementResizeDetectorMaker({
      strategy: 'scroll'
    });

    this.latestKnownDomChildren.forEach(this.listenToElementResize, this);
  },

  listenToElementResize: function listenToElementResize(el) {
    this.erd.listenTo(el, function () {
      this.masonry.layout();
    }.bind(this));
  },

  destroyErd: function destroyErd() {
    if (this.erd) {
      this.latestKnownDomChildren.forEach(this.erd.uninstall, this.erd);
    }
  },

  componentDidMount: function componentDidMount() {
    this.initializeMasonry();
    this.initializeResizableChildren();
    this.imagesLoaded();
  },

  componentDidUpdate: function componentDidUpdate() {
    this.performLayout();
    this.imagesLoaded();
  },

  componentWillUnmount: function componentWillUnmount() {
    this.destroyErd();

    // unregister events
    if (this.props.onLayoutComplete) {
      this.masonry.off('layoutComplete', this.props.onLayoutComplete);
    }

    if (this.props.onRemoveComplete) {
      this.masonry.off('removeComplete', this.props.onRemoveComplete);
    }

    if (this.imagesLoadedCancelRef) {
      this.derefImagesLoaded();
    }
    this.masonry.destroy();
  },

  setRef: function setRef(n) {
    this.masonryContainer = n;
  },

  render: function render() {
    var props = omit(this.props, Object.keys(propTypes));
    return React.createElement(this.props.elementType, assign({}, props, { ref: this.setRef }), this.props.children);
  }
});

module.exports = MasonryComponent;
module.exports.default = MasonryComponent;

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * Masonry v4.2.2
 * Cascading grid layout library
 * https://masonry.desandro.com
 * MIT License
 * by David DeSandro
 */

(function (window, factory) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(307), __webpack_require__(71)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory(require('outlayer'), require('get-size'));
  } else {
    // browser global
    window.Masonry = factory(window.Outlayer, window.getSize);
  }
})(window, function factory(Outlayer, getSize) {

  'use strict';

  // -------------------------- masonryDefinition -------------------------- //

  // create an Outlayer layout class

  var Masonry = Outlayer.create('masonry');
  // isFitWidth -> fitWidth
  Masonry.compatOptions.fitWidth = 'isFitWidth';

  var proto = Masonry.prototype;

  proto._resetLayout = function () {
    this.getSize();
    this._getMeasurement('columnWidth', 'outerWidth');
    this._getMeasurement('gutter', 'outerWidth');
    this.measureColumns();

    // reset column Y
    this.colYs = [];
    for (var i = 0; i < this.cols; i++) {
      this.colYs.push(0);
    }

    this.maxY = 0;
    this.horizontalColIndex = 0;
  };

  proto.measureColumns = function () {
    this.getContainerWidth();
    // if columnWidth is 0, default to outerWidth of first item
    if (!this.columnWidth) {
      var firstItem = this.items[0];
      var firstItemElem = firstItem && firstItem.element;
      // columnWidth fall back to item of first element
      this.columnWidth = firstItemElem && getSize(firstItemElem).outerWidth ||
      // if first elem has no width, default to size of container
      this.containerWidth;
    }

    var columnWidth = this.columnWidth += this.gutter;

    // calculate columns
    var containerWidth = this.containerWidth + this.gutter;
    var cols = containerWidth / columnWidth;
    // fix rounding errors, typically with gutters
    var excess = columnWidth - containerWidth % columnWidth;
    // if overshoot is less than a pixel, round up, otherwise floor it
    var mathMethod = excess && excess < 1 ? 'round' : 'floor';
    cols = Math[mathMethod](cols);
    this.cols = Math.max(cols, 1);
  };

  proto.getContainerWidth = function () {
    // container is parent if fit width
    var isFitWidth = this._getOption('fitWidth');
    var container = isFitWidth ? this.element.parentNode : this.element;
    // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be
    var size = getSize(container);
    this.containerWidth = size && size.innerWidth;
  };

  proto._getItemLayoutPosition = function (item) {
    item.getSize();
    // how many columns does this brick span
    var remainder = item.size.outerWidth % this.columnWidth;
    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';
    // round if off by 1 pixel, otherwise use ceil
    var colSpan = Math[mathMethod](item.size.outerWidth / this.columnWidth);
    colSpan = Math.min(colSpan, this.cols);
    // use horizontal or top column position
    var colPosMethod = this.options.horizontalOrder ? '_getHorizontalColPosition' : '_getTopColPosition';
    var colPosition = this[colPosMethod](colSpan, item);
    // position the brick
    var position = {
      x: this.columnWidth * colPosition.col,
      y: colPosition.y
    };
    // apply setHeight to necessary columns
    var setHeight = colPosition.y + item.size.outerHeight;
    var setMax = colSpan + colPosition.col;
    for (var i = colPosition.col; i < setMax; i++) {
      this.colYs[i] = setHeight;
    }

    return position;
  };

  proto._getTopColPosition = function (colSpan) {
    var colGroup = this._getTopColGroup(colSpan);
    // get the minimum Y value from the columns
    var minimumY = Math.min.apply(Math, colGroup);

    return {
      col: colGroup.indexOf(minimumY),
      y: minimumY
    };
  };

  /**
   * @param {Number} colSpan - number of columns the element spans
   * @returns {Array} colGroup
   */
  proto._getTopColGroup = function (colSpan) {
    if (colSpan < 2) {
      // if brick spans only one column, use all the column Ys
      return this.colYs;
    }

    var colGroup = [];
    // how many different places could this brick fit horizontally
    var groupCount = this.cols + 1 - colSpan;
    // for each group potential horizontal position
    for (var i = 0; i < groupCount; i++) {
      colGroup[i] = this._getColGroupY(i, colSpan);
    }
    return colGroup;
  };

  proto._getColGroupY = function (col, colSpan) {
    if (colSpan < 2) {
      return this.colYs[col];
    }
    // make an array of colY values for that one group
    var groupColYs = this.colYs.slice(col, col + colSpan);
    // and get the max value of the array
    return Math.max.apply(Math, groupColYs);
  };

  // get column position based on horizontal index. #873
  proto._getHorizontalColPosition = function (colSpan, item) {
    var col = this.horizontalColIndex % this.cols;
    var isOver = colSpan > 1 && col + colSpan > this.cols;
    // shift to next row if item can't fit on current row
    col = isOver ? 0 : col;
    // don't let zero-size items take up space
    var hasSize = item.size.outerWidth && item.size.outerHeight;
    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;

    return {
      col: col,
      y: this._getColGroupY(col, colSpan)
    };
  };

  proto._manageStamp = function (stamp) {
    var stampSize = getSize(stamp);
    var offset = this._getElementOffset(stamp);
    // get the columns that this stamp affects
    var isOriginLeft = this._getOption('originLeft');
    var firstX = isOriginLeft ? offset.left : offset.right;
    var lastX = firstX + stampSize.outerWidth;
    var firstCol = Math.floor(firstX / this.columnWidth);
    firstCol = Math.max(0, firstCol);
    var lastCol = Math.floor(lastX / this.columnWidth);
    // lastCol should not go over if multiple of columnWidth #425
    lastCol -= lastX % this.columnWidth ? 0 : 1;
    lastCol = Math.min(this.cols - 1, lastCol);
    // set colYs to bottom of the stamp

    var isOriginTop = this._getOption('originTop');
    var stampMaxY = (isOriginTop ? offset.top : offset.bottom) + stampSize.outerHeight;
    for (var i = firstCol; i <= lastCol; i++) {
      this.colYs[i] = Math.max(stampMaxY, this.colYs[i]);
    }
  };

  proto._getContainerSize = function () {
    this.maxY = Math.max.apply(Math, this.colYs);
    var size = {
      height: this.maxY
    };

    if (this._getOption('fitWidth')) {
      size.width = this._getContainerFitWidth();
    }

    return size;
  };

  proto._getContainerFitWidth = function () {
    var unusedCols = 0;
    // count unused columns
    var i = this.cols;
    while (--i) {
      if (this.colYs[i] !== 0) {
        break;
      }
      unusedCols++;
    }
    // fit container to columns that have been used
    return (this.cols - unusedCols) * this.columnWidth - this.gutter;
  };

  proto.needsResizeLayout = function () {
    var previousWidth = this.containerWidth;
    this.getContainerWidth();
    return previousWidth != this.containerWidth;
  };

  return Masonry;
});

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * Outlayer v2.1.1
 * the brains and guts of a layout library
 * MIT license
 */

(function (window, factory) {
  'use strict';
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */

  if (true) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(70), __webpack_require__(71), __webpack_require__(308), __webpack_require__(310)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (EvEmitter, getSize, utils, Item) {
      return factory(window, EvEmitter, getSize, utils, Item);
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(window, require('ev-emitter'), require('get-size'), require('fizzy-ui-utils'), require('./item'));
  } else {
    // browser global
    window.Outlayer = factory(window, window.EvEmitter, window.getSize, window.fizzyUIUtils, window.Outlayer.Item);
  }
})(window, function factory(window, EvEmitter, getSize, utils, Item) {
  'use strict';

  // ----- vars ----- //

  var console = window.console;
  var jQuery = window.jQuery;
  var noop = function noop() {};

  // -------------------------- Outlayer -------------------------- //

  // globally unique identifiers
  var GUID = 0;
  // internal store of all Outlayer intances
  var instances = {};

  /**
   * @param {Element, String} element
   * @param {Object} options
   * @constructor
   */
  function Outlayer(element, options) {
    var queryElement = utils.getQueryElement(element);
    if (!queryElement) {
      if (console) {
        console.error('Bad element for ' + this.constructor.namespace + ': ' + (queryElement || element));
      }
      return;
    }
    this.element = queryElement;
    // add jQuery
    if (jQuery) {
      this.$element = jQuery(this.element);
    }

    // options
    this.options = utils.extend({}, this.constructor.defaults);
    this.option(options);

    // add id for Outlayer.getFromElement
    var id = ++GUID;
    this.element.outlayerGUID = id; // expando
    instances[id] = this; // associate via id

    // kick it off
    this._create();

    var isInitLayout = this._getOption('initLayout');
    if (isInitLayout) {
      this.layout();
    }
  }

  // settings are for internal use only
  Outlayer.namespace = 'outlayer';
  Outlayer.Item = Item;

  // default options
  Outlayer.defaults = {
    containerStyle: {
      position: 'relative'
    },
    initLayout: true,
    originLeft: true,
    originTop: true,
    resize: true,
    resizeContainer: true,
    // item options
    transitionDuration: '0.4s',
    hiddenStyle: {
      opacity: 0,
      transform: 'scale(0.001)'
    },
    visibleStyle: {
      opacity: 1,
      transform: 'scale(1)'
    }
  };

  var proto = Outlayer.prototype;
  // inherit EvEmitter
  utils.extend(proto, EvEmitter.prototype);

  /**
   * set options
   * @param {Object} opts
   */
  proto.option = function (opts) {
    utils.extend(this.options, opts);
  };

  /**
   * get backwards compatible option value, check old name
   */
  proto._getOption = function (option) {
    var oldOption = this.constructor.compatOptions[option];
    return oldOption && this.options[oldOption] !== undefined ? this.options[oldOption] : this.options[option];
  };

  Outlayer.compatOptions = {
    // currentName: oldName
    initLayout: 'isInitLayout',
    horizontal: 'isHorizontal',
    layoutInstant: 'isLayoutInstant',
    originLeft: 'isOriginLeft',
    originTop: 'isOriginTop',
    resize: 'isResizeBound',
    resizeContainer: 'isResizingContainer'
  };

  proto._create = function () {
    // get items from children
    this.reloadItems();
    // elements that affect layout, but are not laid out
    this.stamps = [];
    this.stamp(this.options.stamp);
    // set container style
    utils.extend(this.element.style, this.options.containerStyle);

    // bind resize method
    var canBindResize = this._getOption('resize');
    if (canBindResize) {
      this.bindResize();
    }
  };

  // goes through all children again and gets bricks in proper order
  proto.reloadItems = function () {
    // collection of item elements
    this.items = this._itemize(this.element.children);
  };

  /**
   * turn elements into Outlayer.Items to be used in layout
   * @param {Array or NodeList or HTMLElement} elems
   * @returns {Array} items - collection of new Outlayer Items
   */
  proto._itemize = function (elems) {

    var itemElems = this._filterFindItemElements(elems);
    var Item = this.constructor.Item;

    // create new Outlayer Items for collection
    var items = [];
    for (var i = 0; i < itemElems.length; i++) {
      var elem = itemElems[i];
      var item = new Item(elem, this);
      items.push(item);
    }

    return items;
  };

  /**
   * get item elements to be used in layout
   * @param {Array or NodeList or HTMLElement} elems
   * @returns {Array} items - item elements
   */
  proto._filterFindItemElements = function (elems) {
    return utils.filterFindElements(elems, this.options.itemSelector);
  };

  /**
   * getter method for getting item elements
   * @returns {Array} elems - collection of item elements
   */
  proto.getItemElements = function () {
    return this.items.map(function (item) {
      return item.element;
    });
  };

  // ----- init & layout ----- //

  /**
   * lays out all items
   */
  proto.layout = function () {
    this._resetLayout();
    this._manageStamps();

    // don't animate first layout
    var layoutInstant = this._getOption('layoutInstant');
    var isInstant = layoutInstant !== undefined ? layoutInstant : !this._isLayoutInited;
    this.layoutItems(this.items, isInstant);

    // flag for initalized
    this._isLayoutInited = true;
  };

  // _init is alias for layout
  proto._init = proto.layout;

  /**
   * logic before any new layout
   */
  proto._resetLayout = function () {
    this.getSize();
  };

  proto.getSize = function () {
    this.size = getSize(this.element);
  };

  /**
   * get measurement from option, for columnWidth, rowHeight, gutter
   * if option is String -> get element from selector string, & get size of element
   * if option is Element -> get size of element
   * else use option as a number
   *
   * @param {String} measurement
   * @param {String} size - width or height
   * @private
   */
  proto._getMeasurement = function (measurement, size) {
    var option = this.options[measurement];
    var elem;
    if (!option) {
      // default to 0
      this[measurement] = 0;
    } else {
      // use option as an element
      if (typeof option == 'string') {
        elem = this.element.querySelector(option);
      } else if (option instanceof HTMLElement) {
        elem = option;
      }
      // use size of element, if element
      this[measurement] = elem ? getSize(elem)[size] : option;
    }
  };

  /**
   * layout a collection of item elements
   * @api public
   */
  proto.layoutItems = function (items, isInstant) {
    items = this._getItemsForLayout(items);

    this._layoutItems(items, isInstant);

    this._postLayout();
  };

  /**
   * get the items to be laid out
   * you may want to skip over some items
   * @param {Array} items
   * @returns {Array} items
   */
  proto._getItemsForLayout = function (items) {
    return items.filter(function (item) {
      return !item.isIgnored;
    });
  };

  /**
   * layout items
   * @param {Array} items
   * @param {Boolean} isInstant
   */
  proto._layoutItems = function (items, isInstant) {
    this._emitCompleteOnItems('layout', items);

    if (!items || !items.length) {
      // no items, emit event with empty array
      return;
    }

    var queue = [];

    items.forEach(function (item) {
      // get x/y object from method
      var position = this._getItemLayoutPosition(item);
      // enqueue
      position.item = item;
      position.isInstant = isInstant || item.isLayoutInstant;
      queue.push(position);
    }, this);

    this._processLayoutQueue(queue);
  };

  /**
   * get item layout position
   * @param {Outlayer.Item} item
   * @returns {Object} x and y position
   */
  proto._getItemLayoutPosition = function () /* item */{
    return {
      x: 0,
      y: 0
    };
  };

  /**
   * iterate over array and position each item
   * Reason being - separating this logic prevents 'layout invalidation'
   * thx @paul_irish
   * @param {Array} queue
   */
  proto._processLayoutQueue = function (queue) {
    this.updateStagger();
    queue.forEach(function (obj, i) {
      this._positionItem(obj.item, obj.x, obj.y, obj.isInstant, i);
    }, this);
  };

  // set stagger from option in milliseconds number
  proto.updateStagger = function () {
    var stagger = this.options.stagger;
    if (stagger === null || stagger === undefined) {
      this.stagger = 0;
      return;
    }
    this.stagger = getMilliseconds(stagger);
    return this.stagger;
  };

  /**
   * Sets position of item in DOM
   * @param {Outlayer.Item} item
   * @param {Number} x - horizontal position
   * @param {Number} y - vertical position
   * @param {Boolean} isInstant - disables transitions
   */
  proto._positionItem = function (item, x, y, isInstant, i) {
    if (isInstant) {
      // if not transition, just set CSS
      item.goTo(x, y);
    } else {
      item.stagger(i * this.stagger);
      item.moveTo(x, y);
    }
  };

  /**
   * Any logic you want to do after each layout,
   * i.e. size the container
   */
  proto._postLayout = function () {
    this.resizeContainer();
  };

  proto.resizeContainer = function () {
    var isResizingContainer = this._getOption('resizeContainer');
    if (!isResizingContainer) {
      return;
    }
    var size = this._getContainerSize();
    if (size) {
      this._setContainerMeasure(size.width, true);
      this._setContainerMeasure(size.height, false);
    }
  };

  /**
   * Sets width or height of container if returned
   * @returns {Object} size
   *   @param {Number} width
   *   @param {Number} height
   */
  proto._getContainerSize = noop;

  /**
   * @param {Number} measure - size of width or height
   * @param {Boolean} isWidth
   */
  proto._setContainerMeasure = function (measure, isWidth) {
    if (measure === undefined) {
      return;
    }

    var elemSize = this.size;
    // add padding and border width if border box
    if (elemSize.isBorderBox) {
      measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight + elemSize.borderLeftWidth + elemSize.borderRightWidth : elemSize.paddingBottom + elemSize.paddingTop + elemSize.borderTopWidth + elemSize.borderBottomWidth;
    }

    measure = Math.max(measure, 0);
    this.element.style[isWidth ? 'width' : 'height'] = measure + 'px';
  };

  /**
   * emit eventComplete on a collection of items events
   * @param {String} eventName
   * @param {Array} items - Outlayer.Items
   */
  proto._emitCompleteOnItems = function (eventName, items) {
    var _this = this;
    function onComplete() {
      _this.dispatchEvent(eventName + 'Complete', null, [items]);
    }

    var count = items.length;
    if (!items || !count) {
      onComplete();
      return;
    }

    var doneCount = 0;
    function tick() {
      doneCount++;
      if (doneCount == count) {
        onComplete();
      }
    }

    // bind callback
    items.forEach(function (item) {
      item.once(eventName, tick);
    });
  };

  /**
   * emits events via EvEmitter and jQuery events
   * @param {String} type - name of event
   * @param {Event} event - original event
   * @param {Array} args - extra arguments
   */
  proto.dispatchEvent = function (type, event, args) {
    // add original event to arguments
    var emitArgs = event ? [event].concat(args) : args;
    this.emitEvent(type, emitArgs);

    if (jQuery) {
      // set this.$element
      this.$element = this.$element || jQuery(this.element);
      if (event) {
        // create jQuery event
        var $event = jQuery.Event(event);
        $event.type = type;
        this.$element.trigger($event, args);
      } else {
        // just trigger with type if no event available
        this.$element.trigger(type, args);
      }
    }
  };

  // -------------------------- ignore & stamps -------------------------- //


  /**
   * keep item in collection, but do not lay it out
   * ignored items do not get skipped in layout
   * @param {Element} elem
   */
  proto.ignore = function (elem) {
    var item = this.getItem(elem);
    if (item) {
      item.isIgnored = true;
    }
  };

  /**
   * return item to layout collection
   * @param {Element} elem
   */
  proto.unignore = function (elem) {
    var item = this.getItem(elem);
    if (item) {
      delete item.isIgnored;
    }
  };

  /**
   * adds elements to stamps
   * @param {NodeList, Array, Element, or String} elems
   */
  proto.stamp = function (elems) {
    elems = this._find(elems);
    if (!elems) {
      return;
    }

    this.stamps = this.stamps.concat(elems);
    // ignore
    elems.forEach(this.ignore, this);
  };

  /**
   * removes elements to stamps
   * @param {NodeList, Array, or Element} elems
   */
  proto.unstamp = function (elems) {
    elems = this._find(elems);
    if (!elems) {
      return;
    }

    elems.forEach(function (elem) {
      // filter out removed stamp elements
      utils.removeFrom(this.stamps, elem);
      this.unignore(elem);
    }, this);
  };

  /**
   * finds child elements
   * @param {NodeList, Array, Element, or String} elems
   * @returns {Array} elems
   */
  proto._find = function (elems) {
    if (!elems) {
      return;
    }
    // if string, use argument as selector string
    if (typeof elems == 'string') {
      elems = this.element.querySelectorAll(elems);
    }
    elems = utils.makeArray(elems);
    return elems;
  };

  proto._manageStamps = function () {
    if (!this.stamps || !this.stamps.length) {
      return;
    }

    this._getBoundingRect();

    this.stamps.forEach(this._manageStamp, this);
  };

  // update boundingLeft / Top
  proto._getBoundingRect = function () {
    // get bounding rect for container element
    var boundingRect = this.element.getBoundingClientRect();
    var size = this.size;
    this._boundingRect = {
      left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,
      top: boundingRect.top + size.paddingTop + size.borderTopWidth,
      right: boundingRect.right - (size.paddingRight + size.borderRightWidth),
      bottom: boundingRect.bottom - (size.paddingBottom + size.borderBottomWidth)
    };
  };

  /**
   * @param {Element} stamp
  **/
  proto._manageStamp = noop;

  /**
   * get x/y position of element relative to container element
   * @param {Element} elem
   * @returns {Object} offset - has left, top, right, bottom
   */
  proto._getElementOffset = function (elem) {
    var boundingRect = elem.getBoundingClientRect();
    var thisRect = this._boundingRect;
    var size = getSize(elem);
    var offset = {
      left: boundingRect.left - thisRect.left - size.marginLeft,
      top: boundingRect.top - thisRect.top - size.marginTop,
      right: thisRect.right - boundingRect.right - size.marginRight,
      bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom
    };
    return offset;
  };

  // -------------------------- resize -------------------------- //

  // enable event handlers for listeners
  // i.e. resize -> onresize
  proto.handleEvent = utils.handleEvent;

  /**
   * Bind layout to window resizing
   */
  proto.bindResize = function () {
    window.addEventListener('resize', this);
    this.isResizeBound = true;
  };

  /**
   * Unbind layout to window resizing
   */
  proto.unbindResize = function () {
    window.removeEventListener('resize', this);
    this.isResizeBound = false;
  };

  proto.onresize = function () {
    this.resize();
  };

  utils.debounceMethod(Outlayer, 'onresize', 100);

  proto.resize = function () {
    // don't trigger if size did not change
    // or if resize was unbound. See #9
    if (!this.isResizeBound || !this.needsResizeLayout()) {
      return;
    }

    this.layout();
  };

  /**
   * check if layout is needed post layout
   * @returns Boolean
   */
  proto.needsResizeLayout = function () {
    var size = getSize(this.element);
    // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be
    var hasSizes = this.size && size;
    return hasSizes && size.innerWidth !== this.size.innerWidth;
  };

  // -------------------------- methods -------------------------- //

  /**
   * add items to Outlayer instance
   * @param {Array or NodeList or Element} elems
   * @returns {Array} items - Outlayer.Items
  **/
  proto.addItems = function (elems) {
    var items = this._itemize(elems);
    // add items to collection
    if (items.length) {
      this.items = this.items.concat(items);
    }
    return items;
  };

  /**
   * Layout newly-appended item elements
   * @param {Array or NodeList or Element} elems
   */
  proto.appended = function (elems) {
    var items = this.addItems(elems);
    if (!items.length) {
      return;
    }
    // layout and reveal just the new items
    this.layoutItems(items, true);
    this.reveal(items);
  };

  /**
   * Layout prepended elements
   * @param {Array or NodeList or Element} elems
   */
  proto.prepended = function (elems) {
    var items = this._itemize(elems);
    if (!items.length) {
      return;
    }
    // add items to beginning of collection
    var previousItems = this.items.slice(0);
    this.items = items.concat(previousItems);
    // start new layout
    this._resetLayout();
    this._manageStamps();
    // layout new stuff without transition
    this.layoutItems(items, true);
    this.reveal(items);
    // layout previous items
    this.layoutItems(previousItems);
  };

  /**
   * reveal a collection of items
   * @param {Array of Outlayer.Items} items
   */
  proto.reveal = function (items) {
    this._emitCompleteOnItems('reveal', items);
    if (!items || !items.length) {
      return;
    }
    var stagger = this.updateStagger();
    items.forEach(function (item, i) {
      item.stagger(i * stagger);
      item.reveal();
    });
  };

  /**
   * hide a collection of items
   * @param {Array of Outlayer.Items} items
   */
  proto.hide = function (items) {
    this._emitCompleteOnItems('hide', items);
    if (!items || !items.length) {
      return;
    }
    var stagger = this.updateStagger();
    items.forEach(function (item, i) {
      item.stagger(i * stagger);
      item.hide();
    });
  };

  /**
   * reveal item elements
   * @param {Array}, {Element}, {NodeList} items
   */
  proto.revealItemElements = function (elems) {
    var items = this.getItems(elems);
    this.reveal(items);
  };

  /**
   * hide item elements
   * @param {Array}, {Element}, {NodeList} items
   */
  proto.hideItemElements = function (elems) {
    var items = this.getItems(elems);
    this.hide(items);
  };

  /**
   * get Outlayer.Item, given an Element
   * @param {Element} elem
   * @param {Function} callback
   * @returns {Outlayer.Item} item
   */
  proto.getItem = function (elem) {
    // loop through items to get the one that matches
    for (var i = 0; i < this.items.length; i++) {
      var item = this.items[i];
      if (item.element == elem) {
        // return item
        return item;
      }
    }
  };

  /**
   * get collection of Outlayer.Items, given Elements
   * @param {Array} elems
   * @returns {Array} items - Outlayer.Items
   */
  proto.getItems = function (elems) {
    elems = utils.makeArray(elems);
    var items = [];
    elems.forEach(function (elem) {
      var item = this.getItem(elem);
      if (item) {
        items.push(item);
      }
    }, this);

    return items;
  };

  /**
   * remove element(s) from instance and DOM
   * @param {Array or NodeList or Element} elems
   */
  proto.remove = function (elems) {
    var removeItems = this.getItems(elems);

    this._emitCompleteOnItems('remove', removeItems);

    // bail if no items to remove
    if (!removeItems || !removeItems.length) {
      return;
    }

    removeItems.forEach(function (item) {
      item.remove();
      // remove item from collection
      utils.removeFrom(this.items, item);
    }, this);
  };

  // ----- destroy ----- //

  // remove and disable Outlayer instance
  proto.destroy = function () {
    // clean up dynamic styles
    var style = this.element.style;
    style.height = '';
    style.position = '';
    style.width = '';
    // destroy items
    this.items.forEach(function (item) {
      item.destroy();
    });

    this.unbindResize();

    var id = this.element.outlayerGUID;
    delete instances[id]; // remove reference to instance by id
    delete this.element.outlayerGUID;
    // remove data for jQuery
    if (jQuery) {
      jQuery.removeData(this.element, this.constructor.namespace);
    }
  };

  // -------------------------- data -------------------------- //

  /**
   * get Outlayer instance from element
   * @param {Element} elem
   * @returns {Outlayer}
   */
  Outlayer.data = function (elem) {
    elem = utils.getQueryElement(elem);
    var id = elem && elem.outlayerGUID;
    return id && instances[id];
  };

  // -------------------------- create Outlayer class -------------------------- //

  /**
   * create a layout class
   * @param {String} namespace
   */
  Outlayer.create = function (namespace, options) {
    // sub-class Outlayer
    var Layout = subclass(Outlayer);
    // apply new options and compatOptions
    Layout.defaults = utils.extend({}, Outlayer.defaults);
    utils.extend(Layout.defaults, options);
    Layout.compatOptions = utils.extend({}, Outlayer.compatOptions);

    Layout.namespace = namespace;

    Layout.data = Outlayer.data;

    // sub-class Item
    Layout.Item = subclass(Item);

    // -------------------------- declarative -------------------------- //

    utils.htmlInit(Layout, namespace);

    // -------------------------- jQuery bridge -------------------------- //

    // make into jQuery plugin
    if (jQuery && jQuery.bridget) {
      jQuery.bridget(namespace, Layout);
    }

    return Layout;
  };

  function subclass(Parent) {
    function SubClass() {
      Parent.apply(this, arguments);
    }

    SubClass.prototype = Object.create(Parent.prototype);
    SubClass.prototype.constructor = SubClass;

    return SubClass;
  }

  // ----- helpers ----- //

  // how many milliseconds are in each unit
  var msUnits = {
    ms: 1,
    s: 1000
  };

  // munge time-like parameter into millisecond number
  // '0.4s' -> 40
  function getMilliseconds(time) {
    if (typeof time == 'number') {
      return time;
    }
    var matches = time.match(/(^\d*\.?\d*)(\w*)/);
    var num = matches && matches[1];
    var unit = matches && matches[2];
    if (!num.length) {
      return 0;
    }
    num = parseFloat(num);
    var mult = msUnits[unit] || 1;
    return num * mult;
  }

  // ----- fin ----- //

  // back in global
  Outlayer.Item = Item;

  return Outlayer;
});

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Fizzy UI utils v2.0.7
 * MIT license
 */

/*jshint browser: true, undef: true, unused: true, strict: true */

(function (window, factory) {
  // universal module definition
  /*jshint strict: false */ /*globals define, module, require */

  if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(309)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (matchesSelector) {
      return factory(window, matchesSelector);
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory(window, require('desandro-matches-selector'));
  } else {
    // browser global
    window.fizzyUIUtils = factory(window, window.matchesSelector);
  }
})(window, function factory(window, matchesSelector) {

  'use strict';

  var utils = {};

  // ----- extend ----- //

  // extends objects
  utils.extend = function (a, b) {
    for (var prop in b) {
      a[prop] = b[prop];
    }
    return a;
  };

  // ----- modulo ----- //

  utils.modulo = function (num, div) {
    return (num % div + div) % div;
  };

  // ----- makeArray ----- //

  var arraySlice = Array.prototype.slice;

  // turn element or nodeList into an array
  utils.makeArray = function (obj) {
    if (Array.isArray(obj)) {
      // use object if already an array
      return obj;
    }
    // return empty array if undefined or null. #6
    if (obj === null || obj === undefined) {
      return [];
    }

    var isArrayLike = (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' && typeof obj.length == 'number';
    if (isArrayLike) {
      // convert nodeList to array
      return arraySlice.call(obj);
    }

    // array of single index
    return [obj];
  };

  // ----- removeFrom ----- //

  utils.removeFrom = function (ary, obj) {
    var index = ary.indexOf(obj);
    if (index != -1) {
      ary.splice(index, 1);
    }
  };

  // ----- getParent ----- //

  utils.getParent = function (elem, selector) {
    while (elem.parentNode && elem != document.body) {
      elem = elem.parentNode;
      if (matchesSelector(elem, selector)) {
        return elem;
      }
    }
  };

  // ----- getQueryElement ----- //

  // use element as selector string
  utils.getQueryElement = function (elem) {
    if (typeof elem == 'string') {
      return document.querySelector(elem);
    }
    return elem;
  };

  // ----- handleEvent ----- //

  // enable .ontype to trigger from .addEventListener( elem, 'type' )
  utils.handleEvent = function (event) {
    var method = 'on' + event.type;
    if (this[method]) {
      this[method](event);
    }
  };

  // ----- filterFindElements ----- //

  utils.filterFindElements = function (elems, selector) {
    // make array of elems
    elems = utils.makeArray(elems);
    var ffElems = [];

    elems.forEach(function (elem) {
      // check that elem is an actual element
      if (!(elem instanceof HTMLElement)) {
        return;
      }
      // add elem if no selector
      if (!selector) {
        ffElems.push(elem);
        return;
      }
      // filter & find items if we have a selector
      // filter
      if (matchesSelector(elem, selector)) {
        ffElems.push(elem);
      }
      // find children
      var childElems = elem.querySelectorAll(selector);
      // concat childElems to filterFound array
      for (var i = 0; i < childElems.length; i++) {
        ffElems.push(childElems[i]);
      }
    });

    return ffElems;
  };

  // ----- debounceMethod ----- //

  utils.debounceMethod = function (_class, methodName, threshold) {
    threshold = threshold || 100;
    // original method
    var method = _class.prototype[methodName];
    var timeoutName = methodName + 'Timeout';

    _class.prototype[methodName] = function () {
      var timeout = this[timeoutName];
      clearTimeout(timeout);

      var args = arguments;
      var _this = this;
      this[timeoutName] = setTimeout(function () {
        method.apply(_this, args);
        delete _this[timeoutName];
      }, threshold);
    };
  };

  // ----- docReady ----- //

  utils.docReady = function (callback) {
    var readyState = document.readyState;
    if (readyState == 'complete' || readyState == 'interactive') {
      // do async to allow for other scripts to run. metafizzy/flickity#441
      setTimeout(callback);
    } else {
      document.addEventListener('DOMContentLoaded', callback);
    }
  };

  // ----- htmlInit ----- //

  // http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/
  utils.toDashed = function (str) {
    return str.replace(/(.)([A-Z])/g, function (match, $1, $2) {
      return $1 + '-' + $2;
    }).toLowerCase();
  };

  var console = window.console;
  /**
   * allow user to initialize classes via [data-namespace] or .js-namespace class
   * htmlInit( Widget, 'widgetName' )
   * options are parsed from data-namespace-options
   */
  utils.htmlInit = function (WidgetClass, namespace) {
    utils.docReady(function () {
      var dashedNamespace = utils.toDashed(namespace);
      var dataAttr = 'data-' + dashedNamespace;
      var dataAttrElems = document.querySelectorAll('[' + dataAttr + ']');
      var jsDashElems = document.querySelectorAll('.js-' + dashedNamespace);
      var elems = utils.makeArray(dataAttrElems).concat(utils.makeArray(jsDashElems));
      var dataOptionsAttr = dataAttr + '-options';
      var jQuery = window.jQuery;

      elems.forEach(function (elem) {
        var attr = elem.getAttribute(dataAttr) || elem.getAttribute(dataOptionsAttr);
        var options;
        try {
          options = attr && JSON.parse(attr);
        } catch (error) {
          // log error, do not initialize
          if (console) {
            console.error('Error parsing ' + dataAttr + ' on ' + elem.className + ': ' + error);
          }
          return;
        }
        // initialize
        var instance = new WidgetClass(elem, options);
        // make available via $().data('namespace')
        if (jQuery) {
          jQuery.data(elem, namespace, instance);
        }
      });
    });
  };

  // -----  ----- //

  return utils;
});

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * matchesSelector v2.0.2
 * matchesSelector( element, '.selector' )
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */

(function (window, factory) {
  /*global define: false, module: false */
  'use strict';
  // universal module definition

  if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.matchesSelector = factory();
  }
})(window, function factory() {
  'use strict';

  var matchesMethod = function () {
    var ElemProto = window.Element.prototype;
    // check for the standard method name first
    if (ElemProto.matches) {
      return 'matches';
    }
    // check un-prefixed
    if (ElemProto.matchesSelector) {
      return 'matchesSelector';
    }
    // check vendor prefixes
    var prefixes = ['webkit', 'moz', 'ms', 'o'];

    for (var i = 0; i < prefixes.length; i++) {
      var prefix = prefixes[i];
      var method = prefix + 'MatchesSelector';
      if (ElemProto[method]) {
        return method;
      }
    }
  }();

  return function matchesSelector(elem, selector) {
    return elem[matchesMethod](selector);
  };
});

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Outlayer Item
 */

(function (window, factory) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if (true) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(70), __webpack_require__(71)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(require('ev-emitter'), require('get-size'));
  } else {
    // browser global
    window.Outlayer = {};
    window.Outlayer.Item = factory(window.EvEmitter, window.getSize);
  }
})(window, function factory(EvEmitter, getSize) {
  'use strict';

  // ----- helpers ----- //

  function isEmptyObj(obj) {
    for (var prop in obj) {
      return false;
    }
    prop = null;
    return true;
  }

  // -------------------------- CSS3 support -------------------------- //


  var docElemStyle = document.documentElement.style;

  var transitionProperty = typeof docElemStyle.transition == 'string' ? 'transition' : 'WebkitTransition';
  var transformProperty = typeof docElemStyle.transform == 'string' ? 'transform' : 'WebkitTransform';

  var transitionEndEvent = {
    WebkitTransition: 'webkitTransitionEnd',
    transition: 'transitionend'
  }[transitionProperty];

  // cache all vendor properties that could have vendor prefix
  var vendorProperties = {
    transform: transformProperty,
    transition: transitionProperty,
    transitionDuration: transitionProperty + 'Duration',
    transitionProperty: transitionProperty + 'Property',
    transitionDelay: transitionProperty + 'Delay'
  };

  // -------------------------- Item -------------------------- //

  function Item(element, layout) {
    if (!element) {
      return;
    }

    this.element = element;
    // parent layout class, i.e. Masonry, Isotope, or Packery
    this.layout = layout;
    this.position = {
      x: 0,
      y: 0
    };

    this._create();
  }

  // inherit EvEmitter
  var proto = Item.prototype = Object.create(EvEmitter.prototype);
  proto.constructor = Item;

  proto._create = function () {
    // transition objects
    this._transn = {
      ingProperties: {},
      clean: {},
      onEnd: {}
    };

    this.css({
      position: 'absolute'
    });
  };

  // trigger specified handler for event type
  proto.handleEvent = function (event) {
    var method = 'on' + event.type;
    if (this[method]) {
      this[method](event);
    }
  };

  proto.getSize = function () {
    this.size = getSize(this.element);
  };

  /**
   * apply CSS styles to element
   * @param {Object} style
   */
  proto.css = function (style) {
    var elemStyle = this.element.style;

    for (var prop in style) {
      // use vendor property if available
      var supportedProp = vendorProperties[prop] || prop;
      elemStyle[supportedProp] = style[prop];
    }
  };

  // measure position, and sets it
  proto.getPosition = function () {
    var style = getComputedStyle(this.element);
    var isOriginLeft = this.layout._getOption('originLeft');
    var isOriginTop = this.layout._getOption('originTop');
    var xValue = style[isOriginLeft ? 'left' : 'right'];
    var yValue = style[isOriginTop ? 'top' : 'bottom'];
    var x = parseFloat(xValue);
    var y = parseFloat(yValue);
    // convert percent to pixels
    var layoutSize = this.layout.size;
    if (xValue.indexOf('%') != -1) {
      x = x / 100 * layoutSize.width;
    }
    if (yValue.indexOf('%') != -1) {
      y = y / 100 * layoutSize.height;
    }
    // clean up 'auto' or other non-integer values
    x = isNaN(x) ? 0 : x;
    y = isNaN(y) ? 0 : y;
    // remove padding from measurement
    x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;
    y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;

    this.position.x = x;
    this.position.y = y;
  };

  // set settled position, apply padding
  proto.layoutPosition = function () {
    var layoutSize = this.layout.size;
    var style = {};
    var isOriginLeft = this.layout._getOption('originLeft');
    var isOriginTop = this.layout._getOption('originTop');

    // x
    var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';
    var xProperty = isOriginLeft ? 'left' : 'right';
    var xResetProperty = isOriginLeft ? 'right' : 'left';

    var x = this.position.x + layoutSize[xPadding];
    // set in percentage or pixels
    style[xProperty] = this.getXValue(x);
    // reset other property
    style[xResetProperty] = '';

    // y
    var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';
    var yProperty = isOriginTop ? 'top' : 'bottom';
    var yResetProperty = isOriginTop ? 'bottom' : 'top';

    var y = this.position.y + layoutSize[yPadding];
    // set in percentage or pixels
    style[yProperty] = this.getYValue(y);
    // reset other property
    style[yResetProperty] = '';

    this.css(style);
    this.emitEvent('layout', [this]);
  };

  proto.getXValue = function (x) {
    var isHorizontal = this.layout._getOption('horizontal');
    return this.layout.options.percentPosition && !isHorizontal ? x / this.layout.size.width * 100 + '%' : x + 'px';
  };

  proto.getYValue = function (y) {
    var isHorizontal = this.layout._getOption('horizontal');
    return this.layout.options.percentPosition && isHorizontal ? y / this.layout.size.height * 100 + '%' : y + 'px';
  };

  proto._transitionTo = function (x, y) {
    this.getPosition();
    // get current x & y from top/left
    var curX = this.position.x;
    var curY = this.position.y;

    var didNotMove = x == this.position.x && y == this.position.y;

    // save end position
    this.setPosition(x, y);

    // if did not move and not transitioning, just go to layout
    if (didNotMove && !this.isTransitioning) {
      this.layoutPosition();
      return;
    }

    var transX = x - curX;
    var transY = y - curY;
    var transitionStyle = {};
    transitionStyle.transform = this.getTranslate(transX, transY);

    this.transition({
      to: transitionStyle,
      onTransitionEnd: {
        transform: this.layoutPosition
      },
      isCleaning: true
    });
  };

  proto.getTranslate = function (x, y) {
    // flip cooridinates if origin on right or bottom
    var isOriginLeft = this.layout._getOption('originLeft');
    var isOriginTop = this.layout._getOption('originTop');
    x = isOriginLeft ? x : -x;
    y = isOriginTop ? y : -y;
    return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
  };

  // non transition + transform support
  proto.goTo = function (x, y) {
    this.setPosition(x, y);
    this.layoutPosition();
  };

  proto.moveTo = proto._transitionTo;

  proto.setPosition = function (x, y) {
    this.position.x = parseFloat(x);
    this.position.y = parseFloat(y);
  };

  // ----- transition ----- //

  /**
   * @param {Object} style - CSS
   * @param {Function} onTransitionEnd
   */

  // non transition, just trigger callback
  proto._nonTransition = function (args) {
    this.css(args.to);
    if (args.isCleaning) {
      this._removeStyles(args.to);
    }
    for (var prop in args.onTransitionEnd) {
      args.onTransitionEnd[prop].call(this);
    }
  };

  /**
   * proper transition
   * @param {Object} args - arguments
   *   @param {Object} to - style to transition to
   *   @param {Object} from - style to start transition from
   *   @param {Boolean} isCleaning - removes transition styles after transition
   *   @param {Function} onTransitionEnd - callback
   */
  proto.transition = function (args) {
    // redirect to nonTransition if no transition duration
    if (!parseFloat(this.layout.options.transitionDuration)) {
      this._nonTransition(args);
      return;
    }

    var _transition = this._transn;
    // keep track of onTransitionEnd callback by css property
    for (var prop in args.onTransitionEnd) {
      _transition.onEnd[prop] = args.onTransitionEnd[prop];
    }
    // keep track of properties that are transitioning
    for (prop in args.to) {
      _transition.ingProperties[prop] = true;
      // keep track of properties to clean up when transition is done
      if (args.isCleaning) {
        _transition.clean[prop] = true;
      }
    }

    // set from styles
    if (args.from) {
      this.css(args.from);
      // force redraw. http://blog.alexmaccaw.com/css-transitions
      var h = this.element.offsetHeight;
      // hack for JSHint to hush about unused var
      h = null;
    }
    // enable transition
    this.enableTransition(args.to);
    // set styles that are transitioning
    this.css(args.to);

    this.isTransitioning = true;
  };

  // dash before all cap letters, including first for
  // WebkitTransform => -webkit-transform
  function toDashedAll(str) {
    return str.replace(/([A-Z])/g, function ($1) {
      return '-' + $1.toLowerCase();
    });
  }

  var transitionProps = 'opacity,' + toDashedAll(transformProperty);

  proto.enableTransition = function () /* style */{
    // HACK changing transitionProperty during a transition
    // will cause transition to jump
    if (this.isTransitioning) {
      return;
    }

    // make `transition: foo, bar, baz` from style object
    // HACK un-comment this when enableTransition can work
    // while a transition is happening
    // var transitionValues = [];
    // for ( var prop in style ) {
    //   // dash-ify camelCased properties like WebkitTransition
    //   prop = vendorProperties[ prop ] || prop;
    //   transitionValues.push( toDashedAll( prop ) );
    // }
    // munge number to millisecond, to match stagger
    var duration = this.layout.options.transitionDuration;
    duration = typeof duration == 'number' ? duration + 'ms' : duration;
    // enable transition styles
    this.css({
      transitionProperty: transitionProps,
      transitionDuration: duration,
      transitionDelay: this.staggerDelay || 0
    });
    // listen for transition end event
    this.element.addEventListener(transitionEndEvent, this, false);
  };

  // ----- events ----- //

  proto.onwebkitTransitionEnd = function (event) {
    this.ontransitionend(event);
  };

  proto.onotransitionend = function (event) {
    this.ontransitionend(event);
  };

  // properties that I munge to make my life easier
  var dashedVendorProperties = {
    '-webkit-transform': 'transform'
  };

  proto.ontransitionend = function (event) {
    // disregard bubbled events from children
    if (event.target !== this.element) {
      return;
    }
    var _transition = this._transn;
    // get property name of transitioned property, convert to prefix-free
    var propertyName = dashedVendorProperties[event.propertyName] || event.propertyName;

    // remove property that has completed transitioning
    delete _transition.ingProperties[propertyName];
    // check if any properties are still transitioning
    if (isEmptyObj(_transition.ingProperties)) {
      // all properties have completed transitioning
      this.disableTransition();
    }
    // clean style
    if (propertyName in _transition.clean) {
      // clean up style
      this.element.style[event.propertyName] = '';
      delete _transition.clean[propertyName];
    }
    // trigger onTransitionEnd callback
    if (propertyName in _transition.onEnd) {
      var onTransitionEnd = _transition.onEnd[propertyName];
      onTransitionEnd.call(this);
      delete _transition.onEnd[propertyName];
    }

    this.emitEvent('transitionEnd', [this]);
  };

  proto.disableTransition = function () {
    this.removeTransitionStyles();
    this.element.removeEventListener(transitionEndEvent, this, false);
    this.isTransitioning = false;
  };

  /**
   * removes style property from element
   * @param {Object} style
  **/
  proto._removeStyles = function (style) {
    // clean up transition styles
    var cleanStyle = {};
    for (var prop in style) {
      cleanStyle[prop] = '';
    }
    this.css(cleanStyle);
  };

  var cleanTransitionStyle = {
    transitionProperty: '',
    transitionDuration: '',
    transitionDelay: ''
  };

  proto.removeTransitionStyles = function () {
    // remove transition
    this.css(cleanTransitionStyle);
  };

  // ----- stagger ----- //

  proto.stagger = function (delay) {
    delay = isNaN(delay) ? 0 : delay;
    this.staggerDelay = delay + 'ms';
  };

  // ----- show/hide/remove ----- //

  // remove element from DOM
  proto.removeElem = function () {
    this.element.parentNode.removeChild(this.element);
    // remove display: none
    this.css({ display: '' });
    this.emitEvent('remove', [this]);
  };

  proto.remove = function () {
    // just remove element if no transition support or no transition
    if (!transitionProperty || !parseFloat(this.layout.options.transitionDuration)) {
      this.removeElem();
      return;
    }

    // start transition
    this.once('transitionEnd', function () {
      this.removeElem();
    });
    this.hide();
  };

  proto.reveal = function () {
    delete this.isHidden;
    // remove display: none
    this.css({ display: '' });

    var options = this.layout.options;

    var onTransitionEnd = {};
    var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');
    onTransitionEnd[transitionEndProperty] = this.onRevealTransitionEnd;

    this.transition({
      from: options.hiddenStyle,
      to: options.visibleStyle,
      isCleaning: true,
      onTransitionEnd: onTransitionEnd
    });
  };

  proto.onRevealTransitionEnd = function () {
    // check if still visible
    // during transition, item may have been hidden
    if (!this.isHidden) {
      this.emitEvent('reveal');
    }
  };

  /**
   * get style property use for hide/reveal transition end
   * @param {String} styleProperty - hiddenStyle/visibleStyle
   * @returns {String}
   */
  proto.getHideRevealTransitionEndProperty = function (styleProperty) {
    var optionStyle = this.layout.options[styleProperty];
    // use opacity
    if (optionStyle.opacity) {
      return 'opacity';
    }
    // get first property
    for (var prop in optionStyle) {
      return prop;
    }
  };

  proto.hide = function () {
    // set flag
    this.isHidden = true;
    // remove display: none
    this.css({ display: '' });

    var options = this.layout.options;

    var onTransitionEnd = {};
    var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');
    onTransitionEnd[transitionEndProperty] = this.onHideTransitionEnd;

    this.transition({
      from: options.visibleStyle,
      to: options.hiddenStyle,
      // keep hidden stuff hidden
      isCleaning: true,
      onTransitionEnd: onTransitionEnd
    });
  };

  proto.onHideTransitionEnd = function () {
    // check if still hidden
    // during transition, item may have been un-hidden
    if (this.isHidden) {
      this.css({ display: 'none' });
      this.emitEvent('hide');
    }
  };

  proto.destroy = function () {
    this.css({
      position: '',
      left: '',
      right: '',
      top: '',
      bottom: '',
      transition: '',
      transform: ''
    });
  };

  return Item;
});

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * imagesLoaded v4.1.4
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

(function (window, factory) {
  'use strict';
  // universal module definition

  /*global define: false, module: false, require: false */

  if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(70)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (EvEmitter) {
      return factory(window, EvEmitter);
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory(window, require('ev-emitter'));
  } else {
    // browser global
    window.imagesLoaded = factory(window, window.EvEmitter);
  }
})(typeof window !== 'undefined' ? window : this,

// --------------------------  factory -------------------------- //

function factory(window, EvEmitter) {

  'use strict';

  var $ = window.jQuery;
  var console = window.console;

  // -------------------------- helpers -------------------------- //

  // extend objects
  function extend(a, b) {
    for (var prop in b) {
      a[prop] = b[prop];
    }
    return a;
  }

  var arraySlice = Array.prototype.slice;

  // turn element or nodeList into an array
  function makeArray(obj) {
    if (Array.isArray(obj)) {
      // use object if already an array
      return obj;
    }

    var isArrayLike = (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' && typeof obj.length == 'number';
    if (isArrayLike) {
      // convert nodeList to array
      return arraySlice.call(obj);
    }

    // array of single index
    return [obj];
  }

  // -------------------------- imagesLoaded -------------------------- //

  /**
   * @param {Array, Element, NodeList, String} elem
   * @param {Object or Function} options - if function, use as callback
   * @param {Function} onAlways - callback function
   */
  function ImagesLoaded(elem, options, onAlways) {
    // coerce ImagesLoaded() without new, to be new ImagesLoaded()
    if (!(this instanceof ImagesLoaded)) {
      return new ImagesLoaded(elem, options, onAlways);
    }
    // use elem as selector string
    var queryElem = elem;
    if (typeof elem == 'string') {
      queryElem = document.querySelectorAll(elem);
    }
    // bail if bad element
    if (!queryElem) {
      console.error('Bad element for imagesLoaded ' + (queryElem || elem));
      return;
    }

    this.elements = makeArray(queryElem);
    this.options = extend({}, this.options);
    // shift arguments if no options set
    if (typeof options == 'function') {
      onAlways = options;
    } else {
      extend(this.options, options);
    }

    if (onAlways) {
      this.on('always', onAlways);
    }

    this.getImages();

    if ($) {
      // add jQuery Deferred object
      this.jqDeferred = new $.Deferred();
    }

    // HACK check async to allow time to bind listeners
    setTimeout(this.check.bind(this));
  }

  ImagesLoaded.prototype = Object.create(EvEmitter.prototype);

  ImagesLoaded.prototype.options = {};

  ImagesLoaded.prototype.getImages = function () {
    this.images = [];

    // filter & find items if we have an item selector
    this.elements.forEach(this.addElementImages, this);
  };

  /**
   * @param {Node} element
   */
  ImagesLoaded.prototype.addElementImages = function (elem) {
    // filter siblings
    if (elem.nodeName == 'IMG') {
      this.addImage(elem);
    }
    // get background image on element
    if (this.options.background === true) {
      this.addElementBackgroundImages(elem);
    }

    // find children
    // no non-element nodes, #143
    var nodeType = elem.nodeType;
    if (!nodeType || !elementNodeTypes[nodeType]) {
      return;
    }
    var childImgs = elem.querySelectorAll('img');
    // concat childElems to filterFound array
    for (var i = 0; i < childImgs.length; i++) {
      var img = childImgs[i];
      this.addImage(img);
    }

    // get child background images
    if (typeof this.options.background == 'string') {
      var children = elem.querySelectorAll(this.options.background);
      for (i = 0; i < children.length; i++) {
        var child = children[i];
        this.addElementBackgroundImages(child);
      }
    }
  };

  var elementNodeTypes = {
    1: true,
    9: true,
    11: true
  };

  ImagesLoaded.prototype.addElementBackgroundImages = function (elem) {
    var style = getComputedStyle(elem);
    if (!style) {
      // Firefox returns null if in a hidden iframe https://bugzil.la/548397
      return;
    }
    // get url inside url("...")
    var reURL = /url\((['"])?(.*?)\1\)/gi;
    var matches = reURL.exec(style.backgroundImage);
    while (matches !== null) {
      var url = matches && matches[2];
      if (url) {
        this.addBackground(url, elem);
      }
      matches = reURL.exec(style.backgroundImage);
    }
  };

  /**
   * @param {Image} img
   */
  ImagesLoaded.prototype.addImage = function (img) {
    var loadingImage = new LoadingImage(img);
    this.images.push(loadingImage);
  };

  ImagesLoaded.prototype.addBackground = function (url, elem) {
    var background = new Background(url, elem);
    this.images.push(background);
  };

  ImagesLoaded.prototype.check = function () {
    var _this = this;
    this.progressedCount = 0;
    this.hasAnyBroken = false;
    // complete if no images
    if (!this.images.length) {
      this.complete();
      return;
    }

    function onProgress(image, elem, message) {
      // HACK - Chrome triggers event before object properties have changed. #83
      setTimeout(function () {
        _this.progress(image, elem, message);
      });
    }

    this.images.forEach(function (loadingImage) {
      loadingImage.once('progress', onProgress);
      loadingImage.check();
    });
  };

  ImagesLoaded.prototype.progress = function (image, elem, message) {
    this.progressedCount++;
    this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;
    // progress event
    this.emitEvent('progress', [this, image, elem]);
    if (this.jqDeferred && this.jqDeferred.notify) {
      this.jqDeferred.notify(this, image);
    }
    // check if completed
    if (this.progressedCount == this.images.length) {
      this.complete();
    }

    if (this.options.debug && console) {
      console.log('progress: ' + message, image, elem);
    }
  };

  ImagesLoaded.prototype.complete = function () {
    var eventName = this.hasAnyBroken ? 'fail' : 'done';
    this.isComplete = true;
    this.emitEvent(eventName, [this]);
    this.emitEvent('always', [this]);
    if (this.jqDeferred) {
      var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';
      this.jqDeferred[jqMethod](this);
    }
  };

  // --------------------------  -------------------------- //

  function LoadingImage(img) {
    this.img = img;
  }

  LoadingImage.prototype = Object.create(EvEmitter.prototype);

  LoadingImage.prototype.check = function () {
    // If complete is true and browser supports natural sizes,
    // try to check for image status manually.
    var isComplete = this.getIsImageComplete();
    if (isComplete) {
      // report based on naturalWidth
      this.confirm(this.img.naturalWidth !== 0, 'naturalWidth');
      return;
    }

    // If none of the checks above matched, simulate loading on detached element.
    this.proxyImage = new Image();
    this.proxyImage.addEventListener('load', this);
    this.proxyImage.addEventListener('error', this);
    // bind to image as well for Firefox. #191
    this.img.addEventListener('load', this);
    this.img.addEventListener('error', this);
    this.proxyImage.src = this.img.src;
  };

  LoadingImage.prototype.getIsImageComplete = function () {
    // check for non-zero, non-undefined naturalWidth
    // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671
    return this.img.complete && this.img.naturalWidth;
  };

  LoadingImage.prototype.confirm = function (isLoaded, message) {
    this.isLoaded = isLoaded;
    this.emitEvent('progress', [this, this.img, message]);
  };

  // ----- events ----- //

  // trigger specified handler for event type
  LoadingImage.prototype.handleEvent = function (event) {
    var method = 'on' + event.type;
    if (this[method]) {
      this[method](event);
    }
  };

  LoadingImage.prototype.onload = function () {
    this.confirm(true, 'onload');
    this.unbindEvents();
  };

  LoadingImage.prototype.onerror = function () {
    this.confirm(false, 'onerror');
    this.unbindEvents();
  };

  LoadingImage.prototype.unbindEvents = function () {
    this.proxyImage.removeEventListener('load', this);
    this.proxyImage.removeEventListener('error', this);
    this.img.removeEventListener('load', this);
    this.img.removeEventListener('error', this);
  };

  // -------------------------- Background -------------------------- //

  function Background(url, element) {
    this.url = url;
    this.element = element;
    this.img = new Image();
  }

  // inherit LoadingImage prototype
  Background.prototype = Object.create(LoadingImage.prototype);

  Background.prototype.check = function () {
    this.img.addEventListener('load', this);
    this.img.addEventListener('error', this);
    this.img.src = this.url;
    // check if image is already complete
    var isComplete = this.getIsImageComplete();
    if (isComplete) {
      this.confirm(this.img.naturalWidth !== 0, 'naturalWidth');
      this.unbindEvents();
    }
  };

  Background.prototype.unbindEvents = function () {
    this.img.removeEventListener('load', this);
    this.img.removeEventListener('error', this);
  };

  Background.prototype.confirm = function (isLoaded, message) {
    this.isLoaded = isLoaded;
    this.emitEvent('progress', [this, this.element, message]);
  };

  // -------------------------- jQuery -------------------------- //

  ImagesLoaded.makeJQueryPlugin = function (jQuery) {
    jQuery = jQuery || window.jQuery;
    if (!jQuery) {
      return;
    }
    // set local variable
    $ = jQuery;
    // $().imagesLoaded()
    $.fn.imagesLoaded = function (options, callback) {
      var instance = new ImagesLoaded(this, options, callback);
      return instance.jqDeferred.promise($(this));
    };
  };
  // try making plugin
  ImagesLoaded.makeJQueryPlugin();

  // --------------------------  -------------------------- //

  return ImagesLoaded;
});

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(72),
    copyObject = __webpack_require__(23),
    createAssigner = __webpack_require__(313),
    isArrayLike = __webpack_require__(20),
    isPrototype = __webpack_require__(37),
    keys = __webpack_require__(19);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function (object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(314),
    isIterateeCall = __webpack_require__(319);

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function (object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(41),
    overRest = __webpack_require__(108),
    setToString = __webpack_require__(109);

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;

/***/ }),
/* 315 */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(317),
    defineProperty = __webpack_require__(107),
    identity = __webpack_require__(41);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function (func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;

/***/ }),
/* 317 */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function () {
    return value;
  };
}

module.exports = constant;

/***/ }),
/* 318 */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function () {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var eq = __webpack_require__(33),
    isArrayLike = __webpack_require__(20),
    isIndex = __webpack_require__(53),
    isObject = __webpack_require__(12);

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index === 'undefined' ? 'undefined' : _typeof(index);
  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var forEach = __webpack_require__(110).forEach;
var elementUtilsMaker = __webpack_require__(321);
var listenerHandlerMaker = __webpack_require__(322);
var idGeneratorMaker = __webpack_require__(323);
var idHandlerMaker = __webpack_require__(324);
var reporterMaker = __webpack_require__(325);
var browserDetector = __webpack_require__(111);
var batchProcessorMaker = __webpack_require__(326);
var stateHandler = __webpack_require__(328);

//Detection strategies.
var objectStrategyMaker = __webpack_require__(329);
var scrollStrategyMaker = __webpack_require__(330);

function isCollection(obj) {
    return Array.isArray(obj) || obj.length !== undefined;
}

function toArray(collection) {
    if (!Array.isArray(collection)) {
        var array = [];
        forEach(collection, function (obj) {
            array.push(obj);
        });
        return array;
    } else {
        return collection;
    }
}

function isElement(obj) {
    return obj && obj.nodeType === 1;
}

/**
 * @typedef idHandler
 * @type {object}
 * @property {function} get Gets the resize detector id of the element.
 * @property {function} set Generate and sets the resize detector id of the element.
 */

/**
 * @typedef Options
 * @type {object}
 * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.
                                    Default is true. If true, the listener is guaranteed to be called when it has been added.
                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).
 * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.
                                    If not provided, a default id handler will be used.
 * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.
                                    If not provided, a default id handler will be used.
                                    If set to false, then nothing will be reported.
 * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.
 */

/**
 * Creates an element resize detector instance.
 * @public
 * @param {Options?} options Optional global options object that will decide how this instance will work.
 */
module.exports = function (options) {
    options = options || {};

    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var idHandler;

    if (options.idHandler) {
        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler
        // so that readonly flag always is true when it's used here. This may be removed next major version bump.
        idHandler = {
            get: function get(element) {
                return options.idHandler.get(element, true);
            },
            set: options.idHandler.set
        };
    } else {
        var idGenerator = idGeneratorMaker();
        var defaultIdHandler = idHandlerMaker({
            idGenerator: idGenerator,
            stateHandler: stateHandler
        });
        idHandler = defaultIdHandler;
    }

    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var reporter = options.reporter;

    if (!reporter) {
        //If options.reporter is false, then the reporter should be quiet.
        var quiet = reporter === false;
        reporter = reporterMaker(quiet);
    }

    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var batchProcessor = getOption(options, "batchProcessor", batchProcessorMaker({ reporter: reporter }));

    //Options to be used as default for the listenTo function.
    var globalOptions = {};
    globalOptions.callOnAdd = !!getOption(options, "callOnAdd", true);
    globalOptions.debug = !!getOption(options, "debug", false);

    var eventListenerHandler = listenerHandlerMaker(idHandler);
    var elementUtils = elementUtilsMaker({
        stateHandler: stateHandler
    });

    //The detection strategy to be used.
    var detectionStrategy;
    var desiredStrategy = getOption(options, "strategy", "object");
    var importantCssRules = getOption(options, "important", false);
    var strategyOptions = {
        reporter: reporter,
        batchProcessor: batchProcessor,
        stateHandler: stateHandler,
        idHandler: idHandler,
        important: importantCssRules
    };

    if (desiredStrategy === "scroll") {
        if (browserDetector.isLegacyOpera()) {
            reporter.warn("Scroll strategy is not supported on legacy Opera. Changing to object strategy.");
            desiredStrategy = "object";
        } else if (browserDetector.isIE(9)) {
            reporter.warn("Scroll strategy is not supported on IE9. Changing to object strategy.");
            desiredStrategy = "object";
        }
    }

    if (desiredStrategy === "scroll") {
        detectionStrategy = scrollStrategyMaker(strategyOptions);
    } else if (desiredStrategy === "object") {
        detectionStrategy = objectStrategyMaker(strategyOptions);
    } else {
        throw new Error("Invalid strategy name: " + desiredStrategy);
    }

    //Calls can be made to listenTo with elements that are still being installed.
    //Also, same elements can occur in the elements list in the listenTo function.
    //With this map, the ready callbacks can be synchronized between the calls
    //so that the ready callback can always be called when an element is ready - even if
    //it wasn't installed from the function itself.
    var onReadyCallbacks = {};

    /**
     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.
     * @public
     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.
     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.
     * @param {function} listener The callback to be executed for each resize event for each element.
     */
    function listenTo(options, elements, listener) {
        function onResizeCallback(element) {
            var listeners = eventListenerHandler.get(element);
            forEach(listeners, function callListenerProxy(listener) {
                listener(element);
            });
        }

        function addListener(callOnAdd, element, listener) {
            eventListenerHandler.add(element, listener);

            if (callOnAdd) {
                listener(element);
            }
        }

        //Options object may be omitted.
        if (!listener) {
            listener = elements;
            elements = options;
            options = {};
        }

        if (!elements) {
            throw new Error("At least one element required.");
        }

        if (!listener) {
            throw new Error("Listener required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        var elementsReady = 0;

        var callOnAdd = getOption(options, "callOnAdd", globalOptions.callOnAdd);
        var onReadyCallback = getOption(options, "onReady", function noop() {});
        var debug = getOption(options, "debug", globalOptions.debug);

        forEach(elements, function attachListenerToElement(element) {
            if (!stateHandler.getState(element)) {
                stateHandler.initState(element);
                idHandler.set(element);
            }

            var id = idHandler.get(element);

            debug && reporter.log("Attaching listener to element", id, element);

            if (!elementUtils.isDetectable(element)) {
                debug && reporter.log(id, "Not detectable.");
                if (elementUtils.isBusy(element)) {
                    debug && reporter.log(id, "System busy making it detectable");

                    //The element is being prepared to be detectable. Do not make it detectable.
                    //Just add the listener, because the element will soon be detectable.
                    addListener(callOnAdd, element, listener);
                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];
                    onReadyCallbacks[id].push(function onReady() {
                        elementsReady++;

                        if (elementsReady === elements.length) {
                            onReadyCallback();
                        }
                    });
                    return;
                }

                debug && reporter.log(id, "Making detectable...");
                //The element is not prepared to be detectable, so do prepare it and add a listener to it.
                elementUtils.markBusy(element, true);
                return detectionStrategy.makeDetectable({ debug: debug, important: importantCssRules }, element, function onElementDetectable(element) {
                    debug && reporter.log(id, "onElementDetectable");

                    if (stateHandler.getState(element)) {
                        elementUtils.markAsDetectable(element);
                        elementUtils.markBusy(element, false);
                        detectionStrategy.addListener(element, onResizeCallback);
                        addListener(callOnAdd, element, listener);

                        // Since the element size might have changed since the call to "listenTo", we need to check for this change,
                        // so that a resize event may be emitted.
                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.
                        // Also, check the state existance before since the element may have been uninstalled in the installation process.
                        var state = stateHandler.getState(element);
                        if (state && state.startSize) {
                            var width = element.offsetWidth;
                            var height = element.offsetHeight;
                            if (state.startSize.width !== width || state.startSize.height !== height) {
                                onResizeCallback(element);
                            }
                        }

                        if (onReadyCallbacks[id]) {
                            forEach(onReadyCallbacks[id], function (callback) {
                                callback();
                            });
                        }
                    } else {
                        // The element has been unisntalled before being detectable.
                        debug && reporter.log(id, "Element uninstalled before being detectable.");
                    }

                    delete onReadyCallbacks[id];

                    elementsReady++;
                    if (elementsReady === elements.length) {
                        onReadyCallback();
                    }
                });
            }

            debug && reporter.log(id, "Already detecable, adding listener.");

            //The element has been prepared to be detectable and is ready to be listened to.
            addListener(callOnAdd, element, listener);
            elementsReady++;
        });

        if (elementsReady === elements.length) {
            onReadyCallback();
        }
    }

    function uninstall(elements) {
        if (!elements) {
            return reporter.error("At least one element is required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        forEach(elements, function (element) {
            eventListenerHandler.removeAllListeners(element);
            detectionStrategy.uninstall(element);
            stateHandler.cleanState(element);
        });
    }

    function initDocument(targetDocument) {
        detectionStrategy.initDocument && detectionStrategy.initDocument(targetDocument);
    }

    return {
        listenTo: listenTo,
        removeListener: eventListenerHandler.removeListener,
        removeAllListeners: eventListenerHandler.removeAllListeners,
        uninstall: uninstall,
        initDocument: initDocument
    };
};

function getOption(options, name, defaultValue) {
    var value = options[name];

    if ((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (options) {
    var getState = options.stateHandler.getState;

    /**
     * Tells if the element has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is detectable or not.
     */
    function isDetectable(element) {
        var state = getState(element);
        return state && !!state.isDetectable;
    }

    /**
     * Marks the element that it has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to mark.
     */
    function markAsDetectable(element) {
        getState(element).isDetectable = true;
    }

    /**
     * Tells if the element is busy or not.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is busy or not.
     */
    function isBusy(element) {
        return !!getState(element).busy;
    }

    /**
     * Marks the object is busy and should not be made detectable.
     * @public
     * @param {element} element The element to mark.
     * @param {boolean} busy If the element is busy or not.
     */
    function markBusy(element, busy) {
        getState(element).busy = !!busy;
    }

    return {
        isDetectable: isDetectable,
        markAsDetectable: markAsDetectable,
        isBusy: isBusy,
        markBusy: markBusy
    };
};

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (idHandler) {
    var eventListeners = {};

    /**
     * Gets all listeners for the given element.
     * @public
     * @param {element} element The element to get all listeners for.
     * @returns All listeners for the given element.
     */
    function getListeners(element) {
        var id = idHandler.get(element);

        if (id === undefined) {
            return [];
        }

        return eventListeners[id] || [];
    }

    /**
     * Stores the given listener for the given element. Will not actually add the listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The callback that the element has added.
     */
    function addListener(element, listener) {
        var id = idHandler.get(element);

        if (!eventListeners[id]) {
            eventListeners[id] = [];
        }

        eventListeners[id].push(listener);
    }

    function removeListener(element, listener) {
        var listeners = getListeners(element);
        for (var i = 0, len = listeners.length; i < len; ++i) {
            if (listeners[i] === listener) {
                listeners.splice(i, 1);
                break;
            }
        }
    }

    function removeAllListeners(element) {
        var listeners = getListeners(element);
        if (!listeners) {
            return;
        }
        listeners.length = 0;
    }

    return {
        get: getListeners,
        add: addListener,
        removeListener: removeListener,
        removeAllListeners: removeAllListeners
    };
};

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function () {
    var idCount = 1;

    /**
     * Generates a new unique id in the context.
     * @public
     * @returns {number} A unique id in the context.
     */
    function generate() {
        return idCount++;
    }

    return {
        generate: generate
    };
};

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (options) {
    var idGenerator = options.idGenerator;
    var getState = options.stateHandler.getState;

    /**
     * Gets the resize detector id of the element.
     * @public
     * @param {element} element The target element to get the id of.
     * @returns {string|number|null} The id of the element. Null if it has no id.
     */
    function getId(element) {
        var state = getState(element);

        if (state && state.id !== undefined) {
            return state.id;
        }

        return null;
    }

    /**
     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.
     * @public
     * @param {element} element The target element to set the id of.
     * @returns {string|number|null} The id of the element.
     */
    function setId(element) {
        var state = getState(element);

        if (!state) {
            throw new Error("setId required the element to have a resize detection state.");
        }

        var id = idGenerator.generate();

        state.id = id;

        return id;
    }

    return {
        get: getId,
        set: setId
    };
};

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* global console: false */

/**
 * Reporter that handles the reporting of logs, warnings and errors.
 * @public
 * @param {boolean} quiet Tells if the reporter should be quiet or not.
 */

module.exports = function (quiet) {
    function noop() {
        //Does nothing.
    }

    var reporter = {
        log: noop,
        warn: noop,
        error: noop
    };

    if (!quiet && window.console) {
        var attachFunction = function attachFunction(reporter, name) {
            //The proxy is needed to be able to call the method with the console context,
            //since we cannot use bind.
            reporter[name] = function reporterProxy() {
                var f = console[name];
                if (f.apply) {
                    //IE9 does not support console.log.apply :)
                    f.apply(console, arguments);
                } else {
                    for (var i = 0; i < arguments.length; i++) {
                        f(arguments[i]);
                    }
                }
            };
        };

        attachFunction(reporter, "log");
        attachFunction(reporter, "warn");
        attachFunction(reporter, "error");
    }

    return reporter;
};

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(327);

module.exports = function batchProcessorMaker(options) {
    options = options || {};
    var reporter = options.reporter;
    var asyncProcess = utils.getOption(options, "async", true);
    var autoProcess = utils.getOption(options, "auto", true);

    if (autoProcess && !asyncProcess) {
        reporter && reporter.warn("Invalid options combination. auto=true and async=false is invalid. Setting async=true.");
        asyncProcess = true;
    }

    var batch = Batch();
    var asyncFrameHandler;
    var isProcessing = false;

    function addFunction(level, fn) {
        if (!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {
            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.
            // This needs to be done before, since we're checking the size of the batch to be 0.
            processBatchAsync();
        }

        batch.add(level, fn);
    }

    function processBatch() {
        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.
        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).
        isProcessing = true;
        while (batch.size()) {
            var processingBatch = batch;
            batch = Batch();
            processingBatch.process();
        }
        isProcessing = false;
    }

    function forceProcessBatch(localAsyncProcess) {
        if (isProcessing) {
            return;
        }

        if (localAsyncProcess === undefined) {
            localAsyncProcess = asyncProcess;
        }

        if (asyncFrameHandler) {
            cancelFrame(asyncFrameHandler);
            asyncFrameHandler = null;
        }

        if (localAsyncProcess) {
            processBatchAsync();
        } else {
            processBatch();
        }
    }

    function processBatchAsync() {
        asyncFrameHandler = requestFrame(processBatch);
    }

    function clearBatch() {
        batch = {};
        batchSize = 0;
        topLevel = 0;
        bottomLevel = 0;
    }

    function cancelFrame(listener) {
        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;
        var cancel = clearTimeout;
        return cancel(listener);
    }

    function requestFrame(callback) {
        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };
        var raf = function raf(fn) {
            return setTimeout(fn, 0);
        };
        return raf(callback);
    }

    return {
        add: addFunction,
        force: forceProcessBatch
    };
};

function Batch() {
    var batch = {};
    var size = 0;
    var topLevel = 0;
    var bottomLevel = 0;

    function add(level, fn) {
        if (!fn) {
            fn = level;
            level = 0;
        }

        if (level > topLevel) {
            topLevel = level;
        } else if (level < bottomLevel) {
            bottomLevel = level;
        }

        if (!batch[level]) {
            batch[level] = [];
        }

        batch[level].push(fn);
        size++;
    }

    function process() {
        for (var level = bottomLevel; level <= topLevel; level++) {
            var fns = batch[level];

            for (var i = 0; i < fns.length; i++) {
                var fn = fns[i];
                fn();
            }
        }
    }

    function getSize() {
        return size;
    }

    return {
        add: add,
        process: process,
        size: getSize
    };
}

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

utils.getOption = getOption;

function getOption(options, name, defaultValue) {
    var value = options[name];

    if ((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var prop = "_erd";

function initState(element) {
    element[prop] = {};
    return getState(element);
}

function getState(element) {
    return element[prop];
}

function cleanState(element) {
    delete element[prop];
}

module.exports = {
    initState: initState,
    getState: getState,
    cleanState: cleanState
};

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects objects to elements in order to detect resize events.
 * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/
 */



var browserDetector = __webpack_require__(111);

module.exports = function (options) {
    options = options || {};
    var reporter = options.reporter;
    var batchProcessor = options.batchProcessor;
    var getState = options.stateHandler.getState;

    if (!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        function listenerProxy() {
            listener(element);
        }

        if (browserDetector.isIE(8)) {
            //IE 8 does not support object, but supports the resize event directly on elements.
            getState(element).object = {
                proxy: listenerProxy
            };
            element.attachEvent("onresize", listenerProxy);
        } else {
            var object = getObject(element);

            if (!object) {
                throw new Error("Element is not detectable by this strategy.");
            }

            object.contentDocument.defaultView.addEventListener("resize", listenerProxy);
        }
    }

    function buildCssTextString(rules) {
        var seperator = options.important ? " !important; " : "; ";

        return (rules.join(seperator) + seperator).trim();
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};
        var debug = options.debug;

        function injectObject(element, callback) {
            var OBJECT_STYLE = buildCssTextString(["display: block", "position: absolute", "top: 0", "left: 0", "width: 100%", "height: 100%", "border: none", "padding: 0", "margin: 0", "opacity: 0", "z-index: -1000", "pointer-events: none"]);

            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.

            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.
            var positionCheckPerformed = false;

            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.
            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.
            var style = window.getComputedStyle(element);
            var width = element.offsetWidth;
            var height = element.offsetHeight;

            getState(element).startSize = {
                width: width,
                height: height
            };

            function mutateDom() {
                function alterPositionStyles() {
                    if (style.position === "static") {
                        element.style.setProperty("position", "relative", options.important ? "important" : "");

                        var removeRelativeStyles = function removeRelativeStyles(reporter, element, style, property) {
                            function getNumericalValue(value) {
                                return value.replace(/[^-\d\.]/g, "");
                            }

                            var value = style[property];

                            if (value !== "auto" && getNumericalValue(value) !== "0") {
                                reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                                element.style.setProperty(property, "0", options.important ? "important" : "");
                            }
                        };

                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                        removeRelativeStyles(reporter, element, style, "top");
                        removeRelativeStyles(reporter, element, style, "right");
                        removeRelativeStyles(reporter, element, style, "bottom");
                        removeRelativeStyles(reporter, element, style, "left");
                    }
                }

                function onObjectLoad() {
                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.
                    if (!positionCheckPerformed) {
                        alterPositionStyles();
                    }

                    /*jshint validthis: true */

                    function getDocument(element, callback) {
                        //Opera 12 seem to call the object.onload before the actual document has been created.
                        //So if it is not present, poll it with an timeout until it is present.
                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.
                        if (!element.contentDocument) {
                            var state = getState(element);
                            if (state.checkForObjectDocumentTimeoutId) {
                                window.clearTimeout(state.checkForObjectDocumentTimeoutId);
                            }
                            state.checkForObjectDocumentTimeoutId = setTimeout(function checkForObjectDocument() {
                                state.checkForObjectDocumentTimeoutId = 0;
                                getDocument(element, callback);
                            }, 100);

                            return;
                        }

                        callback(element.contentDocument);
                    }

                    //Mutating the object element here seems to fire another load event.
                    //Mutating the inner document of the object element is fine though.
                    var objectElement = this;

                    //Create the style element to be added to the object.
                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {
                        //Notify that the element is ready to be listened to.
                        callback(element);
                    });
                }

                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.
                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.
                if (style.position !== "") {
                    alterPositionStyles(style);
                    positionCheckPerformed = true;
                }

                //Add an object element as a child to the target element that will be listened to for resize events.
                var object = document.createElement("object");
                object.style.cssText = OBJECT_STYLE;
                object.tabIndex = -1;
                object.type = "text/html";
                object.setAttribute("aria-hidden", "true");
                object.onload = onObjectLoad;

                //Safari: This must occur before adding the object to the DOM.
                //IE: Does not like that this happens before, even if it is also added after.
                if (!browserDetector.isIE()) {
                    object.data = "about:blank";
                }

                if (!getState(element)) {
                    // The element has been uninstalled before the actual loading happened.
                    return;
                }

                element.appendChild(object);
                getState(element).object = object;

                //IE: This must occur after adding the object to the DOM.
                if (browserDetector.isIE()) {
                    object.data = "about:blank";
                }
            }

            if (batchProcessor) {
                batchProcessor.add(mutateDom);
            } else {
                mutateDom();
            }
        }

        if (browserDetector.isIE(8)) {
            //IE 8 does not support objects properly. Luckily they do support the resize event.
            //So do not inject the object and notify that the element is already ready to be listened to.
            //The event handler for the resize event is attached in the utils.addListener instead.
            callback(element);
        } else {
            injectObject(element, callback);
        }
    }

    /**
     * Returns the child object of the target element.
     * @private
     * @param {element} element The target element.
     * @returns The object element of the target.
     */
    function getObject(element) {
        return getState(element).object;
    }

    function uninstall(element) {
        if (!getState(element)) {
            return;
        }

        var object = getObject(element);

        if (!object) {
            return;
        }

        if (browserDetector.isIE(8)) {
            element.detachEvent("onresize", object.proxy);
        } else {
            element.removeChild(object);
        }

        if (getState(element).checkForObjectDocumentTimeoutId) {
            window.clearTimeout(getState(element).checkForObjectDocumentTimeoutId);
        }

        delete getState(element).object;
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.
 * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js
 */



var forEach = __webpack_require__(110).forEach;

module.exports = function (options) {
    options = options || {};
    var reporter = options.reporter;
    var batchProcessor = options.batchProcessor;
    var getState = options.stateHandler.getState;
    var hasState = options.stateHandler.hasState;
    var idHandler = options.idHandler;

    if (!batchProcessor) {
        throw new Error("Missing required dependency: batchProcessor");
    }

    if (!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    //TODO: Could this perhaps be done at installation time?
    var scrollbarSizes = getScrollbarSizes();

    var styleId = "erd_scroll_detection_scrollbar_style";
    var detectionContainerClass = "erd_scroll_detection_container";

    function initDocument(targetDocument) {
        // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.
        // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).
        injectScrollStyle(targetDocument, styleId, detectionContainerClass);
    }

    initDocument(window.document);

    function buildCssTextString(rules) {
        var seperator = options.important ? " !important; " : "; ";

        return (rules.join(seperator) + seperator).trim();
    }

    function getScrollbarSizes() {
        var width = 500;
        var height = 500;

        var child = document.createElement("div");
        child.style.cssText = buildCssTextString(["position: absolute", "width: " + width * 2 + "px", "height: " + height * 2 + "px", "visibility: hidden", "margin: 0", "padding: 0"]);

        var container = document.createElement("div");
        container.style.cssText = buildCssTextString(["position: absolute", "width: " + width + "px", "height: " + height + "px", "overflow: scroll", "visibility: none", "top: " + -width * 3 + "px", "left: " + -height * 3 + "px", "visibility: hidden", "margin: 0", "padding: 0"]);

        container.appendChild(child);

        document.body.insertBefore(container, document.body.firstChild);

        var widthSize = width - container.clientWidth;
        var heightSize = height - container.clientHeight;

        document.body.removeChild(container);

        return {
            width: widthSize,
            height: heightSize
        };
    }

    function injectScrollStyle(targetDocument, styleId, containerClass) {
        function injectStyle(style, method) {
            method = method || function (element) {
                targetDocument.head.appendChild(element);
            };

            var styleElement = targetDocument.createElement("style");
            styleElement.innerHTML = style;
            styleElement.id = styleId;
            method(styleElement);
            return styleElement;
        }

        if (!targetDocument.getElementById(styleId)) {
            var containerAnimationClass = containerClass + "_animation";
            var containerAnimationActiveClass = containerClass + "_animation_active";
            var style = "/* Created by the element-resize-detector library. */\n";
            style += "." + containerClass + " > div::-webkit-scrollbar { " + buildCssTextString(["display: none"]) + " }\n\n";
            style += "." + containerAnimationActiveClass + " { " + buildCssTextString(["-webkit-animation-duration: 0.1s", "animation-duration: 0.1s", "-webkit-animation-name: " + containerAnimationClass, "animation-name: " + containerAnimationClass]) + " }\n";
            style += "@-webkit-keyframes " + containerAnimationClass + " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\n";
            style += "@keyframes " + containerAnimationClass + " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }";
            injectStyle(style);
        }
    }

    function addAnimationClass(element) {
        element.className += " " + detectionContainerClass + "_animation_active";
    }

    function addEvent(el, name, cb) {
        if (el.addEventListener) {
            el.addEventListener(name, cb);
        } else if (el.attachEvent) {
            el.attachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to add event listeners.");
        }
    }

    function removeEvent(el, name, cb) {
        if (el.removeEventListener) {
            el.removeEventListener(name, cb);
        } else if (el.detachEvent) {
            el.detachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to remove event listeners.");
        }
    }

    function getExpandElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];
    }

    function getShrinkElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        var listeners = getState(element).listeners;

        if (!listeners.push) {
            throw new Error("Cannot add listener to an element that is not detectable.");
        }

        getState(element).listeners.push(listener);
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};

        function debug() {
            if (options.debug) {
                var args = Array.prototype.slice.call(arguments);
                args.unshift(idHandler.get(element), "Scroll: ");
                if (reporter.log.apply) {
                    reporter.log.apply(null, args);
                } else {
                    for (var i = 0; i < args.length; i++) {
                        reporter.log(args[i]);
                    }
                }
            }
        }

        function isDetached(element) {
            function isInDocument(element) {
                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);
            }

            if (!isInDocument(element)) {
                return true;
            }

            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520
            if (window.getComputedStyle(element) === null) {
                return true;
            }

            return false;
        }

        function isUnrendered(element) {
            // Check the absolute positioned container since the top level container is display: inline.
            var container = getState(element).container.childNodes[0];
            var style = window.getComputedStyle(container);
            return !style.width || style.width.indexOf("px") === -1; //Can only compute pixel value when rendered.
        }

        function getStyle() {
            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,
            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).
            var elementStyle = window.getComputedStyle(element);
            var style = {};
            style.position = elementStyle.position;
            style.width = element.offsetWidth;
            style.height = element.offsetHeight;
            style.top = elementStyle.top;
            style.right = elementStyle.right;
            style.bottom = elementStyle.bottom;
            style.left = elementStyle.left;
            style.widthCSS = elementStyle.width;
            style.heightCSS = elementStyle.height;
            return style;
        }

        function storeStartSize() {
            var style = getStyle();
            getState(element).startSize = {
                width: style.width,
                height: style.height
            };
            debug("Element start size", getState(element).startSize);
        }

        function initListeners() {
            getState(element).listeners = [];
        }

        function storeStyle() {
            debug("storeStyle invoked.");
            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getStyle();
            getState(element).style = style;
        }

        function storeCurrentSize(element, width, height) {
            getState(element).lastWidth = width;
            getState(element).lastHeight = height;
        }

        function getExpandChildElement(element) {
            return getExpandElement(element).childNodes[0];
        }

        function getWidthOffset() {
            return 2 * scrollbarSizes.width + 1;
        }

        function getHeightOffset() {
            return 2 * scrollbarSizes.height + 1;
        }

        function getExpandWidth(width) {
            return width + 10 + getWidthOffset();
        }

        function getExpandHeight(height) {
            return height + 10 + getHeightOffset();
        }

        function getShrinkWidth(width) {
            return width * 2 + getWidthOffset();
        }

        function getShrinkHeight(height) {
            return height * 2 + getHeightOffset();
        }

        function positionScrollbars(element, width, height) {
            var expand = getExpandElement(element);
            var shrink = getShrinkElement(element);
            var expandWidth = getExpandWidth(width);
            var expandHeight = getExpandHeight(height);
            var shrinkWidth = getShrinkWidth(width);
            var shrinkHeight = getShrinkHeight(height);
            expand.scrollLeft = expandWidth;
            expand.scrollTop = expandHeight;
            shrink.scrollLeft = shrinkWidth;
            shrink.scrollTop = shrinkHeight;
        }

        function injectContainerElement() {
            var container = getState(element).container;

            if (!container) {
                container = document.createElement("div");
                container.className = detectionContainerClass;
                container.style.cssText = buildCssTextString(["visibility: hidden", "display: inline", "width: 0px", "height: 0px", "z-index: -1", "overflow: hidden", "margin: 0", "padding: 0"]);
                getState(element).container = container;
                addAnimationClass(container);
                element.appendChild(container);

                var onAnimationStart = function onAnimationStart() {
                    getState(element).onRendered && getState(element).onRendered();
                };

                addEvent(container, "animationstart", onAnimationStart);

                // Store the event handler here so that they may be removed when uninstall is called.
                // See uninstall function for an explanation why it is needed.
                getState(element).onAnimationStart = onAnimationStart;
            }

            return container;
        }

        function injectScrollElements() {
            function alterPositionStyles() {
                var style = getState(element).style;

                if (style.position === "static") {
                    element.style.setProperty("position", "relative", options.important ? "important" : "");

                    var removeRelativeStyles = function removeRelativeStyles(reporter, element, style, property) {
                        function getNumericalValue(value) {
                            return value.replace(/[^-\d\.]/g, "");
                        }

                        var value = style[property];

                        if (value !== "auto" && getNumericalValue(value) !== "0") {
                            reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                            element.style[property] = 0;
                        }
                    };

                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                    removeRelativeStyles(reporter, element, style, "top");
                    removeRelativeStyles(reporter, element, style, "right");
                    removeRelativeStyles(reporter, element, style, "bottom");
                    removeRelativeStyles(reporter, element, style, "left");
                }
            }

            function getLeftTopBottomRightCssText(left, top, bottom, right) {
                left = !left ? "0" : left + "px";
                top = !top ? "0" : top + "px";
                bottom = !bottom ? "0" : bottom + "px";
                right = !right ? "0" : right + "px";

                return ["left: " + left, "top: " + top, "right: " + right, "bottom: " + bottom];
            }

            debug("Injecting elements");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            alterPositionStyles();

            var rootContainer = getState(element).container;

            if (!rootContainer) {
                rootContainer = injectContainerElement();
            }

            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),
            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than
            // the targeted element.
            // When the bug is resolved, "containerContainer" may be removed.

            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).
            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.

            var scrollbarWidth = scrollbarSizes.width;
            var scrollbarHeight = scrollbarSizes.height;
            var containerContainerStyle = buildCssTextString(["position: absolute", "flex: none", "overflow: hidden", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%", "left: 0px", "top: 0px"]);
            var containerStyle = buildCssTextString(["position: absolute", "flex: none", "overflow: hidden", "z-index: -1", "visibility: hidden"].concat(getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth)));
            var expandStyle = buildCssTextString(["position: absolute", "flex: none", "overflow: scroll", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%"]);
            var shrinkStyle = buildCssTextString(["position: absolute", "flex: none", "overflow: scroll", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%"]);
            var expandChildStyle = buildCssTextString(["position: absolute", "left: 0", "top: 0"]);
            var shrinkChildStyle = buildCssTextString(["position: absolute", "width: 200%", "height: 200%"]);

            var containerContainer = document.createElement("div");
            var container = document.createElement("div");
            var expand = document.createElement("div");
            var expandChild = document.createElement("div");
            var shrink = document.createElement("div");
            var shrinkChild = document.createElement("div");

            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56
            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.
            containerContainer.dir = "ltr";

            containerContainer.style.cssText = containerContainerStyle;
            containerContainer.className = detectionContainerClass;
            container.className = detectionContainerClass;
            container.style.cssText = containerStyle;
            expand.style.cssText = expandStyle;
            expandChild.style.cssText = expandChildStyle;
            shrink.style.cssText = shrinkStyle;
            shrinkChild.style.cssText = shrinkChildStyle;

            expand.appendChild(expandChild);
            shrink.appendChild(shrinkChild);
            container.appendChild(expand);
            container.appendChild(shrink);
            containerContainer.appendChild(container);
            rootContainer.appendChild(containerContainer);

            function onExpandScroll() {
                getState(element).onExpand && getState(element).onExpand();
            }

            function onShrinkScroll() {
                getState(element).onShrink && getState(element).onShrink();
            }

            addEvent(expand, "scroll", onExpandScroll);
            addEvent(shrink, "scroll", onShrinkScroll);

            // Store the event handlers here so that they may be removed when uninstall is called.
            // See uninstall function for an explanation why it is needed.
            getState(element).onExpandScroll = onExpandScroll;
            getState(element).onShrinkScroll = onShrinkScroll;
        }

        function registerListenersAndPositionElements() {
            function updateChildSizes(element, width, height) {
                var expandChild = getExpandChildElement(element);
                var expandWidth = getExpandWidth(width);
                var expandHeight = getExpandHeight(height);
                expandChild.style.setProperty("width", expandWidth + "px", options.important ? "important" : "");
                expandChild.style.setProperty("height", expandHeight + "px", options.important ? "important" : "");
            }

            function updateDetectorElements(done) {
                var width = element.offsetWidth;
                var height = element.offsetHeight;

                // Check whether the size has actually changed since last time the algorithm ran. If not, some steps may be skipped.
                var sizeChanged = width !== getState(element).lastWidth || height !== getState(element).lastHeight;

                debug("Storing current size", width, height);

                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.
                // Otherwise the if-check in handleScroll is useless.
                storeCurrentSize(element, width, height);

                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.
                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.

                batchProcessor.add(0, function performUpdateChildSizes() {
                    if (!sizeChanged) {
                        return;
                    }

                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    if (options.debug) {
                        var w = element.offsetWidth;
                        var h = element.offsetHeight;

                        if (w !== width || h !== height) {
                            reporter.warn(idHandler.get(element), "Scroll: Size changed before updating detector elements.");
                        }
                    }

                    updateChildSizes(element, width, height);
                });

                batchProcessor.add(1, function updateScrollbars() {
                    // This function needs to be invoked event though the size is unchanged. The element could have been resized very quickly and then
                    // been restored to the original size, which will have changed the scrollbar positions.

                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    positionScrollbars(element, width, height);
                });

                if (sizeChanged && done) {
                    batchProcessor.add(2, function () {
                        if (!getState(element)) {
                            debug("Aborting because element has been uninstalled");
                            return;
                        }

                        if (!areElementsInjected()) {
                            debug("Aborting because element container has not been initialized");
                            return;
                        }

                        done();
                    });
                }
            }

            function areElementsInjected() {
                return !!getState(element).container;
            }

            function notifyListenersIfNeeded() {
                function isFirstNotify() {
                    return getState(element).lastNotifiedWidth === undefined;
                }

                debug("notifyListenersIfNeeded invoked");

                var state = getState(element);

                // Don't notify if the current size is the start size, and this is the first notification.
                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {
                    return debug("Not notifying: Size is the same as the start size, and there has been no notification yet.");
                }

                // Don't notify if the size already has been notified.
                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {
                    return debug("Not notifying: Size already notified");
                }

                debug("Current size not notified, notifying...");
                state.lastNotifiedWidth = state.lastWidth;
                state.lastNotifiedHeight = state.lastHeight;
                forEach(getState(element).listeners, function (listener) {
                    listener(element);
                });
            }

            function handleRender() {
                debug("startanimation triggered.");

                if (isUnrendered(element)) {
                    debug("Ignoring since element is still unrendered...");
                    return;
                }

                debug("Element rendered.");
                var expand = getExpandElement(element);
                var shrink = getShrinkElement(element);
                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {
                    debug("Scrollbars out of sync. Updating detector elements...");
                    updateDetectorElements(notifyListenersIfNeeded);
                }
            }

            function handleScroll() {
                debug("Scroll detected.");

                if (isUnrendered(element)) {
                    // Element is still unrendered. Skip this scroll event.
                    debug("Scroll event fired while unrendered. Ignoring...");
                    return;
                }

                updateDetectorElements(notifyListenersIfNeeded);
            }

            debug("registerListenersAndPositionElements invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            getState(element).onRendered = handleRender;
            getState(element).onExpand = handleScroll;
            getState(element).onShrink = handleScroll;

            var style = getState(element).style;
            updateChildSizes(element, style.width, style.height);
        }

        function finalizeDomMutation() {
            debug("finalizeDomMutation invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getState(element).style;
            storeCurrentSize(element, style.width, style.height);
            positionScrollbars(element, style.width, style.height);
        }

        function ready() {
            callback(element);
        }

        function install() {
            debug("Installing...");
            initListeners();
            storeStartSize();

            batchProcessor.add(0, storeStyle);
            batchProcessor.add(1, injectScrollElements);
            batchProcessor.add(2, registerListenersAndPositionElements);
            batchProcessor.add(3, finalizeDomMutation);
            batchProcessor.add(4, ready);
        }

        debug("Making detectable...");

        if (isDetached(element)) {
            debug("Element is detached");

            injectContainerElement();

            debug("Waiting until element is attached...");

            getState(element).onRendered = function () {
                debug("Element is now attached");
                install();
            };
        } else {
            install();
        }
    }

    function uninstall(element) {
        var state = getState(element);

        if (!state) {
            // Uninstall has been called on a non-erd element.
            return;
        }

        // Uninstall may have been called in the following scenarios:
        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).
        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).
        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).
        // So to be on the safe side, let's check for each thing before removing.

        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.
        state.onExpandScroll && removeEvent(getExpandElement(element), "scroll", state.onExpandScroll);
        state.onShrinkScroll && removeEvent(getShrinkElement(element), "scroll", state.onShrinkScroll);
        state.onAnimationStart && removeEvent(state.container, "animationstart", state.onAnimationStart);

        state.container && element.removeChild(state.container);
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall,
        initDocument: initDocument
    };
};

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(12),
    now = __webpack_require__(332),
    toNumber = __webpack_require__(100);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(8);

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function now() {
  return root.Date.now();
};

module.exports = now;

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(45),
    baseClone = __webpack_require__(334),
    baseUnset = __webpack_require__(356),
    castPath = __webpack_require__(39),
    copyObject = __webpack_require__(23),
    customOmitClone = __webpack_require__(360),
    flatRest = __webpack_require__(362),
    getAllKeysIn = __webpack_require__(113);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = flatRest(function (object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function (path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(46),
    arrayEach = __webpack_require__(335),
    assignValue = __webpack_require__(72),
    baseAssign = __webpack_require__(336),
    baseAssignIn = __webpack_require__(337),
    cloneBuffer = __webpack_require__(340),
    copyArray = __webpack_require__(341),
    copySymbols = __webpack_require__(342),
    copySymbolsIn = __webpack_require__(343),
    getAllKeys = __webpack_require__(83),
    getAllKeysIn = __webpack_require__(113),
    getTag = __webpack_require__(38),
    initCloneArray = __webpack_require__(344),
    initCloneByTag = __webpack_require__(345),
    initCloneObject = __webpack_require__(350),
    isArray = __webpack_require__(9),
    isBuffer = __webpack_require__(52),
    isMap = __webpack_require__(352),
    isObject = __webpack_require__(12),
    isSet = __webpack_require__(354),
    keys = __webpack_require__(19),
    keysIn = __webpack_require__(73);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || isFunc && !object) {
      result = isFlat || isFunc ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function (subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap(value)) {
    value.forEach(function (subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function (subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;

/***/ }),
/* 335 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(23),
    keys = __webpack_require__(19);

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(23),
    keysIn = __webpack_require__(73);

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(12),
    isPrototype = __webpack_require__(37),
    nativeKeysIn = __webpack_require__(339);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;

/***/ }),
/* 339 */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var root = __webpack_require__(8);

/** Detect free variable `exports`. */
var freeExports = ( false ? 'undefined' : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && ( false ? 'undefined' : _typeof(module)) == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))

/***/ }),
/* 341 */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(23),
    getSymbols = __webpack_require__(50);

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(23),
    getSymbolsIn = __webpack_require__(112);

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;

/***/ }),
/* 344 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(75),
    cloneDataView = __webpack_require__(346),
    cloneRegExp = __webpack_require__(347),
    cloneSymbol = __webpack_require__(348),
    cloneTypedArray = __webpack_require__(349);

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag:case float64Tag:
    case int8Tag:case int16Tag:case int32Tag:
    case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor();

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor();

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(75);

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;

/***/ }),
/* 347 */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(18);

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(75);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(351),
    getPrototype = __webpack_require__(74),
    isPrototype = __webpack_require__(37);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
    return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
}

module.exports = initCloneObject;

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(12);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = function () {
  function object() {}
  return function (proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object();
    object.prototype = undefined;
    return result;
  };
}();

module.exports = baseCreate;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(353),
    baseUnary = __webpack_require__(55),
    nodeUtil = __webpack_require__(56);

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(38),
    isObjectLike = __webpack_require__(14);

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(355),
    baseUnary = __webpack_require__(55),
    nodeUtil = __webpack_require__(56);

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(38),
    isObjectLike = __webpack_require__(14);

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(39),
    last = __webpack_require__(357),
    parent = __webpack_require__(358),
    toKey = __webpack_require__(25);

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;

/***/ }),
/* 357 */
/***/ (function(module, exports) {

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(57),
    baseSlice = __webpack_require__(359);

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;

/***/ }),
/* 359 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

var isPlainObject = __webpack_require__(361);

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(17),
    getPrototype = __webpack_require__(74),
    isObjectLike = __webpack_require__(14);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

var flatten = __webpack_require__(363),
    overRest = __webpack_require__(108),
    setToString = __webpack_require__(109);

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(364);

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(49),
    isFlattenable = __webpack_require__(365);

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(18),
    isArguments = __webpack_require__(51),
    isArray = __webpack_require__(9);

/** Built-in value references. */
var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var React = __webpack_require__(1);
var factory = __webpack_require__(367);

if (typeof React === 'undefined') {
  throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');
}

// Hack to grab NoopUpdateQueue from isomorphic React
var ReactNoopUpdateQueue = new React.Component().updater;

module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _assign = __webpack_require__(93);

// -- Inlined from fbjs --

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function _invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

var warning = function warning() {};

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

// /-- Inlined from fbjs --

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillMount`.
     *
     * @optional
     */
    UNSAFE_componentWillMount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillReceiveProps`.
     *
     * @optional
     */
    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillUpdate`.
     *
     * @optional
     */
    UNSAFE_componentWillUpdate: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Similar to ReactClassInterface but for static methods.
   */
  var ReactClassStaticInterface = {
    /**
     * This method is invoked after a component is instantiated and when it
     * receives new props. Return an object to update state in response to
     * prop changes. Return null to indicate no change to state.
     *
     * If an object is returned, its keys will be merged into the existing state.
     *
     * @return {object || null}
     * @optional
     */
    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function displayName(Constructor, _displayName) {
      Constructor.displayName = _displayName;
    },
    mixins: function mixins(Constructor, _mixins) {
      if (_mixins) {
        for (var i = 0; i < _mixins.length; i++) {
          mixSpecIntoComponent(Constructor, _mixins[i]);
        }
      }
    },
    childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
    },
    contextTypes: function contextTypes(Constructor, _contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _contextTypes, 'context');
      }
      Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
      } else {
        Constructor.getDefaultProps = _getDefaultProps;
      }
    },
    propTypes: function propTypes(Constructor, _propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
    },
    statics: function statics(Constructor, _statics) {
      mixStaticSpecIntoComponent(Constructor, _statics);
    },
    autobind: function autobind() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if (process.env.NODE_ENV !== 'production') {
          warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec === 'undefined' ? 'undefined' : _typeof(spec);
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(isMixinValid, "%s: You're attempting to include a mixin that is either null " + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);
        }
      }

      return;
    }

    _invariant(typeof spec !== 'function', "ReactClass: You're attempting to " + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');
    _invariant(!isValidElement(spec), "ReactClass: You're attempting to " + 'use a component as a mixin. Instead, just use a regular object.');

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name);

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }

    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);

      var isAlreadyDefined = name in Constructor;
      if (isAlreadyDefined) {
        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;

        _invariant(specPolicy === 'DEFINE_MANY_MERGED', 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);

        Constructor[name] = createMergedResultFunction(Constructor[name], property);

        return;
      }

      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(one && two && (typeof one === 'undefined' ? 'undefined' : _typeof(one)) === 'object' && (typeof two === 'undefined' ? 'undefined' : _typeof(two)) === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function (newThis) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function componentDidMount() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function componentWillUnmount() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function replaceState(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function isMounted() {
      if (process.env.NODE_ENV !== 'production') {
        warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function ReactClassComponent() {};
  _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

    if (process.env.NODE_ENV !== 'production') {
      warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');
      warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');
      warning(!Constructor.prototype.UNSAFE_componentWillRecieveProps, '%s has a method called UNSAFE_componentWillRecieveProps(). ' + 'Did you mean UNSAFE_componentWillReceiveProps()?', spec.displayName || 'A component');
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ })
/******/ ]);